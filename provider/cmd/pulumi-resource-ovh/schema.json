{
    "name": "ovh",
    "displayName": "OVHCloud",
    "description": "A Pulumi package for creating and managing OVH resources.",
    "keywords": [
        "pulumi",
        "ovh",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`ovh` Terraform Provider](https://github.com/ovh/terraform-provider-ovh).",
    "repository": "https://github.com/ovh/pulumi-ovh",
    "pluginDownloadURL": "github://api.github.com/ovh/pulumi-ovh",
    "publisher": "OVHcloud",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Pulumi"
        },
        "go": {
            "importBasePath": "github.com/ovh/pulumi-ovh/sdk/v2/go/ovh",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "java": {
            "basePackage": "com.ovhcloud.pulumi",
            "buildFiles": "",
            "gradleNexusPublishPluginVersion": "",
            "gradleTest": ""
        },
        "nodejs": {
            "packageName": "@ovhcloud/pulumi-ovh",
            "packageDescription": "A Pulumi package for creating and managing OVH resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ovh/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ovh` repo](https://github.com/ovh/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ovh` repo](https://github.com/ovh/terraform-provider-ovh/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "pulumi_ovh",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ovh/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ovh` repo](https://github.com/ovh/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ovh` repo](https://github.com/ovh/terraform-provider-ovh/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "accessToken": {
                "type": "string",
                "description": "The OVH API Access Token\n"
            },
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_KEY"
                    ]
                }
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_SECRET"
                    ]
                },
                "secret": true
            },
            "clientId": {
                "type": "string",
                "description": "OAuth 2.0 application's ID\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "OAuth 2.0 application's secret\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer Key\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_CONSUMER_KEY"
                    ]
                }
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\")\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_ENDPOINT"
                    ]
                }
            }
        }
    },
    "types": {
        "ovh:Cloud/getProjectIam:getProjectIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource in the IAM\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with `ovh:`\n"
                },
                "urn": {
                    "type": "string",
                    "description": "URN of the private database, used when writing IAM policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Cloud/getProjectsProject:getProjectsProject": {
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Project access\n"
                },
                "creationDate": {
                    "type": "string",
                    "description": "Project creation date\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of your project\n"
                },
                "expiration": {
                    "type": "string",
                    "description": "Expiration date of your project. After this date, your project will be deleted\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Cloud/getProjectsProjectIam:getProjectsProjectIam",
                    "description": "IAM resource information\n"
                },
                "manualQuota": {
                    "type": "boolean",
                    "description": "Manual quota prevent automatic quota upgrade\n"
                },
                "orderId": {
                    "type": "number",
                    "description": "Project order ID\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Order plan code\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "Project name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "ID of the public cloud project\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n"
                },
                "unleash": {
                    "type": "boolean",
                    "description": "Project unleashed\n"
                }
            },
            "type": "object",
            "required": [
                "access",
                "creationDate",
                "description",
                "expiration",
                "iam",
                "manualQuota",
                "orderId",
                "planCode",
                "projectId",
                "projectName",
                "serviceName",
                "status",
                "unleash"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Cloud/getProjectsProjectIam:getProjectsProjectIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource in the IAM\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with `ovh:`\n"
                },
                "urn": {
                    "type": "string",
                    "description": "URN of the private database, used when writing IAM policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/AlertingFormattedMonthlyThreshold:AlertingFormattedMonthlyThreshold": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency of the monthly threshold\n"
                },
                "text": {
                    "type": "string",
                    "description": "Text representation of the monthly threshold\n"
                },
                "value": {
                    "type": "number",
                    "description": "Value of the monthly threshold\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "currencyCode",
                        "text",
                        "value"
                    ]
                }
            }
        },
        "ovh:CloudProject/ContainerRegistryPlan:ContainerRegistryPlan": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Plan code from the catalog\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlanFeature:ContainerRegistryPlanFeature"
                    },
                    "description": "Features of the plan\n"
                },
                "id": {
                    "type": "string",
                    "description": "Plan ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "registryLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlanRegistryLimit:ContainerRegistryPlanRegistryLimit"
                    },
                    "description": "Container registry limits\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "code",
                        "createdAt",
                        "features",
                        "id",
                        "name",
                        "registryLimits",
                        "updatedAt"
                    ]
                }
            }
        },
        "ovh:CloudProject/ContainerRegistryPlanFeature:ContainerRegistryPlanFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "vulnerability"
                    ]
                }
            }
        },
        "ovh:CloudProject/ContainerRegistryPlanRegistryLimit:ContainerRegistryPlanRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n"
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "imageStorage",
                        "parallelRequest"
                    ]
                }
            }
        },
        "ovh:CloudProject/DatabaseEndpoint:DatabaseEndpoint": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Type of component the URI relates to.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the cluster.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path of the endpoint.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Scheme used to generate the URI.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Defines whether the endpoint uses SSL.\n"
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL mode used to connect to the service if the SSL is enabled.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "URI of the endpoint.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "domain",
                        "path",
                        "port",
                        "scheme",
                        "ssl",
                        "sslMode",
                        "uri"
                    ]
                }
            }
        },
        "ovh:CloudProject/DatabaseIpRestriction:DatabaseIpRestriction": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the cluster.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/DatabaseNode:DatabaseNode": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Private network id in which the node should be deployed. It's the regional openstackId of the private network\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Public cloud region in which the node should be deployed. Ex: \"GRA'.\n",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "Private subnet ID in which the node is.\n"
                }
            },
            "type": "object",
            "required": [
                "region"
            ]
        },
        "ovh:CloudProject/GatewayExternalInformation:GatewayExternalInformation": {
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/GatewayExternalInformationIp:GatewayExternalInformationIp"
                    },
                    "description": "List of external ips of the gateway.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the private network.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ips",
                        "networkId"
                    ]
                }
            }
        },
        "ovh:CloudProject/GatewayExternalInformationIp:GatewayExternalInformationIp": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "IP of the interface.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ip",
                        "subnetId"
                    ]
                }
            }
        },
        "ovh:CloudProject/GatewayInterface:GatewayInterface": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the interface.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP of the interface.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the private network.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "ip",
                        "networkId",
                        "subnetId"
                    ]
                }
            }
        },
        "ovh:CloudProject/InstanceAddress:InstanceAddress": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "IP address\n"
                },
                "version": {
                    "type": "integer",
                    "description": "IP version\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ip",
                        "version"
                    ]
                }
            }
        },
        "ovh:CloudProject/InstanceAttachedVolume:InstanceAttachedVolume": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Instance id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "ovh:CloudProject/InstanceAutoBackup:InstanceAutoBackup": {
            "properties": {
                "cron": {
                    "type": "string",
                    "description": "Unix cron pattern\n",
                    "willReplaceOnChanges": true
                },
                "rotation": {
                    "type": "integer",
                    "description": "Number of backup to keep\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "cron",
                "rotation"
            ]
        },
        "ovh:CloudProject/InstanceBootFrom:InstanceBootFrom": {
            "properties": {
                "imageId": {
                    "type": "string",
                    "description": "Instance image id. Images can be retrieved using `GET /cloud/project/{serviceName}/image`\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "Instance volume id\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/InstanceFlavor:InstanceFlavor": {
            "properties": {
                "flavorId": {
                    "type": "string",
                    "description": "Flavor ID. Flavors can be retrieved using `GET /cloud/project/{serviceName}/flavor`\n"
                }
            },
            "type": "object",
            "required": [
                "flavorId"
            ]
        },
        "ovh:CloudProject/InstanceGroup:InstanceGroup": {
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "Group id\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/InstanceNetwork:InstanceNetwork": {
            "properties": {
                "public": {
                    "type": "boolean",
                    "description": "Set the new instance as public boolean\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/InstanceSshKey:InstanceSshKey": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "SSH Keypair name\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "ovh:CloudProject/InstanceSshKeyCreate:InstanceSshKeyCreate": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "SSH Key pair name\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "SSH Public key\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "publicKey"
            ]
        },
        "ovh:CloudProject/KubeCustomization:KubeCustomization": {
            "properties": {
                "apiservers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver"
                    },
                    "description": "Kubernetes API server customization\n",
                    "deprecationMessage": "Use customization_apiserver instead"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiservers"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver": {
            "properties": {
                "admissionplugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserverAdmissionplugin:KubeCustomizationApiserverAdmissionplugin"
                    },
                    "description": "Kubernetes API server admission plugins customization\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "admissionplugins"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeCustomizationApiserverAdmissionplugin:KubeCustomizationApiserverAdmissionplugin": {
            "properties": {
                "disableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.\n"
                },
                "enableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of admission plugins enabled, default is [\"NodeRestriction\",\"AlwaysPulImages\"] and only these admission plugins can be enabled at this time.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disableds",
                        "enableds"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeCustomizationKubeProxy:KubeCustomizationKubeProxy": {
            "properties": {
                "iptables": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxyIptables:KubeCustomizationKubeProxyIptables",
                    "description": "Kubernetes cluster kube-proxy customization of iptables specific config (durations format is RFC3339 duration, e.g. `PT60S`)\n"
                },
                "ipvs": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxyIpvs:KubeCustomizationKubeProxyIpvs",
                    "description": "Kubernetes cluster kube-proxy customization of IPVS specific config (durations format is [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration, e.g. `PT60S`)\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/KubeCustomizationKubeProxyIptables:KubeCustomizationKubeProxyIptables": {
            "properties": {
                "minSyncPeriod": {
                    "type": "string",
                    "description": "Period that iptables rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format (e.g. `PT60S`). Must be greater than 0.\n"
                },
                "syncPeriod": {
                    "type": "string",
                    "description": "Minimum period that iptables rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format (e.g. `PT60S`).\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/KubeCustomizationKubeProxyIpvs:KubeCustomizationKubeProxyIpvs": {
            "properties": {
                "minSyncPeriod": {
                    "type": "string",
                    "description": "Minimum period that IPVS rules are refreshed in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration (e.g. `PT60S`).\n"
                },
                "scheduler": {
                    "type": "string",
                    "description": "IPVS scheduler.\n"
                },
                "syncPeriod": {
                    "type": "string",
                    "description": "Minimum period that IPVS rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format (e.g. `PT60S`).\n"
                },
                "tcpFinTimeout": {
                    "type": "string",
                    "description": "Timeout value used for IPVS TCP sessions after receiving a FIN in RFC3339 duration (e.g. `PT60S`). The default value is `PT0S`, which preserves the current timeout value on the system.\n"
                },
                "tcpTimeout": {
                    "type": "string",
                    "description": "Timeout value used for idle IPVS TCP sessions in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration (e.g. `PT60S`). The default value is `PT0S`, which preserves the current timeout value on the system.\n"
                },
                "udpTimeout": {
                    "type": "string",
                    "description": "timeout value used for IPVS UDP packets in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration (e.g. `PT60S`). The default value is `PT0S`, which preserves the current timeout value on the system.\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/KubeKubeconfigAttribute:KubeKubeconfigAttribute": {
            "properties": {
                "clientCertificate": {
                    "type": "string",
                    "description": "The kubernetes API server client certificate.\n",
                    "secret": true
                },
                "clientKey": {
                    "type": "string",
                    "description": "The kubernetes API server client key.\n",
                    "secret": true
                },
                "clusterCaCertificate": {
                    "type": "string",
                    "description": "The kubernetes API server CA certificate.\n",
                    "secret": true
                },
                "host": {
                    "type": "string",
                    "description": "The kubernetes API server URL.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientCertificate",
                        "clientKey",
                        "clusterCaCertificate",
                        "host"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate": {
            "properties": {
                "metadata": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplateMetadata:KubeNodePoolTemplateMetadata",
                    "description": "metadata\n"
                },
                "spec": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplateSpec:KubeNodePoolTemplateSpec",
                    "description": "spec\n"
                }
            },
            "type": "object",
            "required": [
                "metadata",
                "spec"
            ]
        },
        "ovh:CloudProject/KubeNodePoolTemplateMetadata:KubeNodePoolTemplateMetadata": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "annotations\n"
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "finalizers\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "labels\n"
                }
            },
            "type": "object",
            "required": [
                "annotations",
                "finalizers",
                "labels"
            ]
        },
        "ovh:CloudProject/KubeNodePoolTemplateSpec:KubeNodePoolTemplateSpec": {
            "properties": {
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "taints\n"
                },
                "unschedulable": {
                    "type": "boolean",
                    "description": "unschedulable\n"
                }
            },
            "type": "object",
            "required": [
                "taints",
                "unschedulable"
            ]
        },
        "ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration": {
            "properties": {
                "defaultVrackGateway": {
                    "type": "string",
                    "description": "If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.\n"
                },
                "privateNetworkRoutingAsDefault": {
                    "type": "boolean",
                    "description": "Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.\n\nIn order to use the gateway IP advertised by the private network subnet DHCP, the following configuration shall be used.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n"
                }
            },
            "type": "object",
            "required": [
                "defaultVrackGateway",
                "privateNetworkRoutingAsDefault"
            ]
        },
        "ovh:CloudProject/LoadBalancerFloatingIp:LoadBalancerFloatingIp": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the resource\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP Address of the resource\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "ip"
                    ]
                }
            }
        },
        "ovh:CloudProject/LoadBalancerListener:LoadBalancerListener": {
            "properties": {
                "allowedCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The allowed CIDRs\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the listener\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the listener\n"
                },
                "pool": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerListenerPool:LoadBalancerListenerPool",
                    "description": "Listener pool\n"
                },
                "port": {
                    "type": "number",
                    "description": "Listener port\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol for the listener\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Secret ID to get certificate for SSL listener creation\n"
                },
                "timeoutClientData": {
                    "type": "number",
                    "description": "Timeout client data of the listener\n"
                },
                "timeoutMemberData": {
                    "type": "number",
                    "description": "Timeout member data of the listener\n"
                },
                "tlsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TLS versions of the listener\n"
                }
            },
            "type": "object",
            "required": [
                "port",
                "protocol"
            ]
        },
        "ovh:CloudProject/LoadBalancerListenerPool:LoadBalancerListenerPool": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Pool algorithm to split traffic between members\n"
                },
                "healthMonitor": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerListenerPoolHealthMonitor:LoadBalancerListenerPoolHealthMonitor",
                    "description": "Pool health monitor\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/LoadBalancerListenerPoolMember:LoadBalancerListenerPoolMember"
                    },
                    "description": "Pool members\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the pool\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol for the pool\n"
                },
                "sessionPersistence": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerListenerPoolSessionPersistence:LoadBalancerListenerPoolSessionPersistence",
                    "description": "Pool session persistence\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadBalancerListenerPoolHealthMonitor:LoadBalancerListenerPoolHealthMonitor": {
            "properties": {
                "delay": {
                    "type": "number",
                    "description": "Duration between sending probes to members, in seconds\n"
                },
                "httpConfiguration": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerListenerPoolHealthMonitorHttpConfiguration:LoadBalancerListenerPoolHealthMonitorHttpConfiguration",
                    "description": "Monitor HTTP configuration\n"
                },
                "maxRetries": {
                    "type": "number",
                    "description": "Number of successful checks before changing the operating status of the member to ONLINE\n"
                },
                "maxRetriesDown": {
                    "type": "number",
                    "description": "Number of allowed check failures before changing the operating status of the member to ERROR\n"
                },
                "monitorType": {
                    "type": "string",
                    "description": "Type of the monitor\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource\n"
                },
                "operatingStatus": {
                    "type": "string",
                    "description": "The operating status of the resource\n"
                },
                "provisioningStatus": {
                    "type": "string",
                    "description": "The provisioning status of the resource\n"
                },
                "timeout": {
                    "type": "number",
                    "description": "Maximum time, in seconds, that a monitor waits to connect before it times out. This value must be less than the delay value\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadBalancerListenerPoolHealthMonitorHttpConfiguration:LoadBalancerListenerPoolHealthMonitorHttpConfiguration": {
            "properties": {
                "domainName": {
                    "type": "string",
                    "description": "Domain name, which be injected into the HTTP Host Header to the backend server for HTTP health check\n"
                },
                "expectedCodes": {
                    "type": "string",
                    "description": "Status codes expected in response from the member to declare it healthy; The list of HTTP status codes expected in response from the member to declare it healthy. Specify one of the following values: * A single value, such as 200; * A list, such as 200, 202; * A range, such as 200-204\n"
                },
                "httpMethod": {
                    "type": "string",
                    "description": "HTTP method that the health monitor uses for requests\n"
                },
                "httpVersion": {
                    "type": "string",
                    "description": "HTTP version that the health monitor uses for requests\n"
                },
                "urlPath": {
                    "type": "string",
                    "description": "HTTP URL path of the request sent by the monitor to test the health of a backend member\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadBalancerListenerPoolMember:LoadBalancerListenerPoolMember": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IP address of the resource\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the member\n"
                },
                "protocolPort": {
                    "type": "number",
                    "description": "Protocol port number for the resource\n"
                },
                "weight": {
                    "type": "number",
                    "description": "Weight of a member determines the portion of requests or connections it services compared to the other members of the pool. Between 1 and 256.\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadBalancerListenerPoolSessionPersistence:LoadBalancerListenerPoolSessionPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "Cookie name, only applicable to session persistence through cookie\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of session persistence\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadBalancerNetwork:LoadBalancerNetwork": {
            "properties": {
                "private": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerNetworkPrivate:LoadBalancerNetworkPrivate",
                    "description": "Information to private network\n"
                }
            },
            "type": "object",
            "required": [
                "private"
            ]
        },
        "ovh:CloudProject/LoadBalancerNetworkPrivate:LoadBalancerNetworkPrivate": {
            "properties": {
                "floatingIp": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerNetworkPrivateFloatingIp:LoadBalancerNetworkPrivateFloatingIp",
                    "description": "Floating IP to associate\n"
                },
                "floatingIpCreate": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerNetworkPrivateFloatingIpCreate:LoadBalancerNetworkPrivateFloatingIpCreate",
                    "description": "Floating IP to create\n"
                },
                "gateway": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerNetworkPrivateGateway:LoadBalancerNetworkPrivateGateway",
                    "description": "Gateway to associate\n"
                },
                "gatewayCreate": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerNetworkPrivateGatewayCreate:LoadBalancerNetworkPrivateGatewayCreate",
                    "description": "Gateway to create\n"
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerNetworkPrivateNetwork:LoadBalancerNetworkPrivateNetwork",
                    "description": "Network to associate\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "ovh:CloudProject/LoadBalancerNetworkPrivateFloatingIp:LoadBalancerNetworkPrivateFloatingIp": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the floatingIp\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadBalancerNetworkPrivateFloatingIpCreate:LoadBalancerNetworkPrivateFloatingIpCreate": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for the floatingIp\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadBalancerNetworkPrivateGateway:LoadBalancerNetworkPrivateGateway": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the gateway\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadBalancerNetworkPrivateGatewayCreate:LoadBalancerNetworkPrivateGatewayCreate": {
            "properties": {
                "model": {
                    "type": "string",
                    "description": "Model of the gateway\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the gateway\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadBalancerNetworkPrivateNetwork:LoadBalancerNetworkPrivateNetwork": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Private network ID\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Subnet ID\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "subnetId"
            ]
        },
        "ovh:CloudProject/NetworkPrivateRegionsAttribute:NetworkPrivateRegionsAttribute": {
            "properties": {
                "openstackid": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "openstackid",
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/NetworkPrivateRegionsStatus:NetworkPrivateRegionsStatus": {
            "properties": {
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/NetworkPrivateSubnetIpPool:NetworkPrivateSubnetIpPool": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP. Changing this forces a new resource to be created. Defaults to false.\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region. Changing this value recreates the subnet.\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format. Changing this value recreates the subnet\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created. Ex.: \"GRA1\". Changing this value recreates the resource.\n"
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region. Changing this value recreates the subnet.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dhcp",
                        "end",
                        "network",
                        "region",
                        "start"
                    ]
                }
            }
        },
        "ovh:CloudProject/NetworkPrivateSubnetV2AllocationPool:NetworkPrivateSubnetV2AllocationPool": {
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "ovh:CloudProject/NetworkPrivateSubnetV2HostRoute:NetworkPrivateSubnetV2HostRoute": {
            "properties": {
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "nexthop"
            ]
        },
        "ovh:CloudProject/ProjectOrder:ProjectOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectOrderDetail:ProjectOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id, the same as the `id`\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:CloudProject/ProjectOrderDetail:ProjectOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:CloudProject/ProjectPlan:ProjectPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanConfiguration:ProjectPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code. This value must be adapted depending on your `OVH_ENDPOINT` value. It's `project.2018` for `ovh-{eu,ca}` and `project` when using `ovh-us`.\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:CloudProject/ProjectPlanConfiguration:ProjectPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:CloudProject/ProjectPlanOption:ProjectPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanOptionConfiguration:ProjectPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:CloudProject/ProjectPlanOptionConfiguration:ProjectPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:CloudProject/RancherCurrentState:RancherCurrentState": {
            "properties": {
                "bootstrapPassword": {
                    "type": "string",
                    "description": "Bootstrap password of the managed Rancher service, returned only on creation\n",
                    "secret": true
                },
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RancherCurrentStateIpRestriction:RancherCurrentStateIpRestriction"
                    },
                    "description": "List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the managed Rancher service\n"
                },
                "networking": {
                    "$ref": "#/types/ovh:CloudProject/RancherCurrentStateNetworking:RancherCurrentStateNetworking",
                    "description": "Networking properties of a managed Rancher service\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the managed Rancher service\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the managed Rancher service\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the managed Rancher service\n"
                },
                "usage": {
                    "$ref": "#/types/ovh:CloudProject/RancherCurrentStateUsage:RancherCurrentStateUsage",
                    "description": "Latest metrics regarding the usage of the managed Rancher service\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the managed Rancher service\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootstrapPassword",
                        "ipRestrictions",
                        "name",
                        "networking",
                        "plan",
                        "region",
                        "url",
                        "usage",
                        "version"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherCurrentStateIpRestriction:RancherCurrentStateIpRestriction": {
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the allowed CIDR block\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidrBlock",
                        "description"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherCurrentStateNetworking:RancherCurrentStateNetworking": {
            "properties": {
                "egressCidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the CIDR ranges for egress IP addresses used by Rancher. Ensure these ranges are allowed in any IP restrictions for services that Rancher will access.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "egressCidrBlocks"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherCurrentStateUsage:RancherCurrentStateUsage": {
            "properties": {
                "datetime": {
                    "type": "string",
                    "description": "Date of the sample\n"
                },
                "orchestratedVcpus": {
                    "type": "number",
                    "description": "Total number of vCPUs orchestrated by the managed Rancher service through the downstream clusters\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "datetime",
                        "orchestratedVcpus"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherCurrentTask:RancherCurrentTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the current task\n"
                },
                "link": {
                    "type": "string",
                    "description": "Link to the task details\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current global status of the current task\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the current task\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "link",
                        "status",
                        "type"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherTargetSpec:RancherTargetSpec": {
            "properties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RancherTargetSpecIpRestriction:RancherTargetSpecIpRestriction"
                    },
                    "description": "List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the managed Rancher service\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the managed Rancher service. Available plans for an existing managed Rancher can be retrieved using GET /rancher/rancherID/capabilities/plan\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the managed Rancher service. Available versions for an existing managed Rancher can be retrieved using ovh*cloud*project*rancher*version datasource. Default is the latest version.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "plan"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipRestrictions",
                        "name",
                        "plan",
                        "version"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherTargetSpecIpRestriction:RancherTargetSpecIpRestriction": {
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the allowed CIDR block\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidrBlock",
                        "description"
                    ]
                }
            }
        },
        "ovh:CloudProject/RegionNetworkSubnet:RegionNetworkSubnet": {
            "properties": {
                "allocationPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnetAllocationPool:RegionNetworkSubnetAllocationPool"
                    },
                    "description": "List of IP pools allocated in subnet\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "Subnet range in CIDR notation\n"
                },
                "dnsNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS nameservers\n"
                },
                "enableDhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP for the subnet\n"
                },
                "enableGatewayIp": {
                    "type": "boolean",
                    "description": "Set a gateway ip for the subnet\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway IP\n"
                },
                "hostRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnetHostRoute:RegionNetworkSubnetHostRoute"
                    },
                    "description": "Host routes\n"
                },
                "ipVersion": {
                    "type": "number",
                    "description": "IP version\n"
                },
                "name": {
                    "type": "string",
                    "description": "Subnet name\n"
                },
                "useDefaultPublicDnsresolver": {
                    "type": "boolean",
                    "description": "Use default DNS\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "enableDhcp",
                "enableGatewayIp",
                "ipVersion"
            ]
        },
        "ovh:CloudProject/RegionNetworkSubnetAllocationPool:RegionNetworkSubnetAllocationPool": {
            "properties": {
                "end": {
                    "type": "string",
                    "description": "Last IP for the pool (eg: 192.168.1.24)\n"
                },
                "start": {
                    "type": "string",
                    "description": "First IP for the pool (eg: 192.168.1.12)\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/RegionNetworkSubnetHostRoute:RegionNetworkSubnetHostRoute": {
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Host route destination (eg: 192.168.1.0/24)\n"
                },
                "nextHop": {
                    "type": "string",
                    "description": "Host route next hop (eg: 192.168.1.254)\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/StorageEncryption:StorageEncryption": {
            "properties": {
                "sseAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sseAlgorithm"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageObject:StorageObject": {
            "properties": {
                "etag": {
                    "type": "string",
                    "description": "ETag\n"
                },
                "isDeleteMarker": {
                    "type": "boolean",
                    "description": "Whether this object is a delete marker\n"
                },
                "isLatest": {
                    "type": "boolean",
                    "description": "Whether this is the latest version of the object\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "Last modification date\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size (bytes)\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Storage class\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the object\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "etag",
                        "isDeleteMarker",
                        "isLatest",
                        "key",
                        "lastModified",
                        "size",
                        "storageClass",
                        "versionId"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplication:StorageReplication": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/StorageReplicationRule:StorageReplicationRule"
                    },
                    "description": "Replication rules\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "rules"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplicationRule:StorageReplicationRule": {
            "properties": {
                "deleteMarkerReplication": {
                    "type": "string",
                    "description": "Delete marker replication\n"
                },
                "destination": {
                    "$ref": "#/types/ovh:CloudProject/StorageReplicationRuleDestination:StorageReplicationRuleDestination",
                    "description": "Rule destination configuration\n"
                },
                "filter": {
                    "$ref": "#/types/ovh:CloudProject/StorageReplicationRuleFilter:StorageReplicationRuleFilter",
                    "description": "Rule filters\n"
                },
                "id": {
                    "type": "string",
                    "description": "Rule ID\n"
                },
                "priority": {
                    "type": "number",
                    "description": "Rule priority\n"
                },
                "status": {
                    "type": "string",
                    "description": "Rule status\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteMarkerReplication",
                        "destination",
                        "filter",
                        "id",
                        "priority",
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplicationRuleDestination:StorageReplicationRuleDestination": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Destination bucket name\n"
                },
                "region": {
                    "type": "string",
                    "description": "Destination region\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Destination storage class\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "region",
                        "storageClass"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplicationRuleFilter:StorageReplicationRuleFilter": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "Prefix filter\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/StorageReplicationRuleFilterTag:StorageReplicationRuleFilterTag"
                    },
                    "description": "Tags filter\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "prefix",
                        "tags"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplicationRuleFilterTag:StorageReplicationRuleFilterTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "ovh:CloudProject/StorageVersioning:StorageVersioning": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Versioning status\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/UserRole:UserRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "id": {
                    "type": "string",
                    "description": "id of the role\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the role\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of permissions associated with the role\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "permissions"
                    ]
                }
            }
        },
        "ovh:CloudProject/VolumeSubOperation:VolumeSubOperation": {
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "Affected resource of the sub-operation\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The started date of the sub-operation\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "resourceId",
                        "resourceType"
                    ]
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerFilterFeature:getCapabilitiesContainerFilterFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n"
                }
            },
            "type": "object",
            "required": [
                "vulnerability"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerFilterRegistryLimit:getCapabilitiesContainerFilterRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n"
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n"
                }
            },
            "type": "object",
            "required": [
                "imageStorage",
                "parallelRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResult:getCapabilitiesContainerRegistryResult": {
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResultPlan:getCapabilitiesContainerRegistryResultPlan"
                    },
                    "description": "Available plans in the region\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "The region name\n"
                }
            },
            "type": "object",
            "required": [
                "plans",
                "regionName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResultPlan:getCapabilitiesContainerRegistryResultPlan": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Plan code from the catalog\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanFeature:getCapabilitiesContainerRegistryResultPlanFeature"
                    },
                    "description": "Features of the plan\n"
                },
                "id": {
                    "type": "string",
                    "description": "Plan ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Plan name\n"
                },
                "registryLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanRegistryLimit:getCapabilitiesContainerRegistryResultPlanRegistryLimit"
                    },
                    "description": "Container registry limits\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Plan last update date\n"
                }
            },
            "type": "object",
            "required": [
                "code",
                "createdAt",
                "features",
                "id",
                "name",
                "registryLimits",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanFeature:getCapabilitiesContainerRegistryResultPlanFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n"
                }
            },
            "type": "object",
            "required": [
                "vulnerability"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanRegistryLimit:getCapabilitiesContainerRegistryResultPlanRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n"
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n"
                }
            },
            "type": "object",
            "required": [
                "imageStorage",
                "parallelRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getContainerRegistriesResult:getContainerRegistriesResult": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Registry creation date\n"
                },
                "id": {
                    "type": "string",
                    "description": "Registry ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID of your registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Current size of the registry (bytes)\n"
                },
                "status": {
                    "type": "string",
                    "description": "Registry status\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n"
                },
                "url": {
                    "type": "string",
                    "description": "Access url of the registry\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of your registry\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "name",
                "projectId",
                "region",
                "size",
                "status",
                "updatedAt",
                "url",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getContainerRegistryUsersResult:getContainerRegistryUsersResult": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User email\n"
                },
                "id": {
                    "type": "string",
                    "description": "User ID\n"
                },
                "user": {
                    "type": "string",
                    "description": "User name\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "id",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFlavorsFlavor:getFlavorsFlavor": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "Available in stock\n"
                },
                "capabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getFlavorsFlavorCapability:getFlavorsFlavorCapability"
                    },
                    "description": "Capabilities of the flavor\n"
                },
                "disk": {
                    "type": "number",
                    "description": "Number of disks\n"
                },
                "id": {
                    "type": "string",
                    "description": "Flavor id\n"
                },
                "inboundBandwidth": {
                    "type": "number",
                    "description": "Max capacity of inbound traffic in Mbit/s\n"
                },
                "name": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "osType": {
                    "type": "string",
                    "description": "OS to install on\n"
                },
                "outboundBandwidth": {
                    "type": "number",
                    "description": "Max capacity of outbound traffic in Mbit/s\n"
                },
                "planCodes": {
                    "$ref": "#/types/ovh:CloudProject/getFlavorsFlavorPlanCodes:getFlavorsFlavorPlanCodes",
                    "description": "Plan codes to order instances\n"
                },
                "quota": {
                    "type": "number",
                    "description": "Number instance you can spawn with your actual quota\n"
                },
                "ram": {
                    "type": "number",
                    "description": "Ram quantity (Gio)\n"
                },
                "region": {
                    "type": "string",
                    "description": "Flavor region\n"
                },
                "type": {
                    "type": "string",
                    "description": "Flavor type\n"
                },
                "vcpus": {
                    "type": "number",
                    "description": "Number of VCPUs\n"
                }
            },
            "type": "object",
            "required": [
                "available",
                "capabilities",
                "disk",
                "id",
                "inboundBandwidth",
                "name",
                "osType",
                "outboundBandwidth",
                "planCodes",
                "quota",
                "ram",
                "region",
                "type",
                "vcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFlavorsFlavorCapability:getFlavorsFlavorCapability": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Is the capability enabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the capability\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFlavorsFlavorPlanCodes:getFlavorsFlavorPlanCodes": {
            "properties": {
                "hourly": {
                    "type": "string",
                    "description": "Plan code to order hourly instance\n"
                },
                "monthly": {
                    "type": "string",
                    "description": "Plan code to order monthly instance\n"
                }
            },
            "type": "object",
            "required": [
                "hourly",
                "monthly"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFloatingIPsCloudProjectFloatingip:getFloatingIPsCloudProjectFloatingip": {
            "properties": {
                "associatedEntity": {
                    "$ref": "#/types/ovh:CloudProject/getFloatingIPsCloudProjectFloatingipAssociatedEntity:getFloatingIPsCloudProjectFloatingipAssociatedEntity",
                    "description": "Associated entity with the floating IP\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the floating IP\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Value of the floating IP\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network\n"
                },
                "region": {
                    "type": "string",
                    "description": "Floating ip region\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the floating IP (active┃down┃error)\n"
                }
            },
            "type": "object",
            "required": [
                "associatedEntity",
                "id",
                "ip",
                "networkId",
                "region",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFloatingIPsCloudProjectFloatingipAssociatedEntity:getFloatingIPsCloudProjectFloatingipAssociatedEntity": {
            "properties": {
                "gatewayId": {
                    "type": "string",
                    "description": "ID of the gateway\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the floating IP\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Value of the floating IP\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the port (dhcp┃instance┃loadbalancer┃routerInterface┃unknown)\n"
                }
            },
            "type": "object",
            "required": [
                "gatewayId",
                "id",
                "ip",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getImagesImage:getImagesImage": {
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "Image creation date\n"
                },
                "flavorType": {
                    "type": "string",
                    "description": "Image usable only for this type of flavor if not null\n"
                },
                "id": {
                    "type": "string",
                    "description": "Image ID\n"
                },
                "minDisk": {
                    "type": "number",
                    "description": "Minimum disks required to use image\n"
                },
                "minRam": {
                    "type": "number",
                    "description": "Minimum RAM required to use image\n"
                },
                "name": {
                    "type": "string",
                    "description": "Image name\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Order plan code\n"
                },
                "region": {
                    "type": "string",
                    "description": "Image region\n"
                },
                "size": {
                    "type": "number",
                    "description": "Image size (in GiB)\n"
                },
                "status": {
                    "type": "string",
                    "description": "Image status\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags about the image\n"
                },
                "type": {
                    "type": "string",
                    "description": "Image type\n"
                },
                "user": {
                    "type": "string",
                    "description": "User to connect with\n"
                },
                "visibility": {
                    "type": "string",
                    "description": "Image visibility\n"
                }
            },
            "type": "object",
            "required": [
                "creationDate",
                "flavorType",
                "id",
                "minDisk",
                "minRam",
                "name",
                "planCode",
                "region",
                "size",
                "status",
                "tags",
                "type",
                "user",
                "visibility"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstanceAddress:getInstanceAddress": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "IP address\n"
                },
                "version": {
                    "type": "integer",
                    "description": "IP version\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstanceAttachedVolume:getInstanceAttachedVolume": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Instance id\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstancesInstance:getInstancesInstance": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getInstancesInstanceAddress:getInstancesInstanceAddress"
                    },
                    "description": "Instance IP addresses\n"
                },
                "attachedVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getInstancesInstanceAttachedVolume:getInstancesInstanceAttachedVolume"
                    },
                    "description": "Volumes attached to the instance\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "Availability zone of the instance\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Flavor id\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Instance id\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Image id\n"
                },
                "name": {
                    "type": "string",
                    "description": "Instance name\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "SSH Keypair\n"
                },
                "taskState": {
                    "type": "string",
                    "description": "Instance task state\n"
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "attachedVolumes",
                "availabilityZone",
                "flavorId",
                "flavorName",
                "id",
                "imageId",
                "name",
                "sshKey",
                "taskState"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstancesInstanceAddress:getInstancesInstanceAddress": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "IP address\n"
                },
                "version": {
                    "type": "integer",
                    "description": "IP version\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstancesInstanceAttachedVolume:getInstancesInstanceAttachedVolume": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Instance id\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomization:getKubeCustomization": {
            "properties": {
                "apiservers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver"
                    },
                    "description": "Kubernetes API server customization\n",
                    "deprecationMessage": "Use customization_apiserver instead"
                }
            },
            "type": "object",
            "required": [
                "apiservers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver": {
            "properties": {
                "admissionplugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserverAdmissionplugin:getKubeCustomizationApiserverAdmissionplugin"
                    },
                    "description": "Kubernetes API server admission plugins customization\n"
                }
            },
            "type": "object",
            "required": [
                "admissionplugins"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomizationApiserverAdmissionplugin:getKubeCustomizationApiserverAdmissionplugin": {
            "properties": {
                "disableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.\n"
                },
                "enableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of admission plugins enabled, default is [\"NodeRestriction\",\"AlwaysPulImages\"] and only these admission plugins can be enabled at this time.\n"
                }
            },
            "type": "object",
            "required": [
                "disableds",
                "enableds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomizationKubeProxy:getKubeCustomizationKubeProxy": {
            "properties": {
                "iptables": {
                    "$ref": "#/types/ovh:CloudProject/getKubeCustomizationKubeProxyIptables:getKubeCustomizationKubeProxyIptables",
                    "description": "Kubernetes cluster kube-proxy customization of iptables specific config.\n"
                },
                "ipvs": {
                    "$ref": "#/types/ovh:CloudProject/getKubeCustomizationKubeProxyIpvs:getKubeCustomizationKubeProxyIpvs",
                    "description": "Kubernetes cluster kube-proxy customization of IPVS specific config (durations format is [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeCustomizationKubeProxyIptables:getKubeCustomizationKubeProxyIptables": {
            "properties": {
                "minSyncPeriod": {
                    "type": "string",
                    "description": "Minimum period that IPVS rules are refreshed in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.\n"
                },
                "syncPeriod": {
                    "type": "string",
                    "description": "Minimum period that IPVS rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format.\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeCustomizationKubeProxyIpvs:getKubeCustomizationKubeProxyIpvs": {
            "properties": {
                "minSyncPeriod": {
                    "type": "string",
                    "description": "Minimum period that IPVS rules are refreshed in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.\n"
                },
                "scheduler": {
                    "type": "string",
                    "description": "IPVS scheduler.\n"
                },
                "syncPeriod": {
                    "type": "string",
                    "description": "Minimum period that IPVS rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format.\n"
                },
                "tcpFinTimeout": {
                    "type": "string",
                    "description": "Timeout value used for IPVS TCP sessions after receiving a FIN in RFC3339 duration.\n"
                },
                "tcpTimeout": {
                    "type": "string",
                    "description": "Timeout value used for idle IPVS TCP sessions in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.\n"
                },
                "udpTimeout": {
                    "type": "string",
                    "description": "timeout value used for IPVS UDP packets in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodePoolNodesNode:getKubeNodePoolNodesNode": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Creation date.\n"
                },
                "deployedAt": {
                    "type": "string",
                    "description": "(Optional) Date of the effective deployment.\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name.\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the node.\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Openstack ID of the underlying VM of the node.\n"
                },
                "isUpToDate": {
                    "type": "boolean",
                    "description": "Is the node in the target version of the cluster.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the node pool from which we want the nodes.\n"
                },
                "nodePoolId": {
                    "type": "string",
                    "description": "Managed kubernetes node pool ID.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Public cloud project ID.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date.\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version in which the node is.\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "deployedAt",
                "flavor",
                "id",
                "instanceId",
                "isUpToDate",
                "name",
                "nodePoolId",
                "projectId",
                "status",
                "updatedAt",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeNodePoolTemplate:getKubeNodePoolTemplate": {
            "properties": {
                "metadata": {
                    "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplateMetadata:getKubeNodePoolTemplateMetadata",
                    "description": "metadata\n"
                },
                "spec": {
                    "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplateSpec:getKubeNodePoolTemplateSpec",
                    "description": "spec\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodePoolTemplateMetadata:getKubeNodePoolTemplateMetadata": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "annotations\n"
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "finalizers\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "labels\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodePoolTemplateSpec:getKubeNodePoolTemplateSpec": {
            "properties": {
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "taints\n"
                },
                "unschedulable": {
                    "type": "boolean",
                    "description": "unschedulable\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodesNode:getKubeNodesNode": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Creation date\n"
                },
                "deployedAt": {
                    "type": "string",
                    "description": "(Optional) Date of the effective deployment\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the node\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Openstack ID of the underlying VM of the node\n"
                },
                "isUpToDate": {
                    "type": "boolean",
                    "description": "Is the node in the target version of the cluster\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the node\n"
                },
                "nodePoolId": {
                    "type": "string",
                    "description": "Managed kubernetes node pool ID\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Public cloud project ID\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version in which the node is\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "deployedAt",
                "flavor",
                "id",
                "instanceId",
                "isUpToDate",
                "name",
                "nodePoolId",
                "projectId",
                "status",
                "updatedAt",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getLoadBalancerFlavorsFlavor:getLoadBalancerFlavorsFlavor": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Flavor id\n"
                },
                "name": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region name\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getLoadBalancerFloatingIp:getLoadBalancerFloatingIp": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the loadbalancer\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Value of the floating IP\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getLoadBalancersLoadbalancer:getLoadBalancersLoadbalancer": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Date of creation of the loadbalancer\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "ID of the flavor\n"
                },
                "floatingIp": {
                    "$ref": "#/types/ovh:CloudProject/getLoadBalancersLoadbalancerFloatingIp:getLoadBalancersLoadbalancerFloatingIp",
                    "description": "Information about the floating IP\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the floating IP\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the loadbalancer\n"
                },
                "operatingStatus": {
                    "type": "string",
                    "description": "Operating status of the loadbalancer\n"
                },
                "provisioningStatus": {
                    "type": "string",
                    "description": "Provisioning status of the loadbalancer\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the loadbalancer\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date of the loadbalancer\n"
                },
                "vipAddress": {
                    "type": "string",
                    "description": "IP address of the Virtual IP\n"
                },
                "vipNetworkId": {
                    "type": "string",
                    "description": "Openstack ID of the network for the Virtual IP\n"
                },
                "vipSubnetId": {
                    "type": "string",
                    "description": "ID of the subnet for the Virtual IP\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "flavorId",
                "floatingIp",
                "id",
                "name",
                "operatingStatus",
                "provisioningStatus",
                "region",
                "updatedAt",
                "vipAddress",
                "vipNetworkId",
                "vipSubnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getLoadBalancersLoadbalancerFloatingIp:getLoadBalancersLoadbalancerFloatingIp": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the floating IP\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Value of the floating IP\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivateRegion:getNetworkPrivateRegion": {
            "properties": {
                "openstackId": {
                    "type": "string",
                    "description": "Network ID on openstack region\n"
                },
                "region": {
                    "type": "string",
                    "description": "Name of the region\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the network\n"
                }
            },
            "type": "object",
            "required": [
                "openstackId",
                "region",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivateSubnetsSubnet:getNetworkPrivateSubnetsSubnet": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "CIDR of the subnet\n"
                },
                "dhcpEnabled": {
                    "type": "boolean",
                    "description": "Whether or not if DHCP is enabled for the subnet\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway IP of the subnet\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the subnet\n"
                },
                "ipPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getNetworkPrivateSubnetsSubnetIpPool:getNetworkPrivateSubnetsSubnetIpPool"
                    },
                    "description": "List of ip pools allocated in the subnet\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "dhcpEnabled",
                "gatewayIp",
                "id",
                "ipPools"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivateSubnetsSubnetIpPool:getNetworkPrivateSubnetsSubnetIpPool": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Whether or not if DHCP is enabled\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last IP for this region (eg: 192.168.1.24)\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network with cidr (eg: 192.168.1.0/24)\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region associated to the subnet\n"
                },
                "start": {
                    "type": "string",
                    "description": "First IP for this region (eg: 192.168.1.12)\n"
                }
            },
            "type": "object",
            "required": [
                "dhcp",
                "end",
                "network",
                "region",
                "start"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivatesNetwork:getNetworkPrivatesNetwork": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the network\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the network\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getNetworkPrivatesNetworkRegion:getNetworkPrivatesNetworkRegion"
                    },
                    "description": "Information about the private network in the openstack region\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the network\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the network\n"
                },
                "vlanId": {
                    "type": "number",
                    "description": "VLAN ID of the network\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "regions",
                "status",
                "type",
                "vlanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivatesNetworkRegion:getNetworkPrivatesNetworkRegion": {
            "properties": {
                "openstackId": {
                    "type": "string",
                    "description": "Network ID on openstack region\n"
                },
                "region": {
                    "type": "string",
                    "description": "Name of the region\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the network\n"
                }
            },
            "type": "object",
            "required": [
                "openstackId",
                "region",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getOpenSearchUserAcl:getOpenSearchUserAcl": {
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the ACL.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission of the ACL.\n"
                }
            },
            "type": "object",
            "required": [
                "pattern",
                "permission"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getPrometheusTarget:getPrometheusTarget": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Host of the endpoint\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentState:getRancherCurrentState": {
            "properties": {
                "bootstrapPassword": {
                    "type": "string",
                    "description": "Bootstrap password of the managed Rancher service, returned only on creation\n",
                    "secret": true
                },
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getRancherCurrentStateIpRestriction:getRancherCurrentStateIpRestriction"
                    },
                    "description": "List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the managed Rancher service\n"
                },
                "networking": {
                    "$ref": "#/types/ovh:CloudProject/getRancherCurrentStateNetworking:getRancherCurrentStateNetworking",
                    "description": "Networking properties of a managed Rancher service\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the managed Rancher service\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the managed Rancher service\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the managed Rancher service\n"
                },
                "usage": {
                    "$ref": "#/types/ovh:CloudProject/getRancherCurrentStateUsage:getRancherCurrentStateUsage",
                    "description": "Latest metrics regarding the usage of the managed Rancher service\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the managed Rancher service\n"
                }
            },
            "type": "object",
            "required": [
                "bootstrapPassword",
                "ipRestrictions",
                "name",
                "networking",
                "plan",
                "region",
                "url",
                "usage",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentStateIpRestriction:getRancherCurrentStateIpRestriction": {
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the allowed CIDR block\n"
                }
            },
            "type": "object",
            "required": [
                "cidrBlock",
                "description"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentStateNetworking:getRancherCurrentStateNetworking": {
            "properties": {
                "egressCidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the CIDR ranges for egress IP addresses used by Rancher. Ensure these ranges are allowed in any IP restrictions for services that Rancher will access.\n"
                }
            },
            "type": "object",
            "required": [
                "egressCidrBlocks"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentStateUsage:getRancherCurrentStateUsage": {
            "properties": {
                "datetime": {
                    "type": "string",
                    "description": "Date of the sample\n"
                },
                "orchestratedVcpus": {
                    "type": "number",
                    "description": "Total number of vCPUs orchestrated by the managed Rancher service through the downstream clusters\n"
                }
            },
            "type": "object",
            "required": [
                "datetime",
                "orchestratedVcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentTask:getRancherCurrentTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the current task\n"
                },
                "link": {
                    "type": "string",
                    "description": "Link to the task details\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current global status of the current task\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the current task\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "link",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherPlanPlan:getRancherPlanPlan": {
            "properties": {
                "cause": {
                    "type": "string",
                    "description": "Cause for an unavailability\n"
                },
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the unavailability cause\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the plan\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the plan\n"
                }
            },
            "type": "object",
            "required": [
                "cause",
                "message",
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherTargetSpec:getRancherTargetSpec": {
            "properties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getRancherTargetSpecIpRestriction:getRancherTargetSpecIpRestriction"
                    },
                    "description": "List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the managed Rancher service\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the managed Rancher service. Available plans for an existing managed Rancher can be retrieved using GET /rancher/rancherID/capabilities/plan\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the managed Rancher service. Available versions for an existing managed Rancher can be retrieved using GET /rancher/rancherID/capabilities/version\n"
                }
            },
            "type": "object",
            "required": [
                "ipRestrictions",
                "name",
                "plan",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherTargetSpecIpRestriction:getRancherTargetSpecIpRestriction": {
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the allowed CIDR block\n"
                }
            },
            "type": "object",
            "required": [
                "cidrBlock",
                "description"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherVersionVersion:getRancherVersionVersion": {
            "properties": {
                "cause": {
                    "type": "string",
                    "description": "Cause for an unavailability\n"
                },
                "changelogUrl": {
                    "type": "string",
                    "description": "Changelog URL of the version\n"
                },
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the unavailability cause\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the version\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the version\n"
                }
            },
            "type": "object",
            "required": [
                "cause",
                "changelogUrl",
                "message",
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRegionService:getRegionService": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the region associated with the public cloud project.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the service\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageEncryption:getStorageEncryption": {
            "properties": {
                "sseAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm\n"
                }
            },
            "type": "object",
            "required": [
                "sseAlgorithm"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageObject:getStorageObject": {
            "properties": {
                "etag": {
                    "type": "string",
                    "description": "ETag\n"
                },
                "isDeleteMarker": {
                    "type": "boolean",
                    "description": "Whether this object is a delete marker\n"
                },
                "isLatest": {
                    "type": "boolean",
                    "description": "Whether this is the latest version of the object\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "Last modification date\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size (bytes)\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Storage class\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the object\n"
                }
            },
            "type": "object",
            "required": [
                "etag",
                "isDeleteMarker",
                "isLatest",
                "key",
                "lastModified",
                "size",
                "storageClass",
                "versionId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageObjectsObject:getStorageObjectsObject": {
            "properties": {
                "etag": {
                    "type": "string",
                    "description": "ETag\n"
                },
                "isDeleteMarker": {
                    "type": "boolean",
                    "description": "Whether this object is a delete marker\n"
                },
                "isLatest": {
                    "type": "boolean",
                    "description": "Whether this is the latest version of the object\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "Last modification date\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size (bytes)\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Storage class\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the object\n"
                }
            },
            "type": "object",
            "required": [
                "etag",
                "isDeleteMarker",
                "isLatest",
                "key",
                "lastModified",
                "size",
                "storageClass",
                "versionId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageReplication:getStorageReplication": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getStorageReplicationRule:getStorageReplicationRule"
                    },
                    "description": "Replication rules\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageReplicationRule:getStorageReplicationRule": {
            "properties": {
                "deleteMarkerReplication": {
                    "type": "string",
                    "description": "Delete marker replication\n"
                },
                "destination": {
                    "$ref": "#/types/ovh:CloudProject/getStorageReplicationRuleDestination:getStorageReplicationRuleDestination",
                    "description": "Rule destination configuration\n"
                },
                "filter": {
                    "$ref": "#/types/ovh:CloudProject/getStorageReplicationRuleFilter:getStorageReplicationRuleFilter",
                    "description": "Rule filters\n"
                },
                "id": {
                    "type": "string",
                    "description": "Rule ID\n"
                },
                "priority": {
                    "type": "number",
                    "description": "Rule priority\n"
                },
                "status": {
                    "type": "string",
                    "description": "Rule status\n"
                }
            },
            "type": "object",
            "required": [
                "deleteMarkerReplication",
                "destination",
                "filter",
                "id",
                "priority",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageReplicationRuleDestination:getStorageReplicationRuleDestination": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Destination bucket name\n"
                },
                "region": {
                    "type": "string",
                    "description": "Destination region, can be null if destination bucket has been deleted\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Destination storage class\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "region",
                "storageClass"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageReplicationRuleFilter:getStorageReplicationRuleFilter": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "Prefix filter\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags filter\n"
                }
            },
            "type": "object",
            "required": [
                "prefix",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageVersioning:getStorageVersioning": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Versioning status\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainer:getStoragesContainer": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and timestamp when the resource was created\n"
                },
                "encryption": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerEncryption:getStoragesContainerEncryption",
                    "description": "Encryption configuration\n"
                },
                "name": {
                    "type": "string",
                    "description": "Container name\n"
                },
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getStoragesContainerObject:getStoragesContainerObject"
                    },
                    "description": "Container objects\n"
                },
                "objectsCount": {
                    "type": "number",
                    "description": "Container total objects count\n"
                },
                "objectsSize": {
                    "type": "number",
                    "description": "Container total objects size (bytes)\n"
                },
                "ownerId": {
                    "type": "number",
                    "description": "Container owner user ID\n"
                },
                "region": {
                    "type": "string",
                    "description": "Container region\n"
                },
                "replication": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerReplication:getStoragesContainerReplication",
                    "description": "Replication configuration\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Container tags\n"
                },
                "versioning": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerVersioning:getStoragesContainerVersioning",
                    "description": "Versioning configuration\n"
                },
                "virtualHost": {
                    "type": "string",
                    "description": "Container virtual host\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "encryption",
                "name",
                "objects",
                "objectsCount",
                "objectsSize",
                "ownerId",
                "region",
                "replication",
                "tags",
                "versioning",
                "virtualHost"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerEncryption:getStoragesContainerEncryption": {
            "properties": {
                "sseAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm\n"
                }
            },
            "type": "object",
            "required": [
                "sseAlgorithm"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerObject:getStoragesContainerObject": {
            "properties": {
                "etag": {
                    "type": "string",
                    "description": "ETag\n"
                },
                "isDeleteMarker": {
                    "type": "boolean",
                    "description": "Whether this object is a delete marker\n"
                },
                "isLatest": {
                    "type": "boolean",
                    "description": "Whether this is the latest version of the object\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "Last modification date\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size (bytes)\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Storage class\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the object\n"
                }
            },
            "type": "object",
            "required": [
                "etag",
                "isDeleteMarker",
                "isLatest",
                "key",
                "lastModified",
                "size",
                "storageClass",
                "versionId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerReplication:getStoragesContainerReplication": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getStoragesContainerReplicationRule:getStoragesContainerReplicationRule"
                    },
                    "description": "Replication rules\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerReplicationRule:getStoragesContainerReplicationRule": {
            "properties": {
                "deleteMarkerReplication": {
                    "type": "string",
                    "description": "Delete marker replication\n"
                },
                "destination": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerReplicationRuleDestination:getStoragesContainerReplicationRuleDestination",
                    "description": "Rule destination configuration\n"
                },
                "filter": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerReplicationRuleFilter:getStoragesContainerReplicationRuleFilter",
                    "description": "Rule filters\n"
                },
                "id": {
                    "type": "string",
                    "description": "Rule ID\n"
                },
                "priority": {
                    "type": "number",
                    "description": "Rule priority\n"
                },
                "status": {
                    "type": "string",
                    "description": "Rule status\n"
                }
            },
            "type": "object",
            "required": [
                "deleteMarkerReplication",
                "destination",
                "filter",
                "id",
                "priority",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerReplicationRuleDestination:getStoragesContainerReplicationRuleDestination": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Destination bucket name\n"
                },
                "region": {
                    "type": "string",
                    "description": "Destination region, can be null if destination bucket has been deleted\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Destination storage class\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "region",
                "storageClass"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerReplicationRuleFilter:getStoragesContainerReplicationRuleFilter": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "Prefix filter\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags filter\n"
                }
            },
            "type": "object",
            "required": [
                "prefix",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerVersioning:getStoragesContainerVersioning": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Versioning status\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getUserRole:getUserRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description of the role\n"
                },
                "id": {
                    "type": "string",
                    "description": "id of the role\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the role\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of permissions associated with the role\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "permissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getUsersUser:getUsersUser": {
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "the date the user was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "description of the role\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getUsersUserRole:getUsersUserRole"
                    },
                    "description": "A list of roles associated with the user.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the user. should be normally set to 'ok'.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n"
                },
                "username": {
                    "type": "string",
                    "description": "the username generated for the user. This username can be used with the Openstack API.\n"
                }
            },
            "type": "object",
            "required": [
                "creationDate",
                "description",
                "roles",
                "status",
                "userId",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getUsersUserRole:getUsersUserRole": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description of the role\n"
                },
                "id": {
                    "type": "string",
                    "description": "id of the role\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the role\n"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "list of permissions associated with the role\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "permissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getVolumesVolume:getVolumesVolume": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The id of the volume\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the volume\n"
                },
                "size": {
                    "type": "number",
                    "description": "The size of the volume\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl": {
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the ACL.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission of the ACL Available permission:\n"
                }
            },
            "type": "object",
            "required": [
                "pattern",
                "permission"
            ]
        },
        "ovh:CloudProjectDatabase/PrometheusTarget:PrometheusTarget": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Host of the endpoint\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port"
                    ]
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesEngine:getCapabilitiesEngine": {
            "properties": {
                "defaultVersion": {
                    "type": "string",
                    "description": "Default version used for the engine.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the plan.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the plan.\n"
                },
                "sslModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSL modes for this engine.\n"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Versions available for this engine.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultVersion",
                "description",
                "name",
                "sslModes",
                "versions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesFlavor:getCapabilitiesFlavor": {
            "properties": {
                "core": {
                    "type": "integer",
                    "description": "Flavor core number.\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "Flavor ram size in GB.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the plan.\n"
                },
                "storage": {
                    "type": "integer",
                    "description": "Flavor disk size in GB.\n"
                }
            },
            "type": "object",
            "required": [
                "core",
                "memory",
                "name",
                "storage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesOption:getCapabilitiesOption": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the plan.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the option.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesPlan:getCapabilitiesPlan": {
            "properties": {
                "backupRetention": {
                    "type": "string",
                    "description": "Automatic backup retention duration.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the plan.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the plan.\n"
                }
            },
            "type": "object",
            "required": [
                "backupRetention",
                "description",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseEndpoint:getDatabaseEndpoint": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Type of component the URI relates to.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the cluster.\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path of the endpoint.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint.\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Scheme used to generate the URI.\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Defines whether the endpoint uses SSL.\n"
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL mode used to connect to the service if the SSL is enabled.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "URI of the endpoint.\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "domain",
                "path",
                "port",
                "scheme",
                "ssl",
                "sslMode",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseIpRestriction:getDatabaseIpRestriction": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the cluster.\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "ip",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseNode:getDatabaseNode": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Private network id in which the node should be deployed. It's the regional openstackId of the private network\n"
                },
                "region": {
                    "type": "string",
                    "description": "Public cloud region in which the node should be deployed.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Private subnet ID in which the node is.\n"
                }
            },
            "type": "object",
            "required": [
                "networkId",
                "region",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration": {
            "properties": {
                "flowgger": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfigurationFlowgger:LogsInputConfigurationFlowgger",
                    "description": "Flowgger configuration\n"
                },
                "logstash": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfigurationLogstash:LogsInputConfigurationLogstash",
                    "description": "Logstash configuration\n"
                }
            },
            "type": "object"
        },
        "ovh:Dbaas/LogsInputConfigurationFlowgger:LogsInputConfigurationFlowgger": {
            "properties": {
                "logFormat": {
                    "type": "string",
                    "description": "Type of format to decode. One of \"RFC5424\", \"LTSV\", \"GELF\", \"CAPNP\"\n"
                },
                "logFraming": {
                    "type": "string",
                    "description": "Indicates how messages are delimited. One of \"LINE\", \"NUL\", \"SYSLEN\", \"CAPNP\"\n"
                }
            },
            "type": "object",
            "required": [
                "logFormat",
                "logFraming"
            ]
        },
        "ovh:Dbaas/LogsInputConfigurationLogstash:LogsInputConfigurationLogstash": {
            "properties": {
                "filterSection": {
                    "type": "string",
                    "description": "The filter section of logstash.conf\n"
                },
                "inputSection": {
                    "type": "string",
                    "description": "The filter section of logstash.conf\n"
                },
                "patternSection": {
                    "type": "string",
                    "description": "The list of customs Grok patterns\n"
                }
            },
            "type": "object",
            "required": [
                "inputSection"
            ]
        },
        "ovh:Dedicated/ServerCustomizations:ServerCustomizations": {
            "properties": {
                "configDriveUserData": {
                    "type": "string",
                    "description": "Config Drive UserData\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "Path of the EFI bootloader\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Custom hostname\n"
                },
                "httpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Image HTTP Headers\n"
                },
                "imageCheckSum": {
                    "type": "string",
                    "description": "Image checksum\n"
                },
                "imageCheckSumType": {
                    "type": "string",
                    "description": "Checksum type\n"
                },
                "imageType": {
                    "type": "string",
                    "description": "Image Type\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Image URL\n"
                },
                "language": {
                    "type": "string",
                    "description": "Display Language\n"
                },
                "postInstallationScript": {
                    "type": "string",
                    "description": "Post-Installation Script\n"
                },
                "postInstallationScriptExtension": {
                    "type": "string",
                    "description": "Post-Installation Script File Extension\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "SSH Public Key\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerIam:ServerIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource in the IAM\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with `ovh:`\n"
                },
                "urn": {
                    "type": "string",
                    "description": "URN of the private database, used when writing IAM policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface": {
            "properties": {
                "macs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Interface Mac address\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Interface type\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "macs",
                "type"
            ]
        },
        "ovh:Dedicated/ServerOrder:ServerOrder": {
            "properties": {
                "date": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerOrderDetail:ServerOrderDetail"
                    }
                },
                "expirationDate": {
                    "type": "string"
                },
                "orderId": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Dedicated/ServerOrderDetail:ServerOrderDetail": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "detailType": {
                    "type": "string",
                    "description": "Product type of item in order\n"
                },
                "domain": {
                    "type": "string"
                },
                "orderDetailId": {
                    "type": "number"
                },
                "quantity": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "detailType",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Dedicated/ServerPlan:ServerPlan": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlanConfiguration:ServerPlanConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product\n"
                },
                "itemId": {
                    "type": "number",
                    "description": "Cart item to be linked\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "configurations",
                        "duration",
                        "planCode",
                        "pricingMode"
                    ]
                }
            }
        },
        "ovh:Dedicated/ServerPlanConfiguration:ServerPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Dedicated/ServerPlanOption:ServerPlanOption": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlanOptionConfiguration:ServerPlanOptionConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode",
                "quantity"
            ]
        },
        "ovh:Dedicated/ServerPlanOptionConfiguration:ServerPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Dedicated/ServerReinstallTaskCustomizations:ServerReinstallTaskCustomizations": {
            "properties": {
                "configDriveUserData": {
                    "type": "string",
                    "description": "Config Drive UserData\n",
                    "willReplaceOnChanges": true
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "EFI bootloader path\n",
                    "willReplaceOnChanges": true
                },
                "hostname": {
                    "type": "string",
                    "description": "Custom hostname\n",
                    "willReplaceOnChanges": true
                },
                "httpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Image HTTP Headers\n",
                    "willReplaceOnChanges": true
                },
                "imageCheckSum": {
                    "type": "string",
                    "description": "Image checksum\n",
                    "willReplaceOnChanges": true
                },
                "imageCheckSumType": {
                    "type": "string",
                    "description": "Checksum type\n",
                    "willReplaceOnChanges": true
                },
                "imageType": {
                    "type": "string",
                    "description": "Image Type\n",
                    "willReplaceOnChanges": true
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Image URL\n",
                    "willReplaceOnChanges": true
                },
                "language": {
                    "type": "string",
                    "description": "Display Language\n",
                    "willReplaceOnChanges": true
                },
                "postInstallationScript": {
                    "type": "string",
                    "description": "Post-Installation Script\n",
                    "willReplaceOnChanges": true
                },
                "postInstallationScriptExtension": {
                    "type": "string",
                    "description": "Post-Installation Script File Extension\n",
                    "willReplaceOnChanges": true
                },
                "sshKey": {
                    "type": "string",
                    "description": "SSH Public Key\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStorage:ServerReinstallTaskStorage": {
            "properties": {
                "diskGroupId": {
                    "type": "integer",
                    "description": "Disk group id to install the OS to (default is 0, meaning automatic).\n",
                    "willReplaceOnChanges": true
                },
                "hardwareRaids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStorageHardwareRaid:ServerReinstallTaskStorageHardwareRaid"
                    },
                    "description": "Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode).\n",
                    "willReplaceOnChanges": true
                },
                "partitionings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioning:ServerReinstallTaskStoragePartitioning"
                    },
                    "description": "Partitioning configuration\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStorageHardwareRaid:ServerReinstallTaskStorageHardwareRaid": {
            "properties": {
                "arrays": {
                    "type": "integer",
                    "description": "Number of arrays (default is 1)\n",
                    "willReplaceOnChanges": true
                },
                "disks": {
                    "type": "integer",
                    "description": "Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)\n",
                    "willReplaceOnChanges": true
                },
                "raidLevel": {
                    "type": "integer",
                    "description": "Hardware raid type (default is 1)\n",
                    "willReplaceOnChanges": true
                },
                "spares": {
                    "type": "integer",
                    "description": "Number of disks in the disk group involved in the spare (default is 0)\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioning:ServerReinstallTaskStoragePartitioning": {
            "properties": {
                "disks": {
                    "type": "integer",
                    "description": "Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)\n",
                    "willReplaceOnChanges": true
                },
                "layouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayout:ServerReinstallTaskStoragePartitioningLayout"
                    },
                    "description": "Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme). Accept multiple values (multiple partitions):\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "Partitioning scheme (if applicable with selected operating system)\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayout:ServerReinstallTaskStoragePartitioningLayout": {
            "properties": {
                "extras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtra:ServerReinstallTaskStoragePartitioningLayoutExtra"
                    },
                    "description": "Partition extras parameters (when applicable)\n",
                    "willReplaceOnChanges": true
                },
                "fileSystem": {
                    "type": "string",
                    "description": "File system type\n",
                    "willReplaceOnChanges": true
                },
                "mountPoint": {
                    "type": "string",
                    "description": "Mount point\n",
                    "willReplaceOnChanges": true
                },
                "raidLevel": {
                    "type": "integer",
                    "description": "Software raid type (default is 1)\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "Partition size in MiB (default value is 0 which means to fill the disk with that partition)\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "fileSystem",
                "mountPoint"
            ]
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtra:ServerReinstallTaskStoragePartitioningLayoutExtra": {
            "properties": {
                "lvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtraLv:ServerReinstallTaskStoragePartitioningLayoutExtraLv"
                    },
                    "description": "LVM-specific parameters (when applicable)\n",
                    "willReplaceOnChanges": true
                },
                "zps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtraZp:ServerReinstallTaskStoragePartitioningLayoutExtraZp"
                    },
                    "description": "ZFS-specific parameters (when applicable)\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtraLv:ServerReinstallTaskStoragePartitioningLayoutExtraLv": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Logical volume name\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtraZp:ServerReinstallTaskStoragePartitioningLayoutExtraZp": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "zpool name (generated automatically if not specified, note that multiple ZFS partitions with same zpool names will be configured as multiple datasets belonging to the same zpool if compatible)\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStorage:ServerStorage": {
            "properties": {
                "diskGroupId": {
                    "type": "number",
                    "description": "Disk group id (default is 0, meaning automatic)\n"
                },
                "hardwareRaids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerStorageHardwareRaid:ServerStorageHardwareRaid"
                    },
                    "description": "Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode)\n"
                },
                "partitioning": {
                    "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioning:ServerStoragePartitioning",
                    "description": "Partitioning configuration\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStorageHardwareRaid:ServerStorageHardwareRaid": {
            "properties": {
                "arrays": {
                    "type": "number",
                    "description": "Number of arrays (default is 1)\n"
                },
                "disks": {
                    "type": "number",
                    "description": "Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)\n"
                },
                "raidLevel": {
                    "type": "number",
                    "description": "Hardware raid type (default is 1)\n"
                },
                "spares": {
                    "type": "number",
                    "description": "Number of disks in the disk group involved in the spare (default is 0)\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStoragePartitioning:ServerStoragePartitioning": {
            "properties": {
                "disks": {
                    "type": "number",
                    "description": "Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)\n"
                },
                "layouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioningLayout:ServerStoragePartitioningLayout"
                    },
                    "description": "Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme)\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "Partitioning scheme (if applicable with selected operating system)\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStoragePartitioningLayout:ServerStoragePartitioningLayout": {
            "properties": {
                "extras": {
                    "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioningLayoutExtras:ServerStoragePartitioningLayoutExtras",
                    "description": "Partition extras parameters\n"
                },
                "fileSystem": {
                    "type": "string",
                    "description": "File system type\n"
                },
                "mountPoint": {
                    "type": "string",
                    "description": "Mount point\n"
                },
                "raidLevel": {
                    "type": "number",
                    "description": "Software raid type (default is 1)\n"
                },
                "size": {
                    "type": "number",
                    "description": "Partition size in MiB (default value is 0 which means to fill the disk with that partition)\n"
                }
            },
            "type": "object",
            "required": [
                "fileSystem",
                "mountPoint"
            ]
        },
        "ovh:Dedicated/ServerStoragePartitioningLayoutExtras:ServerStoragePartitioningLayoutExtras": {
            "properties": {
                "lv": {
                    "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioningLayoutExtrasLv:ServerStoragePartitioningLayoutExtrasLv",
                    "description": "LVM-specific parameters\n"
                },
                "zp": {
                    "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioningLayoutExtrasZp:ServerStoragePartitioningLayoutExtrasZp",
                    "description": "ZFS-specific parameters\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStoragePartitioningLayoutExtrasLv:ServerStoragePartitioningLayoutExtrasLv": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Dedicated server name\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStoragePartitioningLayoutExtrasZp:ServerStoragePartitioningLayoutExtrasZp": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Dedicated server name\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/getCloudIam:getCloudIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getCloudVersion:getCloudVersion": {
            "properties": {
                "build": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "minor": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "build",
                "major",
                "minor"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareDefaultHardwareRaidSize:getServerSpecificationsHardwareDefaultHardwareRaidSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareDiskGroup:getServerSpecificationsHardwareDiskGroup": {
            "properties": {
                "defaultHardwareRaidSize": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize:getServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize",
                    "description": "Default hardware raid size for this disk group\n"
                },
                "defaultHardwareRaidType": {
                    "type": "string",
                    "description": "Default hardware raid type for this disk group\n"
                },
                "description": {
                    "type": "string",
                    "description": "Expansion card description\n"
                },
                "diskGroupId": {
                    "type": "number",
                    "description": "Identifier of this disk group\n"
                },
                "diskSize": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareDiskGroupDiskSize:getServerSpecificationsHardwareDiskGroupDiskSize",
                    "description": "Disk capacity\n"
                },
                "diskType": {
                    "type": "string",
                    "description": "Type of the disk (SSD, SATA, SAS, ...)\n"
                },
                "numberOfDisks": {
                    "type": "number",
                    "description": "Number of disks in this group\n"
                },
                "raidController": {
                    "type": "string",
                    "description": "Raid controller, if any, managing this group of disks\n"
                }
            },
            "type": "object",
            "required": [
                "defaultHardwareRaidSize",
                "defaultHardwareRaidType",
                "description",
                "diskGroupId",
                "diskSize",
                "diskType",
                "numberOfDisks",
                "raidController"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize:getServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareDiskGroupDiskSize:getServerSpecificationsHardwareDiskGroupDiskSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareExpansionCard:getServerSpecificationsHardwareExpansionCard": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Expansion card description\n"
                },
                "type": {
                    "type": "string",
                    "description": "Expansion card type enum\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareMemorySize:getServerSpecificationsHardwareMemorySize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareUsbKey:getServerSpecificationsHardwareUsbKey": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkBandwidth:getServerSpecificationsNetworkBandwidth": {
            "properties": {
                "internetToOvh": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkBandwidthInternetToOvh:getServerSpecificationsNetworkBandwidthInternetToOvh",
                    "description": "Bandwidth limitation Internet to OVH\n"
                },
                "ovhToInternet": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkBandwidthOvhToInternet:getServerSpecificationsNetworkBandwidthOvhToInternet",
                    "description": "Bandwidth limitation OVH to Internet\n"
                },
                "ovhToOvh": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkBandwidthOvhToOvh:getServerSpecificationsNetworkBandwidthOvhToOvh",
                    "description": "Bandwidth limitation OVH to OVH\n"
                },
                "type": {
                    "type": "string",
                    "description": "Bandwidth offer type (included┃standard)\n"
                }
            },
            "type": "object",
            "required": [
                "internetToOvh",
                "ovhToInternet",
                "ovhToOvh",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkBandwidthInternetToOvh:getServerSpecificationsNetworkBandwidthInternetToOvh": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkBandwidthOvhToInternet:getServerSpecificationsNetworkBandwidthOvhToInternet": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkBandwidthOvhToOvh:getServerSpecificationsNetworkBandwidthOvhToOvh": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkConnectionVal:getServerSpecificationsNetworkConnectionVal": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkOla:getServerSpecificationsNetworkOla": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "Is the OLA feature available\n"
                },
                "availableModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkOlaAvailableMode:getServerSpecificationsNetworkOlaAvailableMode"
                    },
                    "description": "Supported modes\n"
                },
                "supportedModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Supported modes (DEPRECATED)\n"
                }
            },
            "type": "object",
            "required": [
                "available",
                "availableModes",
                "supportedModes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkOlaAvailableMode:getServerSpecificationsNetworkOlaAvailableMode": {
            "properties": {
                "default": {
                    "type": "boolean",
                    "description": "Whether it is the default configuration of the server\n"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkOlaAvailableModeInterface:getServerSpecificationsNetworkOlaAvailableModeInterface"
                    },
                    "description": "Interface layout\n"
                },
                "name": {
                    "type": "string",
                    "description": "Switch name\n"
                }
            },
            "type": "object",
            "required": [
                "default",
                "interfaces",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkOlaAvailableModeInterface:getServerSpecificationsNetworkOlaAvailableModeInterface": {
            "properties": {
                "aggregation": {
                    "type": "boolean",
                    "description": "Interface aggregation status\n"
                },
                "count": {
                    "type": "number",
                    "description": "Interface count\n"
                },
                "type": {
                    "type": "string",
                    "description": "Bandwidth offer type (included┃standard)\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "count",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkRouting:getServerSpecificationsNetworkRouting": {
            "properties": {
                "ipv4": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkRoutingIpv4:getServerSpecificationsNetworkRoutingIpv4",
                    "description": "Ipv4 routing details\n"
                },
                "ipv6": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkRoutingIpv6:getServerSpecificationsNetworkRoutingIpv6",
                    "description": "Ipv6 routing details\n"
                }
            },
            "type": "object",
            "required": [
                "ipv4",
                "ipv6"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkRoutingIpv4:getServerSpecificationsNetworkRoutingIpv4": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "Server gateway\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Server main IP\n"
                },
                "network": {
                    "type": "string",
                    "description": "Server network\n"
                }
            },
            "type": "object",
            "required": [
                "gateway",
                "ip",
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkRoutingIpv6:getServerSpecificationsNetworkRoutingIpv6": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "Server gateway\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Server main IP\n"
                },
                "network": {
                    "type": "string",
                    "description": "Server network\n"
                }
            },
            "type": "object",
            "required": [
                "gateway",
                "ip",
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkSwitching:getServerSpecificationsNetworkSwitching": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Switch name\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTraffic:getServerSpecificationsNetworkTraffic": {
            "properties": {
                "inputQuotaSize": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTrafficInputQuotaSize:getServerSpecificationsNetworkTrafficInputQuotaSize",
                    "description": "Monthly input traffic quota allowed\n"
                },
                "inputQuotaUsed": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTrafficInputQuotaUsed:getServerSpecificationsNetworkTrafficInputQuotaUsed",
                    "description": "Monthly input traffic consumed this month\n"
                },
                "isThrottled": {
                    "type": "boolean",
                    "description": "Whether bandwidth is throttleted for being over quota\n"
                },
                "outputQuotaSize": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTrafficOutputQuotaSize:getServerSpecificationsNetworkTrafficOutputQuotaSize",
                    "description": "Monthly output traffic quota allowed\n"
                },
                "outputQuotaUsed": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTrafficOutputQuotaUsed:getServerSpecificationsNetworkTrafficOutputQuotaUsed",
                    "description": "Monthly output traffic consumed this month\n"
                },
                "resetQuotaDate": {
                    "type": "string",
                    "description": "Next reset quota date for traffic counter\n"
                }
            },
            "type": "object",
            "required": [
                "inputQuotaSize",
                "inputQuotaUsed",
                "isThrottled",
                "outputQuotaSize",
                "outputQuotaUsed",
                "resetQuotaDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTrafficInputQuotaSize:getServerSpecificationsNetworkTrafficInputQuotaSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTrafficInputQuotaUsed:getServerSpecificationsNetworkTrafficInputQuotaUsed": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTrafficOutputQuotaSize:getServerSpecificationsNetworkTrafficOutputQuotaSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTrafficOutputQuotaUsed:getServerSpecificationsNetworkTrafficOutputQuotaUsed": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkVmac:getServerSpecificationsNetworkVmac": {
            "properties": {
                "supported": {
                    "type": "boolean",
                    "description": "Whether server is compatible vmac\n"
                }
            },
            "type": "object",
            "required": [
                "supported"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkVrack:getServerSpecificationsNetworkVrack": {
            "properties": {
                "bandwidth": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkVrackBandwidth:getServerSpecificationsNetworkVrackBandwidth",
                    "description": "vrack bandwidth limitation\n"
                },
                "type": {
                    "type": "string",
                    "description": "Bandwidth offer type (included┃standard)\n"
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkVrackBandwidth:getServerSpecificationsNetworkVrackBandwidth": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Domain/DSRecordsDsRecord:DSRecordsDsRecord": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "The record algorithm (`RSASHA1`, `RSASHA1_NSEC3_SHA1`, `RSASHA256`, `RSASHA512`, `ECDSAP256SHA256`, `ECDSAP384SHA384`, `ED25519`)\n"
                },
                "flags": {
                    "type": "string",
                    "description": "The record flag (`ZONE_SIGNING_KEY`, `KEY_SIGNING_KEY`)\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "The record base64 encoded public key\n"
                },
                "tag": {
                    "type": "integer",
                    "description": "The record tag\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "flags",
                "publicKey",
                "tag"
            ]
        },
        "ovh:Domain/NameCurrentState:NameCurrentState": {
            "properties": {
                "additionalStates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Domain additional states\n"
                },
                "dnsConfiguration": {
                    "$ref": "#/types/ovh:Domain/NameCurrentStateDnsConfiguration:NameCurrentStateDnsConfiguration",
                    "description": "The domain DNS configuration\n"
                },
                "extension": {
                    "type": "string",
                    "description": "Extension of the domain name\n"
                },
                "mainState": {
                    "type": "string",
                    "description": "Domain main state\n"
                },
                "name": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "protectionState": {
                    "type": "string",
                    "description": "Domain protection state\n"
                },
                "suspensionState": {
                    "type": "string",
                    "description": "Domain suspension state\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "additionalStates",
                        "dnsConfiguration",
                        "extension",
                        "mainState",
                        "name",
                        "protectionState",
                        "suspensionState"
                    ]
                }
            }
        },
        "ovh:Domain/NameCurrentStateDnsConfiguration:NameCurrentStateDnsConfiguration": {
            "properties": {
                "configurationType": {
                    "type": "string",
                    "description": "The type of DNS configuration of the domain\n"
                },
                "glueRecordIpv6supported": {
                    "type": "boolean",
                    "description": "Whether the registry supports IPv6 or not\n"
                },
                "hostSupported": {
                    "type": "boolean",
                    "description": "Whether the registry accepts hosts or not\n"
                },
                "maxDns": {
                    "type": "number",
                    "description": "The maximum number of name servers allowed by the registry\n"
                },
                "minDns": {
                    "type": "number",
                    "description": "The minimum number of name servers allowed by the registry\n"
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameCurrentStateDnsConfigurationNameServer:NameCurrentStateDnsConfigurationNameServer"
                    },
                    "description": "The name servers used by the domain name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "configurationType",
                        "glueRecordIpv6supported",
                        "hostSupported",
                        "maxDns",
                        "minDns",
                        "nameServers"
                    ]
                }
            }
        },
        "ovh:Domain/NameCurrentStateDnsConfigurationNameServer:NameCurrentStateDnsConfigurationNameServer": {
            "properties": {
                "ipv4": {
                    "type": "string",
                    "description": "The IPv4 associated to the name server\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "The IPv6 associated to the name server\n"
                },
                "nameServer": {
                    "type": "string",
                    "description": "The host name\n"
                },
                "nameServerType": {
                    "type": "string",
                    "description": "The type of name server\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipv4",
                        "ipv6",
                        "nameServer",
                        "nameServerType"
                    ]
                }
            }
        },
        "ovh:Domain/NameCurrentTask:NameCurrentTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the current task\n"
                },
                "link": {
                    "type": "string",
                    "description": "Link to the task details\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current global status of the current task\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the current task\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "link",
                        "status",
                        "type"
                    ]
                }
            }
        },
        "ovh:Domain/NameIam:NameIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Domain/NameOrder:NameOrder": {
            "properties": {
                "date": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameOrderDetail:NameOrderDetail"
                    }
                },
                "expirationDate": {
                    "type": "string"
                },
                "orderId": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Domain/NameOrderDetail:NameOrderDetail": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "detailType": {
                    "type": "string",
                    "description": "Product type of item in order\n"
                },
                "domain": {
                    "type": "string"
                },
                "orderDetailId": {
                    "type": "number"
                },
                "quantity": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "detailType",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Domain/NamePlan:NamePlan": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlanConfiguration:NamePlanConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product (defaults to \"P1Y\")\n"
                },
                "itemId": {
                    "type": "number",
                    "description": "Cart item to be linked\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "configurations",
                        "duration",
                        "planCode",
                        "pricingMode"
                    ]
                }
            }
        },
        "ovh:Domain/NamePlanConfiguration:NamePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Domain/NamePlanOption:NamePlanOption": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlanOptionConfiguration:NamePlanOptionConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode",
                "quantity"
            ]
        },
        "ovh:Domain/NamePlanOptionConfiguration:NamePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Domain/NameServersServer:NameServersServer": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "The server hostname\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The server IP\n"
                }
            },
            "type": "object",
            "required": [
                "host"
            ]
        },
        "ovh:Domain/NameTargetSpec:NameTargetSpec": {
            "properties": {
                "dnsConfiguration": {
                    "$ref": "#/types/ovh:Domain/NameTargetSpecDnsConfiguration:NameTargetSpecDnsConfiguration",
                    "description": "The domain DNS configuration\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dnsConfiguration"
                    ]
                }
            }
        },
        "ovh:Domain/NameTargetSpecDnsConfiguration:NameTargetSpecDnsConfiguration": {
            "properties": {
                "nameServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameTargetSpecDnsConfigurationNameServer:NameTargetSpecDnsConfigurationNameServer"
                    },
                    "description": "The name servers to update\n"
                }
            },
            "type": "object"
        },
        "ovh:Domain/NameTargetSpecDnsConfigurationNameServer:NameTargetSpecDnsConfigurationNameServer": {
            "properties": {
                "ipv4": {
                    "type": "string",
                    "description": "The IPv4 associated to the name server\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "The IPv6 associated to the name server\n"
                },
                "nameServer": {
                    "type": "string",
                    "description": "The host name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipv4",
                        "ipv6",
                        "nameServer"
                    ]
                }
            }
        },
        "ovh:Domain/ZoneOrder:ZoneOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZoneOrderDetail:ZoneOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Domain/ZoneOrderDetail:ZoneOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Domain/ZonePlan:ZonePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanConfiguration:ZonePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product. 2 configurations are required : one for `zone` and one for `template`\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Domain/ZonePlanConfiguration:ZonePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource : `zone` or `template`\n"
                },
                "value": {
                    "type": "string",
                    "description": "For `zone`, the value is the zone name `myzone.example.com`. For `template`, the value can be `basic`, `minimized` or `redirect` which is the same as `minimized` with additional entries for a redirect configuration.\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Domain/ZonePlanOption:ZonePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanOptionConfiguration:ZonePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Domain/ZonePlanOptionConfiguration:ZonePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrderDetail:PrivateDatabaseOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Hosting/PrivateDatabaseOrderDetail:PrivateDatabaseOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your privatedatabase order.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanConfiguration:PrivateDatabasePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration.\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code.\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Hosting/PrivateDatabasePlanConfiguration:PrivateDatabasePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n\nPlan order valid values can be found on OVHcloud [APIv6](https://api.ovh.com/console/#/hosting/privateDatabase/availableOrderCapacities~GET)\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOptionConfiguration:PrivateDatabasePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Service duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Hosting/PrivateDatabasePlanOptionConfiguration:PrivateDatabasePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Hosting/getPrivateDatabaseDbUser:getPrivateDatabaseDbUser": {
            "properties": {
                "grantType": {
                    "type": "string",
                    "description": "Grant of this user for this database\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User's name granted on this database\n"
                }
            },
            "type": "object",
            "required": [
                "grantType",
                "userName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Hosting/getPrivateDatabaseUserDatabase:getPrivateDatabaseUserDatabase": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database's name linked to this user\n"
                },
                "grantType": {
                    "type": "string",
                    "description": "Grant of this user for this database\n"
                }
            },
            "type": "object",
            "required": [
                "databaseName",
                "grantType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Iam/getReferenceActionsAction:getReferenceActionsAction": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Name of the action\n"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of the categories of the action\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the action\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Resource type the action is related to\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "categories",
                "description",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Ip/IpServiceOrder:IpServiceOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceOrderDetail:IpServiceOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Ip/IpServiceOrderDetail:IpServiceOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Ip/IpServicePlan:IpServicePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanConfiguration:IpServicePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Ip/IpServicePlanConfiguration:IpServicePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Ip/IpServicePlanOption:IpServicePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanOptionConfiguration:IpServicePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product. The list of available configurations can be retrieved using call [GET /order/cart/{cartId}/item/{itemId}/requiredConfiguration](https://eu.api.ovh.com/console/?section=%2Forder\u0026branch=v1#get-/order/cart/-cartId-/item/-itemId-/requiredConfiguration)\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Ip/IpServicePlanOptionConfiguration:IpServicePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Ip/IpServiceRoutedTo:IpServiceRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "service name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "serviceName"
                    ]
                }
            }
        },
        "ovh:Ip/MoveRoutedTo:MoveRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Name of the service to route the IP to. IP will be parked if this value is an empty string\n"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "ovh:Ip/getServiceRoutedTo:getServiceRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean",
                    "description": "Force use of SSL (TLS)\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "probe interval, Value between 30 and 3600 seconds, default 30\n"
                },
                "match": {
                    "type": "string",
                    "description": "What to match `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)\n"
                },
                "method": {
                    "type": "string",
                    "description": "HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Negate probe result\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern to match against `match`\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to receive traffic on.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL for HTTP probe type.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match",
                        "method",
                        "pattern",
                        "port",
                        "type",
                        "url"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction": {
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "HTTP status code for \"redirect\" and \"reject\" actions\n"
                },
                "target": {
                    "type": "string",
                    "description": "Farm ID for \"farm\" action type or URL template for \"redirect\" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target\n"
                },
                "type": {
                    "type": "string",
                    "description": "Action to trigger if all the rules of this route matches\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:IpLoadBalancing/HttpRouteRule:HttpRouteRule": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\" \"/ipLoadbalancing/{serviceName}/route/availableRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"availableRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Id of your rule\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "field",
                        "match",
                        "negate",
                        "pattern",
                        "ruleId",
                        "subField"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrderDetail:LoadBalancerOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerOrderDetail:LoadBalancerOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerOrderableZone:LoadBalancerOrderableZone": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The zone three letter code\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "The billing planCode for this zone\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "planCode"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanConfiguration:LoadBalancerPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:IpLoadBalancing/LoadBalancerPlanConfiguration:LoadBalancerPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOptionConfiguration:LoadBalancerPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:IpLoadBalancing/LoadBalancerPlanOptionConfiguration:LoadBalancerPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean",
                    "description": "Force use of SSL (TLS)\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "probe interval, Value between 30 and 3600 seconds, default 30\n"
                },
                "match": {
                    "type": "string",
                    "description": "What to match `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)\n"
                },
                "method": {
                    "type": "string",
                    "description": "HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Negate probe result\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern to match against `match`\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port for backends to receive traffic on.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL for HTTP probe type.\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match",
                        "type"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction": {
            "properties": {
                "target": {
                    "type": "string",
                    "description": "Farm ID for \"farm\" action type, empty for others.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Action to trigger if all the rules of this route matches\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:IpLoadBalancing/TcpRouteRule:TcpRouteRule": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\" \"/ipLoadbalancing/{serviceName}/route/availableRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"availableRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Id of your rule\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "field",
                        "match",
                        "negate",
                        "pattern",
                        "ruleId",
                        "subField"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/getIpLoadBalancingOrderableZone:getIpLoadBalancingOrderableZone": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The zone three letter code\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "The billing planCode for this zone\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "planCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Me/getMeCurrency:getMeCurrency": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Currency code used by this account (e.g EUR, USD, ...)\n"
                },
                "symbol": {
                    "type": "string",
                    "description": "Currency symbol used by this account (e.g €, $, ...)\n"
                }
            },
            "type": "object",
            "required": [
                "code",
                "symbol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:OVHcloud/ConnectIam:ConnectIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource in the IAM\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with `ovh:`\n"
                },
                "urn": {
                    "type": "string",
                    "description": "URN of the private database, used when writing IAM policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:OVHcloud/ConnectsOcc:ConnectsOcc": {
            "properties": {
                "bandwidth": {
                    "type": "string",
                    "description": "Service bandwidth\n"
                },
                "description": {
                    "type": "string",
                    "description": "Service description\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:OVHcloud/ConnectsOccIam:ConnectsOccIam",
                    "description": "IAM resource information\n"
                },
                "interfaceLists": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "List of interfaces linked to a service\n"
                },
                "pop": {
                    "type": "string",
                    "description": "Pop reference where the service is delivered\n"
                },
                "portQuantity": {
                    "type": "string",
                    "description": "Port quantity\n"
                },
                "product": {
                    "type": "string",
                    "description": "Product name of the service\n"
                },
                "providerName": {
                    "type": "string",
                    "description": "Service provider\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "status": {
                    "type": "string",
                    "description": "Service status\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "uuid of the Ovhcloud Connect service\n"
                },
                "vrack": {
                    "type": "string",
                    "description": "vrack linked to the service\n"
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "description",
                "iam",
                "interfaceLists",
                "pop",
                "portQuantity",
                "product",
                "providerName",
                "serviceName",
                "status",
                "uuid",
                "vrack"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:OVHcloud/ConnectsOccIam:ConnectsOccIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource in the IAM\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with `ovh:`\n"
                },
                "urn": {
                    "type": "string",
                    "description": "URN of the private database, used when writing IAM policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/OkmsIam:OkmsIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "(String) Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "(String) Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "(String) Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Okms/ServiceKeyJWKIam:ServiceKeyJWKIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Okms/ServiceKeyJWKKey:ServiceKeyJWKKey": {
            "properties": {
                "alg": {
                    "type": "string",
                    "description": "The algorithm intended to be used with the key\n"
                },
                "crv": {
                    "type": "string",
                    "description": "The cryptographic curve used with the key\n"
                },
                "d": {
                    "type": "string",
                    "description": "The RSA or EC private exponent\n",
                    "secret": true
                },
                "dp": {
                    "type": "string",
                    "description": "The RSA private key's first factor CRT exponent\n",
                    "secret": true
                },
                "dq": {
                    "type": "string",
                    "description": "The RSA private key's second factor CRT exponent\n",
                    "secret": true
                },
                "e": {
                    "type": "string",
                    "description": "The exponent value for the RSA public key\n"
                },
                "k": {
                    "type": "string",
                    "description": "The value of the symmetric (or other single-valued) key\n",
                    "secret": true
                },
                "keyOps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operation for which the key is intended to be used\n"
                },
                "kid": {
                    "type": "string",
                    "description": "key ID parameter used to match a specific key\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC\n"
                },
                "n": {
                    "type": "string",
                    "description": "The modulus value for the RSA public key\n"
                },
                "p": {
                    "type": "string",
                    "description": "The first prime factor of the RSA private key\n",
                    "secret": true
                },
                "q": {
                    "type": "string",
                    "description": "The second prime factor of the RSA private key\n",
                    "secret": true
                },
                "qi": {
                    "type": "string",
                    "description": "The CRT coefficient of the second factor of the RSA private key\n",
                    "secret": true
                },
                "use": {
                    "type": "string",
                    "description": "The intended use of the public key\n"
                },
                "x": {
                    "type": "string",
                    "description": "The x coordinate for the Elliptic Curve point\n"
                },
                "y": {
                    "type": "string",
                    "description": "The y coordinate for the Elliptic Curve point\n"
                }
            },
            "type": "object",
            "required": [
                "keyOps",
                "kty"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keyOps",
                        "kid",
                        "kty"
                    ]
                }
            }
        },
        "ovh:Okms/getOkmsResourceIam:getOkmsResourceIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "(String) Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Should be set to the ID of your KMS\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "(Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "(String) Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyIam:getOkmsServiceKeyIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the service key\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyJwkIam:getOkmsServiceKeyJwkIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the service key\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyJwkKey:getOkmsServiceKeyJwkKey": {
            "properties": {
                "alg": {
                    "type": "string",
                    "description": "The algorithm intended to be used with the key\n"
                },
                "crv": {
                    "type": "string",
                    "description": "The cryptographic curve used with the key\n"
                },
                "e": {
                    "type": "string",
                    "description": "The exponent value for the RSA public key\n"
                },
                "keyOps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operation for which the key is intended to be used\n"
                },
                "kid": {
                    "type": "string",
                    "description": "key ID parameter used to match a specific key\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC\n"
                },
                "n": {
                    "type": "string",
                    "description": "The modulus value for the RSA public key\n"
                },
                "use": {
                    "type": "string",
                    "description": "The intended use of the public key\n"
                },
                "x": {
                    "type": "string",
                    "description": "The x coordinate for the Elliptic Curve point\n"
                },
                "y": {
                    "type": "string",
                    "description": "The y coordinate for the Elliptic Curve point\n"
                }
            },
            "type": "object",
            "required": [
                "alg",
                "crv",
                "e",
                "keyOps",
                "kid",
                "kty",
                "n",
                "use",
                "x",
                "y"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyPemIam:getOkmsServiceKeyPemIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyPemKeysPem:getOkmsServiceKeyPemKeysPem": {
            "properties": {
                "pem": {
                    "type": "string",
                    "description": "The key in base64 encoded PEM format\n"
                }
            },
            "type": "object",
            "required": [
                "pem"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanPrice:getCartProductOptionsPlanPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsPlanPricePrice:getCartProductOptionsPlanPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanPricePrice:getCartProductOptionsPlanPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanSelectedPrice:getCartProductOptionsPlanSelectedPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsPlanSelectedPricePrice:getCartProductOptionsPlanSelectedPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanSelectedPricePrice:getCartProductOptionsPlanSelectedPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsResult:getCartProductOptionsResult": {
            "properties": {
                "exclusive": {
                    "type": "boolean",
                    "description": "Define if options of this family are exclusive with each other\n"
                },
                "family": {
                    "type": "string",
                    "description": "Option family\n"
                },
                "mandatory": {
                    "type": "boolean",
                    "description": "Define if an option of this family is mandatory\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Product offer identifier\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsResultPrice:getCartProductOptionsResultPrice"
                    },
                    "description": "Prices of the product offer\n"
                },
                "productName": {
                    "type": "string",
                    "description": "Name of the product\n"
                },
                "productType": {
                    "type": "string",
                    "description": "Product type\n"
                }
            },
            "type": "object",
            "required": [
                "exclusive",
                "family",
                "mandatory",
                "planCode",
                "prices",
                "productName",
                "productType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsResultPrice:getCartProductOptionsResultPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsResultPricePrice:getCartProductOptionsResultPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsResultPricePrice:getCartProductOptionsResultPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanPrice:getCartProductPlanPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductPlanPricePrice:getCartProductPlanPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanPricePrice:getCartProductPlanPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanSelectedPrice:getCartProductPlanSelectedPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductPlanSelectedPricePrice:getCartProductPlanSelectedPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanSelectedPricePrice:getCartProductPlanSelectedPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductResult:getCartProductResult": {
            "properties": {
                "planCode": {
                    "type": "string",
                    "description": "Product offer identifier\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductResultPrice:getCartProductResultPrice"
                    },
                    "description": "Prices of the product offer\n"
                },
                "productName": {
                    "type": "string",
                    "description": "Name of the product\n"
                },
                "productType": {
                    "type": "string",
                    "description": "Product type\n"
                }
            },
            "type": "object",
            "required": [
                "planCode",
                "prices",
                "productName",
                "productType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductResultPrice:getCartProductResultPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductResultPricePrice:getCartProductResultPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductResultPricePrice:getCartProductResultPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorBackupCurrentState:getCloudDirectorBackupCurrentState": {
            "properties": {
                "azName": {
                    "type": "string",
                    "description": "Availability zone of VMware Cloud Director organization backup\n"
                },
                "offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:VMware/getCloudDirectorBackupCurrentStateOffer:getCloudDirectorBackupCurrentStateOffer"
                    },
                    "description": "List of your VMware Cloud Director organization backup offers\n"
                }
            },
            "type": "object",
            "required": [
                "azName",
                "offers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorBackupCurrentStateOffer:getCloudDirectorBackupCurrentStateOffer": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Backup service offer type (BRONZE|SILVER|GOLD)\n"
                },
                "protectionPrimaryRegion": {
                    "type": "string",
                    "description": "Backup repository primary region\n"
                },
                "protectionReplicatedRegion": {
                    "type": "string",
                    "description": "Backup repository replicated region\n"
                },
                "quotaInTb": {
                    "type": "number",
                    "description": "Backup repository quota in TB\n"
                },
                "status": {
                    "type": "string",
                    "description": "Backup offer status\n"
                },
                "usedSpaceInGb": {
                    "type": "number",
                    "description": "Backup repository used space in GB\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "protectionPrimaryRegion",
                "protectionReplicatedRegion",
                "quotaInTb",
                "status",
                "usedSpaceInGb"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorBackupCurrentTask:getCloudDirectorBackupCurrentTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the current task\n"
                },
                "link": {
                    "type": "string",
                    "description": "Link to the task details\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current global status of the current task\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the current task\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "link",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorBackupIam:getCloudDirectorBackupIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorBackupTargetSpec:getCloudDirectorBackupTargetSpec": {
            "properties": {
                "offers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:VMware/getCloudDirectorBackupTargetSpecOffer:getCloudDirectorBackupTargetSpecOffer"
                    },
                    "description": "List of your VMware Cloud Director backup offers\n"
                }
            },
            "type": "object",
            "required": [
                "offers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorBackupTargetSpecOffer:getCloudDirectorBackupTargetSpecOffer": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Backup service offer type (BRONZE|SILVER|GOLD)\n"
                },
                "quotaInTb": {
                    "type": "number",
                    "description": "Backup repository quota in TB\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "quotaInTb"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorOrganizationCurrentState:getCloudDirectorOrganizationCurrentState": {
            "properties": {
                "apiUrl": {
                    "type": "string",
                    "description": "API URL to interact with your VMware Cloud Director organization at OVHcloud\n"
                },
                "billingType": {
                    "type": "string",
                    "description": "Billing type of your VMware Cloud Director project\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of your VMware Cloud Director organization on OVHcloud\n"
                },
                "fullName": {
                    "type": "string",
                    "description": "Human readable full name of your VMware Cloud Director organization\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of your VMware Cloud Director organization\n"
                },
                "region": {
                    "type": "string",
                    "description": "Datacenter where your VMware Cloud Director organization is physically located\n"
                },
                "spla": {
                    "type": "boolean",
                    "description": "SPLA licensing state\n"
                },
                "webInterfaceUrl": {
                    "type": "string",
                    "description": "URL to administrate your VMware Cloud Director organization at OVHcloud\n"
                }
            },
            "type": "object",
            "required": [
                "apiUrl",
                "billingType",
                "description",
                "fullName",
                "name",
                "region",
                "spla",
                "webInterfaceUrl"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorOrganizationCurrentTask:getCloudDirectorOrganizationCurrentTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the current task\n"
                },
                "link": {
                    "type": "string",
                    "description": "Link to the task details\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current global status of the current task\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the current task\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "link",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorOrganizationIam:getCloudDirectorOrganizationIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:VMware/getCloudDirectorOrganizationTargetSpec:getCloudDirectorOrganizationTargetSpec": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of your VMware Cloud Director organization at OVHcloud\n"
                },
                "fullName": {
                    "type": "string",
                    "description": "Human readable full name of your VMware Cloud Director organization\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "fullName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Vps/VpsIam:VpsIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Custom display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource in the IAM\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with `ovh:`\n"
                },
                "urn": {
                    "type": "string",
                    "description": "URN of the private database, used when writing IAM policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Vps/VpsModel:VpsModel": {
            "properties": {
                "availableOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "All options the VPS can have (additionalDisk┃automatedBackup┃cpanel┃ftpbackup┃plesk┃snapshot┃veeam┃windows)\n"
                },
                "datacenters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Datacenters where this model is available\n"
                },
                "disk": {
                    "type": "number",
                    "description": "Disk capacity of this VPS\n"
                },
                "maximumAdditionnalIp": {
                    "type": "number",
                    "description": "Maximum number of additional IPs\n"
                },
                "memory": {
                    "type": "number",
                    "description": "RAM of the VPS\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the VPS\n"
                },
                "offer": {
                    "type": "string",
                    "description": "Description of this VPS offer\n"
                },
                "vcore": {
                    "type": "number",
                    "description": "Number of vcores\n"
                },
                "version": {
                    "type": "string",
                    "description": "All versions that VPS can have (2013v1┃2014v1┃2015v1┃2017v1┃2017v2┃2017v3┃2018v1┃2018v2┃2019v1)\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availableOptions",
                        "datacenters",
                        "disk",
                        "maximumAdditionnalIp",
                        "memory",
                        "name",
                        "offer",
                        "vcore",
                        "version"
                    ]
                }
            }
        },
        "ovh:Vps/VpsOrder:VpsOrder": {
            "properties": {
                "date": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsOrderDetail:VpsOrderDetail"
                    }
                },
                "expirationDate": {
                    "type": "string"
                },
                "orderId": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Vps/VpsOrderDetail:VpsOrderDetail": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "detailType": {
                    "type": "string",
                    "description": "Product type of item in order\n"
                },
                "domain": {
                    "type": "string"
                },
                "orderDetailId": {
                    "type": "number"
                },
                "quantity": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "detailType",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Vps/VpsPlan:VpsPlan": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlanConfiguration:VpsPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "itemId": {
                    "type": "number",
                    "description": "Cart item to be linked\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "configurations",
                        "duration",
                        "planCode",
                        "pricingMode"
                    ]
                }
            }
        },
        "ovh:Vps/VpsPlanConfiguration:VpsPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in api.ovh.com\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Vps/VpsPlanOption:VpsPlanOption": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlanOptionConfiguration:VpsPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode",
                "quantity"
            ]
        },
        "ovh:Vps/VpsPlanOptionConfiguration:VpsPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in api.ovh.com\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Vrack/VrackOrder:VrackOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackOrderDetail:VrackOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Vrack/VrackOrderDetail:VrackOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Vrack/VrackPlan:VrackPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanConfiguration:VrackPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Vrack/VrackPlanConfiguration:VrackPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Vrack/VrackPlanOption:VrackPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanOptionConfiguration:VrackPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Vrack/VrackPlanOptionConfiguration:VrackPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/getInstallationTemplateInput:getInstallationTemplateInput": {
            "properties": {
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Information about this template.\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mandatory": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "default",
                "description",
                "enums",
                "mandatory",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateLicense:getInstallationTemplateLicense": {
            "properties": {
                "os": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getInstallationTemplateLicenseO:getInstallationTemplateLicenseO"
                    }
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getInstallationTemplateLicenseUsage:getInstallationTemplateLicenseUsage"
                    }
                }
            },
            "type": "object",
            "required": [
                "os",
                "usages"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateLicenseO:getInstallationTemplateLicenseO": {
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "names",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateLicenseUsage:getInstallationTemplateLicenseUsage": {
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "names",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateProject:getInstallationTemplateProject": {
            "properties": {
                "os": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getInstallationTemplateProjectO:getInstallationTemplateProjectO"
                    },
                    "description": "OS template project OS details\n"
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getInstallationTemplateProjectUsage:getInstallationTemplateProjectUsage"
                    }
                }
            },
            "type": "object",
            "required": [
                "os",
                "usages"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateProjectO:getInstallationTemplateProjectO": {
            "properties": {
                "governances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "OS template project item governance\n"
                },
                "name": {
                    "type": "string",
                    "description": "OS template project item name\n"
                },
                "releaseNotes": {
                    "type": "string",
                    "description": "OS template project item release notes\n"
                },
                "url": {
                    "type": "string",
                    "description": "OS template project item url\n"
                },
                "version": {
                    "type": "string",
                    "description": "OS template project item version\n"
                }
            },
            "type": "object",
            "required": [
                "governances",
                "name",
                "releaseNotes",
                "url",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateProjectUsage:getInstallationTemplateProjectUsage": {
            "properties": {
                "governances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "OS template project item governance\n"
                },
                "name": {
                    "type": "string",
                    "description": "OS template project item name\n"
                },
                "releaseNotes": {
                    "type": "string",
                    "description": "OS template project item release notes\n"
                },
                "url": {
                    "type": "string",
                    "description": "OS template project item url\n"
                },
                "version": {
                    "type": "string",
                    "description": "OS template project item version\n"
                }
            },
            "type": "object",
            "required": [
                "governances",
                "name",
                "releaseNotes",
                "url",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getServerVni:getServerVni": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "VirtualNetworkInterface activation state\n"
                },
                "mode": {
                    "type": "string",
                    "description": "VirtualNetworkInterface mode (public,vrack,vrack_aggregation)\n"
                },
                "name": {
                    "type": "string",
                    "description": "User defined VirtualNetworkInterface name\n"
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "NetworkInterfaceControllers bound to this VirtualNetworkInterface\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "Server bound to this VirtualNetworkInterface\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "VirtualNetworkInterface unique id\n"
                },
                "vrack": {
                    "type": "string",
                    "description": "vRack name\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "mode",
                "name",
                "nics",
                "serverName",
                "uuid",
                "vrack"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the ovh package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessToken": {
                "type": "string",
                "description": "The OVH API Access Token\n"
            },
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key\n"
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret\n",
                "secret": true
            },
            "clientId": {
                "type": "string",
                "description": "OAuth 2.0 application's ID\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "OAuth 2.0 application's secret\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer Key\n"
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\")\n"
            }
        },
        "inputProperties": {
            "accessToken": {
                "type": "string",
                "description": "The OVH API Access Token\n"
            },
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_KEY"
                    ]
                }
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_SECRET"
                    ]
                },
                "secret": true
            },
            "clientId": {
                "type": "string",
                "description": "OAuth 2.0 application's ID\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "OAuth 2.0 application's secret\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer Key\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_CONSUMER_KEY"
                    ]
                }
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\")\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_ENDPOINT"
                    ]
                }
            }
        }
    },
    "resources": {
        "ovh:CloudProject/alerting:Alerting": {
            "description": "Creates an alert on a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myAlert = new ovh.cloudproject.Alerting(\"myAlert\", {\n    delay: 3600,\n    email: \"aaa.bbb@domain.com\",\n    monthlyThreshold: 1000,\n    serviceName: \"XXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_alert = ovh.cloud_project.Alerting(\"myAlert\",\n    delay=3600,\n    email=\"aaa.bbb@domain.com\",\n    monthly_threshold=1000,\n    service_name=\"XXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAlert = new Ovh.CloudProject.Alerting(\"myAlert\", new()\n    {\n        Delay = 3600,\n        Email = \"aaa.bbb@domain.com\",\n        MonthlyThreshold = 1000,\n        ServiceName = \"XXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewAlerting(ctx, \"myAlert\", \u0026cloudproject.AlertingArgs{\n\t\t\tDelay:            pulumi.Float64(3600),\n\t\t\tEmail:            pulumi.String(\"aaa.bbb@domain.com\"),\n\t\t\tMonthlyThreshold: pulumi.Float64(1000),\n\t\t\tServiceName:      pulumi.String(\"XXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Alerting;\nimport com.pulumi.ovh.CloudProject.AlertingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myAlert = new Alerting(\"myAlert\", AlertingArgs.builder()\n            .delay(3600)\n            .email(\"aaa.bbb@domain.com\")\n            .monthlyThreshold(1000)\n            .serviceName(\"XXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myAlert:\n    type: ovh:CloudProject:Alerting\n    properties:\n      delay: 3600\n      email: aaa.bbb@domain.com\n      monthlyThreshold: 1000\n      serviceName: XXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "Alerting creation date\n"
                },
                "delay": {
                    "type": "number",
                    "description": "Delay between two alerts in seconds\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email to contact\n"
                },
                "formattedMonthlyThreshold": {
                    "$ref": "#/types/ovh:CloudProject/AlertingFormattedMonthlyThreshold:AlertingFormattedMonthlyThreshold",
                    "description": "Formatted monthly threshold for this alerting\n"
                },
                "monthlyThreshold": {
                    "type": "number",
                    "description": "Monthly threshold for this alerting in currency\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "creationDate",
                "delay",
                "email",
                "formattedMonthlyThreshold",
                "monthlyThreshold",
                "serviceName"
            ],
            "inputProperties": {
                "delay": {
                    "type": "number",
                    "description": "Delay between two alerts in seconds\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email to contact\n"
                },
                "monthlyThreshold": {
                    "type": "number",
                    "description": "Monthly threshold for this alerting in currency\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "requiredInputs": [
                "delay",
                "email",
                "monthlyThreshold",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Alerting resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Alerting creation date\n"
                    },
                    "delay": {
                        "type": "number",
                        "description": "Delay between two alerts in seconds\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email to contact\n"
                    },
                    "formattedMonthlyThreshold": {
                        "$ref": "#/types/ovh:CloudProject/AlertingFormattedMonthlyThreshold:AlertingFormattedMonthlyThreshold",
                        "description": "Formatted monthly threshold for this alerting\n"
                    },
                    "monthlyThreshold": {
                        "type": "number",
                        "description": "Monthly threshold for this alerting in currency\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistry:ContainerRegistry": {
            "description": "Creates a container registry associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst regcap = ovh.CloudProject.getCapabilitiesContainerFilter({\n    serviceName: \"XXXXXX\",\n    planName: \"SMALL\",\n    region: \"GRA\",\n});\nconst myRegistry = new ovh.cloudproject.ContainerRegistry(\"myRegistry\", {\n    serviceName: regcap.then(regcap =\u003e regcap.serviceName),\n    planId: regcap.then(regcap =\u003e regcap.id),\n    region: regcap.then(regcap =\u003e regcap.region),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregcap = ovh.CloudProject.get_capabilities_container_filter(service_name=\"XXXXXX\",\n    plan_name=\"SMALL\",\n    region=\"GRA\")\nmy_registry = ovh.cloud_project.ContainerRegistry(\"myRegistry\",\n    service_name=regcap.service_name,\n    plan_id=regcap.id,\n    region=regcap.region)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var regcap = Ovh.CloudProject.GetCapabilitiesContainerFilter.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        PlanName = \"SMALL\",\n        Region = \"GRA\",\n    });\n\n    var myRegistry = new Ovh.CloudProject.ContainerRegistry(\"myRegistry\", new()\n    {\n        ServiceName = regcap.Apply(getCapabilitiesContainerFilterResult =\u003e getCapabilitiesContainerFilterResult.ServiceName),\n        PlanId = regcap.Apply(getCapabilitiesContainerFilterResult =\u003e getCapabilitiesContainerFilterResult.Id),\n        Region = regcap.Apply(getCapabilitiesContainerFilterResult =\u003e getCapabilitiesContainerFilterResult.Region),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tregcap, err := cloudproject.GetCapabilitiesContainerFilter(ctx, \u0026cloudproject.GetCapabilitiesContainerFilterArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tPlanName:    \"SMALL\",\n\t\t\tRegion:      \"GRA\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewContainerRegistry(ctx, \"myRegistry\", \u0026cloudproject.ContainerRegistryArgs{\n\t\t\tServiceName: pulumi.String(regcap.ServiceName),\n\t\t\tPlanId:      pulumi.String(regcap.Id),\n\t\t\tRegion:      pulumi.String(regcap.Region),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetCapabilitiesContainerFilterArgs;\nimport com.pulumi.ovh.CloudProject.ContainerRegistry;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var regcap = CloudProjectFunctions.getCapabilitiesContainerFilter(GetCapabilitiesContainerFilterArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .planName(\"SMALL\")\n            .region(\"GRA\")\n            .build());\n\n        var myRegistry = new ContainerRegistry(\"myRegistry\", ContainerRegistryArgs.builder()\n            .serviceName(regcap.applyValue(getCapabilitiesContainerFilterResult -\u003e getCapabilitiesContainerFilterResult.serviceName()))\n            .planId(regcap.applyValue(getCapabilitiesContainerFilterResult -\u003e getCapabilitiesContainerFilterResult.id()))\n            .region(regcap.applyValue(getCapabilitiesContainerFilterResult -\u003e getCapabilitiesContainerFilterResult.region()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myRegistry:\n    type: ovh:CloudProject:ContainerRegistry\n    properties:\n      serviceName: ${regcap.serviceName}\n      planId: ${regcap.id}\n      region: ${regcap.region}\nvariables:\n  regcap:\n    fn::invoke:\n      function: ovh:CloudProject:getCapabilitiesContainerFilter\n      arguments:\n        serviceName: XXXXXX\n        planName: SMALL\n        region: GRA\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\u003e **WARNING** You can update and migrate to a higher plan at any time but not the contrary.\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n"
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "planId": {
                    "type": "string",
                    "description": "Plan ID of the registry\n"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlan:ContainerRegistryPlan"
                    },
                    "description": "Plan of the registry\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID of your registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Current size of the registry (bytes)\n"
                },
                "status": {
                    "type": "string",
                    "description": "Registry status\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n"
                },
                "url": {
                    "type": "string",
                    "description": "Access url of the registry\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of your registry\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "plans",
                "planId",
                "projectId",
                "region",
                "serviceName",
                "size",
                "status",
                "updatedAt",
                "url",
                "version"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "planId": {
                    "type": "string",
                    "description": "Plan ID of the registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistry resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Plan creation date\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Registry name\n"
                    },
                    "planId": {
                        "type": "string",
                        "description": "Plan ID of the registry\n"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlan:ContainerRegistryPlan"
                        },
                        "description": "Plan of the registry\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID of your registry\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the registry\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Current size of the registry (bytes)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Registry status\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Registry last update date\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Access url of the registry\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of your registry\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistryIPRestrictionsManagement:ContainerRegistryIPRestrictionsManagement": {
            "description": "Apply IP restrictions container registry associated with a public cloud project on Harbor UI and API.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registry = ovh.CloudProject.getContainerRegistry({\n    serviceName: \"XXXXXX\",\n    registryId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nconst myMgtIprestrictions = new ovh.cloudproject.ContainerRegistryIPRestrictionsManagement(\"myMgtIprestrictions\", {\n    serviceName: ovh_cloud_project_containerregistry.registry.service_name,\n    registryId: ovh_cloud_project_containerregistry.registry.id,\n    ipRestrictions: [{\n        ip_block: \"xxx.xxx.xxx.xxx/xx\",\n        description: \"xxxxxxx\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistry = ovh.CloudProject.get_container_registry(service_name=\"XXXXXX\",\n    registry_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\nmy_mgt_iprestrictions = ovh.cloud_project.ContainerRegistryIPRestrictionsManagement(\"myMgtIprestrictions\",\n    service_name=ovh_cloud_project_containerregistry[\"registry\"][\"service_name\"],\n    registry_id=ovh_cloud_project_containerregistry[\"registry\"][\"id\"],\n    ip_restrictions=[{\n        \"ip_block\": \"xxx.xxx.xxx.xxx/xx\",\n        \"description\": \"xxxxxxx\",\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registry = Ovh.CloudProject.GetContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    var myMgtIprestrictions = new Ovh.CloudProject.ContainerRegistryIPRestrictionsManagement(\"myMgtIprestrictions\", new()\n    {\n        ServiceName = ovh_cloud_project_containerregistry.Registry.Service_name,\n        RegistryId = ovh_cloud_project_containerregistry.Registry.Id,\n        IpRestrictions = new[]\n        {\n            \n            {\n                { \"ip_block\", \"xxx.xxx.xxx.xxx/xx\" },\n                { \"description\", \"xxxxxxx\" },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetContainerRegistry(ctx, \u0026cloudproject.GetContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegistryId:  \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewContainerRegistryIPRestrictionsManagement(ctx, \"myMgtIprestrictions\", \u0026cloudproject.ContainerRegistryIPRestrictionsManagementArgs{\n\t\t\tServiceName: pulumi.Any(ovh_cloud_project_containerregistry.Registry.Service_name),\n\t\t\tRegistryId:  pulumi.Any(ovh_cloud_project_containerregistry.Registry.Id),\n\t\t\tIpRestrictions: pulumi.StringMapArray{\n\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\"ip_block\":    pulumi.String(\"xxx.xxx.xxx.xxx/xx\"),\n\t\t\t\t\t\"description\": pulumi.String(\"xxxxxxx\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryArgs;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryIPRestrictionsManagement;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryIPRestrictionsManagementArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registry = CloudProjectFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        var myMgtIprestrictions = new ContainerRegistryIPRestrictionsManagement(\"myMgtIprestrictions\", ContainerRegistryIPRestrictionsManagementArgs.builder()\n            .serviceName(ovh_cloud_project_containerregistry.registry().service_name())\n            .registryId(ovh_cloud_project_containerregistry.registry().id())\n            .ipRestrictions(Map.ofEntries(\n                Map.entry(\"ip_block\", \"xxx.xxx.xxx.xxx/xx\"),\n                Map.entry(\"description\", \"xxxxxxx\")\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myMgtIprestrictions:\n    type: ovh:CloudProject:ContainerRegistryIPRestrictionsManagement\n    properties:\n      serviceName: ${ovh_cloud_project_containerregistry.registry.service_name}\n      registryId: ${ovh_cloud_project_containerregistry.registry.id}\n      ipRestrictions:\n        - ip_block: xxx.xxx.xxx.xxx/xx\n          description: xxxxxxx\nvariables:\n  registry:\n    fn::invoke:\n      function: ovh:CloudProject:getContainerRegistry\n      arguments:\n        serviceName: XXXXXX\n        registryId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "IP restrictions applied on Harbor UI and API.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The id of the Managed Private Registry.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "ipRestrictions",
                "registryId",
                "serviceName"
            ],
            "inputProperties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "IP restrictions applied on Harbor UI and API.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The id of the Managed Private Registry.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ipRestrictions",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryIPRestrictionsManagement resources.\n",
                "properties": {
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "description": "IP restrictions applied on Harbor UI and API.\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "The id of the Managed Private Registry.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistryIPRestrictionsRegistry:ContainerRegistryIPRestrictionsRegistry": {
            "description": "Apply IP restrictions container registry associated with a public cloud project on artifact manager component.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registry = ovh.CloudProject.getContainerRegistry({\n    serviceName: \"XXXXXX\",\n    registryId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nconst myRegistryIprestrictions = new ovh.cloudproject.ContainerRegistryIPRestrictionsRegistry(\"myRegistryIprestrictions\", {\n    serviceName: ovh_cloud_project_containerregistry.registry.service_name,\n    registryId: ovh_cloud_project_containerregistry.registry.id,\n    ipRestrictions: [{\n        ip_block: \"xxx.xxx.xxx.xxx/xx\",\n        description: \"xxxxxxx\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistry = ovh.CloudProject.get_container_registry(service_name=\"XXXXXX\",\n    registry_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\nmy_registry_iprestrictions = ovh.cloud_project.ContainerRegistryIPRestrictionsRegistry(\"myRegistryIprestrictions\",\n    service_name=ovh_cloud_project_containerregistry[\"registry\"][\"service_name\"],\n    registry_id=ovh_cloud_project_containerregistry[\"registry\"][\"id\"],\n    ip_restrictions=[{\n        \"ip_block\": \"xxx.xxx.xxx.xxx/xx\",\n        \"description\": \"xxxxxxx\",\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registry = Ovh.CloudProject.GetContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    var myRegistryIprestrictions = new Ovh.CloudProject.ContainerRegistryIPRestrictionsRegistry(\"myRegistryIprestrictions\", new()\n    {\n        ServiceName = ovh_cloud_project_containerregistry.Registry.Service_name,\n        RegistryId = ovh_cloud_project_containerregistry.Registry.Id,\n        IpRestrictions = new[]\n        {\n            \n            {\n                { \"ip_block\", \"xxx.xxx.xxx.xxx/xx\" },\n                { \"description\", \"xxxxxxx\" },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetContainerRegistry(ctx, \u0026cloudproject.GetContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegistryId:  \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewContainerRegistryIPRestrictionsRegistry(ctx, \"myRegistryIprestrictions\", \u0026cloudproject.ContainerRegistryIPRestrictionsRegistryArgs{\n\t\t\tServiceName: pulumi.Any(ovh_cloud_project_containerregistry.Registry.Service_name),\n\t\t\tRegistryId:  pulumi.Any(ovh_cloud_project_containerregistry.Registry.Id),\n\t\t\tIpRestrictions: pulumi.StringMapArray{\n\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\"ip_block\":    pulumi.String(\"xxx.xxx.xxx.xxx/xx\"),\n\t\t\t\t\t\"description\": pulumi.String(\"xxxxxxx\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryArgs;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryIPRestrictionsRegistry;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryIPRestrictionsRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registry = CloudProjectFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        var myRegistryIprestrictions = new ContainerRegistryIPRestrictionsRegistry(\"myRegistryIprestrictions\", ContainerRegistryIPRestrictionsRegistryArgs.builder()\n            .serviceName(ovh_cloud_project_containerregistry.registry().service_name())\n            .registryId(ovh_cloud_project_containerregistry.registry().id())\n            .ipRestrictions(Map.ofEntries(\n                Map.entry(\"ip_block\", \"xxx.xxx.xxx.xxx/xx\"),\n                Map.entry(\"description\", \"xxxxxxx\")\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myRegistryIprestrictions:\n    type: ovh:CloudProject:ContainerRegistryIPRestrictionsRegistry\n    properties:\n      serviceName: ${ovh_cloud_project_containerregistry.registry.service_name}\n      registryId: ${ovh_cloud_project_containerregistry.registry.id}\n      ipRestrictions:\n        - ip_block: xxx.xxx.xxx.xxx/xx\n          description: xxxxxxx\nvariables:\n  registry:\n    fn::invoke:\n      function: ovh:CloudProject:getContainerRegistry\n      arguments:\n        serviceName: XXXXXX\n        registryId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "IP restrictions applied on artifact manager component.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The id of the Managed Private Registry.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "ipRestrictions",
                "registryId",
                "serviceName"
            ],
            "inputProperties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "IP restrictions applied on artifact manager component.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The id of the Managed Private Registry.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ipRestrictions",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryIPRestrictionsRegistry resources.\n",
                "properties": {
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "description": "IP restrictions applied on artifact manager component.\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "The id of the Managed Private Registry.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistryOIDC:ContainerRegistryOIDC": {
            "description": "Creates an OIDC configuration in an OVHcloud Managed Private Registry.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myOidc = new ovh.cloudproject.ContainerRegistryOIDC(\"myOidc\", {\n    serviceName: \"XXXXXX\",\n    registryId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    oidcName: \"my-oidc-provider\",\n    oidcEndpoint: \"https://xxxx.yyy.com\",\n    oidcClientId: \"xxx\",\n    oidcClientSecret: \"xxx\",\n    oidcScope: \"openid,profile,email,offline_access\",\n    oidcGroupsClaim: \"groups\",\n    oidcAdminGroup: \"harbor-admin\",\n    oidcVerifyCert: true,\n    oidcAutoOnboard: true,\n    oidcUserClaim: \"preferred_username\",\n    deleteUsers: false,\n});\nexport const oidcClientSecret = myOidc.oidcClientSecret;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_oidc = ovh.cloud_project.ContainerRegistryOIDC(\"myOidc\",\n    service_name=\"XXXXXX\",\n    registry_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    oidc_name=\"my-oidc-provider\",\n    oidc_endpoint=\"https://xxxx.yyy.com\",\n    oidc_client_id=\"xxx\",\n    oidc_client_secret=\"xxx\",\n    oidc_scope=\"openid,profile,email,offline_access\",\n    oidc_groups_claim=\"groups\",\n    oidc_admin_group=\"harbor-admin\",\n    oidc_verify_cert=True,\n    oidc_auto_onboard=True,\n    oidc_user_claim=\"preferred_username\",\n    delete_users=False)\npulumi.export(\"oidcClientSecret\", my_oidc.oidc_client_secret)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myOidc = new Ovh.CloudProject.ContainerRegistryOIDC(\"myOidc\", new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n        OidcName = \"my-oidc-provider\",\n        OidcEndpoint = \"https://xxxx.yyy.com\",\n        OidcClientId = \"xxx\",\n        OidcClientSecret = \"xxx\",\n        OidcScope = \"openid,profile,email,offline_access\",\n        OidcGroupsClaim = \"groups\",\n        OidcAdminGroup = \"harbor-admin\",\n        OidcVerifyCert = true,\n        OidcAutoOnboard = true,\n        OidcUserClaim = \"preferred_username\",\n        DeleteUsers = false,\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oidcClientSecret\"] = myOidc.OidcClientSecret,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyOidc, err := cloudproject.NewContainerRegistryOIDC(ctx, \"myOidc\", \u0026cloudproject.ContainerRegistryOIDCArgs{\n\t\t\tServiceName:      pulumi.String(\"XXXXXX\"),\n\t\t\tRegistryId:       pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"),\n\t\t\tOidcName:         pulumi.String(\"my-oidc-provider\"),\n\t\t\tOidcEndpoint:     pulumi.String(\"https://xxxx.yyy.com\"),\n\t\t\tOidcClientId:     pulumi.String(\"xxx\"),\n\t\t\tOidcClientSecret: pulumi.String(\"xxx\"),\n\t\t\tOidcScope:        pulumi.String(\"openid,profile,email,offline_access\"),\n\t\t\tOidcGroupsClaim:  pulumi.String(\"groups\"),\n\t\t\tOidcAdminGroup:   pulumi.String(\"harbor-admin\"),\n\t\t\tOidcVerifyCert:   pulumi.Bool(true),\n\t\t\tOidcAutoOnboard:  pulumi.Bool(true),\n\t\t\tOidcUserClaim:    pulumi.String(\"preferred_username\"),\n\t\t\tDeleteUsers:      pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"oidcClientSecret\", myOidc.OidcClientSecret)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryOIDC;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryOIDCArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myOidc = new ContainerRegistryOIDC(\"myOidc\", ContainerRegistryOIDCArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .oidcName(\"my-oidc-provider\")\n            .oidcEndpoint(\"https://xxxx.yyy.com\")\n            .oidcClientId(\"xxx\")\n            .oidcClientSecret(\"xxx\")\n            .oidcScope(\"openid,profile,email,offline_access\")\n            .oidcGroupsClaim(\"groups\")\n            .oidcAdminGroup(\"harbor-admin\")\n            .oidcVerifyCert(true)\n            .oidcAutoOnboard(true)\n            .oidcUserClaim(\"preferred_username\")\n            .deleteUsers(false)\n            .build());\n\n        ctx.export(\"oidcClientSecret\", myOidc.oidcClientSecret());\n    }\n}\n```\n```yaml\nresources:\n  myOidc:\n    type: ovh:CloudProject:ContainerRegistryOIDC\n    properties:\n      serviceName: XXXXXX\n      registryId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n      #required field\n      oidcName: my-oidc-provider\n      oidcEndpoint: https://xxxx.yyy.com\n      oidcClientId: xxx\n      oidcClientSecret: xxx\n      oidcScope: openid,profile,email,offline_access\n      #optional field\n      oidcGroupsClaim: groups\n      oidcAdminGroup: harbor-admin\n      oidcVerifyCert: true\n      oidcAutoOnboard: true\n      oidcUserClaim: preferred_username\n      deleteUsers: false\noutputs:\n  oidcClientSecret: ${myOidc.oidcClientSecret}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed Private Registry OIDC can be imported using the tenant `service_name` and registry id `registry_id` separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/containerRegistryOIDC:ContainerRegistryOIDC my-oidc service_name/registry_id\n```\n\n",
            "properties": {
                "deleteUsers": {
                    "type": "boolean",
                    "description": "Delete existing users from Harbor. OIDC can't be enabled if there is at least one user already created. This parameter is only used at OIDC configuration creation. **Changing this value recreates the resource.**\n"
                },
                "oidcAdminGroup": {
                    "type": "string",
                    "description": "Specify an OIDC admin group name. All OIDC users in this group will have harbor admin privilege. Keep it blank if you do not want to.\n"
                },
                "oidcAutoOnboard": {
                    "type": "boolean",
                    "description": "Skip the onboarding screen, so user cannot change its username. Username is provided from ID Token.\n"
                },
                "oidcClientId": {
                    "type": "string",
                    "description": "The client ID with which Harbor is registered as client application with the OIDC provider.\n"
                },
                "oidcClientSecret": {
                    "type": "string",
                    "description": "The secret for the Harbor client application.\n",
                    "secret": true
                },
                "oidcEndpoint": {
                    "type": "string",
                    "description": "The URL of an OIDC-compliant server.\n"
                },
                "oidcGroupsClaim": {
                    "type": "string",
                    "description": "The name of Claim in the ID token whose value is the list of group names.\n"
                },
                "oidcName": {
                    "type": "string",
                    "description": "The name of the OIDC provider.\n"
                },
                "oidcScope": {
                    "type": "string",
                    "description": "The scope sent to OIDC server during authentication. It's a comma-separated string that must contain 'openid' and usually also contains 'profile' and 'email'. To obtain refresh tokens it should also contain 'offline_access'.\n"
                },
                "oidcUserClaim": {
                    "type": "string",
                    "description": "The name of the claim in the ID Token where the username is retrieved from. If not specified, it will default to 'name' (only useful when automatic Onboarding is enabled).\n"
                },
                "oidcVerifyCert": {
                    "type": "boolean",
                    "description": "Set it to `false` if your OIDC server is hosted via self-signed certificate.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The ID of the Managed Private Registry. **Changing this value recreates the resource.**\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n"
                }
            },
            "required": [
                "oidcClientId",
                "oidcClientSecret",
                "oidcEndpoint",
                "oidcName",
                "oidcScope",
                "registryId",
                "serviceName"
            ],
            "inputProperties": {
                "deleteUsers": {
                    "type": "boolean",
                    "description": "Delete existing users from Harbor. OIDC can't be enabled if there is at least one user already created. This parameter is only used at OIDC configuration creation. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "oidcAdminGroup": {
                    "type": "string",
                    "description": "Specify an OIDC admin group name. All OIDC users in this group will have harbor admin privilege. Keep it blank if you do not want to.\n"
                },
                "oidcAutoOnboard": {
                    "type": "boolean",
                    "description": "Skip the onboarding screen, so user cannot change its username. Username is provided from ID Token.\n"
                },
                "oidcClientId": {
                    "type": "string",
                    "description": "The client ID with which Harbor is registered as client application with the OIDC provider.\n"
                },
                "oidcClientSecret": {
                    "type": "string",
                    "description": "The secret for the Harbor client application.\n",
                    "secret": true
                },
                "oidcEndpoint": {
                    "type": "string",
                    "description": "The URL of an OIDC-compliant server.\n"
                },
                "oidcGroupsClaim": {
                    "type": "string",
                    "description": "The name of Claim in the ID token whose value is the list of group names.\n"
                },
                "oidcName": {
                    "type": "string",
                    "description": "The name of the OIDC provider.\n"
                },
                "oidcScope": {
                    "type": "string",
                    "description": "The scope sent to OIDC server during authentication. It's a comma-separated string that must contain 'openid' and usually also contains 'profile' and 'email'. To obtain refresh tokens it should also contain 'offline_access'.\n"
                },
                "oidcUserClaim": {
                    "type": "string",
                    "description": "The name of the claim in the ID Token where the username is retrieved from. If not specified, it will default to 'name' (only useful when automatic Onboarding is enabled).\n"
                },
                "oidcVerifyCert": {
                    "type": "boolean",
                    "description": "Set it to `false` if your OIDC server is hosted via self-signed certificate.\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "The ID of the Managed Private Registry. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "oidcClientId",
                "oidcClientSecret",
                "oidcEndpoint",
                "oidcName",
                "oidcScope",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryOIDC resources.\n",
                "properties": {
                    "deleteUsers": {
                        "type": "boolean",
                        "description": "Delete existing users from Harbor. OIDC can't be enabled if there is at least one user already created. This parameter is only used at OIDC configuration creation. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "oidcAdminGroup": {
                        "type": "string",
                        "description": "Specify an OIDC admin group name. All OIDC users in this group will have harbor admin privilege. Keep it blank if you do not want to.\n"
                    },
                    "oidcAutoOnboard": {
                        "type": "boolean",
                        "description": "Skip the onboarding screen, so user cannot change its username. Username is provided from ID Token.\n"
                    },
                    "oidcClientId": {
                        "type": "string",
                        "description": "The client ID with which Harbor is registered as client application with the OIDC provider.\n"
                    },
                    "oidcClientSecret": {
                        "type": "string",
                        "description": "The secret for the Harbor client application.\n",
                        "secret": true
                    },
                    "oidcEndpoint": {
                        "type": "string",
                        "description": "The URL of an OIDC-compliant server.\n"
                    },
                    "oidcGroupsClaim": {
                        "type": "string",
                        "description": "The name of Claim in the ID token whose value is the list of group names.\n"
                    },
                    "oidcName": {
                        "type": "string",
                        "description": "The name of the OIDC provider.\n"
                    },
                    "oidcScope": {
                        "type": "string",
                        "description": "The scope sent to OIDC server during authentication. It's a comma-separated string that must contain 'openid' and usually also contains 'profile' and 'email'. To obtain refresh tokens it should also contain 'offline_access'.\n"
                    },
                    "oidcUserClaim": {
                        "type": "string",
                        "description": "The name of the claim in the ID Token where the username is retrieved from. If not specified, it will default to 'name' (only useful when automatic Onboarding is enabled).\n"
                    },
                    "oidcVerifyCert": {
                        "type": "boolean",
                        "description": "Set it to `false` if your OIDC server is hosted via self-signed certificate.\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "The ID of the Managed Private Registry. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistryUser:ContainerRegistryUser": {
            "description": "Creates a user for a container registry associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registry = ovh.CloudProject.getContainerRegistry({\n    serviceName: \"XXXXXX\",\n    registryId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nconst user = new ovh.cloudproject.ContainerRegistryUser(\"user\", {\n    serviceName: ovh_cloud_project_containerregistry.registry.service_name,\n    registryId: ovh_cloud_project_containerregistry.registry.id,\n    email: \"foo@bar.com\",\n    login: \"foobar\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistry = ovh.CloudProject.get_container_registry(service_name=\"XXXXXX\",\n    registry_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\nuser = ovh.cloud_project.ContainerRegistryUser(\"user\",\n    service_name=ovh_cloud_project_containerregistry[\"registry\"][\"service_name\"],\n    registry_id=ovh_cloud_project_containerregistry[\"registry\"][\"id\"],\n    email=\"foo@bar.com\",\n    login=\"foobar\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registry = Ovh.CloudProject.GetContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    var user = new Ovh.CloudProject.ContainerRegistryUser(\"user\", new()\n    {\n        ServiceName = ovh_cloud_project_containerregistry.Registry.Service_name,\n        RegistryId = ovh_cloud_project_containerregistry.Registry.Id,\n        Email = \"foo@bar.com\",\n        Login = \"foobar\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetContainerRegistry(ctx, \u0026cloudproject.GetContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegistryId:  \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewContainerRegistryUser(ctx, \"user\", \u0026cloudproject.ContainerRegistryUserArgs{\n\t\t\tServiceName: pulumi.Any(ovh_cloud_project_containerregistry.Registry.Service_name),\n\t\t\tRegistryId:  pulumi.Any(ovh_cloud_project_containerregistry.Registry.Id),\n\t\t\tEmail:       pulumi.String(\"foo@bar.com\"),\n\t\t\tLogin:       pulumi.String(\"foobar\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryArgs;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryUser;\nimport com.pulumi.ovh.CloudProject.ContainerRegistryUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registry = CloudProjectFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        var user = new ContainerRegistryUser(\"user\", ContainerRegistryUserArgs.builder()\n            .serviceName(ovh_cloud_project_containerregistry.registry().service_name())\n            .registryId(ovh_cloud_project_containerregistry.registry().id())\n            .email(\"foo@bar.com\")\n            .login(\"foobar\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: ovh:CloudProject:ContainerRegistryUser\n    properties:\n      serviceName: ${ovh_cloud_project_containerregistry.registry.service_name}\n      registryId: ${ovh_cloud_project_containerregistry.registry.id}\n      email: foo@bar.com\n      login: foobar\nvariables:\n  registry:\n    fn::invoke:\n      function: ovh:CloudProject:getContainerRegistry\n      arguments:\n        serviceName: XXXXXX\n        registryId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User email\n"
                },
                "login": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) User password\n",
                    "secret": true
                },
                "registryId": {
                    "type": "string",
                    "description": "Registry ID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "user": {
                    "type": "string",
                    "description": "User name\n"
                }
            },
            "required": [
                "email",
                "login",
                "password",
                "registryId",
                "serviceName",
                "user"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "User email\n",
                    "willReplaceOnChanges": true
                },
                "login": {
                    "type": "string",
                    "description": "Registry name\n",
                    "willReplaceOnChanges": true
                },
                "registryId": {
                    "type": "string",
                    "description": "Registry ID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "email",
                "login",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryUser resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User email\n",
                        "willReplaceOnChanges": true
                    },
                    "login": {
                        "type": "string",
                        "description": "Registry name\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) User password\n",
                        "secret": true
                    },
                    "registryId": {
                        "type": "string",
                        "description": "Registry ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "user": {
                        "type": "string",
                        "description": "User name\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/database:Database": {
            "description": "## Example Usage\n\nMinimum settings for each engine (region choice is up to the user):\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst cassandradb = new ovh.cloudproject.Database(\"cassandradb\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description: \"my-first-cassandra\",\n    engine: \"cassandra\",\n    version: \"4.0\",\n    plan: \"essential\",\n    nodes: [\n        {\n            region: \"BHS\",\n        },\n        {\n            region: \"BHS\",\n        },\n        {\n            region: \"BHS\",\n        },\n    ],\n    flavor: \"db1-4\",\n});\nconst kafkadb = new ovh.cloudproject.Database(\"kafkadb\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description: \"my-first-kafka\",\n    engine: \"kafka\",\n    version: \"3.8\",\n    flavor: \"db1-4\",\n    plan: \"business\",\n    kafkaRestApi: true,\n    kafkaSchemaRegistry: true,\n    nodes: [\n        {\n            region: \"DE\",\n        },\n        {\n            region: \"DE\",\n        },\n        {\n            region: \"DE\",\n        },\n    ],\n});\nconst m3db = new ovh.cloudproject.Database(\"m3db\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description: \"my-first-m3db\",\n    engine: \"m3db\",\n    version: \"1.2\",\n    plan: \"essential\",\n    nodes: [{\n        region: \"BHS\",\n    }],\n    flavor: \"db1-7\",\n});\nconst mongodb = new ovh.cloudproject.Database(\"mongodb\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description: \"my-first-mongodb\",\n    engine: \"mongodb\",\n    version: \"5.0\",\n    plan: \"discovery\",\n    nodes: [{\n        region: \"GRA\",\n    }],\n    flavor: \"db1-2\",\n});\nconst mysqldb = new ovh.cloudproject.Database(\"mysqldb\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description: \"my-first-mysql\",\n    engine: \"mysql\",\n    version: \"8\",\n    plan: \"essential\",\n    nodes: [{\n        region: \"SBG\",\n    }],\n    flavor: \"db1-4\",\n    advancedConfiguration: {\n        \"mysql.sql_mode\": \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES\",\n        \"mysql.sql_require_primary_key\": \"true\",\n    },\n});\nconst opensearchdb = new ovh.cloudproject.Database(\"opensearchdb\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description: \"my-first-opensearch\",\n    engine: \"opensearch\",\n    version: \"1\",\n    plan: \"essential\",\n    opensearchAclsEnabled: true,\n    nodes: [{\n        region: \"UK\",\n    }],\n    flavor: \"db1-4\",\n});\nconst pgsqldb = new ovh.cloudproject.Database(\"pgsqldb\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description: \"my-first-postgresql\",\n    engine: \"postgresql\",\n    version: \"14\",\n    plan: \"essential\",\n    nodes: [{\n        region: \"WAW\",\n    }],\n    flavor: \"db1-4\",\n    ipRestrictions: [\n        {\n            description: \"ip 1\",\n            ip: \"178.97.6.0/24\",\n        },\n        {\n            description: \"ip 2\",\n            ip: \"178.97.7.0/24\",\n        },\n    ],\n});\nconst redisdb = new ovh.cloudproject.Database(\"redisdb\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description: \"my-first-redis\",\n    engine: \"redis\",\n    version: \"6.2\",\n    plan: \"essential\",\n    nodes: [{\n        region: \"BHS\",\n    }],\n    flavor: \"db1-4\",\n});\nconst grafana = new ovh.cloudproject.Database(\"grafana\", {\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description: \"my-first-grafana\",\n    engine: \"grafana\",\n    version: \"9.1\",\n    plan: \"essential\",\n    nodes: [{\n        region: \"GRA\",\n    }],\n    flavor: \"db1-4\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncassandradb = ovh.cloud_project.Database(\"cassandradb\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description=\"my-first-cassandra\",\n    engine=\"cassandra\",\n    version=\"4.0\",\n    plan=\"essential\",\n    nodes=[\n        {\n            \"region\": \"BHS\",\n        },\n        {\n            \"region\": \"BHS\",\n        },\n        {\n            \"region\": \"BHS\",\n        },\n    ],\n    flavor=\"db1-4\")\nkafkadb = ovh.cloud_project.Database(\"kafkadb\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description=\"my-first-kafka\",\n    engine=\"kafka\",\n    version=\"3.8\",\n    flavor=\"db1-4\",\n    plan=\"business\",\n    kafka_rest_api=True,\n    kafka_schema_registry=True,\n    nodes=[\n        {\n            \"region\": \"DE\",\n        },\n        {\n            \"region\": \"DE\",\n        },\n        {\n            \"region\": \"DE\",\n        },\n    ])\nm3db = ovh.cloud_project.Database(\"m3db\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description=\"my-first-m3db\",\n    engine=\"m3db\",\n    version=\"1.2\",\n    plan=\"essential\",\n    nodes=[{\n        \"region\": \"BHS\",\n    }],\n    flavor=\"db1-7\")\nmongodb = ovh.cloud_project.Database(\"mongodb\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description=\"my-first-mongodb\",\n    engine=\"mongodb\",\n    version=\"5.0\",\n    plan=\"discovery\",\n    nodes=[{\n        \"region\": \"GRA\",\n    }],\n    flavor=\"db1-2\")\nmysqldb = ovh.cloud_project.Database(\"mysqldb\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description=\"my-first-mysql\",\n    engine=\"mysql\",\n    version=\"8\",\n    plan=\"essential\",\n    nodes=[{\n        \"region\": \"SBG\",\n    }],\n    flavor=\"db1-4\",\n    advanced_configuration={\n        \"mysql.sql_mode\": \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES\",\n        \"mysql.sql_require_primary_key\": \"true\",\n    })\nopensearchdb = ovh.cloud_project.Database(\"opensearchdb\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description=\"my-first-opensearch\",\n    engine=\"opensearch\",\n    version=\"1\",\n    plan=\"essential\",\n    opensearch_acls_enabled=True,\n    nodes=[{\n        \"region\": \"UK\",\n    }],\n    flavor=\"db1-4\")\npgsqldb = ovh.cloud_project.Database(\"pgsqldb\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description=\"my-first-postgresql\",\n    engine=\"postgresql\",\n    version=\"14\",\n    plan=\"essential\",\n    nodes=[{\n        \"region\": \"WAW\",\n    }],\n    flavor=\"db1-4\",\n    ip_restrictions=[\n        {\n            \"description\": \"ip 1\",\n            \"ip\": \"178.97.6.0/24\",\n        },\n        {\n            \"description\": \"ip 2\",\n            \"ip\": \"178.97.7.0/24\",\n        },\n    ])\nredisdb = ovh.cloud_project.Database(\"redisdb\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description=\"my-first-redis\",\n    engine=\"redis\",\n    version=\"6.2\",\n    plan=\"essential\",\n    nodes=[{\n        \"region\": \"BHS\",\n    }],\n    flavor=\"db1-4\")\ngrafana = ovh.cloud_project.Database(\"grafana\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    description=\"my-first-grafana\",\n    engine=\"grafana\",\n    version=\"9.1\",\n    plan=\"essential\",\n    nodes=[{\n        \"region\": \"GRA\",\n    }],\n    flavor=\"db1-4\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cassandradb = new Ovh.CloudProject.Database(\"cassandradb\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Description = \"my-first-cassandra\",\n        Engine = \"cassandra\",\n        Version = \"4.0\",\n        Plan = \"essential\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n        },\n        Flavor = \"db1-4\",\n    });\n\n    var kafkadb = new Ovh.CloudProject.Database(\"kafkadb\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Description = \"my-first-kafka\",\n        Engine = \"kafka\",\n        Version = \"3.8\",\n        Flavor = \"db1-4\",\n        Plan = \"business\",\n        KafkaRestApi = true,\n        KafkaSchemaRegistry = true,\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"DE\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"DE\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"DE\",\n            },\n        },\n    });\n\n    var m3db = new Ovh.CloudProject.Database(\"m3db\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Description = \"my-first-m3db\",\n        Engine = \"m3db\",\n        Version = \"1.2\",\n        Plan = \"essential\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n        },\n        Flavor = \"db1-7\",\n    });\n\n    var mongodb = new Ovh.CloudProject.Database(\"mongodb\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Description = \"my-first-mongodb\",\n        Engine = \"mongodb\",\n        Version = \"5.0\",\n        Plan = \"discovery\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"GRA\",\n            },\n        },\n        Flavor = \"db1-2\",\n    });\n\n    var mysqldb = new Ovh.CloudProject.Database(\"mysqldb\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Description = \"my-first-mysql\",\n        Engine = \"mysql\",\n        Version = \"8\",\n        Plan = \"essential\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"SBG\",\n            },\n        },\n        Flavor = \"db1-4\",\n        AdvancedConfiguration = \n        {\n            { \"mysql.sql_mode\", \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES\" },\n            { \"mysql.sql_require_primary_key\", \"true\" },\n        },\n    });\n\n    var opensearchdb = new Ovh.CloudProject.Database(\"opensearchdb\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Description = \"my-first-opensearch\",\n        Engine = \"opensearch\",\n        Version = \"1\",\n        Plan = \"essential\",\n        OpensearchAclsEnabled = true,\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"UK\",\n            },\n        },\n        Flavor = \"db1-4\",\n    });\n\n    var pgsqldb = new Ovh.CloudProject.Database(\"pgsqldb\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Description = \"my-first-postgresql\",\n        Engine = \"postgresql\",\n        Version = \"14\",\n        Plan = \"essential\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"WAW\",\n            },\n        },\n        Flavor = \"db1-4\",\n        IpRestrictions = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseIpRestrictionArgs\n            {\n                Description = \"ip 1\",\n                Ip = \"178.97.6.0/24\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseIpRestrictionArgs\n            {\n                Description = \"ip 2\",\n                Ip = \"178.97.7.0/24\",\n            },\n        },\n    });\n\n    var redisdb = new Ovh.CloudProject.Database(\"redisdb\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Description = \"my-first-redis\",\n        Engine = \"redis\",\n        Version = \"6.2\",\n        Plan = \"essential\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"BHS\",\n            },\n        },\n        Flavor = \"db1-4\",\n    });\n\n    var grafana = new Ovh.CloudProject.Database(\"grafana\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Description = \"my-first-grafana\",\n        Engine = \"grafana\",\n        Version = \"9.1\",\n        Plan = \"essential\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"GRA\",\n            },\n        },\n        Flavor = \"db1-4\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewDatabase(ctx, \"cassandradb\", \u0026cloudproject.DatabaseArgs{\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tDescription: pulumi.String(\"my-first-cassandra\"),\n\t\t\tEngine:      pulumi.String(\"cassandra\"),\n\t\t\tVersion:     pulumi.String(\"4.0\"),\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFlavor: pulumi.String(\"db1-4\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewDatabase(ctx, \"kafkadb\", \u0026cloudproject.DatabaseArgs{\n\t\t\tServiceName:         pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tDescription:         pulumi.String(\"my-first-kafka\"),\n\t\t\tEngine:              pulumi.String(\"kafka\"),\n\t\t\tVersion:             pulumi.String(\"3.8\"),\n\t\t\tFlavor:              pulumi.String(\"db1-4\"),\n\t\t\tPlan:                pulumi.String(\"business\"),\n\t\t\tKafkaRestApi:        pulumi.Bool(true),\n\t\t\tKafkaSchemaRegistry: pulumi.Bool(true),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"DE\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"DE\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"DE\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewDatabase(ctx, \"m3db\", \u0026cloudproject.DatabaseArgs{\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tDescription: pulumi.String(\"my-first-m3db\"),\n\t\t\tEngine:      pulumi.String(\"m3db\"),\n\t\t\tVersion:     pulumi.String(\"1.2\"),\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFlavor: pulumi.String(\"db1-7\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewDatabase(ctx, \"mongodb\", \u0026cloudproject.DatabaseArgs{\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tDescription: pulumi.String(\"my-first-mongodb\"),\n\t\t\tEngine:      pulumi.String(\"mongodb\"),\n\t\t\tVersion:     pulumi.String(\"5.0\"),\n\t\t\tPlan:        pulumi.String(\"discovery\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"GRA\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFlavor: pulumi.String(\"db1-2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewDatabase(ctx, \"mysqldb\", \u0026cloudproject.DatabaseArgs{\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tDescription: pulumi.String(\"my-first-mysql\"),\n\t\t\tEngine:      pulumi.String(\"mysql\"),\n\t\t\tVersion:     pulumi.String(\"8\"),\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"SBG\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFlavor: pulumi.String(\"db1-4\"),\n\t\t\tAdvancedConfiguration: pulumi.StringMap{\n\t\t\t\t\"mysql.sql_mode\":                pulumi.String(\"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES\"),\n\t\t\t\t\"mysql.sql_require_primary_key\": pulumi.String(\"true\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewDatabase(ctx, \"opensearchdb\", \u0026cloudproject.DatabaseArgs{\n\t\t\tServiceName:           pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tDescription:           pulumi.String(\"my-first-opensearch\"),\n\t\t\tEngine:                pulumi.String(\"opensearch\"),\n\t\t\tVersion:               pulumi.String(\"1\"),\n\t\t\tPlan:                  pulumi.String(\"essential\"),\n\t\t\tOpensearchAclsEnabled: pulumi.Bool(true),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"UK\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFlavor: pulumi.String(\"db1-4\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewDatabase(ctx, \"pgsqldb\", \u0026cloudproject.DatabaseArgs{\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tDescription: pulumi.String(\"my-first-postgresql\"),\n\t\t\tEngine:      pulumi.String(\"postgresql\"),\n\t\t\tVersion:     pulumi.String(\"14\"),\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"WAW\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFlavor: pulumi.String(\"db1-4\"),\n\t\t\tIpRestrictions: cloudproject.DatabaseIpRestrictionArray{\n\t\t\t\t\u0026cloudproject.DatabaseIpRestrictionArgs{\n\t\t\t\t\tDescription: pulumi.String(\"ip 1\"),\n\t\t\t\t\tIp:          pulumi.String(\"178.97.6.0/24\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseIpRestrictionArgs{\n\t\t\t\t\tDescription: pulumi.String(\"ip 2\"),\n\t\t\t\t\tIp:          pulumi.String(\"178.97.7.0/24\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewDatabase(ctx, \"redisdb\", \u0026cloudproject.DatabaseArgs{\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tDescription: pulumi.String(\"my-first-redis\"),\n\t\t\tEngine:      pulumi.String(\"redis\"),\n\t\t\tVersion:     pulumi.String(\"6.2\"),\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"BHS\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFlavor: pulumi.String(\"db1-4\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewDatabase(ctx, \"grafana\", \u0026cloudproject.DatabaseArgs{\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tDescription: pulumi.String(\"my-first-grafana\"),\n\t\t\tEngine:      pulumi.String(\"grafana\"),\n\t\t\tVersion:     pulumi.String(\"9.1\"),\n\t\t\tPlan:        pulumi.String(\"essential\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"GRA\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFlavor: pulumi.String(\"db1-4\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Database;\nimport com.pulumi.ovh.CloudProject.DatabaseArgs;\nimport com.pulumi.ovh.CloudProject.inputs.DatabaseNodeArgs;\nimport com.pulumi.ovh.CloudProject.inputs.DatabaseIpRestrictionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cassandradb = new Database(\"cassandradb\", DatabaseArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .description(\"my-first-cassandra\")\n            .engine(\"cassandra\")\n            .version(\"4.0\")\n            .plan(\"essential\")\n            .nodes(            \n                DatabaseNodeArgs.builder()\n                    .region(\"BHS\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"BHS\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"BHS\")\n                    .build())\n            .flavor(\"db1-4\")\n            .build());\n\n        var kafkadb = new Database(\"kafkadb\", DatabaseArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .description(\"my-first-kafka\")\n            .engine(\"kafka\")\n            .version(\"3.8\")\n            .flavor(\"db1-4\")\n            .plan(\"business\")\n            .kafkaRestApi(true)\n            .kafkaSchemaRegistry(true)\n            .nodes(            \n                DatabaseNodeArgs.builder()\n                    .region(\"DE\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"DE\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"DE\")\n                    .build())\n            .build());\n\n        var m3db = new Database(\"m3db\", DatabaseArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .description(\"my-first-m3db\")\n            .engine(\"m3db\")\n            .version(\"1.2\")\n            .plan(\"essential\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"BHS\")\n                .build())\n            .flavor(\"db1-7\")\n            .build());\n\n        var mongodb = new Database(\"mongodb\", DatabaseArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .description(\"my-first-mongodb\")\n            .engine(\"mongodb\")\n            .version(\"5.0\")\n            .plan(\"discovery\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"GRA\")\n                .build())\n            .flavor(\"db1-2\")\n            .build());\n\n        var mysqldb = new Database(\"mysqldb\", DatabaseArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .description(\"my-first-mysql\")\n            .engine(\"mysql\")\n            .version(\"8\")\n            .plan(\"essential\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"SBG\")\n                .build())\n            .flavor(\"db1-4\")\n            .advancedConfiguration(Map.ofEntries(\n                Map.entry(\"mysql.sql_mode\", \"ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES\"),\n                Map.entry(\"mysql.sql_require_primary_key\", \"true\")\n            ))\n            .build());\n\n        var opensearchdb = new Database(\"opensearchdb\", DatabaseArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .description(\"my-first-opensearch\")\n            .engine(\"opensearch\")\n            .version(\"1\")\n            .plan(\"essential\")\n            .opensearchAclsEnabled(true)\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"UK\")\n                .build())\n            .flavor(\"db1-4\")\n            .build());\n\n        var pgsqldb = new Database(\"pgsqldb\", DatabaseArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .description(\"my-first-postgresql\")\n            .engine(\"postgresql\")\n            .version(\"14\")\n            .plan(\"essential\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"WAW\")\n                .build())\n            .flavor(\"db1-4\")\n            .ipRestrictions(            \n                DatabaseIpRestrictionArgs.builder()\n                    .description(\"ip 1\")\n                    .ip(\"178.97.6.0/24\")\n                    .build(),\n                DatabaseIpRestrictionArgs.builder()\n                    .description(\"ip 2\")\n                    .ip(\"178.97.7.0/24\")\n                    .build())\n            .build());\n\n        var redisdb = new Database(\"redisdb\", DatabaseArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .description(\"my-first-redis\")\n            .engine(\"redis\")\n            .version(\"6.2\")\n            .plan(\"essential\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"BHS\")\n                .build())\n            .flavor(\"db1-4\")\n            .build());\n\n        var grafana = new Database(\"grafana\", DatabaseArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .description(\"my-first-grafana\")\n            .engine(\"grafana\")\n            .version(\"9.1\")\n            .plan(\"essential\")\n            .nodes(DatabaseNodeArgs.builder()\n                .region(\"GRA\")\n                .build())\n            .flavor(\"db1-4\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cassandradb:\n    type: ovh:CloudProject:Database\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      description: my-first-cassandra\n      engine: cassandra\n      version: '4.0'\n      plan: essential\n      nodes:\n        - region: BHS\n        - region: BHS\n        - region: BHS\n      flavor: db1-4\n  kafkadb:\n    type: ovh:CloudProject:Database\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      description: my-first-kafka\n      engine: kafka\n      version: '3.8'\n      flavor: db1-4\n      plan: business\n      kafkaRestApi: true\n      kafkaSchemaRegistry: true\n      nodes:\n        - region: DE\n        - region: DE\n        - region: DE\n  m3db:\n    type: ovh:CloudProject:Database\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      description: my-first-m3db\n      engine: m3db\n      version: '1.2'\n      plan: essential\n      nodes:\n        - region: BHS\n      flavor: db1-7\n  mongodb:\n    type: ovh:CloudProject:Database\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      description: my-first-mongodb\n      engine: mongodb\n      version: '5.0'\n      plan: discovery\n      nodes:\n        - region: GRA\n      flavor: db1-2\n  mysqldb:\n    type: ovh:CloudProject:Database\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      description: my-first-mysql\n      engine: mysql\n      version: '8'\n      plan: essential\n      nodes:\n        - region: SBG\n      flavor: db1-4\n      advancedConfiguration:\n        mysql.sql_mode: ANSI,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,STRICT_ALL_TABLES\n        mysql.sql_require_primary_key: 'true'\n  opensearchdb:\n    type: ovh:CloudProject:Database\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      description: my-first-opensearch\n      engine: opensearch\n      version: '1'\n      plan: essential\n      opensearchAclsEnabled: true\n      nodes:\n        - region: UK\n      flavor: db1-4\n  pgsqldb:\n    type: ovh:CloudProject:Database\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      description: my-first-postgresql\n      engine: postgresql\n      version: '14'\n      plan: essential\n      nodes:\n        - region: WAW\n      flavor: db1-4\n      ipRestrictions:\n        - description: ip 1\n          ip: 178.97.6.0/24\n        - description: ip 2\n          ip: 178.97.7.0/24\n  redisdb:\n    type: ovh:CloudProject:Database\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      description: my-first-redis\n      engine: redis\n      version: '6.2'\n      plan: essential\n      nodes:\n        - region: BHS\n      flavor: db1-4\n  grafana:\n    type: ovh:CloudProject:Database\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      description: my-first-grafana\n      engine: grafana\n      version: '9.1'\n      plan: essential\n      nodes:\n        - region: GRA\n      flavor: db1-4\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nTo deploy a business PostgreSQL service with two nodes on public network:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst postgresql = new ovh.cloudproject.Database(\"postgresql\", {\n    description: \"my-first-postgresql\",\n    engine: \"postgresql\",\n    flavor: \"db1-15\",\n    nodes: [\n        {\n            region: \"GRA\",\n        },\n        {\n            region: \"GRA\",\n        },\n    ],\n    plan: \"business\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"14\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npostgresql = ovh.cloud_project.Database(\"postgresql\",\n    description=\"my-first-postgresql\",\n    engine=\"postgresql\",\n    flavor=\"db1-15\",\n    nodes=[\n        {\n            \"region\": \"GRA\",\n        },\n        {\n            \"region\": \"GRA\",\n        },\n    ],\n    plan=\"business\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"14\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var postgresql = new Ovh.CloudProject.Database(\"postgresql\", new()\n    {\n        Description = \"my-first-postgresql\",\n        Engine = \"postgresql\",\n        Flavor = \"db1-15\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"GRA\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                Region = \"GRA\",\n            },\n        },\n        Plan = \"business\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"14\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewDatabase(ctx, \"postgresql\", \u0026cloudproject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-postgresql\"),\n\t\t\tEngine:      pulumi.String(\"postgresql\"),\n\t\t\tFlavor:      pulumi.String(\"db1-15\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"GRA\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tRegion: pulumi.String(\"GRA\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"business\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"14\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Database;\nimport com.pulumi.ovh.CloudProject.DatabaseArgs;\nimport com.pulumi.ovh.CloudProject.inputs.DatabaseNodeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var postgresql = new Database(\"postgresql\", DatabaseArgs.builder()\n            .description(\"my-first-postgresql\")\n            .engine(\"postgresql\")\n            .flavor(\"db1-15\")\n            .nodes(            \n                DatabaseNodeArgs.builder()\n                    .region(\"GRA\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .region(\"GRA\")\n                    .build())\n            .plan(\"business\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"14\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  postgresql:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-postgresql\n      engine: postgresql\n      flavor: db1-15\n      nodes:\n        - region: GRA\n        - region: GRA\n      plan: business\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '14'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nTo deploy an enterprise MongoDB service with three nodes on private network:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst mongodb = new ovh.cloudproject.Database(\"mongodb\", {\n    description: \"my-first-mongodb\",\n    engine: \"mongodb\",\n    flavor: \"db1-30\",\n    nodes: [\n        {\n            networkId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            region: \"SBG\",\n            subnetId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n        {\n            networkId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            region: \"SBG\",\n            subnetId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n        {\n            networkId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            region: \"SBG\",\n            subnetId: \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n    ],\n    plan: \"production\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version: \"5.0\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmongodb = ovh.cloud_project.Database(\"mongodb\",\n    description=\"my-first-mongodb\",\n    engine=\"mongodb\",\n    flavor=\"db1-30\",\n    nodes=[\n        {\n            \"network_id\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            \"region\": \"SBG\",\n            \"subnet_id\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n        {\n            \"network_id\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            \"region\": \"SBG\",\n            \"subnet_id\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n        {\n            \"network_id\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            \"region\": \"SBG\",\n            \"subnet_id\": \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n        },\n    ],\n    plan=\"production\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    version=\"5.0\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mongodb = new Ovh.CloudProject.Database(\"mongodb\", new()\n    {\n        Description = \"my-first-mongodb\",\n        Engine = \"mongodb\",\n        Flavor = \"db1-30\",\n        Nodes = new[]\n        {\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                NetworkId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                Region = \"SBG\",\n                SubnetId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                NetworkId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                Region = \"SBG\",\n                SubnetId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            },\n            new Ovh.CloudProject.Inputs.DatabaseNodeArgs\n            {\n                NetworkId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n                Region = \"SBG\",\n                SubnetId = \"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\",\n            },\n        },\n        Plan = \"production\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Version = \"5.0\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewDatabase(ctx, \"mongodb\", \u0026cloudproject.DatabaseArgs{\n\t\t\tDescription: pulumi.String(\"my-first-mongodb\"),\n\t\t\tEngine:      pulumi.String(\"mongodb\"),\n\t\t\tFlavor:      pulumi.String(\"db1-30\"),\n\t\t\tNodes: cloudproject.DatabaseNodeArray{\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tNetworkId: pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t\tRegion:    pulumi.String(\"SBG\"),\n\t\t\t\t\tSubnetId:  pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tNetworkId: pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t\tRegion:    pulumi.String(\"SBG\"),\n\t\t\t\t\tSubnetId:  pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.DatabaseNodeArgs{\n\t\t\t\t\tNetworkId: pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t\tRegion:    pulumi.String(\"SBG\"),\n\t\t\t\t\tSubnetId:  pulumi.String(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPlan:        pulumi.String(\"production\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tVersion:     pulumi.String(\"5.0\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Database;\nimport com.pulumi.ovh.CloudProject.DatabaseArgs;\nimport com.pulumi.ovh.CloudProject.inputs.DatabaseNodeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mongodb = new Database(\"mongodb\", DatabaseArgs.builder()\n            .description(\"my-first-mongodb\")\n            .engine(\"mongodb\")\n            .flavor(\"db1-30\")\n            .nodes(            \n                DatabaseNodeArgs.builder()\n                    .networkId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .region(\"SBG\")\n                    .subnetId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .networkId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .region(\"SBG\")\n                    .subnetId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .build(),\n                DatabaseNodeArgs.builder()\n                    .networkId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .region(\"SBG\")\n                    .subnetId(\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\")\n                    .build())\n            .plan(\"production\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .version(\"5.0\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mongodb:\n    type: ovh:CloudProject:Database\n    properties:\n      description: my-first-mongodb\n      engine: mongodb\n      flavor: db1-30\n      nodes:\n        - networkId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n          region: SBG\n          subnetId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n        - networkId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n          region: SBG\n          subnetId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n        - networkId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n          region: SBG\n          subnetId: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n      plan: production\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      version: '5.0'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed database clusters can be imported using the `service_name`, `engine`, `id` of the cluster, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/database:Database my_database_cluster service_name/engine/id\n```\n\n",
            "properties": {
                "advancedConfiguration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Advanced configuration key / value.\n"
                },
                "backupRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of region where backups are pushed. Not more than 1 regions for MongoDB. Not more than 2 regions for the other engines with one being the same as the nodes[].region field\n"
                },
                "backupTime": {
                    "type": "string",
                    "description": "Time on which backups start every day (this parameter is not usable on the following engines: \"m3db\", \"grafana\", \"kafka\", \"kafkaconnect\", \"kafkamirrormaker\", \"opensearch\", \"m3aggregator\").\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the cluster.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Small description of the database service.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The disk size (in GB) of the database service.\n"
                },
                "diskType": {
                    "type": "string",
                    "description": "Defines the disk type of the database service.\n"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseEndpoint:DatabaseEndpoint"
                    },
                    "description": "List of all endpoints objects of the service.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine you want to deploy. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "A valid OVHcloud public cloud database flavor name in which the nodes will be started. Ex: \"db1-7\". Changing this value upgrade the nodes with the new flavor. You can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                },
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseIpRestriction:DatabaseIpRestriction"
                    },
                    "description": "IP Blocks authorized to access to the cluster.\n"
                },
                "kafkaRestApi": {
                    "type": "boolean",
                    "description": "Defines whether the REST API is enabled on a kafka cluster\n"
                },
                "kafkaSchemaRegistry": {
                    "type": "boolean",
                    "description": "Defines whether the schema registry is enabled on a Kafka cluster\n"
                },
                "maintenanceTime": {
                    "type": "string",
                    "description": "Time on which maintenances can start every day.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Type of network of the cluster.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseNode:DatabaseNode"
                    },
                    "description": "List of nodes object. Multi region cluster are not yet available, all node should be identical.\n"
                },
                "opensearchAclsEnabled": {
                    "type": "boolean",
                    "description": "Defines whether the ACLs are enabled on an OpenSearch cluster\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the cluster.\n* MongoDB: Enum: \"discovery\", \"production\", \"advanced\".\n* Mysql, PosgreSQL, Cassandra, M3DB, : Enum: \"essential\", \"business\", \"enterprise\".\n* M3 Aggregator: \"business\", \"enterprise\".\n* Redis: \"essential\", \"business\"\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "The version of the engine in which the service should be deployed\n"
                }
            },
            "required": [
                "advancedConfiguration",
                "backupRegions",
                "backupTime",
                "createdAt",
                "diskSize",
                "diskType",
                "endpoints",
                "engine",
                "flavor",
                "maintenanceTime",
                "networkType",
                "nodes",
                "plan",
                "serviceName",
                "status",
                "version"
            ],
            "inputProperties": {
                "advancedConfiguration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Advanced configuration key / value.\n"
                },
                "backupRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of region where backups are pushed. Not more than 1 regions for MongoDB. Not more than 2 regions for the other engines with one being the same as the nodes[].region field\n"
                },
                "backupTime": {
                    "type": "string",
                    "description": "Time on which backups start every day (this parameter is not usable on the following engines: \"m3db\", \"grafana\", \"kafka\", \"kafkaconnect\", \"kafkamirrormaker\", \"opensearch\", \"m3aggregator\").\n"
                },
                "description": {
                    "type": "string",
                    "description": "Small description of the database service.\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "The disk size (in GB) of the database service.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine you want to deploy. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "description": "A valid OVHcloud public cloud database flavor name in which the nodes will be started. Ex: \"db1-7\". Changing this value upgrade the nodes with the new flavor. You can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                },
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseIpRestriction:DatabaseIpRestriction"
                    },
                    "description": "IP Blocks authorized to access to the cluster.\n"
                },
                "kafkaRestApi": {
                    "type": "boolean",
                    "description": "Defines whether the REST API is enabled on a kafka cluster\n"
                },
                "kafkaSchemaRegistry": {
                    "type": "boolean",
                    "description": "Defines whether the schema registry is enabled on a Kafka cluster\n"
                },
                "maintenanceTime": {
                    "type": "string",
                    "description": "Time on which maintenances can start every day.\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseNode:DatabaseNode"
                    },
                    "description": "List of nodes object. Multi region cluster are not yet available, all node should be identical.\n"
                },
                "opensearchAclsEnabled": {
                    "type": "boolean",
                    "description": "Defines whether the ACLs are enabled on an OpenSearch cluster\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the cluster.\n* MongoDB: Enum: \"discovery\", \"production\", \"advanced\".\n* Mysql, PosgreSQL, Cassandra, M3DB, : Enum: \"essential\", \"business\", \"enterprise\".\n* M3 Aggregator: \"business\", \"enterprise\".\n* Redis: \"essential\", \"business\"\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "description": "The version of the engine in which the service should be deployed\n"
                }
            },
            "requiredInputs": [
                "engine",
                "flavor",
                "nodes",
                "plan",
                "serviceName",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "advancedConfiguration": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Advanced configuration key / value.\n"
                    },
                    "backupRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of region where backups are pushed. Not more than 1 regions for MongoDB. Not more than 2 regions for the other engines with one being the same as the nodes[].region field\n"
                    },
                    "backupTime": {
                        "type": "string",
                        "description": "Time on which backups start every day (this parameter is not usable on the following engines: \"m3db\", \"grafana\", \"kafka\", \"kafkaconnect\", \"kafkamirrormaker\", \"opensearch\", \"m3aggregator\").\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the cluster.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Small description of the database service.\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The disk size (in GB) of the database service.\n"
                    },
                    "diskType": {
                        "type": "string",
                        "description": "Defines the disk type of the database service.\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/DatabaseEndpoint:DatabaseEndpoint"
                        },
                        "description": "List of all endpoints objects of the service.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The database engine you want to deploy. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud database flavor name in which the nodes will be started. Ex: \"db1-7\". Changing this value upgrade the nodes with the new flavor. You can find the list of flavor names: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                    },
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/DatabaseIpRestriction:DatabaseIpRestriction"
                        },
                        "description": "IP Blocks authorized to access to the cluster.\n"
                    },
                    "kafkaRestApi": {
                        "type": "boolean",
                        "description": "Defines whether the REST API is enabled on a kafka cluster\n"
                    },
                    "kafkaSchemaRegistry": {
                        "type": "boolean",
                        "description": "Defines whether the schema registry is enabled on a Kafka cluster\n"
                    },
                    "maintenanceTime": {
                        "type": "string",
                        "description": "Time on which maintenances can start every day.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Type of network of the cluster.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/DatabaseNode:DatabaseNode"
                        },
                        "description": "List of nodes object. Multi region cluster are not yet available, all node should be identical.\n"
                    },
                    "opensearchAclsEnabled": {
                        "type": "boolean",
                        "description": "Defines whether the ACLs are enabled on an OpenSearch cluster\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Plan of the cluster.\n* MongoDB: Enum: \"discovery\", \"production\", \"advanced\".\n* Mysql, PosgreSQL, Cassandra, M3DB, : Enum: \"essential\", \"business\", \"enterprise\".\n* M3 Aggregator: \"business\", \"enterprise\".\n* Redis: \"essential\", \"business\"\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the engine in which the service should be deployed\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/failoverIpAttach:FailoverIpAttach": {
            "description": "Attaches a failover IP address to a compute instance\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myFailoverIp = new ovh.cloudproject.FailoverIpAttach(\"myFailoverIp\", {\n    ip: \"XXXXXX\",\n    routedTo: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_failover_ip = ovh.cloud_project.FailoverIpAttach(\"myFailoverIp\",\n    ip=\"XXXXXX\",\n    routed_to=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myFailoverIp = new Ovh.CloudProject.FailoverIpAttach(\"myFailoverIp\", new()\n    {\n        Ip = \"XXXXXX\",\n        RoutedTo = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewFailoverIpAttach(ctx, \"myFailoverIp\", \u0026cloudproject.FailoverIpAttachArgs{\n\t\t\tIp:          pulumi.String(\"XXXXXX\"),\n\t\t\tRoutedTo:    pulumi.String(\"XXXXXX\"),\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.FailoverIpAttach;\nimport com.pulumi.ovh.CloudProject.FailoverIpAttachArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myFailoverIp = new FailoverIpAttach(\"myFailoverIp\", FailoverIpAttachArgs.builder()\n            .ip(\"XXXXXX\")\n            .routedTo(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myFailoverIp:\n    type: ovh:CloudProject:FailoverIpAttach\n    properties:\n      ip: XXXXXX\n      routedTo: XXXXXX\n      serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "block": {
                    "type": "string",
                    "description": "The IP block\n* `continentCode` - The Ip continent\n"
                },
                "continentCode": {
                    "type": "string",
                    "description": "Ip continent\n"
                },
                "geoLoc": {
                    "type": "string",
                    "description": "Ip location\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The failover ip address to attach\n"
                },
                "progress": {
                    "type": "integer",
                    "description": "Current operation progress in percent\n* `routedTo` - Instance where ip is routed to\n"
                },
                "routedTo": {
                    "type": "string",
                    "description": "The GUID of an instance to which the failover IP address is be attached\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Ip status, can be `ok` or `operationPending`\n* `subType` - IP sub type, can be `cloud` or `ovh`\n"
                },
                "subType": {
                    "type": "string",
                    "description": "IP sub type\n"
                }
            },
            "required": [
                "block",
                "continentCode",
                "geoLoc",
                "ip",
                "progress",
                "routedTo",
                "serviceName",
                "status",
                "subType"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "The IP block\n* `continentCode` - The Ip continent\n"
                },
                "continentCode": {
                    "type": "string",
                    "description": "Ip continent\n"
                },
                "geoLoc": {
                    "type": "string",
                    "description": "Ip location\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The failover ip address to attach\n"
                },
                "routedTo": {
                    "type": "string",
                    "description": "The GUID of an instance to which the failover IP address is be attached\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FailoverIpAttach resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "The IP block\n* `continentCode` - The Ip continent\n"
                    },
                    "continentCode": {
                        "type": "string",
                        "description": "Ip continent\n"
                    },
                    "geoLoc": {
                        "type": "string",
                        "description": "Ip location\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The failover ip address to attach\n"
                    },
                    "progress": {
                        "type": "integer",
                        "description": "Current operation progress in percent\n* `routedTo` - Instance where ip is routed to\n"
                    },
                    "routedTo": {
                        "type": "string",
                        "description": "The GUID of an instance to which the failover IP address is be attached\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Ip status, can be `ok` or `operationPending`\n* `subType` - IP sub type, can be `cloud` or `ovh`\n"
                    },
                    "subType": {
                        "type": "string",
                        "description": "IP sub type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/gateway:Gateway": {
            "description": "Create a new Gateway for existing subnet in the specified public cloud project.\n\n## Import\n\nA gateway can be imported using the `service_name`, `region` and `id` (identifier of the gateway) properties, separated by a `/`.\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/gateway:Gateway gateway service_name/region/id\n```\n\n",
            "properties": {
                "externalInformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/GatewayExternalInformation:GatewayExternalInformation"
                    },
                    "description": "List of External Information of the gateway.\n"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/GatewayInterface:GatewayInterface"
                    },
                    "description": "Interfaces list of the gateway.\n"
                },
                "model": {
                    "type": "string",
                    "description": "Model of the gateway.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the gateway.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the private network.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the gateway.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "ID of the private network.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the gateway.\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet.\n"
                }
            },
            "required": [
                "externalInformations",
                "interfaces",
                "model",
                "name",
                "networkId",
                "region",
                "serviceName",
                "status",
                "subnetId"
            ],
            "inputProperties": {
                "model": {
                    "type": "string",
                    "description": "Model of the gateway.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the gateway.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the private network.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Region of the gateway.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "ID of the private network.\n",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "model",
                "networkId",
                "region",
                "serviceName",
                "subnetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Gateway resources.\n",
                "properties": {
                    "externalInformations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/GatewayExternalInformation:GatewayExternalInformation"
                        },
                        "description": "List of External Information of the gateway.\n"
                    },
                    "interfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/GatewayInterface:GatewayInterface"
                        },
                        "description": "Interfaces list of the gateway.\n"
                    },
                    "model": {
                        "type": "string",
                        "description": "Model of the gateway.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the gateway.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "ID of the private network.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the gateway.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the private network.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the gateway.\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "ID of the subnet.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/gatewayInterface:GatewayInterface": {
            "description": "Create a new Gateway Interface for existing subnet in the specified public cloud project.\n\n## Import\n\nA gateway interface can be imported using the `service_name`, `region`, `id` (identifier of the gateway) and `interface_id` properties, separated by a `/`.\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/gatewayInterface:GatewayInterface gateway service_name/region/id/interface_id\n```\n\n",
            "properties": {
                "interfaceId": {
                    "type": "string",
                    "description": "ID of the interface\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP of the interface\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "Network ID of the interface\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the gateway\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "ID of the cloud project\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet to add\n"
                }
            },
            "required": [
                "interfaceId",
                "ip",
                "networkId",
                "region",
                "serviceName",
                "subnetId"
            ],
            "inputProperties": {
                "interfaceId": {
                    "type": "string",
                    "description": "ID of the interface\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the gateway\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "ID of the cloud project\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "ID of the subnet to add\n"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName",
                "subnetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GatewayInterface resources.\n",
                "properties": {
                    "interfaceId": {
                        "type": "string",
                        "description": "ID of the interface\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "IP of the interface\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "Network ID of the interface\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the gateway\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the cloud project\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "ID of the subnet to add\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/instance:Instance": {
            "description": "**This resource uses a Beta API** Creates an instance associated with a public cloud project.\n\n## Example Usage\n\nCreate a instance.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst instance = new ovh.cloudproject.Instance(\"instance\", {\n    billingPeriod: \"hourly\",\n    bootFrom: {\n        imageId: \"UUID\",\n    },\n    flavor: {\n        flavorId: \"UUID\",\n    },\n    network: {\n        \"public\": true,\n    },\n    region: \"RRRR\",\n    serviceName: \"XXX\",\n    sshKey: {\n        name: \"sshname\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ninstance = ovh.cloud_project.Instance(\"instance\",\n    billing_period=\"hourly\",\n    boot_from={\n        \"image_id\": \"UUID\",\n    },\n    flavor={\n        \"flavor_id\": \"UUID\",\n    },\n    network={\n        \"public\": True,\n    },\n    region=\"RRRR\",\n    service_name=\"XXX\",\n    ssh_key={\n        \"name\": \"sshname\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = new Ovh.CloudProject.Instance(\"instance\", new()\n    {\n        BillingPeriod = \"hourly\",\n        BootFrom = new Ovh.CloudProject.Inputs.InstanceBootFromArgs\n        {\n            ImageId = \"UUID\",\n        },\n        Flavor = new Ovh.CloudProject.Inputs.InstanceFlavorArgs\n        {\n            FlavorId = \"UUID\",\n        },\n        Network = new Ovh.CloudProject.Inputs.InstanceNetworkArgs\n        {\n            Public = true,\n        },\n        Region = \"RRRR\",\n        ServiceName = \"XXX\",\n        SshKey = new Ovh.CloudProject.Inputs.InstanceSshKeyArgs\n        {\n            Name = \"sshname\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewInstance(ctx, \"instance\", \u0026cloudproject.InstanceArgs{\n\t\t\tBillingPeriod: pulumi.String(\"hourly\"),\n\t\t\tBootFrom: \u0026cloudproject.InstanceBootFromArgs{\n\t\t\t\tImageId: pulumi.String(\"UUID\"),\n\t\t\t},\n\t\t\tFlavor: \u0026cloudproject.InstanceFlavorArgs{\n\t\t\t\tFlavorId: pulumi.String(\"UUID\"),\n\t\t\t},\n\t\t\tNetwork: \u0026cloudproject.InstanceNetworkArgs{\n\t\t\t\tPublic: pulumi.Bool(true),\n\t\t\t},\n\t\t\tRegion:      pulumi.String(\"RRRR\"),\n\t\t\tServiceName: pulumi.String(\"XXX\"),\n\t\t\tSshKey: \u0026cloudproject.InstanceSshKeyArgs{\n\t\t\t\tName: pulumi.String(\"sshname\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Instance;\nimport com.pulumi.ovh.CloudProject.InstanceArgs;\nimport com.pulumi.ovh.CloudProject.inputs.InstanceBootFromArgs;\nimport com.pulumi.ovh.CloudProject.inputs.InstanceFlavorArgs;\nimport com.pulumi.ovh.CloudProject.inputs.InstanceNetworkArgs;\nimport com.pulumi.ovh.CloudProject.inputs.InstanceSshKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var instance = new Instance(\"instance\", InstanceArgs.builder()\n            .billingPeriod(\"hourly\")\n            .bootFrom(InstanceBootFromArgs.builder()\n                .imageId(\"UUID\")\n                .build())\n            .flavor(InstanceFlavorArgs.builder()\n                .flavorId(\"UUID\")\n                .build())\n            .network(InstanceNetworkArgs.builder()\n                .public_(true)\n                .build())\n            .region(\"RRRR\")\n            .serviceName(\"XXX\")\n            .sshKey(InstanceSshKeyArgs.builder()\n                .name(\"sshname\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  instance:\n    type: ovh:CloudProject:Instance\n    properties:\n      billingPeriod: hourly\n      bootFrom:\n        imageId: UUID\n      flavor:\n        flavorId: UUID\n      network:\n        public: true\n      region: RRRR\n      serviceName: XXX\n      sshKey:\n        name: sshname\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/InstanceAddress:InstanceAddress"
                    },
                    "description": "Instance IP addresses\n"
                },
                "attachedVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/InstanceAttachedVolume:InstanceAttachedVolume"
                    },
                    "description": "Volumes attached to the instance\n"
                },
                "autoBackup": {
                    "$ref": "#/types/ovh:CloudProject/InstanceAutoBackup:InstanceAutoBackup",
                    "description": "Create an autobackup workflow after instance start up.\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone where the instance will be created\n"
                },
                "billingPeriod": {
                    "type": "string",
                    "description": "Billing period - hourly or monthly\n"
                },
                "bootFrom": {
                    "$ref": "#/types/ovh:CloudProject/InstanceBootFrom:InstanceBootFrom",
                    "description": "Boot the instance from an image or a volume\n"
                },
                "bulk": {
                    "type": "integer",
                    "description": "Create multiple instances\n"
                },
                "flavor": {
                    "$ref": "#/types/ovh:CloudProject/InstanceFlavor:InstanceFlavor",
                    "description": "Flavor information\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Flavor id\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "group": {
                    "$ref": "#/types/ovh:CloudProject/InstanceGroup:InstanceGroup",
                    "description": "Start instance in group\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Image id\n"
                },
                "name": {
                    "type": "string",
                    "description": "Instance name\n"
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/InstanceNetwork:InstanceNetwork",
                    "description": "Create network interfaces\n"
                },
                "region": {
                    "type": "string",
                    "description": "Instance region\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used\n"
                },
                "sshKey": {
                    "$ref": "#/types/ovh:CloudProject/InstanceSshKey:InstanceSshKey",
                    "description": "Existing SSH Keypair\n"
                },
                "sshKeyCreate": {
                    "$ref": "#/types/ovh:CloudProject/InstanceSshKeyCreate:InstanceSshKeyCreate",
                    "description": "Add existing SSH Key pair into your Public Cloud project and link it to the instance\n"
                },
                "taskState": {
                    "type": "string",
                    "description": "Instance task state\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Configuration information or scripts to use upon launch\n"
                }
            },
            "required": [
                "addresses",
                "attachedVolumes",
                "availabilityZone",
                "billingPeriod",
                "bootFrom",
                "flavor",
                "flavorId",
                "flavorName",
                "imageId",
                "name",
                "network",
                "region",
                "serviceName",
                "taskState"
            ],
            "inputProperties": {
                "autoBackup": {
                    "$ref": "#/types/ovh:CloudProject/InstanceAutoBackup:InstanceAutoBackup",
                    "description": "Create an autobackup workflow after instance start up.\n",
                    "willReplaceOnChanges": true
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone where the instance will be created\n",
                    "willReplaceOnChanges": true
                },
                "billingPeriod": {
                    "type": "string",
                    "description": "Billing period - hourly or monthly\n",
                    "willReplaceOnChanges": true
                },
                "bootFrom": {
                    "$ref": "#/types/ovh:CloudProject/InstanceBootFrom:InstanceBootFrom",
                    "description": "Boot the instance from an image or a volume\n",
                    "willReplaceOnChanges": true
                },
                "bulk": {
                    "type": "integer",
                    "description": "Create multiple instances\n",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "$ref": "#/types/ovh:CloudProject/InstanceFlavor:InstanceFlavor",
                    "description": "Flavor information\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "$ref": "#/types/ovh:CloudProject/InstanceGroup:InstanceGroup",
                    "description": "Start instance in group\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Instance name\n",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/InstanceNetwork:InstanceNetwork",
                    "description": "Create network interfaces\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Instance region\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used\n",
                    "willReplaceOnChanges": true
                },
                "sshKey": {
                    "$ref": "#/types/ovh:CloudProject/InstanceSshKey:InstanceSshKey",
                    "description": "Existing SSH Keypair\n",
                    "willReplaceOnChanges": true
                },
                "sshKeyCreate": {
                    "$ref": "#/types/ovh:CloudProject/InstanceSshKeyCreate:InstanceSshKeyCreate",
                    "description": "Add existing SSH Key pair into your Public Cloud project and link it to the instance\n",
                    "willReplaceOnChanges": true
                },
                "userData": {
                    "type": "string",
                    "description": "Configuration information or scripts to use upon launch\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "billingPeriod",
                "bootFrom",
                "flavor",
                "network",
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/InstanceAddress:InstanceAddress"
                        },
                        "description": "Instance IP addresses\n"
                    },
                    "attachedVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/InstanceAttachedVolume:InstanceAttachedVolume"
                        },
                        "description": "Volumes attached to the instance\n"
                    },
                    "autoBackup": {
                        "$ref": "#/types/ovh:CloudProject/InstanceAutoBackup:InstanceAutoBackup",
                        "description": "Create an autobackup workflow after instance start up.\n",
                        "willReplaceOnChanges": true
                    },
                    "availabilityZone": {
                        "type": "string",
                        "description": "The availability zone where the instance will be created\n",
                        "willReplaceOnChanges": true
                    },
                    "billingPeriod": {
                        "type": "string",
                        "description": "Billing period - hourly or monthly\n",
                        "willReplaceOnChanges": true
                    },
                    "bootFrom": {
                        "$ref": "#/types/ovh:CloudProject/InstanceBootFrom:InstanceBootFrom",
                        "description": "Boot the instance from an image or a volume\n",
                        "willReplaceOnChanges": true
                    },
                    "bulk": {
                        "type": "integer",
                        "description": "Create multiple instances\n",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "$ref": "#/types/ovh:CloudProject/InstanceFlavor:InstanceFlavor",
                        "description": "Flavor information\n",
                        "willReplaceOnChanges": true
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Flavor id\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "group": {
                        "$ref": "#/types/ovh:CloudProject/InstanceGroup:InstanceGroup",
                        "description": "Start instance in group\n",
                        "willReplaceOnChanges": true
                    },
                    "imageId": {
                        "type": "string",
                        "description": "Image id\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Instance name\n",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "$ref": "#/types/ovh:CloudProject/InstanceNetwork:InstanceNetwork",
                        "description": "Create network interfaces\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "Instance region\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used\n",
                        "willReplaceOnChanges": true
                    },
                    "sshKey": {
                        "$ref": "#/types/ovh:CloudProject/InstanceSshKey:InstanceSshKey",
                        "description": "Existing SSH Keypair\n",
                        "willReplaceOnChanges": true
                    },
                    "sshKeyCreate": {
                        "$ref": "#/types/ovh:CloudProject/InstanceSshKeyCreate:InstanceSshKeyCreate",
                        "description": "Add existing SSH Key pair into your Public Cloud project and link it to the instance\n",
                        "willReplaceOnChanges": true
                    },
                    "taskState": {
                        "type": "string",
                        "description": "Instance task state\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Configuration information or scripts to use upon launch\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/instanceSnapshot:InstanceSnapshot": {
            "description": "Create and manage snapshots for an instance in a public cloud project.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst snapshot = new ovh.cloudproject.InstanceSnapshot(\"snapshot\", {\n    instanceId: \"\u003cinstance ID\u003e\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsnapshot = ovh.cloud_project.InstanceSnapshot(\"snapshot\",\n    instance_id=\"\u003cinstance ID\u003e\",\n    service_name=\"\u003cpublic cloud project ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var snapshot = new Ovh.CloudProject.InstanceSnapshot(\"snapshot\", new()\n    {\n        InstanceId = \"\u003cinstance ID\u003e\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewInstanceSnapshot(ctx, \"snapshot\", \u0026cloudproject.InstanceSnapshotArgs{\n\t\t\tInstanceId:  pulumi.String(\"\u003cinstance ID\u003e\"),\n\t\t\tServiceName: pulumi.String(\"\u003cpublic cloud project ID\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.InstanceSnapshot;\nimport com.pulumi.ovh.CloudProject.InstanceSnapshotArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var snapshot = new InstanceSnapshot(\"snapshot\", InstanceSnapshotArgs.builder()\n            .instanceId(\"\u003cinstance ID\u003e\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  snapshot:\n    type: ovh:CloudProject:InstanceSnapshot\n    properties:\n      instanceId: \u003cinstance ID\u003e\n      serviceName: \u003cpublic cloud project ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "Image creation date\n"
                },
                "flavorType": {
                    "type": "string",
                    "description": "Image usable only for this type of flavor if not null\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID\n"
                },
                "minDisk": {
                    "type": "number",
                    "description": "Minimum disks required to use image\n"
                },
                "minRam": {
                    "type": "number",
                    "description": "Minimum RAM required to use image\n"
                },
                "name": {
                    "type": "string",
                    "description": "Snapshot name\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Order plan code\n"
                },
                "region": {
                    "type": "string",
                    "description": "Image region\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "size": {
                    "type": "number",
                    "description": "Image size (in GiB)\n"
                },
                "status": {
                    "type": "string",
                    "description": "Image status\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Tags about the image\n"
                },
                "type": {
                    "type": "string",
                    "description": "Image type\n"
                },
                "user": {
                    "type": "string",
                    "description": "User to connect with\n"
                },
                "visibility": {
                    "type": "string",
                    "description": "Image visibility\n"
                }
            },
            "required": [
                "creationDate",
                "flavorType",
                "instanceId",
                "minDisk",
                "minRam",
                "name",
                "planCode",
                "region",
                "serviceName",
                "size",
                "status",
                "tags",
                "type",
                "user",
                "visibility"
            ],
            "inputProperties": {
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Snapshot name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                }
            },
            "requiredInputs": [
                "instanceId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InstanceSnapshot resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Image creation date\n"
                    },
                    "flavorType": {
                        "type": "string",
                        "description": "Image usable only for this type of flavor if not null\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Instance ID\n"
                    },
                    "minDisk": {
                        "type": "number",
                        "description": "Minimum disks required to use image\n"
                    },
                    "minRam": {
                        "type": "number",
                        "description": "Minimum RAM required to use image\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Snapshot name\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Order plan code\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Image region\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Image size (in GiB)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Image status\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags about the image\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Image type\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "User to connect with\n"
                    },
                    "visibility": {
                        "type": "string",
                        "description": "Image visibility\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kube:Kube": {
            "description": "\n\n## Import\n\nOVHcloud Managed Kubernetes Service clusters can be imported using the `service_name` and the `id` of the cluster, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/kube:Kube my_kube_cluster service_name/kube_id\n```\n\n",
            "properties": {
                "controlPlaneIsUpToDate": {
                    "type": "boolean",
                    "description": "True if control-plane is up-to-date.\n"
                },
                "customizationApiservers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver"
                    },
                    "description": "Kubernetes API server customization\n"
                },
                "customizationKubeProxy": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxy:KubeCustomizationKubeProxy",
                    "description": "Kubernetes kube-proxy customization\n"
                },
                "customizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomization:KubeCustomization"
                    },
                    "description": "**Deprecated** (Optional) Use `customization_apiserver` and `customization_kube_proxy` instead. Kubernetes cluster customization\n",
                    "deprecationMessage": "Use customization_apiserver instead"
                },
                "isUpToDate": {
                    "type": "boolean",
                    "description": "True if all nodes and control-plane are up-to-date.\n"
                },
                "kubeProxyMode": {
                    "type": "string",
                    "description": "Selected mode for kube-proxy. **Changing this value recreates the resource, including ETCD user data.** Defaults to `iptables`.\n"
                },
                "kubeconfig": {
                    "type": "string",
                    "description": "The kubeconfig file. Use this file to connect to your kubernetes cluster.\n",
                    "secret": true
                },
                "kubeconfigAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeKubeconfigAttribute:KubeKubeconfigAttribute"
                    },
                    "description": "The kubeconfig file attributes.\n",
                    "secret": true
                },
                "loadBalancersSubnetId": {
                    "type": "string",
                    "description": "Subnet ID to use for Public Load Balancers, this subnet must belong to  `private_network_id`. Defaults to the same subnet as the nodes (see `nodes_subnet_id`). Requires `private_network_id` to be defined. See more network requirements in the [documentation](https://help.ovhcloud.com/csm/fr-public-cloud-kubernetes-expose-applications-using-load-balancer?id=kb_article_view\u0026sysparm_article=KB0062873) for more information.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the kubernetes cluster.\n"
                },
                "nextUpgradeVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Kubernetes versions available for upgrade.\n"
                },
                "nodesSubnetId": {
                    "type": "string",
                    "description": "Subnet ID to use for nodes, this subnet must belong to `private_network_id`. Default uses the first subnet belonging to the private network with id `private_network_id`. This attribute requires `private_network_id` to be defined. **Cannot be updated, it can only be used at cluster creation or reset.**\n"
                },
                "nodesUrl": {
                    "type": "string",
                    "description": "Cluster nodes URL.\n"
                },
                "privateNetworkConfiguration": {
                    "$ref": "#/types/ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration",
                    "description": "The private network configuration. If this is set then the 2 parameters below shall be defined.\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "Private network ID to use. **Changing this value recreates the resource, including ETCD user data.** Defaults - not use private network.\n\n\u003e **WARNING** Updating the private network ID resets the cluster so that all user data is deleted.\n"
                },
                "region": {
                    "type": "string",
                    "description": "a valid OVHcloud public cloud region ID in which the kubernetes cluster will be available. Ex.: \"GRA1\". Defaults to all public cloud regions. **Changing this value recreates the resource.**\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n"
                },
                "status": {
                    "type": "string",
                    "description": "Cluster status. Should be normally set to 'READY'.\n"
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE].\n"
                },
                "url": {
                    "type": "string",
                    "description": "Management URL of your cluster.\n"
                },
                "version": {
                    "type": "string",
                    "description": "kubernetes version to use. Changing this value updates the resource. Defaults to the latest available.\n"
                }
            },
            "required": [
                "controlPlaneIsUpToDate",
                "customizations",
                "customizationApiservers",
                "isUpToDate",
                "kubeProxyMode",
                "kubeconfig",
                "kubeconfigAttributes",
                "name",
                "nextUpgradeVersions",
                "nodesSubnetId",
                "nodesUrl",
                "region",
                "serviceName",
                "status",
                "updatePolicy",
                "url",
                "version"
            ],
            "inputProperties": {
                "customizationApiservers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver"
                    },
                    "description": "Kubernetes API server customization\n"
                },
                "customizationKubeProxy": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxy:KubeCustomizationKubeProxy",
                    "description": "Kubernetes kube-proxy customization\n"
                },
                "customizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomization:KubeCustomization"
                    },
                    "description": "**Deprecated** (Optional) Use `customization_apiserver` and `customization_kube_proxy` instead. Kubernetes cluster customization\n",
                    "deprecationMessage": "Use customization_apiserver instead"
                },
                "kubeProxyMode": {
                    "type": "string",
                    "description": "Selected mode for kube-proxy. **Changing this value recreates the resource, including ETCD user data.** Defaults to `iptables`.\n",
                    "willReplaceOnChanges": true
                },
                "loadBalancersSubnetId": {
                    "type": "string",
                    "description": "Subnet ID to use for Public Load Balancers, this subnet must belong to  `private_network_id`. Defaults to the same subnet as the nodes (see `nodes_subnet_id`). Requires `private_network_id` to be defined. See more network requirements in the [documentation](https://help.ovhcloud.com/csm/fr-public-cloud-kubernetes-expose-applications-using-load-balancer?id=kb_article_view\u0026sysparm_article=KB0062873) for more information.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the kubernetes cluster.\n"
                },
                "nodesSubnetId": {
                    "type": "string",
                    "description": "Subnet ID to use for nodes, this subnet must belong to `private_network_id`. Default uses the first subnet belonging to the private network with id `private_network_id`. This attribute requires `private_network_id` to be defined. **Cannot be updated, it can only be used at cluster creation or reset.**\n"
                },
                "privateNetworkConfiguration": {
                    "$ref": "#/types/ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration",
                    "description": "The private network configuration. If this is set then the 2 parameters below shall be defined.\n"
                },
                "privateNetworkId": {
                    "type": "string",
                    "description": "Private network ID to use. **Changing this value recreates the resource, including ETCD user data.** Defaults - not use private network.\n\n\u003e **WARNING** Updating the private network ID resets the cluster so that all user data is deleted.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "a valid OVHcloud public cloud region ID in which the kubernetes cluster will be available. Ex.: \"GRA1\". Defaults to all public cloud regions. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "updatePolicy": {
                    "type": "string",
                    "description": "Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE].\n"
                },
                "version": {
                    "type": "string",
                    "description": "kubernetes version to use. Changing this value updates the resource. Defaults to the latest available.\n"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Kube resources.\n",
                "properties": {
                    "controlPlaneIsUpToDate": {
                        "type": "boolean",
                        "description": "True if control-plane is up-to-date.\n"
                    },
                    "customizationApiservers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver"
                        },
                        "description": "Kubernetes API server customization\n"
                    },
                    "customizationKubeProxy": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxy:KubeCustomizationKubeProxy",
                        "description": "Kubernetes kube-proxy customization\n"
                    },
                    "customizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/KubeCustomization:KubeCustomization"
                        },
                        "description": "**Deprecated** (Optional) Use `customization_apiserver` and `customization_kube_proxy` instead. Kubernetes cluster customization\n",
                        "deprecationMessage": "Use customization_apiserver instead"
                    },
                    "isUpToDate": {
                        "type": "boolean",
                        "description": "True if all nodes and control-plane are up-to-date.\n"
                    },
                    "kubeProxyMode": {
                        "type": "string",
                        "description": "Selected mode for kube-proxy. **Changing this value recreates the resource, including ETCD user data.** Defaults to `iptables`.\n",
                        "willReplaceOnChanges": true
                    },
                    "kubeconfig": {
                        "type": "string",
                        "description": "The kubeconfig file. Use this file to connect to your kubernetes cluster.\n",
                        "secret": true
                    },
                    "kubeconfigAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/KubeKubeconfigAttribute:KubeKubeconfigAttribute"
                        },
                        "description": "The kubeconfig file attributes.\n",
                        "secret": true
                    },
                    "loadBalancersSubnetId": {
                        "type": "string",
                        "description": "Subnet ID to use for Public Load Balancers, this subnet must belong to  `private_network_id`. Defaults to the same subnet as the nodes (see `nodes_subnet_id`). Requires `private_network_id` to be defined. See more network requirements in the [documentation](https://help.ovhcloud.com/csm/fr-public-cloud-kubernetes-expose-applications-using-load-balancer?id=kb_article_view\u0026sysparm_article=KB0062873) for more information.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the kubernetes cluster.\n"
                    },
                    "nextUpgradeVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Kubernetes versions available for upgrade.\n"
                    },
                    "nodesSubnetId": {
                        "type": "string",
                        "description": "Subnet ID to use for nodes, this subnet must belong to `private_network_id`. Default uses the first subnet belonging to the private network with id `private_network_id`. This attribute requires `private_network_id` to be defined. **Cannot be updated, it can only be used at cluster creation or reset.**\n"
                    },
                    "nodesUrl": {
                        "type": "string",
                        "description": "Cluster nodes URL.\n"
                    },
                    "privateNetworkConfiguration": {
                        "$ref": "#/types/ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration",
                        "description": "The private network configuration. If this is set then the 2 parameters below shall be defined.\n"
                    },
                    "privateNetworkId": {
                        "type": "string",
                        "description": "Private network ID to use. **Changing this value recreates the resource, including ETCD user data.** Defaults - not use private network.\n\n\u003e **WARNING** Updating the private network ID resets the cluster so that all user data is deleted.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "a valid OVHcloud public cloud region ID in which the kubernetes cluster will be available. Ex.: \"GRA1\". Defaults to all public cloud regions. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Cluster status. Should be normally set to 'READY'.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "Cluster update policy. Choose between [ALWAYS_UPDATE, MINIMAL_DOWNTIME, NEVER_UPDATE].\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Management URL of your cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "kubernetes version to use. Changing this value updates the resource. Defaults to the latest available.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kubeIpRestrictions:KubeIpRestrictions": {
            "description": "Apply IP restrictions to an OVHcloud Managed Kubernetes cluster.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst vrackOnly = new ovh.cloudproject.KubeIpRestrictions(\"vrackOnly\", {\n    ips: [\"10.42.0.0/16\"],\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvrack_only = ovh.cloud_project.KubeIpRestrictions(\"vrackOnly\",\n    ips=[\"10.42.0.0/16\"],\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vrackOnly = new Ovh.CloudProject.KubeIpRestrictions(\"vrackOnly\", new()\n    {\n        Ips = new[]\n        {\n            \"10.42.0.0/16\",\n        },\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewKubeIpRestrictions(ctx, \"vrackOnly\", \u0026cloudproject.KubeIpRestrictionsArgs{\n\t\t\tIps: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.42.0.0/16\"),\n\t\t\t},\n\t\t\tKubeId:      pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\"),\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.KubeIpRestrictions;\nimport com.pulumi.ovh.CloudProject.KubeIpRestrictionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vrackOnly = new KubeIpRestrictions(\"vrackOnly\", KubeIpRestrictionsArgs.builder()\n            .ips(\"10.42.0.0/16\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackOnly:\n    type: ovh:CloudProject:KubeIpRestrictions\n    properties:\n      ips:\n        - 10.42.0.0/16\n      kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed Kubernetes Service cluster IP restrictions can be imported using the `service_name` and the `id` of the cluster, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/kubeIpRestrictions:KubeIpRestrictions iprestrictions service_name/kube_id\n```\n\n",
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of CIDR authorized to interact with the managed Kubernetes cluster.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed Kubernetes cluster. **Changing this value recreates the resource.**\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n"
                }
            },
            "required": [
                "ips",
                "kubeId",
                "serviceName"
            ],
            "inputProperties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of CIDR authorized to interact with the managed Kubernetes cluster.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed Kubernetes cluster. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ips",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubeIpRestrictions resources.\n",
                "properties": {
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of CIDR authorized to interact with the managed Kubernetes cluster.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed Kubernetes cluster. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kubeNodePool:KubeNodePool": {
            "description": "Creates a nodepool in a OVHcloud Managed Kubernetes Service cluster.\n\n## Example Usage\n\nCreate a simple node pool in your Kubernetes cluster:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst nodePool = new ovh.cloudproject.KubeNodePool(\"nodePool\", {\n    desiredNodes: 3,\n    flavorName: \"b2-7\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    maxNodes: 3,\n    minNodes: 3,\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnode_pool = ovh.cloud_project.KubeNodePool(\"nodePool\",\n    desired_nodes=3,\n    flavor_name=\"b2-7\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    max_nodes=3,\n    min_nodes=3,\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodePool = new Ovh.CloudProject.KubeNodePool(\"nodePool\", new()\n    {\n        DesiredNodes = 3,\n        FlavorName = \"b2-7\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        MaxNodes = 3,\n        MinNodes = 3,\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewKubeNodePool(ctx, \"nodePool\", \u0026cloudproject.KubeNodePoolArgs{\n\t\t\tDesiredNodes: pulumi.Int(3),\n\t\t\tFlavorName:   pulumi.String(\"b2-7\"),\n\t\t\tKubeId:       pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tMaxNodes:     pulumi.Int(3),\n\t\t\tMinNodes:     pulumi.Int(3),\n\t\t\tServiceName:  pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.KubeNodePool;\nimport com.pulumi.ovh.CloudProject.KubeNodePoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var nodePool = new KubeNodePool(\"nodePool\", KubeNodePoolArgs.builder()\n            .desiredNodes(3)\n            .flavorName(\"b2-7\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .maxNodes(3)\n            .minNodes(3)\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  nodePool:\n    type: ovh:CloudProject:KubeNodePool\n    properties:\n      desiredNodes: 3\n      flavorName: b2-7\n      kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      maxNodes: 3\n      minNodes: 3\n      # Warning: \"_\" char is not allowed!\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nCreate an advanced node pool in your Kubernetes cluster:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst pool = new ovh.cloudproject.KubeNodePool(\"pool\", {\n    desiredNodes: 3,\n    flavorName: \"b2-7\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    maxNodes: 3,\n    minNodes: 3,\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    template: {\n        metadata: {\n            annotations: {\n                k1: \"v1\",\n                k2: \"v2\",\n            },\n            finalizers: [],\n            labels: {\n                k3: \"v3\",\n                k4: \"v4\",\n            },\n        },\n        spec: {\n            taints: [{\n                effect: \"PreferNoSchedule\",\n                key: \"k\",\n                value: \"v\",\n            }],\n            unschedulable: false,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npool = ovh.cloud_project.KubeNodePool(\"pool\",\n    desired_nodes=3,\n    flavor_name=\"b2-7\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    max_nodes=3,\n    min_nodes=3,\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    template={\n        \"metadata\": {\n            \"annotations\": {\n                \"k1\": \"v1\",\n                \"k2\": \"v2\",\n            },\n            \"finalizers\": [],\n            \"labels\": {\n                \"k3\": \"v3\",\n                \"k4\": \"v4\",\n            },\n        },\n        \"spec\": {\n            \"taints\": [{\n                \"effect\": \"PreferNoSchedule\",\n                \"key\": \"k\",\n                \"value\": \"v\",\n            }],\n            \"unschedulable\": False,\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pool = new Ovh.CloudProject.KubeNodePool(\"pool\", new()\n    {\n        DesiredNodes = 3,\n        FlavorName = \"b2-7\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        MaxNodes = 3,\n        MinNodes = 3,\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        Template = new Ovh.CloudProject.Inputs.KubeNodePoolTemplateArgs\n        {\n            Metadata = new Ovh.CloudProject.Inputs.KubeNodePoolTemplateMetadataArgs\n            {\n                Annotations = \n                {\n                    { \"k1\", \"v1\" },\n                    { \"k2\", \"v2\" },\n                },\n                Finalizers = new() { },\n                Labels = \n                {\n                    { \"k3\", \"v3\" },\n                    { \"k4\", \"v4\" },\n                },\n            },\n            Spec = new Ovh.CloudProject.Inputs.KubeNodePoolTemplateSpecArgs\n            {\n                Taints = new[]\n                {\n                    \n                    {\n                        { \"effect\", \"PreferNoSchedule\" },\n                        { \"key\", \"k\" },\n                        { \"value\", \"v\" },\n                    },\n                },\n                Unschedulable = false,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewKubeNodePool(ctx, \"pool\", \u0026cloudproject.KubeNodePoolArgs{\n\t\t\tDesiredNodes: pulumi.Int(3),\n\t\t\tFlavorName:   pulumi.String(\"b2-7\"),\n\t\t\tKubeId:       pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tMaxNodes:     pulumi.Int(3),\n\t\t\tMinNodes:     pulumi.Int(3),\n\t\t\tServiceName:  pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tTemplate: \u0026cloudproject.KubeNodePoolTemplateArgs{\n\t\t\t\tMetadata: \u0026cloudproject.KubeNodePoolTemplateMetadataArgs{\n\t\t\t\t\tAnnotations: pulumi.StringMap{\n\t\t\t\t\t\t\"k1\": pulumi.String(\"v1\"),\n\t\t\t\t\t\t\"k2\": pulumi.String(\"v2\"),\n\t\t\t\t\t},\n\t\t\t\t\tFinalizers: pulumi.StringArray{},\n\t\t\t\t\tLabels: pulumi.StringMap{\n\t\t\t\t\t\t\"k3\": pulumi.String(\"v3\"),\n\t\t\t\t\t\t\"k4\": pulumi.String(\"v4\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tSpec: \u0026cloudproject.KubeNodePoolTemplateSpecArgs{\n\t\t\t\t\tTaints: pulumi.StringMapArray{\n\t\t\t\t\t\tpulumi.StringMap{\n\t\t\t\t\t\t\t\"effect\": pulumi.String(\"PreferNoSchedule\"),\n\t\t\t\t\t\t\t\"key\":    pulumi.String(\"k\"),\n\t\t\t\t\t\t\t\"value\":  pulumi.String(\"v\"),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tUnschedulable: pulumi.Bool(false),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.KubeNodePool;\nimport com.pulumi.ovh.CloudProject.KubeNodePoolArgs;\nimport com.pulumi.ovh.CloudProject.inputs.KubeNodePoolTemplateArgs;\nimport com.pulumi.ovh.CloudProject.inputs.KubeNodePoolTemplateMetadataArgs;\nimport com.pulumi.ovh.CloudProject.inputs.KubeNodePoolTemplateSpecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var pool = new KubeNodePool(\"pool\", KubeNodePoolArgs.builder()\n            .desiredNodes(3)\n            .flavorName(\"b2-7\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .maxNodes(3)\n            .minNodes(3)\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .template(KubeNodePoolTemplateArgs.builder()\n                .metadata(KubeNodePoolTemplateMetadataArgs.builder()\n                    .annotations(Map.ofEntries(\n                        Map.entry(\"k1\", \"v1\"),\n                        Map.entry(\"k2\", \"v2\")\n                    ))\n                    .finalizers()\n                    .labels(Map.ofEntries(\n                        Map.entry(\"k3\", \"v3\"),\n                        Map.entry(\"k4\", \"v4\")\n                    ))\n                    .build())\n                .spec(KubeNodePoolTemplateSpecArgs.builder()\n                    .taints(Map.ofEntries(\n                        Map.entry(\"effect\", \"PreferNoSchedule\"),\n                        Map.entry(\"key\", \"k\"),\n                        Map.entry(\"value\", \"v\")\n                    ))\n                    .unschedulable(false)\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  pool:\n    type: ovh:CloudProject:KubeNodePool\n    properties:\n      desiredNodes: 3\n      flavorName: b2-7\n      kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      maxNodes: 3\n      minNodes: 3\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      template:\n        metadata:\n          annotations:\n            k1: v1\n            k2: v2\n          finalizers: []\n          labels:\n            k3: v3\n            k4: v4\n        spec:\n          taints:\n            - effect: PreferNoSchedule\n              key: k\n              value: v\n          unschedulable: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed Kubernetes Service cluster node pool can be imported using the `service_name`, the `id` of the cluster, and the `id` of the nodepool separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/kubeNodePool:KubeNodePool pool service_name/kube_id/poolid\n```\n\n",
            "properties": {
                "antiAffinity": {
                    "type": "boolean",
                    "description": "should the pool use the anti-affinity feature. Default to `false`. **Changing this value recreates the resource.**\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling for the pool. Default to `false`.\n"
                },
                "autoscalingScaleDownUnneededTimeSeconds": {
                    "type": "integer",
                    "description": "scaleDownUnneededTimeSeconds autoscaling parameter How long a node should be unneeded before it is eligible for scale down\n"
                },
                "autoscalingScaleDownUnreadyTimeSeconds": {
                    "type": "integer",
                    "description": "scaleDownUnreadyTimeSeconds autoscaling parameter How long an unready node should be unneeded before it is eligible for scale down\n"
                },
                "autoscalingScaleDownUtilizationThreshold": {
                    "type": "number",
                    "description": "scaleDownUtilizationThreshold autoscaling parameter Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down\n* `template ` - (Optional) Managed Kubernetes nodepool template, which is a complex object constituted by two main nested objects:\n"
                },
                "availableNodes": {
                    "type": "integer",
                    "description": "Number of nodes which are actually ready in the pool\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation date\n"
                },
                "currentNodes": {
                    "type": "integer",
                    "description": "Number of nodes present in the pool\n"
                },
                "desiredNodes": {
                    "type": "integer",
                    "description": "number of nodes to start.\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "a valid OVHcloud public cloud flavor ID in which the nodes will be started. Ex: \"b2-7\". You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/. **Changing this value recreates the resource.**\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed kubernetes cluster. **Changing this value recreates the resource.**\n"
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "maximum number of nodes allowed in the pool. Setting `desired_nodes` over this value will raise an error.\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "minimum number of nodes allowed in the pool. Setting `desired_nodes` under this value will raise an error.\n"
                },
                "monthlyBilled": {
                    "type": "boolean",
                    "description": "should the nodes be billed on a monthly basis. Default to `false`. **Changing this value recreates the resource.**\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the nodepool. Warning: `_` char is not allowed! **Changing this value recreates the resource.**\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project id\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n"
                },
                "sizeStatus": {
                    "type": "string",
                    "description": "Status describing the state between number of nodes wanted and available ones\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n"
                },
                "template": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate",
                    "description": "Node pool template\n"
                },
                "upToDateNodes": {
                    "type": "integer",
                    "description": "Number of nodes with the latest version installed in the pool\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date\n"
                }
            },
            "required": [
                "antiAffinity",
                "autoscale",
                "autoscalingScaleDownUnneededTimeSeconds",
                "autoscalingScaleDownUnreadyTimeSeconds",
                "autoscalingScaleDownUtilizationThreshold",
                "availableNodes",
                "createdAt",
                "currentNodes",
                "desiredNodes",
                "flavor",
                "flavorName",
                "kubeId",
                "maxNodes",
                "minNodes",
                "monthlyBilled",
                "name",
                "projectId",
                "serviceName",
                "sizeStatus",
                "status",
                "upToDateNodes",
                "updatedAt"
            ],
            "inputProperties": {
                "antiAffinity": {
                    "type": "boolean",
                    "description": "should the pool use the anti-affinity feature. Default to `false`. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling for the pool. Default to `false`.\n"
                },
                "autoscalingScaleDownUnneededTimeSeconds": {
                    "type": "integer",
                    "description": "scaleDownUnneededTimeSeconds autoscaling parameter How long a node should be unneeded before it is eligible for scale down\n"
                },
                "autoscalingScaleDownUnreadyTimeSeconds": {
                    "type": "integer",
                    "description": "scaleDownUnreadyTimeSeconds autoscaling parameter How long an unready node should be unneeded before it is eligible for scale down\n"
                },
                "autoscalingScaleDownUtilizationThreshold": {
                    "type": "number",
                    "description": "scaleDownUtilizationThreshold autoscaling parameter Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down\n* `template ` - (Optional) Managed Kubernetes nodepool template, which is a complex object constituted by two main nested objects:\n"
                },
                "desiredNodes": {
                    "type": "integer",
                    "description": "number of nodes to start.\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "a valid OVHcloud public cloud flavor ID in which the nodes will be started. Ex: \"b2-7\". You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "kubeId": {
                    "type": "string",
                    "description": "The id of the managed kubernetes cluster. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "maximum number of nodes allowed in the pool. Setting `desired_nodes` over this value will raise an error.\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "minimum number of nodes allowed in the pool. Setting `desired_nodes` under this value will raise an error.\n"
                },
                "monthlyBilled": {
                    "type": "boolean",
                    "description": "should the nodes be billed on a monthly basis. Default to `false`. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the nodepool. Warning: `_` char is not allowed! **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "template": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate",
                    "description": "Node pool template\n"
                }
            },
            "requiredInputs": [
                "flavorName",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubeNodePool resources.\n",
                "properties": {
                    "antiAffinity": {
                        "type": "boolean",
                        "description": "should the pool use the anti-affinity feature. Default to `false`. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "Enable auto-scaling for the pool. Default to `false`.\n"
                    },
                    "autoscalingScaleDownUnneededTimeSeconds": {
                        "type": "integer",
                        "description": "scaleDownUnneededTimeSeconds autoscaling parameter How long a node should be unneeded before it is eligible for scale down\n"
                    },
                    "autoscalingScaleDownUnreadyTimeSeconds": {
                        "type": "integer",
                        "description": "scaleDownUnreadyTimeSeconds autoscaling parameter How long an unready node should be unneeded before it is eligible for scale down\n"
                    },
                    "autoscalingScaleDownUtilizationThreshold": {
                        "type": "number",
                        "description": "scaleDownUtilizationThreshold autoscaling parameter Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down\n* `template ` - (Optional) Managed Kubernetes nodepool template, which is a complex object constituted by two main nested objects:\n"
                    },
                    "availableNodes": {
                        "type": "integer",
                        "description": "Number of nodes which are actually ready in the pool\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date\n"
                    },
                    "currentNodes": {
                        "type": "integer",
                        "description": "Number of nodes present in the pool\n"
                    },
                    "desiredNodes": {
                        "type": "integer",
                        "description": "number of nodes to start.\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "a valid OVHcloud public cloud flavor ID in which the nodes will be started. Ex: \"b2-7\". You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "maxNodes": {
                        "type": "integer",
                        "description": "maximum number of nodes allowed in the pool. Setting `desired_nodes` over this value will raise an error.\n"
                    },
                    "minNodes": {
                        "type": "integer",
                        "description": "minimum number of nodes allowed in the pool. Setting `desired_nodes` under this value will raise an error.\n"
                    },
                    "monthlyBilled": {
                        "type": "boolean",
                        "description": "should the nodes be billed on a monthly basis. Default to `false`. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the nodepool. Warning: `_` char is not allowed! **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project id\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "sizeStatus": {
                        "type": "string",
                        "description": "Status describing the state between number of nodes wanted and available ones\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status\n"
                    },
                    "template": {
                        "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate",
                        "description": "Node pool template\n"
                    },
                    "upToDateNodes": {
                        "type": "integer",
                        "description": "Number of nodes with the latest version installed in the pool\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kubeOidc:KubeOidc": {
            "description": "Creates an OIDC configuration in an OVHcloud Managed Kubernetes cluster.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myOidc = new ovh.cloudproject.KubeOidc(\"myOidc\", {\n    serviceName: _var.projectid,\n    kubeId: ovh_cloud_project_kube.mykube.id,\n    clientId: \"xxx\",\n    issuerUrl: \"https://ovh.com\",\n    oidcUsernameClaim: \"an-email\",\n    oidcUsernamePrefix: \"ovh:\",\n    oidcGroupsClaims: [\"groups\"],\n    oidcGroupsPrefix: \"ovh:\",\n    oidcRequiredClaims: [\"claim1=val1\"],\n    oidcSigningAlgs: [\"RS512\"],\n    oidcCaContent: \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_oidc = ovh.cloud_project.KubeOidc(\"myOidc\",\n    service_name=var[\"projectid\"],\n    kube_id=ovh_cloud_project_kube[\"mykube\"][\"id\"],\n    client_id=\"xxx\",\n    issuer_url=\"https://ovh.com\",\n    oidc_username_claim=\"an-email\",\n    oidc_username_prefix=\"ovh:\",\n    oidc_groups_claims=[\"groups\"],\n    oidc_groups_prefix=\"ovh:\",\n    oidc_required_claims=[\"claim1=val1\"],\n    oidc_signing_algs=[\"RS512\"],\n    oidc_ca_content=\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myOidc = new Ovh.CloudProject.KubeOidc(\"myOidc\", new()\n    {\n        ServiceName = @var.Projectid,\n        KubeId = ovh_cloud_project_kube.Mykube.Id,\n        ClientId = \"xxx\",\n        IssuerUrl = \"https://ovh.com\",\n        OidcUsernameClaim = \"an-email\",\n        OidcUsernamePrefix = \"ovh:\",\n        OidcGroupsClaims = new[]\n        {\n            \"groups\",\n        },\n        OidcGroupsPrefix = \"ovh:\",\n        OidcRequiredClaims = new[]\n        {\n            \"claim1=val1\",\n        },\n        OidcSigningAlgs = new[]\n        {\n            \"RS512\",\n        },\n        OidcCaContent = \"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewKubeOidc(ctx, \"myOidc\", \u0026cloudproject.KubeOidcArgs{\n\t\t\tServiceName:        pulumi.Any(_var.Projectid),\n\t\t\tKubeId:             pulumi.Any(ovh_cloud_project_kube.Mykube.Id),\n\t\t\tClientId:           pulumi.String(\"xxx\"),\n\t\t\tIssuerUrl:          pulumi.String(\"https://ovh.com\"),\n\t\t\tOidcUsernameClaim:  pulumi.String(\"an-email\"),\n\t\t\tOidcUsernamePrefix: pulumi.String(\"ovh:\"),\n\t\t\tOidcGroupsClaims: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"groups\"),\n\t\t\t},\n\t\t\tOidcGroupsPrefix: pulumi.String(\"ovh:\"),\n\t\t\tOidcRequiredClaims: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"claim1=val1\"),\n\t\t\t},\n\t\t\tOidcSigningAlgs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"RS512\"),\n\t\t\t},\n\t\t\tOidcCaContent: pulumi.String(\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.KubeOidc;\nimport com.pulumi.ovh.CloudProject.KubeOidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myOidc = new KubeOidc(\"myOidc\", KubeOidcArgs.builder()\n            .serviceName(var_.projectid())\n            .kubeId(ovh_cloud_project_kube.mykube().id())\n            .clientId(\"xxx\")\n            .issuerUrl(\"https://ovh.com\")\n            .oidcUsernameClaim(\"an-email\")\n            .oidcUsernamePrefix(\"ovh:\")\n            .oidcGroupsClaims(\"groups\")\n            .oidcGroupsPrefix(\"ovh:\")\n            .oidcRequiredClaims(\"claim1=val1\")\n            .oidcSigningAlgs(\"RS512\")\n            .oidcCaContent(\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myOidc:\n    type: ovh:CloudProject:KubeOidc\n    properties:\n      serviceName: ${var.projectid}\n      kubeId: ${ovh_cloud_project_kube.mykube.id}\n      #required field\n      clientId: xxx\n      issuerUrl: https://ovh.com\n      #optional field\n      oidcUsernameClaim: an-email\n      oidcUsernamePrefix: 'ovh:'\n      oidcGroupsClaims:\n        - groups\n      oidcGroupsPrefix: 'ovh:'\n      oidcRequiredClaims:\n        - claim1=val1\n      oidcSigningAlgs:\n        - RS512\n      oidcCaContent: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVYm9YRkZrL1hCQmdQUUI4UHlqbkttUGVWekNjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TWpFd01UUXdOalE0TlROYUZ3MHlNekV3Ck1UUXdOalE0TlROYU1FVXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUXdnZ0lpTUEwR0NTcUdTSWIzRFFFQgpBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQytPMk53bGx2QTQyT05SUHMyZWlqTUp2UHhpN21RblVSS3FrOHJEV1VkCkwzZU0yM1JXeVhtS1AydDQ5Zi9LVGsweEZNVStOSTUzTEhwWmh6N3NpK3dEUFUvWWZWSS9rQmZsRm8zeVZCMSsKZWdCSnpyNGIrQ3FoaWlCUkh0Vm5LblFKUmdvOVJjVkxhRm82UEY0N1V0UWJ2bWVuNGdERnExVkYwVHhUdnFMdwpIMzRZL0U2QUJsSlZnWFBzaWQzNm54eTErNnlKV05vRXNVekFiekpWMHhzTGhxc2hOazA0TWx4YnBhcG1XcEUxCmFFMHRIZGpjUlI3Y1dTRUUwMnRSQzNYL2tSNjBKb3MxR0N0Y0ZQTTVIN3NjOFBXNFRUem1EWWhOeDRiVjV4T28KU0xYRnI5ajBzZEgxbm1wSlI1dWxJT2dPTWV3MHA2d3JOYVV2MGpxc1hzdVdqMVpxdTRLRi81aEQ3azVhRlhKNQpjYWNTUi9mRWxreW1uZis0eHZFOG8wdkRWNFR5NHo3K3lSS1U0clZvZFNBZWZIN3lqeitLV1RRck96L0lHU2NwCmV1YTdqV0hRMDdMYWxyTjV2b0tFaU1JM3MrWjhzeUdVUGVyYXQwdzJMWlc3NnhxVGl4R002clZxUldxVlQ4L1oKQTJMMEc4WGRvNTZvV2lFYVF5RkJtRDFnMXU2UEsvTmFGVDI1L2tTNWJ1dnF5L1dLVGt0UVNhNHNZc1ZLbUlQTQp0Zys0NUZ2aFErNkRuQzd0TmVnaTZDTkdTb0w0R1dPOEE5UDZRNjE5RkJJZ1VjcGpFMTgvUHpQOEJmcTAxajhnCjZmdm1jNkVPMkxHVHhDcW1DbVp0TnI3OCtQaUxkMHZIY3pqY3E3NzhiNW5WRXRpUVNRQkUyb0ozTVlIZUFIUUkKYVFJREFRQUJvMU13VVRBZEJnTlZIUTRFRmdRVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdId1lEVlIwagpCQmd3Rm9BVUpaMUhlVmx1U3pjY0U2NEZQYWtuNkRBWnhmSXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU5CZ2txCmhraUc5dzBCQVFzRkFBT0NBZ0VBQlhNSlU2MjJZVFZVNnZ1K2svNnkwMGNaWlRmVnZtdVJMOXhTcWxVM0I1QmQKVWdyVWx1TmdjN2dhUUlrYzkvWmh2MnhNd0xxUldMWEhiTWx1NkNvdkNiVTVpeWt0NHVWMnl5UzlZYWhmVVRNVQo3TVE0WFRta2hoS0dGbWZBQ2QzTUVwRE55T3hmWXh0UVBwM1NZT2IxRGFKMmUwY01Gc081bytORGQ5aFVBVzFoCjFLMjMwQnZzYldYYVo4MStIdTU4U1BsYTM5R3FMTG85MzR6dEs4WkRWNFRGTVJxMnNVQ1cxcWFidDh5ejd2RzAKSGV3dXdxelRwR1lTSFI1U0ZvMm45R0xKVUN4SnhxcDlOWVJjMlhUdXRUdkJESzVPMXFZZEJaQzd6cmcxSnczawp2SjI4UGx2TzBQRE42ZVlUdElJdC9yU05ZbW56eVVNRTRYREt0di9KRitLZWZNSWxDTkpzZDRHYXVTdlo5M1NOClhINmcrNEZvRkp4UzNxRmZ0WEc4czNRNnppNzNLRzh5UHZVNHU0WmZNRGd2aG92L0V5YkNLWUpFdVVZSlJWNGEKbmc3cWh3NDBabXQ0eWNCRzU5a2tFSGhNYWtxTWpPaUNkV2x4MEVjZXIxcEFGT1pqN3o1NktURXIxa0ZwUHVaRApjVER5SnNwTjh6dm9CQ0l1ancvQjR6S3kyWStOQitRR1p3dXhyTk9mRGR6ek9yQUE1Ym9OS2gwUUh4c0RxNTExClFaU3hCR21EcGJzN2QzMUQvQll3WEhIUWdwb3FoVUU5dFBGSThpN0pkM2FyeXZCdHlnTWlxSmt1VlRFVk1Ta0UKNTZ0VnFsMjlXenFhRXNrbDN3VUlmczVKKzN3RzRPcWNxRDdXaGQxWUtnc0VUMjdFTWlqVXZIYzQ4TXE0bU1rPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed Kubernetes Service cluster OIDC can be imported using the tenant `service_name` and cluster id `kube_id` separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/kubeOidc:KubeOidc my-oidc service_name/kube_id\n```\n\n",
            "properties": {
                "clientId": {
                    "type": "string",
                    "description": "The OIDC client ID.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "The OIDC issuer url.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The ID of the managed kubernetes cluster. **Changing this value recreates the resource.**\n"
                },
                "oidcCaContent": {
                    "type": "string",
                    "description": "Content of the certificate for the CA, in Base64 format, that signed your identity provider's web certificate. Defaults to the host's root CAs.\n"
                },
                "oidcGroupsClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of JWT claim to use as the user's group. If the claim is present it must be an array of strings.\n"
                },
                "oidcGroupsPrefix": {
                    "type": "string",
                    "description": "Prefix prepended to group claims to prevent clashes with existing names (such as `system:groups`). For example, the value `oidc:` will create group names like `oidc:engineering` and `oidc:infra`.\n"
                },
                "oidcRequiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of `key=value` pairs that describe required claims in the ID Token. If set, the claims are verified to be present in the ID Token with a matching value.\"\n"
                },
                "oidcSigningAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of signing algorithms accepted. Default is `RS256`.\n"
                },
                "oidcUsernameClaim": {
                    "type": "string",
                    "description": "JWT claim to use as the username. By default, sub, which is expected to be a unique identifier of the end user. Admins can choose other claims, such as email or name, depending on their provider. However, claims other than email will be prefixed with the issuer URL to prevent naming clashes with other plugins.\n"
                },
                "oidcUsernamePrefix": {
                    "type": "string",
                    "description": "Prefix prepended to username claims to prevent clashes with existing names (such as `system:users`). For example, the value `oidc:` will create usernames like `oidc:jane.doe`. If this field isn't set and `oidc_username_claim` is a value other than email the prefix defaults to `issuer_url` where `issuer_url` is the value of `issuer_url.` The value - can be used to disable all prefixing.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n"
                }
            },
            "required": [
                "clientId",
                "issuerUrl",
                "kubeId",
                "serviceName"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string",
                    "description": "The OIDC client ID.\n"
                },
                "issuerUrl": {
                    "type": "string",
                    "description": "The OIDC issuer url.\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "The ID of the managed kubernetes cluster. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "oidcCaContent": {
                    "type": "string",
                    "description": "Content of the certificate for the CA, in Base64 format, that signed your identity provider's web certificate. Defaults to the host's root CAs.\n"
                },
                "oidcGroupsClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of JWT claim to use as the user's group. If the claim is present it must be an array of strings.\n"
                },
                "oidcGroupsPrefix": {
                    "type": "string",
                    "description": "Prefix prepended to group claims to prevent clashes with existing names (such as `system:groups`). For example, the value `oidc:` will create group names like `oidc:engineering` and `oidc:infra`.\n"
                },
                "oidcRequiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of `key=value` pairs that describe required claims in the ID Token. If set, the claims are verified to be present in the ID Token with a matching value.\"\n"
                },
                "oidcSigningAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Array of signing algorithms accepted. Default is `RS256`.\n"
                },
                "oidcUsernameClaim": {
                    "type": "string",
                    "description": "JWT claim to use as the username. By default, sub, which is expected to be a unique identifier of the end user. Admins can choose other claims, such as email or name, depending on their provider. However, claims other than email will be prefixed with the issuer URL to prevent naming clashes with other plugins.\n"
                },
                "oidcUsernamePrefix": {
                    "type": "string",
                    "description": "Prefix prepended to username claims to prevent clashes with existing names (such as `system:users`). For example, the value `oidc:` will create usernames like `oidc:jane.doe`. If this field isn't set and `oidc_username_claim` is a value other than email the prefix defaults to `issuer_url` where `issuer_url` is the value of `issuer_url.` The value - can be used to disable all prefixing.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clientId",
                "issuerUrl",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubeOidc resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "The OIDC client ID.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "The OIDC issuer url.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The ID of the managed kubernetes cluster. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "oidcCaContent": {
                        "type": "string",
                        "description": "Content of the certificate for the CA, in Base64 format, that signed your identity provider's web certificate. Defaults to the host's root CAs.\n"
                    },
                    "oidcGroupsClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of JWT claim to use as the user's group. If the claim is present it must be an array of strings.\n"
                    },
                    "oidcGroupsPrefix": {
                        "type": "string",
                        "description": "Prefix prepended to group claims to prevent clashes with existing names (such as `system:groups`). For example, the value `oidc:` will create group names like `oidc:engineering` and `oidc:infra`.\n"
                    },
                    "oidcRequiredClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of `key=value` pairs that describe required claims in the ID Token. If set, the claims are verified to be present in the ID Token with a matching value.\"\n"
                    },
                    "oidcSigningAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of signing algorithms accepted. Default is `RS256`.\n"
                    },
                    "oidcUsernameClaim": {
                        "type": "string",
                        "description": "JWT claim to use as the username. By default, sub, which is expected to be a unique identifier of the end user. Admins can choose other claims, such as email or name, depending on their provider. However, claims other than email will be prefixed with the issuer URL to prevent naming clashes with other plugins.\n"
                    },
                    "oidcUsernamePrefix": {
                        "type": "string",
                        "description": "Prefix prepended to username claims to prevent clashes with existing names (such as `system:users`). For example, the value `oidc:` will create usernames like `oidc:jane.doe`. If this field isn't set and `oidc_username_claim` is a value other than email the prefix defaults to `issuer_url` where `issuer_url` is the value of `issuer_url.` The value - can be used to disable all prefixing.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/loadBalancer:LoadBalancer": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst lb = new ovh.cloudproject.LoadBalancer(\"lb\", {\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n    regionName: \"GRA9\",\n    flavorId: \"\u003cloadbalancer flavor ID\u003e\",\n    network: {\n        \"private\": {\n            network: {\n                id: .filter(region =\u003e region.region == \"GRA9\").map(region =\u003e (region))[0].openstackid,\n                subnetId: ovh_cloud_project_network_private_subnet.myprivsub.id,\n            },\n        },\n    },\n    description: \"My new LB\",\n    listeners: [\n        {\n            port: 34568,\n            protocol: \"tcp\",\n        },\n        {\n            port: 34569,\n            protocol: \"udp\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.cloud_project.LoadBalancer(\"lb\",\n    service_name=\"\u003cpublic cloud project ID\u003e\",\n    region_name=\"GRA9\",\n    flavor_id=\"\u003cloadbalancer flavor ID\u003e\",\n    network={\n        \"private\": {\n            \"network\": {\n                \"id\": [region for region in ovh_cloud_project_network_private[\"mypriv\"][\"regions_attributes\"] if region[\"region\"] == \"GRA9\"][0][\"openstackid\"],\n                \"subnet_id\": ovh_cloud_project_network_private_subnet[\"myprivsub\"][\"id\"],\n            },\n        },\n    },\n    description=\"My new LB\",\n    listeners=[\n        {\n            \"port\": 34568,\n            \"protocol\": \"tcp\",\n        },\n        {\n            \"port\": 34569,\n            \"protocol\": \"udp\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = new Ovh.CloudProject.LoadBalancer(\"lb\", new()\n    {\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n        RegionName = \"GRA9\",\n        FlavorId = \"\u003cloadbalancer flavor ID\u003e\",\n        Network = new Ovh.CloudProject.Inputs.LoadBalancerNetworkArgs\n        {\n            Private = new Ovh.CloudProject.Inputs.LoadBalancerNetworkPrivateArgs\n            {\n                Network = new Ovh.CloudProject.Inputs.LoadBalancerNetworkPrivateNetworkArgs\n                {\n                    Id = .Where(region =\u003e region.Region == \"GRA9\").Select(region =\u003e \n                    {\n                        return region;\n                    }).ToList()[0].Openstackid,\n                    SubnetId = ovh_cloud_project_network_private_subnet.Myprivsub.Id,\n                },\n            },\n        },\n        Description = \"My new LB\",\n        Listeners = new[]\n        {\n            new Ovh.CloudProject.Inputs.LoadBalancerListenerArgs\n            {\n                Port = 34568,\n                Protocol = \"tcp\",\n            },\n            new Ovh.CloudProject.Inputs.LoadBalancerListenerArgs\n            {\n                Port = 34569,\n                Protocol = \"udp\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewLoadBalancer(ctx, \"lb\", \u0026cloudproject.LoadBalancerArgs{\n\t\t\tServiceName: pulumi.String(\"\u003cpublic cloud project ID\u003e\"),\n\t\t\tRegionName:  pulumi.String(\"GRA9\"),\n\t\t\tFlavorId:    pulumi.String(\"\u003cloadbalancer flavor ID\u003e\"),\n\t\t\tNetwork: \u0026cloudproject.LoadBalancerNetworkArgs{\n\t\t\t\tPrivate: \u0026cloudproject.LoadBalancerNetworkPrivateArgs{\n\t\t\t\t\tNetwork: \u0026cloudproject.LoadBalancerNetworkPrivateNetworkArgs{\n\t\t\t\t\t\tId:       \"TODO: call element\".Openstackid,\n\t\t\t\t\t\tSubnetId: pulumi.Any(ovh_cloud_project_network_private_subnet.Myprivsub.Id),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"My new LB\"),\n\t\t\tListeners: cloudproject.LoadBalancerListenerArray{\n\t\t\t\t\u0026cloudproject.LoadBalancerListenerArgs{\n\t\t\t\t\tPort:     pulumi.Float64(34568),\n\t\t\t\t\tProtocol: pulumi.String(\"tcp\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.LoadBalancerListenerArgs{\n\t\t\t\t\tPort:     pulumi.Float64(34569),\n\t\t\t\t\tProtocol: pulumi.String(\"udp\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.LoadBalancer;\nimport com.pulumi.ovh.CloudProject.LoadBalancerArgs;\nimport com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkArgs;\nimport com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkPrivateArgs;\nimport com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkPrivateNetworkArgs;\nimport com.pulumi.ovh.CloudProject.inputs.LoadBalancerListenerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var lb = new LoadBalancer(\"lb\", LoadBalancerArgs.builder()\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .regionName(\"GRA9\")\n            .flavorId(\"\u003cloadbalancer flavor ID\u003e\")\n            .network(LoadBalancerNetworkArgs.builder()\n                .private_(LoadBalancerNetworkPrivateArgs.builder()\n                    .network(LoadBalancerNetworkPrivateNetworkArgs.builder()\n                        .id(\"TODO: ForExpression\"[0].openstackid())\n                        .subnetId(ovh_cloud_project_network_private_subnet.myprivsub().id())\n                        .build())\n                    .build())\n                .build())\n            .description(\"My new LB\")\n            .listeners(            \n                LoadBalancerListenerArgs.builder()\n                    .port(\"34568\")\n                    .protocol(\"tcp\")\n                    .build(),\n                LoadBalancerListenerArgs.builder()\n                    .port(\"34569\")\n                    .protocol(\"udp\")\n                    .build())\n            .build());\n\n    }\n}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Example usage with network and subnet creation\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst priv = new ovh.cloudproject.NetworkPrivate(\"priv\", {\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n    vlanId: 10,\n    regions: [\"GRA9\"],\n});\nconst privsub = new ovh.cloudproject.NetworkPrivateSubnet(\"privsub\", {\n    serviceName: priv.serviceName,\n    networkId: priv.id,\n    region: \"GRA9\",\n    start: \"10.0.0.2\",\n    end: \"10.0.255.254\",\n    network: \"10.0.0.0/16\",\n    dhcp: true,\n});\nconst lb = new ovh.cloudproject.LoadBalancer(\"lb\", {\n    serviceName: privsub.serviceName,\n    regionName: privsub.region,\n    flavorId: \"\u003cloadbalancer flavor ID\u003e\",\n    network: {\n        \"private\": {\n            network: {\n                id: priv.regionsAttributes.apply(regionsAttributes =\u003e regionsAttributes.filter(region =\u003e region.region == \"GRA9\").map(region =\u003e (region)))[0].apply(regions =\u003e regions.openstackid),\n                subnetId: privsub.id,\n            },\n        },\n    },\n    description: \"My new LB\",\n    listeners: [\n        {\n            port: 34568,\n            protocol: \"tcp\",\n        },\n        {\n            port: 34569,\n            protocol: \"udp\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npriv = ovh.cloud_project.NetworkPrivate(\"priv\",\n    service_name=\"\u003cpublic cloud project ID\u003e\",\n    vlan_id=10,\n    regions=[\"GRA9\"])\nprivsub = ovh.cloud_project.NetworkPrivateSubnet(\"privsub\",\n    service_name=priv.service_name,\n    network_id=priv.id,\n    region=\"GRA9\",\n    start=\"10.0.0.2\",\n    end=\"10.0.255.254\",\n    network=\"10.0.0.0/16\",\n    dhcp=True)\nlb = ovh.cloud_project.LoadBalancer(\"lb\",\n    service_name=privsub.service_name,\n    region_name=privsub.region,\n    flavor_id=\"\u003cloadbalancer flavor ID\u003e\",\n    network={\n        \"private\": {\n            \"network\": {\n                \"id\": priv.regions_attributes.apply(lambda regions_attributes: [region for region in regions_attributes if region.region == \"GRA9\"])[0].apply(lambda regions: regions.openstackid),\n                \"subnet_id\": privsub.id,\n            },\n        },\n    },\n    description=\"My new LB\",\n    listeners=[\n        {\n            \"port\": 34568,\n            \"protocol\": \"tcp\",\n        },\n        {\n            \"port\": 34569,\n            \"protocol\": \"udp\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var priv = new Ovh.CloudProject.NetworkPrivate(\"priv\", new()\n    {\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n        VlanId = 10,\n        Regions = new[]\n        {\n            \"GRA9\",\n        },\n    });\n\n    var privsub = new Ovh.CloudProject.NetworkPrivateSubnet(\"privsub\", new()\n    {\n        ServiceName = priv.ServiceName,\n        NetworkId = priv.Id,\n        Region = \"GRA9\",\n        Start = \"10.0.0.2\",\n        End = \"10.0.255.254\",\n        Network = \"10.0.0.0/16\",\n        Dhcp = true,\n    });\n\n    var lb = new Ovh.CloudProject.LoadBalancer(\"lb\", new()\n    {\n        ServiceName = privsub.ServiceName,\n        RegionName = privsub.Region,\n        FlavorId = \"\u003cloadbalancer flavor ID\u003e\",\n        Network = new Ovh.CloudProject.Inputs.LoadBalancerNetworkArgs\n        {\n            Private = new Ovh.CloudProject.Inputs.LoadBalancerNetworkPrivateArgs\n            {\n                Network = new Ovh.CloudProject.Inputs.LoadBalancerNetworkPrivateNetworkArgs\n                {\n                    Id = priv.RegionsAttributes.Apply(regionsAttributes =\u003e regionsAttributes.Where(region =\u003e region.Region == \"GRA9\").Select(region =\u003e \n                    {\n                        return region;\n                    }).ToList())[0].Apply(regions =\u003e regions.Openstackid),\n                    SubnetId = privsub.Id,\n                },\n            },\n        },\n        Description = \"My new LB\",\n        Listeners = new[]\n        {\n            new Ovh.CloudProject.Inputs.LoadBalancerListenerArgs\n            {\n                Port = 34568,\n                Protocol = \"tcp\",\n            },\n            new Ovh.CloudProject.Inputs.LoadBalancerListenerArgs\n            {\n                Port = 34569,\n                Protocol = \"udp\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpriv, err := cloudproject.NewNetworkPrivate(ctx, \"priv\", \u0026cloudproject.NetworkPrivateArgs{\n\t\t\tServiceName: pulumi.String(\"\u003cpublic cloud project ID\u003e\"),\n\t\t\tVlanId:      pulumi.Int(10),\n\t\t\tRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"GRA9\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tprivsub, err := cloudproject.NewNetworkPrivateSubnet(ctx, \"privsub\", \u0026cloudproject.NetworkPrivateSubnetArgs{\n\t\t\tServiceName: priv.ServiceName,\n\t\t\tNetworkId:   priv.ID(),\n\t\t\tRegion:      pulumi.String(\"GRA9\"),\n\t\t\tStart:       pulumi.String(\"10.0.0.2\"),\n\t\t\tEnd:         pulumi.String(\"10.0.255.254\"),\n\t\t\tNetwork:     pulumi.String(\"10.0.0.0/16\"),\n\t\t\tDhcp:        pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewLoadBalancer(ctx, \"lb\", \u0026cloudproject.LoadBalancerArgs{\n\t\t\tServiceName: privsub.ServiceName,\n\t\t\tRegionName:  privsub.Region,\n\t\t\tFlavorId:    pulumi.String(\"\u003cloadbalancer flavor ID\u003e\"),\n\t\t\tNetwork: \u0026cloudproject.LoadBalancerNetworkArgs{\n\t\t\t\tPrivate: \u0026cloudproject.LoadBalancerNetworkPrivateArgs{\n\t\t\t\t\tNetwork: \u0026cloudproject.LoadBalancerNetworkPrivateNetworkArgs{\n\t\t\t\t\t\tId: \"TODO: call element\".ApplyT(func(regions cloudproject.NetworkPrivateRegionsAttribute) (*string, error) {\n\t\t\t\t\t\t\treturn regions.Openstackid, nil\n\t\t\t\t\t\t}).(pulumi.StringPtrOutput),\n\t\t\t\t\t\tSubnetId: privsub.ID(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"My new LB\"),\n\t\t\tListeners: cloudproject.LoadBalancerListenerArray{\n\t\t\t\t\u0026cloudproject.LoadBalancerListenerArgs{\n\t\t\t\t\tPort:     pulumi.Float64(34568),\n\t\t\t\t\tProtocol: pulumi.String(\"tcp\"),\n\t\t\t\t},\n\t\t\t\t\u0026cloudproject.LoadBalancerListenerArgs{\n\t\t\t\t\tPort:     pulumi.Float64(34569),\n\t\t\t\t\tProtocol: pulumi.String(\"udp\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.NetworkPrivate;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateArgs;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateSubnet;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateSubnetArgs;\nimport com.pulumi.ovh.CloudProject.LoadBalancer;\nimport com.pulumi.ovh.CloudProject.LoadBalancerArgs;\nimport com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkArgs;\nimport com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkPrivateArgs;\nimport com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkPrivateNetworkArgs;\nimport com.pulumi.ovh.CloudProject.inputs.LoadBalancerListenerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var priv = new NetworkPrivate(\"priv\", NetworkPrivateArgs.builder()\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .vlanId(\"10\")\n            .regions(\"GRA9\")\n            .build());\n\n        var privsub = new NetworkPrivateSubnet(\"privsub\", NetworkPrivateSubnetArgs.builder()\n            .serviceName(priv.serviceName())\n            .networkId(priv.id())\n            .region(\"GRA9\")\n            .start(\"10.0.0.2\")\n            .end(\"10.0.255.254\")\n            .network(\"10.0.0.0/16\")\n            .dhcp(true)\n            .build());\n\n        var lb = new LoadBalancer(\"lb\", LoadBalancerArgs.builder()\n            .serviceName(privsub.serviceName())\n            .regionName(privsub.region())\n            .flavorId(\"\u003cloadbalancer flavor ID\u003e\")\n            .network(LoadBalancerNetworkArgs.builder()\n                .private_(LoadBalancerNetworkPrivateArgs.builder()\n                    .network(LoadBalancerNetworkPrivateNetworkArgs.builder()\n                        .id(priv.regionsAttributes().applyValue(regionsAttributes -\u003e \"TODO: ForExpression\")[0].applyValue(regions -\u003e regions.openstackid()))\n                        .subnetId(privsub.id())\n                        .build())\n                    .build())\n                .build())\n            .description(\"My new LB\")\n            .listeners(            \n                LoadBalancerListenerArgs.builder()\n                    .port(\"34568\")\n                    .protocol(\"tcp\")\n                    .build(),\n                LoadBalancerListenerArgs.builder()\n                    .port(\"34569\")\n                    .protocol(\"udp\")\n                    .build())\n            .build());\n\n    }\n}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nA load balancer in a public cloud project can be imported using the `service_name`, `region_name` and `id` attributes. Using the following configuration:\n\nterraform\n\nimport {\n\n  id = \"\u003cservice_name\u003e/\u003cregion_name\u003e/\u003cid\u003e\"\n\n  to = ovh_cloud_project_loadbalancer.lb\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=lb.tf\n\n$ pulumi up\n\nThe file `lb.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The UTC date and timestamp when the resource was created\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the loadbalancer\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Loadbalancer flavor id\n"
                },
                "floatingIp": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerFloatingIp:LoadBalancerFloatingIp",
                    "description": "Information about floating IP\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/LoadBalancerListener:LoadBalancerListener"
                    },
                    "description": "Listeners to create with the loadbalancer\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the resource\n"
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerNetwork:LoadBalancerNetwork",
                    "description": "Network information to create the loadbalancer\n"
                },
                "operatingStatus": {
                    "type": "string",
                    "description": "Operating status of the resource\n"
                },
                "provisioningStatus": {
                    "type": "string",
                    "description": "Provisioning status of the resource\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the resource\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "UTC date and timestamp when the resource was created\n"
                },
                "vipAddress": {
                    "type": "string",
                    "description": "IP address of the Virtual IP\n"
                },
                "vipNetworkId": {
                    "type": "string",
                    "description": "Openstack ID of the network for the Virtual IP\n"
                },
                "vipSubnetId": {
                    "type": "string",
                    "description": "ID of the subnet for the Virtual IP\n"
                }
            },
            "required": [
                "createdAt",
                "flavorId",
                "floatingIp",
                "name",
                "network",
                "operatingStatus",
                "provisioningStatus",
                "region",
                "regionName",
                "serviceName",
                "updatedAt",
                "vipAddress",
                "vipNetworkId",
                "vipSubnetId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the loadbalancer\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Loadbalancer flavor id\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/LoadBalancerListener:LoadBalancerListener"
                    },
                    "description": "Listeners to create with the loadbalancer\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the resource\n"
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/LoadBalancerNetwork:LoadBalancerNetwork",
                    "description": "Network information to create the loadbalancer\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                }
            },
            "requiredInputs": [
                "flavorId",
                "network",
                "regionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadBalancer resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The UTC date and timestamp when the resource was created\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the loadbalancer\n"
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Loadbalancer flavor id\n"
                    },
                    "floatingIp": {
                        "$ref": "#/types/ovh:CloudProject/LoadBalancerFloatingIp:LoadBalancerFloatingIp",
                        "description": "Information about floating IP\n"
                    },
                    "listeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/LoadBalancerListener:LoadBalancerListener"
                        },
                        "description": "Listeners to create with the loadbalancer\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the resource\n"
                    },
                    "network": {
                        "$ref": "#/types/ovh:CloudProject/LoadBalancerNetwork:LoadBalancerNetwork",
                        "description": "Network information to create the loadbalancer\n"
                    },
                    "operatingStatus": {
                        "type": "string",
                        "description": "Operating status of the resource\n"
                    },
                    "provisioningStatus": {
                        "type": "string",
                        "description": "Provisioning status of the resource\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the resource\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "UTC date and timestamp when the resource was created\n"
                    },
                    "vipAddress": {
                        "type": "string",
                        "description": "IP address of the Virtual IP\n"
                    },
                    "vipNetworkId": {
                        "type": "string",
                        "description": "Openstack ID of the network for the Virtual IP\n"
                    },
                    "vipSubnetId": {
                        "type": "string",
                        "description": "ID of the subnet for the Virtual IP\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/networkPrivate:NetworkPrivate": {
            "description": "Creates a private network in a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst net = new ovh.cloudproject.NetworkPrivate(\"net\", {\n    regions: [\n        \"GRA1\",\n        \"BHS1\",\n    ],\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnet = ovh.cloud_project.NetworkPrivate(\"net\",\n    regions=[\n        \"GRA1\",\n        \"BHS1\",\n    ],\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var net = new Ovh.CloudProject.NetworkPrivate(\"net\", new()\n    {\n        Regions = new[]\n        {\n            \"GRA1\",\n            \"BHS1\",\n        },\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewNetworkPrivate(ctx, \"net\", \u0026cloudproject.NetworkPrivateArgs{\n\t\t\tRegions: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"GRA1\"),\n\t\t\t\tpulumi.String(\"BHS1\"),\n\t\t\t},\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.NetworkPrivate;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var net = new NetworkPrivate(\"net\", NetworkPrivateArgs.builder()\n            .regions(            \n                \"GRA1\",\n                \"BHS1\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  net:\n    type: ovh:CloudProject:NetworkPrivate\n    properties:\n      regions:\n        - GRA1\n        - BHS1\n      serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nPrivate network in a public cloud project can be imported using the `service_name` and the `network_id` as `pn-xxxx` format, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/networkPrivate:NetworkPrivate mynet service_name/network_id\n```\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVHcloud public cloud region ID in which the network will be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                },
                "regionsAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsAttribute:NetworkPrivateRegionsAttribute"
                    },
                    "description": "A map representing information about the region.\n* `regions_attributes/region` - The id of the region.\n* `regions_attributes/status` - The status of the network in the region.\n* `regions_attributes/openstackid` - The private network id in the region.\n"
                },
                "regionsStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsStatus:NetworkPrivateRegionsStatus"
                    },
                    "description": "(Deprecated) A map representing the status of the network per region.\n* `regions_status/region` - (Deprecated) The id of the region.\n* `regions_status/status` - (Deprecated) The status of the network in the region.\n",
                    "deprecationMessage": "use the regions_attributes field instead"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                },
                "type": {
                    "type": "string",
                    "description": "the type of the network. Either 'private' or 'public'.\n"
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network. Changing this value recreates the resource. Defaults to 0.\n"
                }
            },
            "required": [
                "name",
                "regions",
                "regionsAttributes",
                "regionsStatuses",
                "serviceName",
                "status",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the network.\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "an array of valid OVHcloud public cloud region ID in which the network will be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "vlanId": {
                    "type": "integer",
                    "description": "a vlan id to associate with the network. Changing this value recreates the resource. Defaults to 0.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkPrivate resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the network.\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "an array of valid OVHcloud public cloud region ID in which the network will be available. Ex.: \"GRA1\". Defaults to all public cloud regions.\n"
                    },
                    "regionsAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsAttribute:NetworkPrivateRegionsAttribute"
                        },
                        "description": "A map representing information about the region.\n* `regions_attributes/region` - The id of the region.\n* `regions_attributes/status` - The status of the network in the region.\n* `regions_attributes/openstackid` - The private network id in the region.\n"
                    },
                    "regionsStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsStatus:NetworkPrivateRegionsStatus"
                        },
                        "description": "(Deprecated) A map representing the status of the network per region.\n* `regions_status/region` - (Deprecated) The id of the region.\n* `regions_status/status` - (Deprecated) The status of the network in the region.\n",
                        "deprecationMessage": "use the regions_attributes field instead"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the network. should be normally set to 'ACTIVE'.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "the type of the network. Either 'private' or 'public'.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "a vlan id to associate with the network. Changing this value recreates the resource. Defaults to 0.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/networkPrivateSubnet:NetworkPrivateSubnet": {
            "description": "Creates a subnet in a private network of a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst subnet = new ovh.cloudproject.NetworkPrivateSubnet(\"subnet\", {\n    dhcp: true,\n    end: \"192.168.168.200\",\n    network: \"192.168.168.0/24\",\n    networkId: \"0234543\",\n    noGateway: false,\n    region: \"GRA1\",\n    serviceName: \"xxxxx\",\n    start: \"192.168.168.100\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsubnet = ovh.cloud_project.NetworkPrivateSubnet(\"subnet\",\n    dhcp=True,\n    end=\"192.168.168.200\",\n    network=\"192.168.168.0/24\",\n    network_id=\"0234543\",\n    no_gateway=False,\n    region=\"GRA1\",\n    service_name=\"xxxxx\",\n    start=\"192.168.168.100\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var subnet = new Ovh.CloudProject.NetworkPrivateSubnet(\"subnet\", new()\n    {\n        Dhcp = true,\n        End = \"192.168.168.200\",\n        Network = \"192.168.168.0/24\",\n        NetworkId = \"0234543\",\n        NoGateway = false,\n        Region = \"GRA1\",\n        ServiceName = \"xxxxx\",\n        Start = \"192.168.168.100\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewNetworkPrivateSubnet(ctx, \"subnet\", \u0026cloudproject.NetworkPrivateSubnetArgs{\n\t\t\tDhcp:        pulumi.Bool(true),\n\t\t\tEnd:         pulumi.String(\"192.168.168.200\"),\n\t\t\tNetwork:     pulumi.String(\"192.168.168.0/24\"),\n\t\t\tNetworkId:   pulumi.String(\"0234543\"),\n\t\t\tNoGateway:   pulumi.Bool(false),\n\t\t\tRegion:      pulumi.String(\"GRA1\"),\n\t\t\tServiceName: pulumi.String(\"xxxxx\"),\n\t\t\tStart:       pulumi.String(\"192.168.168.100\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateSubnet;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateSubnetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var subnet = new NetworkPrivateSubnet(\"subnet\", NetworkPrivateSubnetArgs.builder()\n            .dhcp(true)\n            .end(\"192.168.168.200\")\n            .network(\"192.168.168.0/24\")\n            .networkId(\"0234543\")\n            .noGateway(false)\n            .region(\"GRA1\")\n            .serviceName(\"xxxxx\")\n            .start(\"192.168.168.100\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  subnet:\n    type: ovh:CloudProject:NetworkPrivateSubnet\n    properties:\n      dhcp: true\n      end: 192.168.168.200\n      network: 192.168.168.0/24\n      networkId: '0234543'\n      noGateway: false\n      region: GRA1\n      serviceName: xxxxx\n      start: 192.168.168.100\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSubnet in a private network of a public cloud project can be imported using the `service_name` , the `network_id` as `pn-xxxx` format and the `subnet_id`, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/networkPrivateSubnet:NetworkPrivateSubnet mysubnet service_name/network_id/subnet_id\n```\n\n",
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "Ip Block representing the subnet cidr.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP. Changing this forces a new resource to be created. Defaults to false.\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region. Changing this value recreates the subnet.\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "The IP of the gateway\n"
                },
                "ipPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetIpPool:NetworkPrivateSubnetIpPool"
                    },
                    "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format. Changing this value recreates the subnet\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network. Changing this forces a new resource to be created.\n"
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP. Changing this value recreates the resource. Defaults to false.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created. Ex.: \"GRA1\". Changing this value recreates the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region. Changing this value recreates the subnet.\n"
                }
            },
            "required": [
                "cidr",
                "end",
                "gatewayIp",
                "ipPools",
                "network",
                "networkId",
                "region",
                "serviceName",
                "start"
            ],
            "inputProperties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP. Changing this forces a new resource to be created. Defaults to false.\n",
                    "willReplaceOnChanges": true
                },
                "end": {
                    "type": "string",
                    "description": "Last ip for this region. Changing this value recreates the subnet.\n",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "Global network in CIDR format. Changing this value recreates the subnet\n",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network. Changing this forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "noGateway": {
                    "type": "boolean",
                    "description": "Set to true if you don't want to set a default gateway IP. Changing this value recreates the resource. Defaults to false.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created. Ex.: \"GRA1\". Changing this value recreates the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "start": {
                    "type": "string",
                    "description": "First ip for this region. Changing this value recreates the subnet.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "end",
                "network",
                "networkId",
                "region",
                "serviceName",
                "start"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkPrivateSubnet resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string",
                        "description": "Ip Block representing the subnet cidr.\n"
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP. Changing this forces a new resource to be created. Defaults to false.\n",
                        "willReplaceOnChanges": true
                    },
                    "end": {
                        "type": "string",
                        "description": "Last ip for this region. Changing this value recreates the subnet.\n",
                        "willReplaceOnChanges": true
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "The IP of the gateway\n"
                    },
                    "ipPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetIpPool:NetworkPrivateSubnetIpPool"
                        },
                        "description": "List of ip pools allocated in the subnet.\n* `ip_pools/network` - Global network with cidr.\n* `ip_pools/region` - Region where this subnet is created.\n* `ip_pools/dhcp` - DHCP enabled.\n* `ip_pools/end` - Last ip for this region.\n* `ip_pools/start` - First ip for this region.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "Global network in CIDR format. Changing this value recreates the subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The id of the network. Changing this forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "noGateway": {
                        "type": "boolean",
                        "description": "Set to true if you don't want to set a default gateway IP. Changing this value recreates the resource. Defaults to false.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which the network subnet will be created. Ex.: \"GRA1\". Changing this value recreates the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "start": {
                        "type": "string",
                        "description": "First ip for this region. Changing this value recreates the subnet.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/networkPrivateSubnetV2:NetworkPrivateSubnetV2": {
            "description": "Creates a subnet in a private network of a public cloud region.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst subnet = new ovh.cloudproject.NetworkPrivateSubnetV2(\"subnet\", {\n    cidr: \"192.168.168.0/24\",\n    dhcp: true,\n    dnsNameservers: [\"1.1.1.1\"],\n    enableGatewayIp: true,\n    networkId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    region: \"XXX1\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    useDefaultPublicDnsResolver: false,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsubnet = ovh.cloud_project.NetworkPrivateSubnetV2(\"subnet\",\n    cidr=\"192.168.168.0/24\",\n    dhcp=True,\n    dns_nameservers=[\"1.1.1.1\"],\n    enable_gateway_ip=True,\n    network_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    region=\"XXX1\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    use_default_public_dns_resolver=False)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var subnet = new Ovh.CloudProject.NetworkPrivateSubnetV2(\"subnet\", new()\n    {\n        Cidr = \"192.168.168.0/24\",\n        Dhcp = true,\n        DnsNameservers = new[]\n        {\n            \"1.1.1.1\",\n        },\n        EnableGatewayIp = true,\n        NetworkId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        Region = \"XXX1\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        UseDefaultPublicDnsResolver = false,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewNetworkPrivateSubnetV2(ctx, \"subnet\", \u0026cloudproject.NetworkPrivateSubnetV2Args{\n\t\t\tCidr: pulumi.String(\"192.168.168.0/24\"),\n\t\t\tDhcp: pulumi.Bool(true),\n\t\t\tDnsNameservers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.1.1.1\"),\n\t\t\t},\n\t\t\tEnableGatewayIp:             pulumi.Bool(true),\n\t\t\tNetworkId:                   pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tRegion:                      pulumi.String(\"XXX1\"),\n\t\t\tServiceName:                 pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tUseDefaultPublicDnsResolver: pulumi.Bool(false),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateSubnetV2;\nimport com.pulumi.ovh.CloudProject.NetworkPrivateSubnetV2Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var subnet = new NetworkPrivateSubnetV2(\"subnet\", NetworkPrivateSubnetV2Args.builder()\n            .cidr(\"192.168.168.0/24\")\n            .dhcp(true)\n            .dnsNameservers(\"1.1.1.1\")\n            .enableGatewayIp(true)\n            .networkId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .region(\"XXX1\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .useDefaultPublicDnsResolver(false)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  subnet:\n    type: ovh:CloudProject:NetworkPrivateSubnetV2\n    properties:\n      cidr: 192.168.168.0/24\n      dhcp: true\n      dnsNameservers:\n        - 1.1.1.1\n      enableGatewayIp: true\n      networkId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      region: XXX1\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      useDefaultPublicDnsResolver: false\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSubnet in a private network of a public cloud project can be imported using the `service_name`, `region`, `network_id` and `subnet_id`, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/networkPrivateSubnetV2:NetworkPrivateSubnetV2 mysubnet 5ceb661434891538b54a4f2c66fc4b746e/BHS5/25807101-8aaa-4ea5-b507-61f0d661b101/0f0b73a4-403b-45e4-86d0-b438f1291909\n```\n\n",
            "properties": {
                "allocationPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2AllocationPool:NetworkPrivateSubnetV2AllocationPool"
                    },
                    "description": "List of IP allocation pools Changing this value recreates the resource.\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "IP range of the subnet Changing this value recreates the subnet.\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP. Changing this forces a new resource to be created. Defaults to true.\n"
                },
                "dnsNameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS nameservers used by DHCP Changing this value recreates the resource. Defaults to OVH default DNS nameserver.\n"
                },
                "enableGatewayIp": {
                    "type": "boolean",
                    "description": "Set to true if you want to set a default gateway IP. Changing this value recreates the resource. Defaults to true.\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "See Argument Reference above.\n"
                },
                "hostRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2HostRoute:NetworkPrivateSubnetV2HostRoute"
                    },
                    "description": "Static host routes of subnet\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the subnet Changing this value recreates the subnet.\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network. Changing this forces a new resource to be created.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created. Ex.: \"GRA1\". Changing this value recreates the resource.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "useDefaultPublicDnsResolver": {
                    "type": "boolean",
                    "description": "Set to false if you want to use your DNS resolver. Changing this value recreates the resource.\n"
                }
            },
            "required": [
                "allocationPools",
                "cidr",
                "dnsNameservers",
                "gatewayIp",
                "name",
                "networkId",
                "region",
                "serviceName"
            ],
            "inputProperties": {
                "allocationPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2AllocationPool:NetworkPrivateSubnetV2AllocationPool"
                    },
                    "description": "List of IP allocation pools Changing this value recreates the resource.\n",
                    "willReplaceOnChanges": true
                },
                "cidr": {
                    "type": "string",
                    "description": "IP range of the subnet Changing this value recreates the subnet.\n",
                    "willReplaceOnChanges": true
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP. Changing this forces a new resource to be created. Defaults to true.\n",
                    "willReplaceOnChanges": true
                },
                "dnsNameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS nameservers used by DHCP Changing this value recreates the resource. Defaults to OVH default DNS nameserver.\n",
                    "willReplaceOnChanges": true
                },
                "enableGatewayIp": {
                    "type": "boolean",
                    "description": "Set to true if you want to set a default gateway IP. Changing this value recreates the resource. Defaults to true.\n",
                    "willReplaceOnChanges": true
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "See Argument Reference above.\n",
                    "willReplaceOnChanges": true
                },
                "hostRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2HostRoute:NetworkPrivateSubnetV2HostRoute"
                    },
                    "description": "Static host routes of subnet\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the subnet Changing this value recreates the subnet.\n",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "description": "The id of the network. Changing this forces a new resource to be created.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region in which the network subnet will be created. Ex.: \"GRA1\". Changing this value recreates the resource.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "useDefaultPublicDnsResolver": {
                    "type": "boolean",
                    "description": "Set to false if you want to use your DNS resolver. Changing this value recreates the resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cidr",
                "networkId",
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkPrivateSubnetV2 resources.\n",
                "properties": {
                    "allocationPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2AllocationPool:NetworkPrivateSubnetV2AllocationPool"
                        },
                        "description": "List of IP allocation pools Changing this value recreates the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "cidr": {
                        "type": "string",
                        "description": "IP range of the subnet Changing this value recreates the subnet.\n",
                        "willReplaceOnChanges": true
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP. Changing this forces a new resource to be created. Defaults to true.\n",
                        "willReplaceOnChanges": true
                    },
                    "dnsNameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "DNS nameservers used by DHCP Changing this value recreates the resource. Defaults to OVH default DNS nameserver.\n",
                        "willReplaceOnChanges": true
                    },
                    "enableGatewayIp": {
                        "type": "boolean",
                        "description": "Set to true if you want to set a default gateway IP. Changing this value recreates the resource. Defaults to true.\n",
                        "willReplaceOnChanges": true
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "See Argument Reference above.\n",
                        "willReplaceOnChanges": true
                    },
                    "hostRoutes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2HostRoute:NetworkPrivateSubnetV2HostRoute"
                        },
                        "description": "Static host routes of subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the subnet Changing this value recreates the subnet.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "description": "The id of the network. Changing this forces a new resource to be created.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region in which the network subnet will be created. Ex.: \"GRA1\". Changing this value recreates the resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "useDefaultPublicDnsResolver": {
                        "type": "boolean",
                        "description": "Set to false if you want to use your DNS resolver. Changing this value recreates the resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/project:Project": {
            "description": "\n\n## Import\n\nCloud project can be imported using the `project_id`.\n\nUsing the following configuration:\n\nterraform\n\nimport {\n\n  to = ovh_cloud_project.my_cloud_project\n\n  id = \"\u003cproject ID\u003e\"\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=cloudproject.tf\n\n$ pulumi up\n\nThe file `cloudproject.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "ProjectURN": {
                    "type": "string",
                    "description": "The URN of the cloud project\n"
                },
                "access": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectOrder:ProjectOrder"
                    },
                    "description": "Details about the order that was used to create the public cloud project\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:CloudProject/ProjectPlan:ProjectPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanOption:ProjectPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "openstack project id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "openstack project name\n"
                },
                "status": {
                    "type": "string",
                    "description": "project status\n"
                }
            },
            "required": [
                "access",
                "description",
                "orders",
                "ovhSubsidiary",
                "plan",
                "projectId",
                "projectName",
                "status",
                "ProjectURN"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectOrder:ProjectOrder"
                    },
                    "description": "Details about the order that was used to create the public cloud project\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:CloudProject/ProjectPlan:ProjectPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanOption:ProjectPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "ProjectURN": {
                        "type": "string",
                        "description": "The URN of the cloud project\n"
                    },
                    "access": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description associated with the user.\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/ProjectOrder:ProjectOrder"
                        },
                        "description": "Details about the order that was used to create the public cloud project\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlan:ProjectPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/ProjectPlanOption:ProjectPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "openstack project id\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "openstack project name\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "project status\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/rancher:Rancher": {
            "description": "Manage a Rancher service in a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst rancher = new ovh.cloudproject.Rancher(\"rancher\", {\n    projectId: \"\u003cpublic cloud project ID\u003e\",\n    targetSpec: {\n        name: \"MyRancher\",\n        plan: \"STANDARD\",\n    },\n});\nexport const rancherUrl = rancher.currentState.apply(currentState =\u003e currentState.url);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrancher = ovh.cloud_project.Rancher(\"rancher\",\n    project_id=\"\u003cpublic cloud project ID\u003e\",\n    target_spec={\n        \"name\": \"MyRancher\",\n        \"plan\": \"STANDARD\",\n    })\npulumi.export(\"rancherUrl\", rancher.current_state.url)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rancher = new Ovh.CloudProject.Rancher(\"rancher\", new()\n    {\n        ProjectId = \"\u003cpublic cloud project ID\u003e\",\n        TargetSpec = new Ovh.CloudProject.Inputs.RancherTargetSpecArgs\n        {\n            Name = \"MyRancher\",\n            Plan = \"STANDARD\",\n        },\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"rancherUrl\"] = rancher.CurrentState.Apply(currentState =\u003e currentState.Url),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\trancher, err := cloudproject.NewRancher(ctx, \"rancher\", \u0026cloudproject.RancherArgs{\n\t\t\tProjectId: pulumi.String(\"\u003cpublic cloud project ID\u003e\"),\n\t\t\tTargetSpec: \u0026cloudproject.RancherTargetSpecArgs{\n\t\t\t\tName: pulumi.String(\"MyRancher\"),\n\t\t\t\tPlan: pulumi.String(\"STANDARD\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"rancherUrl\", rancher.CurrentState.ApplyT(func(currentState cloudproject.RancherCurrentState) (*string, error) {\n\t\t\treturn \u0026currentState.Url, nil\n\t\t}).(pulumi.StringPtrOutput))\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Rancher;\nimport com.pulumi.ovh.CloudProject.RancherArgs;\nimport com.pulumi.ovh.CloudProject.inputs.RancherTargetSpecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var rancher = new Rancher(\"rancher\", RancherArgs.builder()\n            .projectId(\"\u003cpublic cloud project ID\u003e\")\n            .targetSpec(RancherTargetSpecArgs.builder()\n                .name(\"MyRancher\")\n                .plan(\"STANDARD\")\n                .build())\n            .build());\n\n        ctx.export(\"rancherUrl\", rancher.currentState().applyValue(currentState -\u003e currentState.url()));\n    }\n}\n```\n```yaml\nresources:\n  rancher:\n    type: ovh:CloudProject:Rancher\n    properties:\n      projectId: \u003cpublic cloud project ID\u003e\n      targetSpec:\n        name: MyRancher\n        plan: STANDARD\noutputs:\n  rancherUrl: ${rancher.currentState.url}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nA share in a public cloud project can be imported using the `project_id` and `id` attributes. Using the following configuration:\n\nterraform\n\nimport {\n\n  id = \"\u003cproject_id\u003e/\u003cid\u003e\"\n\n  to = ovh_cloud_project_rancher.rancher\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=rancher.tf\n\n$ pulumi up\n\nThe file `rancher.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Date of the managed Rancher service creation\n"
                },
                "currentState": {
                    "$ref": "#/types/ovh:CloudProject/RancherCurrentState:RancherCurrentState",
                    "description": "Current configuration applied to the managed Rancher service\n"
                },
                "currentTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RancherCurrentTask:RancherCurrentTask"
                    },
                    "description": "Asynchronous operations ongoing on the managed Rancher service\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID\n"
                },
                "resourceStatus": {
                    "type": "string",
                    "description": "Reflects the readiness of the managed Rancher service. A new target specification request will be accepted only in `READY` status\n"
                },
                "targetSpec": {
                    "$ref": "#/types/ovh:CloudProject/RancherTargetSpec:RancherTargetSpec",
                    "description": "Target specification for the managed Rancher service\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Date of the last managed Rancher service update\n"
                }
            },
            "required": [
                "createdAt",
                "currentState",
                "currentTasks",
                "projectId",
                "resourceStatus",
                "targetSpec",
                "updatedAt"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "Project ID\n"
                },
                "targetSpec": {
                    "$ref": "#/types/ovh:CloudProject/RancherTargetSpec:RancherTargetSpec",
                    "description": "Target specification for the managed Rancher service\n"
                }
            },
            "requiredInputs": [
                "projectId",
                "targetSpec"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rancher resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the managed Rancher service creation\n"
                    },
                    "currentState": {
                        "$ref": "#/types/ovh:CloudProject/RancherCurrentState:RancherCurrentState",
                        "description": "Current configuration applied to the managed Rancher service\n"
                    },
                    "currentTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/RancherCurrentTask:RancherCurrentTask"
                        },
                        "description": "Asynchronous operations ongoing on the managed Rancher service\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID\n"
                    },
                    "resourceStatus": {
                        "type": "string",
                        "description": "Reflects the readiness of the managed Rancher service. A new target specification request will be accepted only in `READY` status\n"
                    },
                    "targetSpec": {
                        "$ref": "#/types/ovh:CloudProject/RancherTargetSpec:RancherTargetSpec",
                        "description": "Target specification for the managed Rancher service\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of the last managed Rancher service update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/regionLoadBalancerLogSubscription:RegionLoadBalancerLogSubscription": {
            "description": "Subscribe to a Managed Loadbalance Logs Service in a public cloud project.\n\n## Example Usage\n\nCreate a subscription\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst subscription = new ovh.cloudproject.RegionLoadBalancerLogSubscription(\"subscription\", {\n    kind: \"haproxy\",\n    loadbalancerId: \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n    regionName: \"yyyy\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    streamId: \"ffffffff-gggg-hhhh-iiii-jjjjjjjjjjjj\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsubscription = ovh.cloud_project.RegionLoadBalancerLogSubscription(\"subscription\",\n    kind=\"haproxy\",\n    loadbalancer_id=\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n    region_name=\"yyyy\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    stream_id=\"ffffffff-gggg-hhhh-iiii-jjjjjjjjjjjj\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var subscription = new Ovh.CloudProject.RegionLoadBalancerLogSubscription(\"subscription\", new()\n    {\n        Kind = \"haproxy\",\n        LoadbalancerId = \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n        RegionName = \"yyyy\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        StreamId = \"ffffffff-gggg-hhhh-iiii-jjjjjjjjjjjj\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewRegionLoadBalancerLogSubscription(ctx, \"subscription\", \u0026cloudproject.RegionLoadBalancerLogSubscriptionArgs{\n\t\t\tKind:           pulumi.String(\"haproxy\"),\n\t\t\tLoadbalancerId: pulumi.String(\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\"),\n\t\t\tRegionName:     pulumi.String(\"yyyy\"),\n\t\t\tServiceName:    pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t\tStreamId:       pulumi.String(\"ffffffff-gggg-hhhh-iiii-jjjjjjjjjjjj\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.RegionLoadBalancerLogSubscription;\nimport com.pulumi.ovh.CloudProject.RegionLoadBalancerLogSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var subscription = new RegionLoadBalancerLogSubscription(\"subscription\", RegionLoadBalancerLogSubscriptionArgs.builder()\n            .kind(\"haproxy\")\n            .loadbalancerId(\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\")\n            .regionName(\"yyyy\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .streamId(\"ffffffff-gggg-hhhh-iiii-jjjjjjjjjjjj\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  subscription:\n    type: ovh:CloudProject:RegionLoadBalancerLogSubscription\n    properties:\n      kind: haproxy\n      loadbalancerId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\n      regionName: yyyy\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n      streamId: ffffffff-gggg-hhhh-iiii-jjjjjjjjjjjj\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date of the subscription creation\n"
                },
                "kind": {
                    "type": "string",
                    "description": "haproxy **Changing this value recreates the resource.**\n"
                },
                "ldpServiceName": {
                    "type": "string",
                    "description": "LDP service name\n"
                },
                "loadbalancerId": {
                    "type": "string",
                    "description": "Loadbalancer id to get the logs **Changing this value recreates the resource.**\n"
                },
                "operationId": {
                    "type": "string",
                    "description": "The operation ID\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "A valid OVHcloud public cloud region name in which the loadbalancer will be available. Ex.: \"GRA11\". **Changing this value recreates the resource.**\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "The resource name\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The resource type\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Data stream id to use for the subscription **Changing this value recreates the resource.**\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "The subscription id\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update of the subscription\n"
                }
            },
            "required": [
                "createdAt",
                "kind",
                "ldpServiceName",
                "loadbalancerId",
                "operationId",
                "regionName",
                "resourceName",
                "resourceType",
                "serviceName",
                "streamId",
                "subscriptionId",
                "updatedAt"
            ],
            "inputProperties": {
                "kind": {
                    "type": "string",
                    "description": "haproxy **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "loadbalancerId": {
                    "type": "string",
                    "description": "Loadbalancer id to get the logs **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "regionName": {
                    "type": "string",
                    "description": "A valid OVHcloud public cloud region name in which the loadbalancer will be available. Ex.: \"GRA11\". **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "Data stream id to use for the subscription **Changing this value recreates the resource.**\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "kind",
                "loadbalancerId",
                "regionName",
                "serviceName",
                "streamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RegionLoadBalancerLogSubscription resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date of the subscription creation\n"
                    },
                    "kind": {
                        "type": "string",
                        "description": "haproxy **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "ldpServiceName": {
                        "type": "string",
                        "description": "LDP service name\n"
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "description": "Loadbalancer id to get the logs **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "operationId": {
                        "type": "string",
                        "description": "The operation ID\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud region name in which the loadbalancer will be available. Ex.: \"GRA11\". **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "resourceName": {
                        "type": "string",
                        "description": "The resource name\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "The resource type\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Data stream id to use for the subscription **Changing this value recreates the resource.**\n",
                        "willReplaceOnChanges": true
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The subscription id\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update of the subscription\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/regionNetwork:RegionNetwork": {
            "description": "Creates a network in a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.RegionNetwork;\nimport com.pulumi.ovh.CloudProject.RegionNetworkArgs;\nimport com.pulumi.ovh.CloudProject.inputs.RegionNetworkSubnetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var net = new RegionNetwork(\"net\", RegionNetworkArgs.builder()\n            .regionName(\"EU-SOUTH-LZ-MAD-A\")\n            .serviceName(\"XXXXXX\")\n            .subnet(RegionNetworkSubnetArgs.builder()\n                .cidr(\"10.0.0.0/24\")\n                .enable_dhcp(true)\n                .enable_gateway_ip(false)\n                .ip_version(4)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  net:\n    type: ovh:CloudProject:RegionNetwork\n    properties:\n      regionName: EU-SOUTH-LZ-MAD-A\n      serviceName: XXXXXX\n      subnet:\n        cidr: 10.0.0.0/24\n        enable_dhcp: true\n        enable_gateway_ip: false\n        ip_version: 4\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nA network in a public cloud project can be imported using the `service_name`, `region_name` and `id` attributes. Using the following configuration:\n\nterraform\n\nimport {\n\n  id = \"\u003cservice_name\u003e/\u003cregion_name\u003e/\u003cid\u003e\"\n\n  to = ovh_cloud_project_region_network.test\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=network.tf\n\n$ pulumi up\n\nThe file `network.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the network\n"
                },
                "region": {
                    "type": "string",
                    "description": "Network region returned by the API\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Network region\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project\n"
                },
                "subnet": {
                    "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnet:RegionNetworkSubnet",
                    "description": "Parameters to create a subnet\n"
                },
                "visibility": {
                    "type": "string",
                    "description": "Network visibility\n"
                },
                "vlanId": {
                    "type": "number",
                    "description": "VLAN ID, between 1 and 4000\n"
                }
            },
            "required": [
                "name",
                "region",
                "regionName",
                "serviceName",
                "subnet",
                "visibility",
                "vlanId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the network\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Network region\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project\n"
                },
                "subnet": {
                    "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnet:RegionNetworkSubnet",
                    "description": "Parameters to create a subnet\n"
                },
                "vlanId": {
                    "type": "number",
                    "description": "VLAN ID, between 1 and 4000\n"
                }
            },
            "requiredInputs": [
                "regionName",
                "serviceName",
                "subnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RegionNetwork resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the network\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Network region returned by the API\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Network region\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project\n"
                    },
                    "subnet": {
                        "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnet:RegionNetworkSubnet",
                        "description": "Parameters to create a subnet\n"
                    },
                    "visibility": {
                        "type": "string",
                        "description": "Network visibility\n"
                    },
                    "vlanId": {
                        "type": "number",
                        "description": "VLAN ID, between 1 and 4000\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/regionStoragePresign:RegionStoragePresign": {
            "description": "Generates a temporary presigned S3 URLs to download or upload an object.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst presignedUrlRegionStoragePresign = new ovh.cloudproject.RegionStoragePresign(\"presignedUrlRegionStoragePresign\", {\n    serviceName: \"xxxxxxxxxxxxxxxxx\",\n    regionName: \"GRA\",\n    expire: 3600,\n    method: \"GET\",\n    object: \"an-object-in-the-bucket\",\n});\nexport const presignedUrl = presignedUrlRegionStoragePresign.url;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npresigned_url_region_storage_presign = ovh.cloud_project.RegionStoragePresign(\"presignedUrlRegionStoragePresign\",\n    service_name=\"xxxxxxxxxxxxxxxxx\",\n    region_name=\"GRA\",\n    expire=3600,\n    method=\"GET\",\n    object=\"an-object-in-the-bucket\")\npulumi.export(\"presignedUrl\", presigned_url_region_storage_presign.url)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var presignedUrlRegionStoragePresign = new Ovh.CloudProject.RegionStoragePresign(\"presignedUrlRegionStoragePresign\", new()\n    {\n        ServiceName = \"xxxxxxxxxxxxxxxxx\",\n        RegionName = \"GRA\",\n        Expire = 3600,\n        Method = \"GET\",\n        Object = \"an-object-in-the-bucket\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"presignedUrl\"] = presignedUrlRegionStoragePresign.Url,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpresignedUrlRegionStoragePresign, err := cloudproject.NewRegionStoragePresign(ctx, \"presignedUrlRegionStoragePresign\", \u0026cloudproject.RegionStoragePresignArgs{\n\t\t\tServiceName: pulumi.String(\"xxxxxxxxxxxxxxxxx\"),\n\t\t\tRegionName:  pulumi.String(\"GRA\"),\n\t\t\tExpire:      pulumi.Int(3600),\n\t\t\tMethod:      pulumi.String(\"GET\"),\n\t\t\tObject:      pulumi.String(\"an-object-in-the-bucket\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"presignedUrl\", presignedUrlRegionStoragePresign.Url)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.RegionStoragePresign;\nimport com.pulumi.ovh.CloudProject.RegionStoragePresignArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var presignedUrlRegionStoragePresign = new RegionStoragePresign(\"presignedUrlRegionStoragePresign\", RegionStoragePresignArgs.builder()\n            .serviceName(\"xxxxxxxxxxxxxxxxx\")\n            .regionName(\"GRA\")\n            .expire(3600)\n            .method(\"GET\")\n            .object(\"an-object-in-the-bucket\")\n            .build());\n\n        ctx.export(\"presignedUrl\", presignedUrlRegionStoragePresign.url());\n    }\n}\n```\n```yaml\nresources:\n  presignedUrlRegionStoragePresign:\n    type: ovh:CloudProject:RegionStoragePresign\n    properties:\n      serviceName: xxxxxxxxxxxxxxxxx\n      regionName: GRA\n      expire: 3600\n      method: GET\n      object: an-object-in-the-bucket\noutputs:\n  presignedUrl: ${presignedUrlRegionStoragePresign.url}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "expire": {
                    "type": "integer",
                    "description": "Define, in seconds, for how long your URL will be valid.\n"
                },
                "method": {
                    "type": "string",
                    "description": "The method you want to use to interact with your object. Can be either 'GET' or 'PUT'.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of your S3 storage container/bucket.\n"
                },
                "object": {
                    "type": "string",
                    "description": "The name of the object in your S3 bucket.\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "The region in which your storage is located. Must be in **uppercase**. Ex.: \"GRA\".\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "signedHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of signed headers.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Computed URL result.\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the object to download or delete\n"
                }
            },
            "required": [
                "expire",
                "method",
                "name",
                "object",
                "regionName",
                "serviceName",
                "signedHeaders",
                "url"
            ],
            "inputProperties": {
                "expire": {
                    "type": "integer",
                    "description": "Define, in seconds, for how long your URL will be valid.\n",
                    "willReplaceOnChanges": true
                },
                "method": {
                    "type": "string",
                    "description": "The method you want to use to interact with your object. Can be either 'GET' or 'PUT'.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of your S3 storage container/bucket.\n",
                    "willReplaceOnChanges": true
                },
                "object": {
                    "type": "string",
                    "description": "The name of the object in your S3 bucket.\n",
                    "willReplaceOnChanges": true
                },
                "regionName": {
                    "type": "string",
                    "description": "The region in which your storage is located. Must be in **uppercase**. Ex.: \"GRA\".\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the object to download or delete\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "expire",
                "method",
                "object",
                "regionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RegionStoragePresign resources.\n",
                "properties": {
                    "expire": {
                        "type": "integer",
                        "description": "Define, in seconds, for how long your URL will be valid.\n",
                        "willReplaceOnChanges": true
                    },
                    "method": {
                        "type": "string",
                        "description": "The method you want to use to interact with your object. Can be either 'GET' or 'PUT'.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of your S3 storage container/bucket.\n",
                        "willReplaceOnChanges": true
                    },
                    "object": {
                        "type": "string",
                        "description": "The name of the object in your S3 bucket.\n",
                        "willReplaceOnChanges": true
                    },
                    "regionName": {
                        "type": "string",
                        "description": "The region in which your storage is located. Must be in **uppercase**. Ex.: \"GRA\".\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "signedHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of signed headers.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Computed URL result.\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "Version ID of the object to download or delete\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/s3Credential:S3Credential": {
            "description": "Creates an S3 Credential for a user in a public cloud project.\n\n## Import\n\nOVHcloud User S3 Credentials can be imported using the `service_name`, `user_id` and `access_key_id` of the credential, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/s3Credential:S3Credential s3_credential service_name/user_id/access_key_id\n```\n\n",
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "the Access Key ID\n"
                },
                "internalUserId": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "(Sensitive) the Secret Access Key\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n"
                }
            },
            "required": [
                "accessKeyId",
                "internalUserId",
                "secretAccessKey",
                "serviceName",
                "userId"
            ],
            "inputProperties": {
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering S3Credential resources.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "the Access Key ID\n"
                    },
                    "internalUserId": {
                        "type": "string"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "(Sensitive) the Secret Access Key\n",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/s3Policy:S3Policy": {
            "description": "Set the S3 Policy of a public cloud project user.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst user = new ovh.cloudproject.User(\"user\", {\n    serviceName: \"XXX\",\n    description: \"my user\",\n    roleNames: [\"objectstore_operator\"],\n});\nconst myS3Credentials = new ovh.cloudproject.S3Credential(\"myS3Credentials\", {\n    serviceName: user.serviceName,\n    userId: user.id,\n});\nconst policy = new ovh.cloudproject.S3Policy(\"policy\", {\n    serviceName: user.serviceName,\n    userId: user.id,\n    policy: JSON.stringify({\n        Statement: [{\n            Sid: \"RWContainer\",\n            Effect: \"Allow\",\n            Action: [\n                \"s3:GetObject\",\n                \"s3:PutObject\",\n                \"s3:DeleteObject\",\n                \"s3:ListBucket\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:ListBucketMultipartUploads\",\n                \"s3:AbortMultipartUpload\",\n                \"s3:GetBucketLocation\",\n            ],\n            Resource: [\n                \"arn:aws:s3:::hp-bucket\",\n                \"arn:aws:s3:::hp-bucket/*\",\n            ],\n        }],\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_ovh as ovh\n\nuser = ovh.cloud_project.User(\"user\",\n    service_name=\"XXX\",\n    description=\"my user\",\n    role_names=[\"objectstore_operator\"])\nmy_s3_credentials = ovh.cloud_project.S3Credential(\"myS3Credentials\",\n    service_name=user.service_name,\n    user_id=user.id)\npolicy = ovh.cloud_project.S3Policy(\"policy\",\n    service_name=user.service_name,\n    user_id=user.id,\n    policy=json.dumps({\n        \"Statement\": [{\n            \"Sid\": \"RWContainer\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:PutObject\",\n                \"s3:DeleteObject\",\n                \"s3:ListBucket\",\n                \"s3:ListMultipartUploadParts\",\n                \"s3:ListBucketMultipartUploads\",\n                \"s3:AbortMultipartUpload\",\n                \"s3:GetBucketLocation\",\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::hp-bucket\",\n                \"arn:aws:s3:::hp-bucket/*\",\n            ],\n        }],\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = new Ovh.CloudProject.User(\"user\", new()\n    {\n        ServiceName = \"XXX\",\n        Description = \"my user\",\n        RoleNames = new[]\n        {\n            \"objectstore_operator\",\n        },\n    });\n\n    var myS3Credentials = new Ovh.CloudProject.S3Credential(\"myS3Credentials\", new()\n    {\n        ServiceName = user.ServiceName,\n        UserId = user.Id,\n    });\n\n    var policy = new Ovh.CloudProject.S3Policy(\"policy\", new()\n    {\n        ServiceName = user.ServiceName,\n        UserId = user.Id,\n        Policy = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"Statement\"] = new[]\n            {\n                new Dictionary\u003cstring, object?\u003e\n                {\n                    [\"Sid\"] = \"RWContainer\",\n                    [\"Effect\"] = \"Allow\",\n                    [\"Action\"] = new[]\n                    {\n                        \"s3:GetObject\",\n                        \"s3:PutObject\",\n                        \"s3:DeleteObject\",\n                        \"s3:ListBucket\",\n                        \"s3:ListMultipartUploadParts\",\n                        \"s3:ListBucketMultipartUploads\",\n                        \"s3:AbortMultipartUpload\",\n                        \"s3:GetBucketLocation\",\n                    },\n                    [\"Resource\"] = new[]\n                    {\n                        \"arn:aws:s3:::hp-bucket\",\n                        \"arn:aws:s3:::hp-bucket/*\",\n                    },\n                },\n            },\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := cloudproject.NewUser(ctx, \"user\", \u0026cloudproject.UserArgs{\n\t\t\tServiceName: pulumi.String(\"XXX\"),\n\t\t\tDescription: pulumi.String(\"my user\"),\n\t\t\tRoleNames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"objectstore_operator\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.NewS3Credential(ctx, \"myS3Credentials\", \u0026cloudproject.S3CredentialArgs{\n\t\t\tServiceName: user.ServiceName,\n\t\t\tUserId:      user.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"Statement\": []map[string]interface{}{\n\t\t\t\tmap[string]interface{}{\n\t\t\t\t\t\"Sid\":    \"RWContainer\",\n\t\t\t\t\t\"Effect\": \"Allow\",\n\t\t\t\t\t\"Action\": []string{\n\t\t\t\t\t\t\"s3:GetObject\",\n\t\t\t\t\t\t\"s3:PutObject\",\n\t\t\t\t\t\t\"s3:DeleteObject\",\n\t\t\t\t\t\t\"s3:ListBucket\",\n\t\t\t\t\t\t\"s3:ListMultipartUploadParts\",\n\t\t\t\t\t\t\"s3:ListBucketMultipartUploads\",\n\t\t\t\t\t\t\"s3:AbortMultipartUpload\",\n\t\t\t\t\t\t\"s3:GetBucketLocation\",\n\t\t\t\t\t},\n\t\t\t\t\t\"Resource\": []string{\n\t\t\t\t\t\t\"arn:aws:s3:::hp-bucket\",\n\t\t\t\t\t\t\"arn:aws:s3:::hp-bucket/*\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\t_, err = cloudproject.NewS3Policy(ctx, \"policy\", \u0026cloudproject.S3PolicyArgs{\n\t\t\tServiceName: user.ServiceName,\n\t\t\tUserId:      user.ID(),\n\t\t\tPolicy:      pulumi.String(json0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.User;\nimport com.pulumi.ovh.CloudProject.UserArgs;\nimport com.pulumi.ovh.CloudProject.S3Credential;\nimport com.pulumi.ovh.CloudProject.S3CredentialArgs;\nimport com.pulumi.ovh.CloudProject.S3Policy;\nimport com.pulumi.ovh.CloudProject.S3PolicyArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user = new User(\"user\", UserArgs.builder()\n            .serviceName(\"XXX\")\n            .description(\"my user\")\n            .roleNames(\"objectstore_operator\")\n            .build());\n\n        var myS3Credentials = new S3Credential(\"myS3Credentials\", S3CredentialArgs.builder()\n            .serviceName(user.serviceName())\n            .userId(user.id())\n            .build());\n\n        var policy = new S3Policy(\"policy\", S3PolicyArgs.builder()\n            .serviceName(user.serviceName())\n            .userId(user.id())\n            .policy(serializeJson(\n                jsonObject(\n                    jsonProperty(\"Statement\", jsonArray(jsonObject(\n                        jsonProperty(\"Sid\", \"RWContainer\"),\n                        jsonProperty(\"Effect\", \"Allow\"),\n                        jsonProperty(\"Action\", jsonArray(\n                            \"s3:GetObject\", \n                            \"s3:PutObject\", \n                            \"s3:DeleteObject\", \n                            \"s3:ListBucket\", \n                            \"s3:ListMultipartUploadParts\", \n                            \"s3:ListBucketMultipartUploads\", \n                            \"s3:AbortMultipartUpload\", \n                            \"s3:GetBucketLocation\"\n                        )),\n                        jsonProperty(\"Resource\", jsonArray(\n                            \"arn:aws:s3:::hp-bucket\", \n                            \"arn:aws:s3:::hp-bucket/*\"\n                        ))\n                    )))\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: ovh:CloudProject:User\n    properties:\n      serviceName: XXX\n      description: my user\n      roleNames:\n        - objectstore_operator\n  myS3Credentials:\n    type: ovh:CloudProject:S3Credential\n    properties:\n      serviceName: ${user.serviceName}\n      userId: ${user.id}\n  policy:\n    type: ovh:CloudProject:S3Policy\n    properties:\n      serviceName: ${user.serviceName}\n      userId: ${user.id}\n      policy:\n        fn::toJSON:\n          Statement:\n            - Sid: RWContainer\n              Effect: Allow\n              Action:\n                - s3:GetObject\n                - s3:PutObject\n                - s3:DeleteObject\n                - s3:ListBucket\n                - s3:ListMultipartUploadParts\n                - s3:ListBucketMultipartUploads\n                - s3:AbortMultipartUpload\n                - s3:GetBucketLocation\n              Resource:\n                - arn:aws:s3:::hp-bucket\n                - arn:aws:s3:::hp-bucket/*\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud User S3 Policy can be imported using the `service_name`, `user_id` of the policy, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProject/s3Policy:S3Policy policy service_name/user_id\n```\n\n",
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "The policy document. This is a JSON formatted string. See examples of policies on [public documentation](https://docs.ovh.com/gb/en/storage/s3/identity-and-access-management/).\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n"
                }
            },
            "required": [
                "policy",
                "serviceName",
                "userId"
            ],
            "inputProperties": {
                "policy": {
                    "type": "string",
                    "description": "The policy document. This is a JSON formatted string. See examples of policies on [public documentation](https://docs.ovh.com/gb/en/storage/s3/identity-and-access-management/).\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of a public cloud project's user.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "policy",
                "serviceName",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering S3Policy resources.\n",
                "properties": {
                    "policy": {
                        "type": "string",
                        "description": "The policy document. This is a JSON formatted string. See examples of policies on [public documentation](https://docs.ovh.com/gb/en/storage/s3/identity-and-access-management/).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/storage:Storage": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst storage = new ovh.cloudproject.Storage(\"storage\", {\n    regionName: \"GRA\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n    versioning: {\n        status: \"enabled\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nstorage = ovh.cloud_project.Storage(\"storage\",\n    region_name=\"GRA\",\n    service_name=\"\u003cpublic cloud project ID\u003e\",\n    versioning={\n        \"status\": \"enabled\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var storage = new Ovh.CloudProject.Storage(\"storage\", new()\n    {\n        RegionName = \"GRA\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n        Versioning = new Ovh.CloudProject.Inputs.StorageVersioningArgs\n        {\n            Status = \"enabled\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewStorage(ctx, \"storage\", \u0026cloudproject.StorageArgs{\n\t\t\tRegionName:  pulumi.String(\"GRA\"),\n\t\t\tServiceName: pulumi.String(\"\u003cpublic cloud project ID\u003e\"),\n\t\t\tVersioning: \u0026cloudproject.StorageVersioningArgs{\n\t\t\t\tStatus: pulumi.String(\"enabled\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.Storage;\nimport com.pulumi.ovh.CloudProject.StorageArgs;\nimport com.pulumi.ovh.CloudProject.inputs.StorageVersioningArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var storage = new Storage(\"storage\", StorageArgs.builder()\n            .regionName(\"GRA\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .versioning(StorageVersioningArgs.builder()\n                .status(\"enabled\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  storage:\n    type: ovh:CloudProject:Storage\n    properties:\n      regionName: GRA\n      serviceName: \u003cpublic cloud project ID\u003e\n      versioning:\n        status: enabled\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nA storage in a public cloud project can be imported using the `service_name`, `region_name` and `name` attributes. Using the following configuration:\n\nterraform\n\nimport {\n\n  id = \"\u003cservice_name\u003e/\u003cregion_name\u003e/\u003cname\u003e\"\n\n  to = ovh_cloud_project_storage.storage\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=storage.tf\n\n$ pulumi up\n\nThe file `storage.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and timestamp when the resource was created\n"
                },
                "encryption": {
                    "$ref": "#/types/ovh:CloudProject/StorageEncryption:StorageEncryption",
                    "description": "Encryption configuration\n"
                },
                "limit": {
                    "type": "number",
                    "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                },
                "marker": {
                    "type": "string",
                    "description": "Key to start with when listing objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "Container name\n"
                },
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/StorageObject:StorageObject"
                    },
                    "description": "Container objects\n"
                },
                "objectsCount": {
                    "type": "number",
                    "description": "Container total objects count\n"
                },
                "objectsSize": {
                    "type": "number",
                    "description": "Container total objects size (bytes)\n"
                },
                "ownerId": {
                    "type": "number",
                    "description": "Container owner user ID\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "List objects whose key begins with this prefix\n"
                },
                "region": {
                    "type": "string",
                    "description": "Container region\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "replication": {
                    "$ref": "#/types/ovh:CloudProject/StorageReplication:StorageReplication",
                    "description": "Replication configuration\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "versioning": {
                    "$ref": "#/types/ovh:CloudProject/StorageVersioning:StorageVersioning",
                    "description": "Versioning configuration\n"
                },
                "virtualHost": {
                    "type": "string",
                    "description": "Container virtual host\n"
                }
            },
            "required": [
                "createdAt",
                "encryption",
                "limit",
                "marker",
                "name",
                "objects",
                "objectsCount",
                "objectsSize",
                "ownerId",
                "prefix",
                "region",
                "regionName",
                "replication",
                "serviceName",
                "versioning",
                "virtualHost"
            ],
            "inputProperties": {
                "encryption": {
                    "$ref": "#/types/ovh:CloudProject/StorageEncryption:StorageEncryption",
                    "description": "Encryption configuration\n"
                },
                "limit": {
                    "type": "number",
                    "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                },
                "marker": {
                    "type": "string",
                    "description": "Key to start with when listing objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "Container name\n"
                },
                "ownerId": {
                    "type": "number",
                    "description": "Container owner user ID\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "List objects whose key begins with this prefix\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "replication": {
                    "$ref": "#/types/ovh:CloudProject/StorageReplication:StorageReplication",
                    "description": "Replication configuration\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "versioning": {
                    "$ref": "#/types/ovh:CloudProject/StorageVersioning:StorageVersioning",
                    "description": "Versioning configuration\n"
                }
            },
            "requiredInputs": [
                "regionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Storage resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and timestamp when the resource was created\n"
                    },
                    "encryption": {
                        "$ref": "#/types/ovh:CloudProject/StorageEncryption:StorageEncryption",
                        "description": "Encryption configuration\n"
                    },
                    "limit": {
                        "type": "number",
                        "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                    },
                    "marker": {
                        "type": "string",
                        "description": "Key to start with when listing objects\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Container name\n"
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/StorageObject:StorageObject"
                        },
                        "description": "Container objects\n"
                    },
                    "objectsCount": {
                        "type": "number",
                        "description": "Container total objects count\n"
                    },
                    "objectsSize": {
                        "type": "number",
                        "description": "Container total objects size (bytes)\n"
                    },
                    "ownerId": {
                        "type": "number",
                        "description": "Container owner user ID\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "List objects whose key begins with this prefix\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Container region\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "replication": {
                        "$ref": "#/types/ovh:CloudProject/StorageReplication:StorageReplication",
                        "description": "Replication configuration\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "versioning": {
                        "$ref": "#/types/ovh:CloudProject/StorageVersioning:StorageVersioning",
                        "description": "Versioning configuration\n"
                    },
                    "virtualHost": {
                        "type": "string",
                        "description": "Container virtual host\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/user:User": {
            "description": "Creates a user in a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst user1 = new ovh.cloudproject.User(\"user1\", {serviceName: \"XXX\"});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser1 = ovh.cloud_project.User(\"user1\", service_name=\"XXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user1 = new Ovh.CloudProject.User(\"user1\", new()\n    {\n        ServiceName = \"XXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewUser(ctx, \"user1\", \u0026cloudproject.UserArgs{\n\t\t\tServiceName: pulumi.String(\"XXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.User;\nimport com.pulumi.ovh.CloudProject.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user1 = new User(\"user1\", UserArgs.builder()\n            .serviceName(\"XXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user1:\n    type: ovh:CloudProject:User\n    properties:\n      serviceName: XXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "the date the user was created.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n"
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "a convenient map representing an openstack_rc file. Note: no password nor sensitive token is set in this map.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) the password generated for the user. The password can be used with the Openstack API. This attribute is sensitive and will only be retrieve once during creation.\n",
                    "secret": true
                },
                "roleName": {
                    "type": "string",
                    "description": "The name of a role. See `role_names`.\n"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role names. Values can be:\n- administrator,\n- ai_training_operator\n- ai_training_read\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/UserRole:UserRole"
                    },
                    "description": "A list of roles associated with the user.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "the status of the user. should be normally set to 'ok'.\n"
                },
                "username": {
                    "type": "string",
                    "description": "the username generated for the user. This username can be used with the Openstack API.\n"
                }
            },
            "required": [
                "creationDate",
                "openstackRc",
                "password",
                "roles",
                "serviceName",
                "status",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description associated with the user.\n",
                    "willReplaceOnChanges": true
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "a convenient map representing an openstack_rc file. Note: no password nor sensitive token is set in this map.\n"
                },
                "roleName": {
                    "type": "string",
                    "description": "The name of a role. See `role_names`.\n"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of role names. Values can be:\n- administrator,\n- ai_training_operator\n- ai_training_read\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "the date the user was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description associated with the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "openstackRc": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "a convenient map representing an openstack_rc file. Note: no password nor sensitive token is set in this map.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) the password generated for the user. The password can be used with the Openstack API. This attribute is sensitive and will only be retrieve once during creation.\n",
                        "secret": true
                    },
                    "roleName": {
                        "type": "string",
                        "description": "The name of a role. See `role_names`.\n"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of role names. Values can be:\n- administrator,\n- ai_training_operator\n- ai_training_read\n- authentication\n- backup_operator\n- compute_operator\n- image_operator\n- infrastructure_supervisor\n- network_operator\n- network_security_operator\n- objectstore_operator\n- volume_operator\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/UserRole:UserRole"
                        },
                        "description": "A list of roles associated with the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the user. should be normally set to 'ok'.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "the username generated for the user. This username can be used with the Openstack API.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/volume:Volume": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action of the operation\n"
                },
                "completedAt": {
                    "type": "string",
                    "description": "The completed date of the operation\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the operation\n"
                },
                "description": {
                    "type": "string",
                    "description": "Volume description\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Image ID\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Volume name\n"
                },
                "progress": {
                    "type": "number",
                    "description": "Volume status\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of regions\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "Id of the resource\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "size": {
                    "type": "number",
                    "description": "Volume size\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "Snapshot ID\n"
                },
                "startedAt": {
                    "type": "string",
                    "description": "Datetime of the operation creation\n"
                },
                "status": {
                    "type": "string",
                    "description": "Volume status\n"
                },
                "subOperations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/VolumeSubOperation:VolumeSubOperation"
                    },
                    "description": "Sub-operations of the operation\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the volume\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "Volume ID\n"
                }
            },
            "required": [
                "action",
                "completedAt",
                "createdAt",
                "description",
                "imageId",
                "instanceId",
                "name",
                "progress",
                "regionName",
                "regions",
                "resourceId",
                "serviceName",
                "size",
                "snapshotId",
                "startedAt",
                "status",
                "subOperations",
                "type",
                "volumeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Volume description\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Image ID\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Volume name\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "size": {
                    "type": "number",
                    "description": "Volume size\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "Snapshot ID\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the volume\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "Volume ID\n"
                }
            },
            "requiredInputs": [
                "regionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Volume resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action of the operation\n"
                    },
                    "completedAt": {
                        "type": "string",
                        "description": "The completed date of the operation\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the operation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Volume description\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "Image ID\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Instance ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Volume name\n"
                    },
                    "progress": {
                        "type": "number",
                        "description": "Volume status\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of regions\n"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Id of the resource\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Volume size\n"
                    },
                    "snapshotId": {
                        "type": "string",
                        "description": "Snapshot ID\n"
                    },
                    "startedAt": {
                        "type": "string",
                        "description": "Datetime of the operation creation\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Volume status\n"
                    },
                    "subOperations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/VolumeSubOperation:VolumeSubOperation"
                        },
                        "description": "Sub-operations of the operation\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the volume\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "Volume ID\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/volumeBackup:VolumeBackup": {
            "description": "Manage backups for the given volume in a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst backup = new ovh.cloudproject.VolumeBackup(\"backup\", {\n    regionName: \"GRA9\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n    volumeId: \"\u003cvolume ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nbackup = ovh.cloud_project.VolumeBackup(\"backup\",\n    region_name=\"GRA9\",\n    service_name=\"\u003cpublic cloud project ID\u003e\",\n    volume_id=\"\u003cvolume ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var backup = new Ovh.CloudProject.VolumeBackup(\"backup\", new()\n    {\n        RegionName = \"GRA9\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n        VolumeId = \"\u003cvolume ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewVolumeBackup(ctx, \"backup\", \u0026cloudproject.VolumeBackupArgs{\n\t\t\tRegionName:  pulumi.String(\"GRA9\"),\n\t\t\tServiceName: pulumi.String(\"\u003cpublic cloud project ID\u003e\"),\n\t\t\tVolumeId:    pulumi.String(\"\u003cvolume ID\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.VolumeBackup;\nimport com.pulumi.ovh.CloudProject.VolumeBackupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var backup = new VolumeBackup(\"backup\", VolumeBackupArgs.builder()\n            .regionName(\"GRA9\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .volumeId(\"\u003cvolume ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  backup:\n    type: ovh:CloudProject:VolumeBackup\n    properties:\n      regionName: GRA9\n      serviceName: \u003cpublic cloud project ID\u003e\n      volumeId: \u003cvolume ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nA volume backup in a public cloud project can be imported using the `service_name`, `region_name` and `id` attributes. Using the following configuration:\n\nterraform\n\nimport {\n\n  id = \"\u003cservice_name\u003e/\u003cregion_name\u003e/\u003cid\u003e\"\n\n  to = ovh_cloud_project_volume_backup.backup\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=backup.tf\n\n$ pulumi up\n\nThe file `backup.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "Creation date of the backup\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the backup\n"
                },
                "region": {
                    "type": "string",
                    "description": "Volume backup region\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size of the backup in GiB\n"
                },
                "status": {
                    "type": "string",
                    "description": "Staus of the backup\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "ID of the volume to backup\n"
                }
            },
            "required": [
                "creationDate",
                "name",
                "region",
                "regionName",
                "serviceName",
                "size",
                "status",
                "volumeId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "name of the backup\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "ID of the volume to backup\n"
                }
            },
            "requiredInputs": [
                "regionName",
                "serviceName",
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VolumeBackup resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the backup\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the backup\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Volume backup region\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Size of the backup in GiB\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Staus of the backup\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "ID of the volume to backup\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/workflowBackup:WorkflowBackup": {
            "description": "Manage a worflow that schedules backups of public cloud instance. Note that upon deletion, the workflow is deleted but any backups that have been created by this workflow are not.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myBackup = new ovh.cloudproject.WorkflowBackup(\"myBackup\", {\n    cron: \"50 4 * * *\",\n    instanceId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\n    maxExecutionCount: 0,\n    regionName: \"GRA11\",\n    rotation: 7,\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_backup = ovh.cloud_project.WorkflowBackup(\"myBackup\",\n    cron=\"50 4 * * *\",\n    instance_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\n    max_execution_count=0,\n    region_name=\"GRA11\",\n    rotation=7,\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myBackup = new Ovh.CloudProject.WorkflowBackup(\"myBackup\", new()\n    {\n        Cron = \"50 4 * * *\",\n        InstanceId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\",\n        MaxExecutionCount = 0,\n        RegionName = \"GRA11\",\n        Rotation = 7,\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.NewWorkflowBackup(ctx, \"myBackup\", \u0026cloudproject.WorkflowBackupArgs{\n\t\t\tCron:              pulumi.String(\"50 4 * * *\"),\n\t\t\tInstanceId:        pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\"),\n\t\t\tMaxExecutionCount: pulumi.Int(0),\n\t\t\tRegionName:        pulumi.String(\"GRA11\"),\n\t\t\tRotation:          pulumi.Int(7),\n\t\t\tServiceName:       pulumi.String(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.WorkflowBackup;\nimport com.pulumi.ovh.CloudProject.WorkflowBackupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myBackup = new WorkflowBackup(\"myBackup\", WorkflowBackupArgs.builder()\n            .cron(\"50 4 * * *\")\n            .instanceId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\")\n            .maxExecutionCount(\"0\")\n            .regionName(\"GRA11\")\n            .rotation(\"7\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myBackup:\n    type: ovh:CloudProject:WorkflowBackup\n    properties:\n      cron: 50 4 * * *\n      instanceId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx\n      maxExecutionCount: '0'\n      regionName: GRA11\n      rotation: '7'\n      serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "backupName": {
                    "type": "string",
                    "description": "The name of the backup files that are created. If empty, the `name` attribute is used.\n"
                },
                "createdAt": {
                    "type": "string"
                },
                "cron": {
                    "type": "string",
                    "description": "The cron periodicity at which the backup workflow is scheduled\n\n* `instanceId` the id of the instance to back up\n"
                },
                "instanceId": {
                    "type": "string"
                },
                "maxExecutionCount": {
                    "type": "integer",
                    "description": "The number of times the worflow is run. Default value is `0` which means that the workflow will be scheduled continously until its deletion\n"
                },
                "name": {
                    "type": "string",
                    "description": "The worflow name that is used in the UI\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "The name of the openstack region.\n"
                },
                "rotation": {
                    "type": "integer",
                    "description": "The number of backup that are retained.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "backupName",
                "createdAt",
                "cron",
                "instanceId",
                "name",
                "regionName",
                "rotation",
                "serviceName"
            ],
            "inputProperties": {
                "backupName": {
                    "type": "string",
                    "description": "The name of the backup files that are created. If empty, the `name` attribute is used.\n",
                    "willReplaceOnChanges": true
                },
                "cron": {
                    "type": "string",
                    "description": "The cron periodicity at which the backup workflow is scheduled\n\n* `instanceId` the id of the instance to back up\n",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maxExecutionCount": {
                    "type": "integer",
                    "description": "The number of times the worflow is run. Default value is `0` which means that the workflow will be scheduled continously until its deletion\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The worflow name that is used in the UI\n",
                    "willReplaceOnChanges": true
                },
                "regionName": {
                    "type": "string",
                    "description": "The name of the openstack region.\n",
                    "willReplaceOnChanges": true
                },
                "rotation": {
                    "type": "integer",
                    "description": "The number of backup that are retained.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cron",
                "instanceId",
                "regionName",
                "rotation",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowBackup resources.\n",
                "properties": {
                    "backupName": {
                        "type": "string",
                        "description": "The name of the backup files that are created. If empty, the `name` attribute is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "cron": {
                        "type": "string",
                        "description": "The cron periodicity at which the backup workflow is scheduled\n\n* `instanceId` the id of the instance to back up\n",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "maxExecutionCount": {
                        "type": "integer",
                        "description": "The number of times the worflow is run. Default value is `0` which means that the workflow will be scheduled continously until its deletion\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The worflow name that is used in the UI\n",
                        "willReplaceOnChanges": true
                    },
                    "regionName": {
                        "type": "string",
                        "description": "The name of the openstack region.\n",
                        "willReplaceOnChanges": true
                    },
                    "rotation": {
                        "type": "integer",
                        "description": "The number of backup that are retained.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/databaseInstance:DatabaseInstance": {
            "description": "Creates a database for a database cluster associated with a public cloud project.\n\nWith this resource you can create a database for the following database engine:\n\n* `mysql`\n* `postgresql`\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst db = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    id: \"ZZZZ\",\n});\nconst database = new ovh.cloudprojectdatabase.DatabaseInstance(\"database\", {\n    serviceName: db.then(db =\u003e db.serviceName),\n    engine: db.then(db =\u003e db.engine),\n    clusterId: db.then(db =\u003e db.id),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndb = ovh.CloudProjectDatabase.get_database(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    id=\"ZZZZ\")\ndatabase = ovh.cloud_project_database.DatabaseInstance(\"database\",\n    service_name=db.service_name,\n    engine=db.engine,\n    cluster_id=db.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var db = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        Id = \"ZZZZ\",\n    });\n\n    var database = new Ovh.CloudProjectDatabase.DatabaseInstance(\"database\", new()\n    {\n        ServiceName = db.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        Engine = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Engine),\n        ClusterId = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdb, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudprojectdatabase.NewDatabaseInstance(ctx, \"database\", \u0026cloudprojectdatabase.DatabaseInstanceArgs{\n\t\t\tServiceName: pulumi.String(db.ServiceName),\n\t\t\tEngine:      pulumi.String(db.Engine),\n\t\t\tClusterId:   pulumi.String(db.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.DatabaseInstance;\nimport com.pulumi.ovh.CloudProjectDatabase.DatabaseInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var db = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .id(\"ZZZZ\")\n            .build());\n\n        var database = new DatabaseInstance(\"database\", DatabaseInstanceArgs.builder()\n            .serviceName(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .engine(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.engine()))\n            .clusterId(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  database:\n    type: ovh:CloudProjectDatabase:DatabaseInstance\n    properties:\n      serviceName: ${db.serviceName}\n      engine: ${db.engine}\n      clusterId: ${db.id}\nvariables:\n  db:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXXX\n        engine: YYYY\n        id: ZZZZ\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed database clusters databases can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the database, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/databaseInstance:DatabaseInstance my_database service_name/engine/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Defines if the database has been created by default.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "clusterId",
                "default",
                "engine",
                "name",
                "serviceName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the database.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseInstance resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Defines if the database has been created by default.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the database.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/integration:Integration": {
            "description": "Creates an integration for a database cluster associated with a public cloud project.\n\nWith this resource you can create an integration for all engine exept `mongodb`.\n\nPlease take a look at the list of available `types` in the `Argument references` section in order to know the list of avaulable integrations. For example, thanks to the integration feature you can have your PostgreSQL logs in your OpenSearch Database.\n\n## Example Usage\n\nPush PostgreSQL logs in an OpenSearch DB:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst dbPostgresql = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXX\",\n    engine: \"postgresql\",\n    id: \"ZZZZ\",\n});\nconst dbOpensearch = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXX\",\n    engine: \"opensearch\",\n    id: \"ZZZZ\",\n});\nconst integration = new ovh.cloudprojectdatabase.Integration(\"integration\", {\n    serviceName: dbPostgresql.then(dbPostgresql =\u003e dbPostgresql.serviceName),\n    engine: dbPostgresql.then(dbPostgresql =\u003e dbPostgresql.engine),\n    clusterId: dbPostgresql.then(dbPostgresql =\u003e dbPostgresql.id),\n    sourceServiceId: dbPostgresql.then(dbPostgresql =\u003e dbPostgresql.id),\n    destinationServiceId: dbOpensearch.then(dbOpensearch =\u003e dbOpensearch.id),\n    type: \"opensearchLogs\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndb_postgresql = ovh.CloudProjectDatabase.get_database(service_name=\"XXXX\",\n    engine=\"postgresql\",\n    id=\"ZZZZ\")\ndb_opensearch = ovh.CloudProjectDatabase.get_database(service_name=\"XXXX\",\n    engine=\"opensearch\",\n    id=\"ZZZZ\")\nintegration = ovh.cloud_project_database.Integration(\"integration\",\n    service_name=db_postgresql.service_name,\n    engine=db_postgresql.engine,\n    cluster_id=db_postgresql.id,\n    source_service_id=db_postgresql.id,\n    destination_service_id=db_opensearch.id,\n    type=\"opensearchLogs\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var dbPostgresql = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"postgresql\",\n        Id = \"ZZZZ\",\n    });\n\n    var dbOpensearch = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"opensearch\",\n        Id = \"ZZZZ\",\n    });\n\n    var integration = new Ovh.CloudProjectDatabase.Integration(\"integration\", new()\n    {\n        ServiceName = dbPostgresql.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        Engine = dbPostgresql.Apply(getDatabaseResult =\u003e getDatabaseResult.Engine),\n        ClusterId = dbPostgresql.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        SourceServiceId = dbPostgresql.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        DestinationServiceId = dbOpensearch.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        Type = \"opensearchLogs\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdbPostgresql, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"postgresql\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdbOpensearch, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"opensearch\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudprojectdatabase.NewIntegration(ctx, \"integration\", \u0026cloudprojectdatabase.IntegrationArgs{\n\t\t\tServiceName:          pulumi.String(dbPostgresql.ServiceName),\n\t\t\tEngine:               pulumi.String(dbPostgresql.Engine),\n\t\t\tClusterId:            pulumi.String(dbPostgresql.Id),\n\t\t\tSourceServiceId:      pulumi.String(dbPostgresql.Id),\n\t\t\tDestinationServiceId: pulumi.String(dbOpensearch.Id),\n\t\t\tType:                 pulumi.String(\"opensearchLogs\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.Integration;\nimport com.pulumi.ovh.CloudProjectDatabase.IntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var dbPostgresql = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"postgresql\")\n            .id(\"ZZZZ\")\n            .build());\n\n        final var dbOpensearch = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"opensearch\")\n            .id(\"ZZZZ\")\n            .build());\n\n        var integration = new Integration(\"integration\", IntegrationArgs.builder()\n            .serviceName(dbPostgresql.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .engine(dbPostgresql.applyValue(getDatabaseResult -\u003e getDatabaseResult.engine()))\n            .clusterId(dbPostgresql.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .sourceServiceId(dbPostgresql.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .destinationServiceId(dbOpensearch.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .type(\"opensearchLogs\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  integration:\n    type: ovh:CloudProjectDatabase:Integration\n    properties:\n      serviceName: ${dbPostgresql.serviceName}\n      engine: ${dbPostgresql.engine}\n      clusterId: ${dbPostgresql.id}\n      sourceServiceId: ${dbPostgresql.id}\n      destinationServiceId: ${dbOpensearch.id}\n      type: opensearchLogs\nvariables:\n  dbPostgresql:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXXX\n        engine: postgresql\n        id: ZZZZ\n  dbOpensearch:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXXX\n        engine: opensearch\n        id: ZZZZ\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed database clusters users can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the user, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/integration:Integration my_user service_name/engine/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "destinationServiceId": {
                    "type": "string",
                    "description": "ID of the destination service.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). All engines available exept `mongodb`.\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Parameters for the integration.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "sourceServiceId": {
                    "type": "string",
                    "description": "ID of the source service.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the integration.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the integration. Available types:\n* `grafanaDashboard`\n* `grafanaDatasource`\n* `kafkaConnect`\n* `kafkaLogs`\n* `kafkaMirrorMaker`\n"
                }
            },
            "required": [
                "clusterId",
                "destinationServiceId",
                "engine",
                "serviceName",
                "sourceServiceId",
                "status",
                "type"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "destinationServiceId": {
                    "type": "string",
                    "description": "ID of the destination service.\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). All engines available exept `mongodb`.\n",
                    "willReplaceOnChanges": true
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Parameters for the integration.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "sourceServiceId": {
                    "type": "string",
                    "description": "ID of the source service.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Type of the integration. Available types:\n* `grafanaDashboard`\n* `grafanaDatasource`\n* `kafkaConnect`\n* `kafkaLogs`\n* `kafkaMirrorMaker`\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "destinationServiceId",
                "engine",
                "serviceName",
                "sourceServiceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "destinationServiceId": {
                        "type": "string",
                        "description": "ID of the destination service.\n",
                        "willReplaceOnChanges": true
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). All engines available exept `mongodb`.\n",
                        "willReplaceOnChanges": true
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Parameters for the integration.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceServiceId": {
                        "type": "string",
                        "description": "ID of the source service.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the integration.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the integration. Available types:\n* `grafanaDashboard`\n* `grafanaDatasource`\n* `kafkaConnect`\n* `kafkaLogs`\n* `kafkaMirrorMaker`\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/ipRestriction:IpRestriction": {
            "description": "Deprecated: Use ip_restriction field in cloud_project_database resource instead. Continuing to use the ovh.CloudProjectDatabase.IpRestriction resource to add an IP restriction to a cloud_project_database resource will cause the cloud_project_database resource to be updated on every apply\n\nApply IP restrictions to an OVHcloud Managed Database cluster.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst db = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    id: \"ZZZZ\",\n});\nconst ipRestriction = new ovh.cloudprojectdatabase.IpRestriction(\"ipRestriction\", {\n    serviceName: db.then(db =\u003e db.serviceName),\n    engine: db.then(db =\u003e db.engine),\n    clusterId: db.then(db =\u003e db.id),\n    ip: \"178.97.6.0/24\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndb = ovh.CloudProjectDatabase.get_database(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    id=\"ZZZZ\")\nip_restriction = ovh.cloud_project_database.IpRestriction(\"ipRestriction\",\n    service_name=db.service_name,\n    engine=db.engine,\n    cluster_id=db.id,\n    ip=\"178.97.6.0/24\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var db = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        Id = \"ZZZZ\",\n    });\n\n    var ipRestriction = new Ovh.CloudProjectDatabase.IpRestriction(\"ipRestriction\", new()\n    {\n        ServiceName = db.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        Engine = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Engine),\n        ClusterId = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        Ip = \"178.97.6.0/24\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdb, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudprojectdatabase.NewIpRestriction(ctx, \"ipRestriction\", \u0026cloudprojectdatabase.IpRestrictionArgs{\n\t\t\tServiceName: pulumi.String(db.ServiceName),\n\t\t\tEngine:      pulumi.String(db.Engine),\n\t\t\tClusterId:   pulumi.String(db.Id),\n\t\t\tIp:          pulumi.String(\"178.97.6.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.IpRestriction;\nimport com.pulumi.ovh.CloudProjectDatabase.IpRestrictionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var db = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .id(\"ZZZZ\")\n            .build());\n\n        var ipRestriction = new IpRestriction(\"ipRestriction\", IpRestrictionArgs.builder()\n            .serviceName(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .engine(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.engine()))\n            .clusterId(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .ip(\"178.97.6.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ipRestriction:\n    type: ovh:CloudProjectDatabase:IpRestriction\n    properties:\n      serviceName: ${db.serviceName}\n      engine: ${db.engine}\n      clusterId: ${db.id}\n      ip: 178.97.6.0/24\nvariables:\n  db:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXXX\n        engine: YYYY\n        id: ZZZZ\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed database cluster IP restrictions can be imported using the `service_name`, `engine`, `cluster_id` and the `ip`, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/ipRestriction:IpRestriction my_ip_restriction service_name/engine/cluster_id/178.97.6.0/24\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the IP restriction.\n"
                }
            },
            "required": [
                "clusterId",
                "engine",
                "ip",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "ip",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpRestriction resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the IP restriction.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add an IP restriction. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "Authorized IP.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the IP restriction.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/kafkaAcl:KafkaAcl": {
            "description": "Creates an ACL for a kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst kafka = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"kafka\",\n    id: \"ZZZ\",\n});\nconst acl = new ovh.cloudprojectdatabase.KafkaAcl(\"acl\", {\n    serviceName: kafka.then(kafka =\u003e kafka.serviceName),\n    clusterId: kafka.then(kafka =\u003e kafka.id),\n    permission: \"read\",\n    topic: \"mytopic\",\n    username: \"johndoe\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nkafka = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"kafka\",\n    id=\"ZZZ\")\nacl = ovh.cloud_project_database.KafkaAcl(\"acl\",\n    service_name=kafka.service_name,\n    cluster_id=kafka.id,\n    permission=\"read\",\n    topic=\"mytopic\",\n    username=\"johndoe\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"kafka\",\n        Id = \"ZZZ\",\n    });\n\n    var acl = new Ovh.CloudProjectDatabase.KafkaAcl(\"acl\", new()\n    {\n        ServiceName = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        ClusterId = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        Permission = \"read\",\n        Topic = \"mytopic\",\n        Username = \"johndoe\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tkafka, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"kafka\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudprojectdatabase.NewKafkaAcl(ctx, \"acl\", \u0026cloudprojectdatabase.KafkaAclArgs{\n\t\t\tServiceName: pulumi.String(kafka.ServiceName),\n\t\t\tClusterId:   pulumi.String(kafka.Id),\n\t\t\tPermission:  pulumi.String(\"read\"),\n\t\t\tTopic:       pulumi.String(\"mytopic\"),\n\t\t\tUsername:    pulumi.String(\"johndoe\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaAcl;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kafka = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"kafka\")\n            .id(\"ZZZ\")\n            .build());\n\n        var acl = new KafkaAcl(\"acl\", KafkaAclArgs.builder()\n            .serviceName(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .clusterId(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .permission(\"read\")\n            .topic(\"mytopic\")\n            .username(\"johndoe\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  acl:\n    type: ovh:CloudProjectDatabase:KafkaAcl\n    properties:\n      serviceName: ${kafka.serviceName}\n      clusterId: ${kafka.id}\n      permission: read\n      topic: mytopic\n      username: johndoe\nvariables:\n  kafka:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXX\n        engine: kafka\n        id: ZZZ\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed kafka clusters ACLs can be imported using the `service_name`, `cluster_id` and `id` of the acl, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/kafkaAcl:KafkaAcl my_acl service_name/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this topic. Available permissions:\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "topic": {
                    "type": "string",
                    "description": "Topic affected by this ACL.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this ACL.\n"
                }
            },
            "required": [
                "clusterId",
                "permission",
                "serviceName",
                "topic",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this topic. Available permissions:\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "description": "Topic affected by this ACL.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this ACL.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "permission",
                "serviceName",
                "topic",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaAcl resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission to give to this username on this topic. Available permissions:\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic affected by this ACL.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Username affected by this ACL.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl": {
            "description": "Creates a schema registry ACL for a Kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst kafka = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"kafka\",\n    id: \"ZZZ\",\n});\nconst schemaRegistryAcl = new ovh.cloudprojectdatabase.KafkaSchemaRegistryAcl(\"schemaRegistryAcl\", {\n    serviceName: kafka.then(kafka =\u003e kafka.serviceName),\n    clusterId: kafka.then(kafka =\u003e kafka.id),\n    permission: \"schema_registry_read\",\n    resource: \"Subject:myResource\",\n    username: \"johndoe\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nkafka = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"kafka\",\n    id=\"ZZZ\")\nschema_registry_acl = ovh.cloud_project_database.KafkaSchemaRegistryAcl(\"schemaRegistryAcl\",\n    service_name=kafka.service_name,\n    cluster_id=kafka.id,\n    permission=\"schema_registry_read\",\n    resource=\"Subject:myResource\",\n    username=\"johndoe\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"kafka\",\n        Id = \"ZZZ\",\n    });\n\n    var schemaRegistryAcl = new Ovh.CloudProjectDatabase.KafkaSchemaRegistryAcl(\"schemaRegistryAcl\", new()\n    {\n        ServiceName = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        ClusterId = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        Permission = \"schema_registry_read\",\n        Resource = \"Subject:myResource\",\n        Username = \"johndoe\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tkafka, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"kafka\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudprojectdatabase.NewKafkaSchemaRegistryAcl(ctx, \"schemaRegistryAcl\", \u0026cloudprojectdatabase.KafkaSchemaRegistryAclArgs{\n\t\t\tServiceName: pulumi.String(kafka.ServiceName),\n\t\t\tClusterId:   pulumi.String(kafka.Id),\n\t\t\tPermission:  pulumi.String(\"schema_registry_read\"),\n\t\t\tResource:    pulumi.String(\"Subject:myResource\"),\n\t\t\tUsername:    pulumi.String(\"johndoe\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaSchemaRegistryAcl;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaSchemaRegistryAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kafka = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"kafka\")\n            .id(\"ZZZ\")\n            .build());\n\n        var schemaRegistryAcl = new KafkaSchemaRegistryAcl(\"schemaRegistryAcl\", KafkaSchemaRegistryAclArgs.builder()\n            .serviceName(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .clusterId(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .permission(\"schema_registry_read\")\n            .resource(\"Subject:myResource\")\n            .username(\"johndoe\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  schemaRegistryAcl:\n    type: ovh:CloudProjectDatabase:KafkaSchemaRegistryAcl\n    properties:\n      serviceName: ${kafka.serviceName}\n      clusterId: ${kafka.id}\n      permission: schema_registry_read\n      resource: Subject:myResource\n      username: johndoe\nvariables:\n  kafka:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXX\n        engine: kafka\n        id: ZZZ\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed Kafka clusters schema registry ACLs can be imported using the `service_name`, `cluster_id` and `id` of the schema registry ACL, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl my_schemaRegistryAcl service_name/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this resource. Available permissions:\n"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource affected by this schema registry ACL.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this schema registry ACL.\n"
                }
            },
            "required": [
                "clusterId",
                "permission",
                "resource",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this resource. Available permissions:\n",
                    "willReplaceOnChanges": true
                },
                "resource": {
                    "type": "string",
                    "description": "Resource affected by this schema registry ACL.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this schema registry ACL.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "permission",
                "resource",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchemaRegistryAcl resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission to give to this username on this resource. Available permissions:\n",
                        "willReplaceOnChanges": true
                    },
                    "resource": {
                        "type": "string",
                        "description": "Resource affected by this schema registry ACL.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Username affected by this schema registry ACL.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/kafkaTopic:KafkaTopic": {
            "description": "Creates a topic for a kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst kafka = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"kafka\",\n    id: \"ZZZ\",\n});\nconst topic = new ovh.cloudprojectdatabase.KafkaTopic(\"topic\", {\n    serviceName: kafka.then(kafka =\u003e kafka.serviceName),\n    clusterId: kafka.then(kafka =\u003e kafka.id),\n    minInsyncReplicas: 1,\n    partitions: 3,\n    replication: 2,\n    retentionBytes: 4,\n    retentionHours: 5,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nkafka = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"kafka\",\n    id=\"ZZZ\")\ntopic = ovh.cloud_project_database.KafkaTopic(\"topic\",\n    service_name=kafka.service_name,\n    cluster_id=kafka.id,\n    min_insync_replicas=1,\n    partitions=3,\n    replication=2,\n    retention_bytes=4,\n    retention_hours=5)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kafka = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"kafka\",\n        Id = \"ZZZ\",\n    });\n\n    var topic = new Ovh.CloudProjectDatabase.KafkaTopic(\"topic\", new()\n    {\n        ServiceName = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        ClusterId = kafka.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        MinInsyncReplicas = 1,\n        Partitions = 3,\n        Replication = 2,\n        RetentionBytes = 4,\n        RetentionHours = 5,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tkafka, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"kafka\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudprojectdatabase.NewKafkaTopic(ctx, \"topic\", \u0026cloudprojectdatabase.KafkaTopicArgs{\n\t\t\tServiceName:       pulumi.String(kafka.ServiceName),\n\t\t\tClusterId:         pulumi.String(kafka.Id),\n\t\t\tMinInsyncReplicas: pulumi.Int(1),\n\t\t\tPartitions:        pulumi.Int(3),\n\t\t\tReplication:       pulumi.Int(2),\n\t\t\tRetentionBytes:    pulumi.Int(4),\n\t\t\tRetentionHours:    pulumi.Int(5),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaTopic;\nimport com.pulumi.ovh.CloudProjectDatabase.KafkaTopicArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kafka = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"kafka\")\n            .id(\"ZZZ\")\n            .build());\n\n        var topic = new KafkaTopic(\"topic\", KafkaTopicArgs.builder()\n            .serviceName(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .clusterId(kafka.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .minInsyncReplicas(1)\n            .partitions(3)\n            .replication(2)\n            .retentionBytes(4)\n            .retentionHours(5)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  topic:\n    type: ovh:CloudProjectDatabase:KafkaTopic\n    properties:\n      serviceName: ${kafka.serviceName}\n      clusterId: ${kafka.id}\n      minInsyncReplicas: 1\n      partitions: 3\n      replication: 2\n      retentionBytes: 4\n      retentionHours: 5\nvariables:\n  kafka:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXX\n        engine: kafka\n        id: ZZZ\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed kafka clusters topics can be imported using the `service_name`, `cluster_id` and `id` of the topic, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/kafkaTopic:KafkaTopic my_topic service_name/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "minInsyncReplicas": {
                    "type": "integer",
                    "description": "Minimum insync replica accepted for this topic. Should be superior to 0\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the topic. No spaces allowed.\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions for this topic. Should be superior to 0\n"
                },
                "replication": {
                    "type": "integer",
                    "description": "Number of replication for this topic. Should be superior to 1\n"
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "Number of bytes for the retention of the data for this topic. Inferior to 0 means unlimited\n"
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "Number of hours for the retention of the data for this topic. Should be superior to -2. Inferior to 0 means unlimited\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "clusterId",
                "minInsyncReplicas",
                "name",
                "partitions",
                "replication",
                "retentionBytes",
                "retentionHours",
                "serviceName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "minInsyncReplicas": {
                    "type": "integer",
                    "description": "Minimum insync replica accepted for this topic. Should be superior to 0\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the topic. No spaces allowed.\n",
                    "willReplaceOnChanges": true
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions for this topic. Should be superior to 0\n",
                    "willReplaceOnChanges": true
                },
                "replication": {
                    "type": "integer",
                    "description": "Number of replication for this topic. Should be superior to 1\n",
                    "willReplaceOnChanges": true
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "Number of bytes for the retention of the data for this topic. Inferior to 0 means unlimited\n",
                    "willReplaceOnChanges": true
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "Number of hours for the retention of the data for this topic. Should be superior to -2. Inferior to 0 means unlimited\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaTopic resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "minInsyncReplicas": {
                        "type": "integer",
                        "description": "Minimum insync replica accepted for this topic. Should be superior to 0\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the topic. No spaces allowed.\n",
                        "willReplaceOnChanges": true
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "Number of partitions for this topic. Should be superior to 0\n",
                        "willReplaceOnChanges": true
                    },
                    "replication": {
                        "type": "integer",
                        "description": "Number of replication for this topic. Should be superior to 1\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "Number of bytes for the retention of the data for this topic. Inferior to 0 means unlimited\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "Number of hours for the retention of the data for this topic. Should be superior to -2. Inferior to 0 means unlimited\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/logSubscription:LogSubscription": {
            "description": "Creates a log subscription for a cluster associated with a public cloud project.\n\n## Example Usage\n\nCreate a log subscription for a database.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst stream = ovh.Dbaas.getLogsOutputGraylogStream({\n    serviceName: \"ldp-xx-xxxxx\",\n    title: \"my stream\",\n});\nconst db = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    id: \"ZZZ\",\n});\nconst subscription = new ovh.cloudprojectdatabase.LogSubscription(\"subscription\", {\n    serviceName: db.then(db =\u003e db.serviceName),\n    engine: db.then(db =\u003e db.engine),\n    clusterId: db.then(db =\u003e db.id),\n    streamId: stream.then(stream =\u003e stream.id),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nstream = ovh.Dbaas.get_logs_output_graylog_stream(service_name=\"ldp-xx-xxxxx\",\n    title=\"my stream\")\ndb = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"YYY\",\n    id=\"ZZZ\")\nsubscription = ovh.cloud_project_database.LogSubscription(\"subscription\",\n    service_name=db.service_name,\n    engine=db.engine,\n    cluster_id=db.id,\n    stream_id=stream.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var stream = Ovh.Dbaas.GetLogsOutputGraylogStream.Invoke(new()\n    {\n        ServiceName = \"ldp-xx-xxxxx\",\n        Title = \"my stream\",\n    });\n\n    var db = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        Id = \"ZZZ\",\n    });\n\n    var subscription = new Ovh.CloudProjectDatabase.LogSubscription(\"subscription\", new()\n    {\n        ServiceName = db.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        Engine = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Engine),\n        ClusterId = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        StreamId = stream.Apply(getLogsOutputGraylogStreamResult =\u003e getLogsOutputGraylogStreamResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tstream, err := dbaas.GetLogsOutputGraylogStream(ctx, \u0026dbaas.GetLogsOutputGraylogStreamArgs{\n\t\t\tServiceName: \"ldp-xx-xxxxx\",\n\t\t\tTitle:       \"my stream\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdb, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudprojectdatabase.NewLogSubscription(ctx, \"subscription\", \u0026cloudprojectdatabase.LogSubscriptionArgs{\n\t\t\tServiceName: pulumi.String(db.ServiceName),\n\t\t\tEngine:      pulumi.String(db.Engine),\n\t\t\tClusterId:   pulumi.String(db.Id),\n\t\t\tStreamId:    pulumi.String(stream.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsOutputGraylogStreamArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.LogSubscription;\nimport com.pulumi.ovh.CloudProjectDatabase.LogSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var stream = DbaasFunctions.getLogsOutputGraylogStream(GetLogsOutputGraylogStreamArgs.builder()\n            .serviceName(\"ldp-xx-xxxxx\")\n            .title(\"my stream\")\n            .build());\n\n        final var db = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .id(\"ZZZ\")\n            .build());\n\n        var subscription = new LogSubscription(\"subscription\", LogSubscriptionArgs.builder()\n            .serviceName(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .engine(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.engine()))\n            .clusterId(db.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .streamId(stream.applyValue(getLogsOutputGraylogStreamResult -\u003e getLogsOutputGraylogStreamResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  subscription:\n    type: ovh:CloudProjectDatabase:LogSubscription\n    properties:\n      serviceName: ${db.serviceName}\n      engine: ${db.engine}\n      clusterId: ${db.id}\n      streamId: ${stream.id}\nvariables:\n  stream:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsOutputGraylogStream\n      arguments:\n        serviceName: ldp-xx-xxxxx\n        title: my stream\n  db:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXX\n        engine: YYY\n        id: ZZZ\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed clusters logs subscription can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the subscription, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/logSubscription:LogSubscription sub service_name/engine/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation date of the subscription.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine for which you want to manage a subscription. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                },
                "kind": {
                    "type": "string",
                    "description": "Log kind name of this subscription.\n"
                },
                "ldpServiceName": {
                    "type": "string",
                    "description": "Name of the destination log service.\n",
                    "secret": true
                },
                "operationId": {
                    "type": "string",
                    "description": "Identifier of the operation.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "Name of subscribed resource, where the logs come from.\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Type of subscribed resource, where the logs come from.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Id of the target Log data platform stream.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date of the subscription.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "engine",
                "kind",
                "ldpServiceName",
                "operationId",
                "resourceName",
                "resourceType",
                "serviceName",
                "streamId",
                "updatedAt"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "The database engine for which you want to manage a subscription. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "Id of the target Log data platform stream.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName",
                "streamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogSubscription resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date of the subscription.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The database engine for which you want to manage a subscription. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n",
                        "willReplaceOnChanges": true
                    },
                    "kind": {
                        "type": "string",
                        "description": "Log kind name of this subscription.\n"
                    },
                    "ldpServiceName": {
                        "type": "string",
                        "description": "Name of the destination log service.\n",
                        "secret": true
                    },
                    "operationId": {
                        "type": "string",
                        "description": "Identifier of the operation.\n"
                    },
                    "resourceName": {
                        "type": "string",
                        "description": "Name of subscribed resource, where the logs come from.\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "Type of subscribed resource, where the logs come from.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Id of the target Log data platform stream.\n",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date of the subscription.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/m3DbNamespace:M3DbNamespace": {
            "description": "Creates a namespace for a M3DB cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst m3db = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"m3db\",\n    id: \"ZZZ\",\n});\nconst namespace = new ovh.cloudprojectdatabase.M3DbNamespace(\"namespace\", {\n    serviceName: m3db.then(m3db =\u003e m3db.serviceName),\n    clusterId: m3db.then(m3db =\u003e m3db.id),\n    resolution: \"P2D\",\n    retentionPeriodDuration: \"PT48H\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nm3db = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"m3db\",\n    id=\"ZZZ\")\nnamespace = ovh.cloud_project_database.M3DbNamespace(\"namespace\",\n    service_name=m3db.service_name,\n    cluster_id=m3db.id,\n    resolution=\"P2D\",\n    retention_period_duration=\"PT48H\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3db = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"m3db\",\n        Id = \"ZZZ\",\n    });\n\n    var @namespace = new Ovh.CloudProjectDatabase.M3DbNamespace(\"namespace\", new()\n    {\n        ServiceName = m3db.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        ClusterId = m3db.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        Resolution = \"P2D\",\n        RetentionPeriodDuration = \"PT48H\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tm3db, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"m3db\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudprojectdatabase.NewM3DbNamespace(ctx, \"namespace\", \u0026cloudprojectdatabase.M3DbNamespaceArgs{\n\t\t\tServiceName:             pulumi.String(m3db.ServiceName),\n\t\t\tClusterId:               pulumi.String(m3db.Id),\n\t\t\tResolution:              pulumi.String(\"P2D\"),\n\t\t\tRetentionPeriodDuration: pulumi.String(\"PT48H\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.M3DbNamespace;\nimport com.pulumi.ovh.CloudProjectDatabase.M3DbNamespaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3db = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"m3db\")\n            .id(\"ZZZ\")\n            .build());\n\n        var namespace = new M3DbNamespace(\"namespace\", M3DbNamespaceArgs.builder()\n            .serviceName(m3db.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .clusterId(m3db.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .resolution(\"P2D\")\n            .retentionPeriodDuration(\"PT48H\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  namespace:\n    type: ovh:CloudProjectDatabase:M3DbNamespace\n    properties:\n      serviceName: ${m3db.serviceName}\n      clusterId: ${m3db.id}\n      resolution: P2D\n      retentionPeriodDuration: PT48H\nvariables:\n  m3db:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXX\n        engine: m3db\n        id: ZZZ\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed M3DB clusters namespaces can be imported using the `service_name`, `cluster_id` and `id` of the namespace, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/m3DbNamespace:M3DbNamespace my_namespace service_name/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the namespace. A namespace named \"default\" is mapped with already created default namespace instead of creating a new namespace.\n"
                },
                "resolution": {
                    "type": "string",
                    "description": "Resolution for an aggregated namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBlockDataExpirationDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBlockSizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before flushing to a fileset on disk. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will retain data for the namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "snapshotEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3DB will create snapshot files for this namespace.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of namespace.\n"
                },
                "writesToCommitLogEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3DB will include writes to this namespace in the commit log.\n"
                }
            },
            "required": [
                "clusterId",
                "name",
                "resolution",
                "retentionBlockSizeDuration",
                "retentionPeriodDuration",
                "serviceName",
                "snapshotEnabled",
                "type",
                "writesToCommitLogEnabled"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the namespace. A namespace named \"default\" is mapped with already created default namespace instead of creating a new namespace.\n",
                    "willReplaceOnChanges": true
                },
                "resolution": {
                    "type": "string",
                    "description": "Resolution for an aggregated namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBlockDataExpirationDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBlockSizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before flushing to a fileset on disk. Should follow Rfc3339 e.g P2D, PT48H.\n",
                    "willReplaceOnChanges": true
                },
                "retentionBufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionBufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will retain data for the namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "snapshotEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3DB will create snapshot files for this namespace.\n"
                },
                "writesToCommitLogEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3DB will include writes to this namespace in the commit log.\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "resolution",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3DbNamespace resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the namespace. A namespace named \"default\" is mapped with already created default namespace instead of creating a new namespace.\n",
                        "willReplaceOnChanges": true
                    },
                    "resolution": {
                        "type": "string",
                        "description": "Resolution for an aggregated namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "retentionBlockDataExpirationDuration": {
                        "type": "string",
                        "description": "Controls how long we wait before expiring stale data. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "retentionBlockSizeDuration": {
                        "type": "string",
                        "description": "Controls how long to keep a block in memory before flushing to a fileset on disk. Should follow Rfc3339 e.g P2D, PT48H.\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionBufferFutureDuration": {
                        "type": "string",
                        "description": "Controls how far into the future writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "retentionBufferPastDuration": {
                        "type": "string",
                        "description": "Controls how far into the past writes to the namespace will be accepted. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "retentionPeriodDuration": {
                        "type": "string",
                        "description": "Controls the duration of time that M3DB will retain data for the namespace. Should follow Rfc3339 e.g P2D, PT48H.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "snapshotEnabled": {
                        "type": "boolean",
                        "description": "Defines whether M3DB will create snapshot files for this namespace.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of namespace.\n"
                    },
                    "writesToCommitLogEnabled": {
                        "type": "boolean",
                        "description": "Defines whether M3DB will include writes to this namespace in the commit log.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/m3DbUser:M3DbUser": {
            "description": "\n\n## Import\n\nOVHcloud Managed M3DB clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/m3DbUser:M3DbUser my_user service_name/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "group": {
                    "type": "string",
                    "description": "Group of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. A user named \"avnadmin\" is mapped with already created admin user instead of creating a new user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "description": "Group of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. A user named \"avnadmin\" is mapped with already created admin user instead of creating a new user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3DbUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "Group of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user. A user named \"avnadmin\" is mapped with already created admin user instead of creating a new user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/mongoDbPrometheus:MongoDbPrometheus": {
            "description": "\n\n## Import\n\nOVHcloud Managed MongoDB clusters prometheus can be imported using the `service_name` and `cluster_id`, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/mongoDbPrometheus:MongoDbPrometheus my_prometheus service_name/engine/cluster_id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "srvDomain": {
                    "type": "string",
                    "description": "Name of the srv domain endpoint.\n"
                },
                "username": {
                    "type": "string",
                    "description": "name of the prometheus user.\n"
                }
            },
            "required": [
                "clusterId",
                "password",
                "serviceName",
                "srvDomain",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MongoDbPrometheus resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "srvDomain": {
                        "type": "string",
                        "description": "Name of the srv domain endpoint.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "name of the prometheus user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/mongoDbUser:MongoDbUser": {
            "description": "\n\n## Import\n\nOVHcloud Managed MongoDB clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/mongoDbUser:MongoDbUser my_user service_name/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. A user named \"admin\" is mapped with already created admin@admin user instead of creating a new user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to. Since version 0.37.0, the authentication database must be indicated for all roles. Available roles:\n* `backup@admin`\n* `clusterAdmin@admin`\n* `clusterManager@admin`\n* `clusterMonitor@admin`\n* `dbAdmin@(defined db)`\n* `dbAdminAnyDatabase@admin`\n* `dbOwner@(defined db)`\n* `enableSharding@(defined db)`\n* `hostManager@admin`\n* `read@(defined db)`\n* `readAnyDatabase@admin`\n* `readWrite@(defined db)`\n* `readWriteAnyDatabase@admin`\n* `restore@admin`\n* `root@admin`\n* `userAdmin@(defined db)`\n* `userAdminAnyDatabase@admin`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. A user named \"admin\" is mapped with already created admin@admin user instead of creating a new user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to. Since version 0.37.0, the authentication database must be indicated for all roles. Available roles:\n* `backup@admin`\n* `clusterAdmin@admin`\n* `clusterManager@admin`\n* `clusterMonitor@admin`\n* `dbAdmin@(defined db)`\n* `dbAdminAnyDatabase@admin`\n* `dbOwner@(defined db)`\n* `enableSharding@(defined db)`\n* `hostManager@admin`\n* `read@(defined db)`\n* `readAnyDatabase@admin`\n* `readWrite@(defined db)`\n* `readWriteAnyDatabase@admin`\n* `restore@admin`\n* `root@admin`\n* `userAdmin@(defined db)`\n* `userAdminAnyDatabase@admin`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MongoDbUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user. A user named \"admin\" is mapped with already created admin@admin user instead of creating a new user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to. Since version 0.37.0, the authentication database must be indicated for all roles. Available roles:\n* `backup@admin`\n* `clusterAdmin@admin`\n* `clusterManager@admin`\n* `clusterMonitor@admin`\n* `dbAdmin@(defined db)`\n* `dbAdminAnyDatabase@admin`\n* `dbOwner@(defined db)`\n* `enableSharding@(defined db)`\n* `hostManager@admin`\n* `read@(defined db)`\n* `readAnyDatabase@admin`\n* `readWrite@(defined db)`\n* `readWriteAnyDatabase@admin`\n* `restore@admin`\n* `root@admin`\n* `userAdmin@(defined db)`\n* `userAdminAnyDatabase@admin`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/opensearchPattern:OpensearchPattern": {
            "description": "Creates a pattern for a opensearch cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst opensearch = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXX\",\n    engine: \"opensearch\",\n    id: \"ZZZ\",\n});\nconst pattern = new ovh.cloudprojectdatabase.OpensearchPattern(\"pattern\", {\n    serviceName: opensearch.then(opensearch =\u003e opensearch.serviceName),\n    clusterId: opensearch.then(opensearch =\u003e opensearch.id),\n    maxIndexCount: 2,\n    pattern: \"logs_*\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nopensearch = ovh.CloudProjectDatabase.get_database(service_name=\"XXX\",\n    engine=\"opensearch\",\n    id=\"ZZZ\")\npattern = ovh.cloud_project_database.OpensearchPattern(\"pattern\",\n    service_name=opensearch.service_name,\n    cluster_id=opensearch.id,\n    max_index_count=2,\n    pattern=\"logs_*\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var opensearch = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"opensearch\",\n        Id = \"ZZZ\",\n    });\n\n    var pattern = new Ovh.CloudProjectDatabase.OpensearchPattern(\"pattern\", new()\n    {\n        ServiceName = opensearch.Apply(getDatabaseResult =\u003e getDatabaseResult.ServiceName),\n        ClusterId = opensearch.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n        MaxIndexCount = 2,\n        Pattern = \"logs_*\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\topensearch, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"opensearch\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudprojectdatabase.NewOpensearchPattern(ctx, \"pattern\", \u0026cloudprojectdatabase.OpensearchPatternArgs{\n\t\t\tServiceName:   pulumi.String(opensearch.ServiceName),\n\t\t\tClusterId:     pulumi.String(opensearch.Id),\n\t\t\tMaxIndexCount: pulumi.Int(2),\n\t\t\tPattern:       pulumi.String(\"logs_*\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport com.pulumi.ovh.CloudProjectDatabase.OpensearchPattern;\nimport com.pulumi.ovh.CloudProjectDatabase.OpensearchPatternArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var opensearch = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"opensearch\")\n            .id(\"ZZZ\")\n            .build());\n\n        var pattern = new OpensearchPattern(\"pattern\", OpensearchPatternArgs.builder()\n            .serviceName(opensearch.applyValue(getDatabaseResult -\u003e getDatabaseResult.serviceName()))\n            .clusterId(opensearch.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()))\n            .maxIndexCount(2)\n            .pattern(\"logs_*\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  pattern:\n    type: ovh:CloudProjectDatabase:OpensearchPattern\n    properties:\n      serviceName: ${opensearch.serviceName}\n      clusterId: ${opensearch.id}\n      maxIndexCount: 2\n      pattern: logs_*\nvariables:\n  opensearch:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXX\n        engine: opensearch\n        id: ZZZ\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Managed opensearch clusters patterns can be imported using the `service_name`, `cluster_id` and `id` of the pattern, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/opensearchPattern:OpensearchPattern my_pattern service_name/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of index for this pattern.\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "clusterId",
                "pattern",
                "serviceName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of index for this pattern.\n",
                    "willReplaceOnChanges": true
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern format.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "pattern",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpensearchPattern resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxIndexCount": {
                        "type": "integer",
                        "description": "Maximum number of index for this pattern.\n",
                        "willReplaceOnChanges": true
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Pattern format.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/opensearchUser:OpensearchUser": {
            "description": "\n\n## Import\n\nOVHcloud Managed OpenSearch clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/opensearchUser:OpensearchUser my_user service_name/cluster_id/id\n```\n\n",
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl"
                    },
                    "description": "Acls of the user.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Username affected by this acl. A user named \"avnadmin\" is mapped with already created admin user and reset his password instead of creating a new user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl"
                    },
                    "description": "Acls of the user.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Username affected by this acl. A user named \"avnadmin\" is mapped with already created admin user and reset his password instead of creating a new user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpensearchUser resources.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl"
                        },
                        "description": "Acls of the user.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Username affected by this acl. A user named \"avnadmin\" is mapped with already created admin user and reset his password instead of creating a new user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/postgresSqlConnectionPool:PostgresSqlConnectionPool": {
            "description": "\n\n## Import\n\nOVHcloud Managed PostgreSQL clusters connection pools can be imported using the `service_name`, `cluster_id` and `id` of the connection pool, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/postgresSqlConnectionPool:PostgresSqlConnectionPool my_connection_pool service_name/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "databaseId": {
                    "type": "string",
                    "description": "Database ID for a database that belongs to the Database cluster given above.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Connection mode to the connection pool Available modes:\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection pool.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the connection pool.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the connection pool.\n"
                },
                "sslMode": {
                    "type": "string",
                    "description": "Ssl connection mode for the pool.\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Connection URI to the pool.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Database user authorized to connect to the pool, if none all the users are allowed.\n"
                }
            },
            "required": [
                "clusterId",
                "databaseId",
                "mode",
                "name",
                "port",
                "serviceName",
                "size",
                "sslMode",
                "uri",
                "userId"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "databaseId": {
                    "type": "string",
                    "description": "Database ID for a database that belongs to the Database cluster given above.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Connection mode to the connection pool Available modes:\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection pool.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the connection pool.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Database user authorized to connect to the pool, if none all the users are allowed.\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "databaseId",
                "mode",
                "serviceName",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PostgresSqlConnectionPool resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "databaseId": {
                        "type": "string",
                        "description": "Database ID for a database that belongs to the Database cluster given above.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Connection mode to the connection pool Available modes:\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the connection pool.\n",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port of the connection pool.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the connection pool.\n"
                    },
                    "sslMode": {
                        "type": "string",
                        "description": "Ssl connection mode for the pool.\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "Connection URI to the pool.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Database user authorized to connect to the pool, if none all the users are allowed.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/postgresSqlUser:PostgresSqlUser": {
            "description": "\n\n## Import\n\nOVHcloud Managed PostgreSQL clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/postgresSqlUser:PostgresSqlUser my_user service_name/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. A user named \"avnadmin\" is mapped with already created admin user and reset his password instead of creating a new user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to. Available roles:\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "roles",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. A user named \"avnadmin\" is mapped with already created admin user and reset his password instead of creating a new user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to. Available roles:\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PostgresSqlUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user. A user named \"avnadmin\" is mapped with already created admin user and reset his password instead of creating a new user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to. Available roles:\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/prometheus:Prometheus": {
            "description": "\n\n## Import\n\nOVHcloud Managed database clusters prometheus can be imported using the `service_name`, `engine` and `cluster_id`, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/prometheus:Prometheus my_prometheus service_name/engine/cluster_id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProjectDatabase/PrometheusTarget:PrometheusTarget"
                    },
                    "description": "List of all endpoint targets.\n* `Host` - Host of the endpoint.\n* `Port` - Connection port for the endpoint.\n"
                },
                "username": {
                    "type": "string",
                    "description": "name of the prometheus user.\n"
                }
            },
            "required": [
                "clusterId",
                "engine",
                "password",
                "serviceName",
                "targets",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Prometheus resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/PrometheusTarget:PrometheusTarget"
                        },
                        "description": "List of all endpoint targets.\n* `Host` - Host of the endpoint.\n* `Port` - Connection port for the endpoint.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "name of the prometheus user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/redisUser:RedisUser": {
            "description": "\n\n## Import\n\nOVHcloud Managed Redis clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/redisUser:RedisUser my_user service_name/cluster_id/id\n```\n\n",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Categories of the user.\n"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Channels of the user.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Commands of the user.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "channels",
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Categories of the user.\n"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Channels of the user.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Commands of the user.\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys of the user.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RedisUser resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Categories of the user.\n"
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Channels of the user.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Commands of the user.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/user:User": {
            "description": "\n\n## Import\n\nOVHcloud Managed database clusters users can be imported using the `service_name`, `engine`, `cluster_id` and `id` of the user, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:CloudProjectDatabase/user:User my_user service_name/engine/cluster_id/id\n```\n\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user.\n"
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. A user named \"avnadmin\" is mapped with already created admin user and reset his password instead of creating a new user. The \"Grafana\" engine only allows the \"avnadmin\" mapping.\n"
                },
                "password": {
                    "type": "string",
                    "description": "(Sensitive) Password of the user.\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "engine",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID.\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user. A user named \"avnadmin\" is mapped with already created admin user and reset his password instead of creating a new user. The \"Grafana\" engine only allows the \"avnadmin\" mapping.\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user. A user named \"avnadmin\" is mapped with already created admin user and reset his password instead of creating a new user. The \"Grafana\" engine only allows the \"avnadmin\" mapping.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "(Sensitive) Password of the user.\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsCluster:LogsCluster": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst ldp = new ovh.dbaas.LogsCluster(\"ldp\", {\n    archiveAllowedNetworks: [\"10.0.0.0/16\"],\n    clusterId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    directInputAllowedNetworks: [\"10.0.0.0/16\"],\n    queryAllowedNetworks: [\"10.0.0.0/16\"],\n    serviceName: \"ldp-xx-xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nldp = ovh.dbaas.LogsCluster(\"ldp\",\n    archive_allowed_networks=[\"10.0.0.0/16\"],\n    cluster_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    direct_input_allowed_networks=[\"10.0.0.0/16\"],\n    query_allowed_networks=[\"10.0.0.0/16\"],\n    service_name=\"ldp-xx-xxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ldp = new Ovh.Dbaas.LogsCluster(\"ldp\", new()\n    {\n        ArchiveAllowedNetworks = new[]\n        {\n            \"10.0.0.0/16\",\n        },\n        ClusterId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        DirectInputAllowedNetworks = new[]\n        {\n            \"10.0.0.0/16\",\n        },\n        QueryAllowedNetworks = new[]\n        {\n            \"10.0.0.0/16\",\n        },\n        ServiceName = \"ldp-xx-xxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.NewLogsCluster(ctx, \"ldp\", \u0026dbaas.LogsClusterArgs{\n\t\t\tArchiveAllowedNetworks: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/16\"),\n\t\t\t},\n\t\t\tClusterId: pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tDirectInputAllowedNetworks: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/16\"),\n\t\t\t},\n\t\t\tQueryAllowedNetworks: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/16\"),\n\t\t\t},\n\t\t\tServiceName: pulumi.String(\"ldp-xx-xxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.LogsCluster;\nimport com.pulumi.ovh.Dbaas.LogsClusterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ldp = new LogsCluster(\"ldp\", LogsClusterArgs.builder()\n            .archiveAllowedNetworks(\"10.0.0.0/16\")\n            .clusterId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .directInputAllowedNetworks(\"10.0.0.0/16\")\n            .queryAllowedNetworks(\"10.0.0.0/16\")\n            .serviceName(\"ldp-xx-xxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ldp:\n    type: ovh:Dbaas:LogsCluster\n    properties:\n      archiveAllowedNetworks:\n        - 10.0.0.0/16\n      clusterId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      directInputAllowedNetworks:\n        - 10.0.0.0/16\n      queryAllowedNetworks:\n        - 10.0.0.0/16\n      serviceName: ldp-xx-xxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud DBaaS Log Data Platform clusters can be imported using the `service_name` and `cluster_id` of the cluster, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Dbaas/logsCluster:LogsCluster ldp service_name/cluster_id\n```\n\n",
            "properties": {
                "archiveAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID. If not provided, the default cluster_id is used\n"
                },
                "clusterType": {
                    "type": "string",
                    "description": "type of cluster (DEDICATED, PRO or TRIAL)\n"
                },
                "dedicatedInputPem": {
                    "type": "string",
                    "description": "PEM for dedicated inputs\n",
                    "secret": true
                },
                "directInputAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "directInputPem": {
                    "type": "string",
                    "description": "PEM for direct inputs\n",
                    "secret": true
                },
                "hostname": {
                    "type": "string",
                    "description": "cluster hostname hosting tenant\n"
                },
                "initialArchiveAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Initial allowed networks for ARCHIVE flow type\n",
                    "secret": true
                },
                "initialDirectInputAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Initial allowed networks for DIRECT_INPUT flow type\n",
                    "secret": true
                },
                "initialQueryAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Initial allowed networks for QUERY flow type\n",
                    "secret": true
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "true if all content generated by given service will be placed on this cluster\n"
                },
                "isUnlocked": {
                    "type": "boolean",
                    "description": "true if given service can perform advanced operations on cluster\n"
                },
                "queryAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "region": {
                    "type": "string",
                    "description": "datacenter localization\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                }
            },
            "required": [
                "clusterType",
                "dedicatedInputPem",
                "directInputPem",
                "hostname",
                "initialArchiveAllowedNetworks",
                "initialDirectInputAllowedNetworks",
                "initialQueryAllowedNetworks",
                "isDefault",
                "isUnlocked",
                "region",
                "serviceName"
            ],
            "inputProperties": {
                "archiveAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID. If not provided, the default cluster_id is used\n"
                },
                "directInputAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "queryAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsCluster resources.\n",
                "properties": {
                    "archiveAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP blocks\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID. If not provided, the default cluster_id is used\n"
                    },
                    "clusterType": {
                        "type": "string",
                        "description": "type of cluster (DEDICATED, PRO or TRIAL)\n"
                    },
                    "dedicatedInputPem": {
                        "type": "string",
                        "description": "PEM for dedicated inputs\n",
                        "secret": true
                    },
                    "directInputAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP blocks\n"
                    },
                    "directInputPem": {
                        "type": "string",
                        "description": "PEM for direct inputs\n",
                        "secret": true
                    },
                    "hostname": {
                        "type": "string",
                        "description": "cluster hostname hosting tenant\n"
                    },
                    "initialArchiveAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Initial allowed networks for ARCHIVE flow type\n",
                        "secret": true
                    },
                    "initialDirectInputAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Initial allowed networks for DIRECT_INPUT flow type\n",
                        "secret": true
                    },
                    "initialQueryAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Initial allowed networks for QUERY flow type\n",
                        "secret": true
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "true if all content generated by given service will be placed on this cluster\n"
                    },
                    "isUnlocked": {
                        "type": "boolean",
                        "description": "true if given service can perform advanced operations on cluster\n"
                    },
                    "queryAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP blocks\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "datacenter localization\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsInput:LogsInput": {
            "description": "Creates a dbaas logs input.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst logstash = ovh.Dbaas.getLogsInputEngine({\n    name: \"logstash\",\n    version: \"7.x\",\n});\nconst stream = new ovh.dbaas.LogsOutputGraylogStream(\"stream\", {\n    serviceName: \"....\",\n    title: \"my stream\",\n    description: \"my graylog stream\",\n});\nconst input = new ovh.dbaas.LogsInput(\"input\", {\n    serviceName: stream.serviceName,\n    description: stream.description,\n    title: stream.title,\n    engineId: logstash.then(logstash =\u003e logstash.id),\n    streamId: stream.id,\n    allowedNetworks: [\"10.0.0.0/16\"],\n    exposedPort: \"6154\",\n    nbInstance: 2,\n    configuration: {\n        logstash: {\n            inputSection: `  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n    ssl_key =\u003e \"/etc/ssl/private/server.key\"\n  }\n`,\n        },\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlogstash = ovh.Dbaas.get_logs_input_engine(name=\"logstash\",\n    version=\"7.x\")\nstream = ovh.dbaas.LogsOutputGraylogStream(\"stream\",\n    service_name=\"....\",\n    title=\"my stream\",\n    description=\"my graylog stream\")\ninput = ovh.dbaas.LogsInput(\"input\",\n    service_name=stream.service_name,\n    description=stream.description,\n    title=stream.title,\n    engine_id=logstash.id,\n    stream_id=stream.id,\n    allowed_networks=[\"10.0.0.0/16\"],\n    exposed_port=\"6154\",\n    nb_instance=2,\n    configuration={\n        \"logstash\": {\n            \"input_section\": \"\"\"  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n    ssl_key =\u003e \"/etc/ssl/private/server.key\"\n  }\n\"\"\",\n        },\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logstash = Ovh.Dbaas.GetLogsInputEngine.Invoke(new()\n    {\n        Name = \"logstash\",\n        Version = \"7.x\",\n    });\n\n    var stream = new Ovh.Dbaas.LogsOutputGraylogStream(\"stream\", new()\n    {\n        ServiceName = \"....\",\n        Title = \"my stream\",\n        Description = \"my graylog stream\",\n    });\n\n    var input = new Ovh.Dbaas.LogsInput(\"input\", new()\n    {\n        ServiceName = stream.ServiceName,\n        Description = stream.Description,\n        Title = stream.Title,\n        EngineId = logstash.Apply(getLogsInputEngineResult =\u003e getLogsInputEngineResult.Id),\n        StreamId = stream.Id,\n        AllowedNetworks = new[]\n        {\n            \"10.0.0.0/16\",\n        },\n        ExposedPort = \"6154\",\n        NbInstance = 2,\n        Configuration = new Ovh.Dbaas.Inputs.LogsInputConfigurationArgs\n        {\n            Logstash = new Ovh.Dbaas.Inputs.LogsInputConfigurationLogstashArgs\n            {\n                InputSection = @\"  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"\"/etc/ssl/private/server.crt\"\"\n    ssl_key =\u003e \"\"/etc/ssl/private/server.key\"\"\n  }\n\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlogstash, err := dbaas.GetLogsInputEngine(ctx, \u0026dbaas.GetLogsInputEngineArgs{\n\t\t\tName:    pulumi.StringRef(\"logstash\"),\n\t\t\tVersion: pulumi.StringRef(\"7.x\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tstream, err := dbaas.NewLogsOutputGraylogStream(ctx, \"stream\", \u0026dbaas.LogsOutputGraylogStreamArgs{\n\t\t\tServiceName: pulumi.String(\"....\"),\n\t\t\tTitle:       pulumi.String(\"my stream\"),\n\t\t\tDescription: pulumi.String(\"my graylog stream\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dbaas.NewLogsInput(ctx, \"input\", \u0026dbaas.LogsInputArgs{\n\t\t\tServiceName: stream.ServiceName,\n\t\t\tDescription: stream.Description,\n\t\t\tTitle:       stream.Title,\n\t\t\tEngineId:    pulumi.String(logstash.Id),\n\t\t\tStreamId:    stream.ID(),\n\t\t\tAllowedNetworks: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"10.0.0.0/16\"),\n\t\t\t},\n\t\t\tExposedPort: pulumi.String(\"6154\"),\n\t\t\tNbInstance:  pulumi.Int(2),\n\t\t\tConfiguration: \u0026dbaas.LogsInputConfigurationArgs{\n\t\t\t\tLogstash: \u0026dbaas.LogsInputConfigurationLogstashArgs{\n\t\t\t\t\tInputSection: pulumi.String(`  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n    ssl_key =\u003e \"/etc/ssl/private/server.key\"\n  }\n`),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsInputEngineArgs;\nimport com.pulumi.ovh.Dbaas.LogsOutputGraylogStream;\nimport com.pulumi.ovh.Dbaas.LogsOutputGraylogStreamArgs;\nimport com.pulumi.ovh.Dbaas.LogsInput;\nimport com.pulumi.ovh.Dbaas.LogsInputArgs;\nimport com.pulumi.ovh.Dbaas.inputs.LogsInputConfigurationArgs;\nimport com.pulumi.ovh.Dbaas.inputs.LogsInputConfigurationLogstashArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var logstash = DbaasFunctions.getLogsInputEngine(GetLogsInputEngineArgs.builder()\n            .name(\"logstash\")\n            .version(\"7.x\")\n            .build());\n\n        var stream = new LogsOutputGraylogStream(\"stream\", LogsOutputGraylogStreamArgs.builder()\n            .serviceName(\"....\")\n            .title(\"my stream\")\n            .description(\"my graylog stream\")\n            .build());\n\n        var input = new LogsInput(\"input\", LogsInputArgs.builder()\n            .serviceName(stream.serviceName())\n            .description(stream.description())\n            .title(stream.title())\n            .engineId(logstash.applyValue(getLogsInputEngineResult -\u003e getLogsInputEngineResult.id()))\n            .streamId(stream.id())\n            .allowedNetworks(\"10.0.0.0/16\")\n            .exposedPort(\"6154\")\n            .nbInstance(2)\n            .configuration(LogsInputConfigurationArgs.builder()\n                .logstash(LogsInputConfigurationLogstashArgs.builder()\n                    .inputSection(\"\"\"\n  beats {\n    port =\u003e 6514\n    ssl =\u003e true\n    ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n    ssl_key =\u003e \"/etc/ssl/private/server.key\"\n  }\n                    \"\"\")\n                    .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  stream:\n    type: ovh:Dbaas:LogsOutputGraylogStream\n    properties:\n      serviceName: '....'\n      title: my stream\n      description: my graylog stream\n  input:\n    type: ovh:Dbaas:LogsInput\n    properties:\n      serviceName: ${stream.serviceName}\n      description: ${stream.description}\n      title: ${stream.title}\n      engineId: ${logstash.id}\n      streamId: ${stream.id}\n      allowedNetworks:\n        - 10.0.0.0/16\n      exposedPort: '6154'\n      nbInstance: 2\n      configuration:\n        logstash:\n          inputSection: |2\n              beats {\n                port =\u003e 6514\n                ssl =\u003e true\n                ssl_certificate =\u003e \"/etc/ssl/private/server.crt\"\n                ssl_key =\u003e \"/etc/ssl/private/server.key\"\n              }\nvariables:\n  logstash:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsInputEngine\n      arguments:\n        name: logstash\n        version: 7.x\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "allowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Whether the workload is auto-scaled (mutually exclusive with parameter `nb_instance`)\n"
                },
                "configuration": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration",
                    "description": "Input configuration\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Input creation\n"
                },
                "currentNbInstance": {
                    "type": "integer",
                    "description": "Number of instance running (returned by the API)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Input description\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Input engine ID\n"
                },
                "exposedPort": {
                    "type": "string",
                    "description": "Port\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname\n"
                },
                "inputId": {
                    "type": "string",
                    "description": "Input ID\n"
                },
                "isRestartRequired": {
                    "type": "boolean",
                    "description": "Indicate if input need to be restarted\n"
                },
                "maxScaleInstance": {
                    "type": "integer",
                    "description": "Maximum number of instances in auto-scaled mode\n"
                },
                "minScaleInstance": {
                    "type": "integer",
                    "description": "Minimum number of instances in auto-scaled mode\n"
                },
                "nbInstance": {
                    "type": "integer",
                    "description": "Number of instance running (input, mutually exclusive with parameter `autoscale`)\n"
                },
                "publicAddress": {
                    "type": "string",
                    "description": "Input IP address\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "service name\n"
                },
                "sslCertificate": {
                    "type": "string",
                    "description": "Input SSL certificate\n",
                    "secret": true
                },
                "status": {
                    "type": "string",
                    "description": "init: configuration required, pending: ready to start, running: available\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Associated Graylog stream\n"
                },
                "title": {
                    "type": "string",
                    "description": "Input title\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Input last update\n"
                }
            },
            "required": [
                "allowedNetworks",
                "configuration",
                "createdAt",
                "currentNbInstance",
                "description",
                "engineId",
                "exposedPort",
                "hostname",
                "inputId",
                "isRestartRequired",
                "publicAddress",
                "serviceName",
                "sslCertificate",
                "status",
                "streamId",
                "title",
                "updatedAt"
            ],
            "inputProperties": {
                "allowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP blocks\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Whether the workload is auto-scaled (mutually exclusive with parameter `nb_instance`)\n"
                },
                "configuration": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration",
                    "description": "Input configuration\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Input description\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Input engine ID\n"
                },
                "exposedPort": {
                    "type": "string",
                    "description": "Port\n"
                },
                "maxScaleInstance": {
                    "type": "integer",
                    "description": "Maximum number of instances in auto-scaled mode\n"
                },
                "minScaleInstance": {
                    "type": "integer",
                    "description": "Minimum number of instances in auto-scaled mode\n"
                },
                "nbInstance": {
                    "type": "integer",
                    "description": "Number of instance running (input, mutually exclusive with parameter `autoscale`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "service name\n",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "Associated Graylog stream\n"
                },
                "title": {
                    "type": "string",
                    "description": "Input title\n"
                }
            },
            "requiredInputs": [
                "configuration",
                "description",
                "engineId",
                "serviceName",
                "streamId",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsInput resources.\n",
                "properties": {
                    "allowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP blocks\n"
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "Whether the workload is auto-scaled (mutually exclusive with parameter `nb_instance`)\n"
                    },
                    "configuration": {
                        "$ref": "#/types/ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration",
                        "description": "Input configuration\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Input creation\n"
                    },
                    "currentNbInstance": {
                        "type": "integer",
                        "description": "Number of instance running (returned by the API)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Input description\n"
                    },
                    "engineId": {
                        "type": "string",
                        "description": "Input engine ID\n"
                    },
                    "exposedPort": {
                        "type": "string",
                        "description": "Port\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Hostname\n"
                    },
                    "inputId": {
                        "type": "string",
                        "description": "Input ID\n"
                    },
                    "isRestartRequired": {
                        "type": "boolean",
                        "description": "Indicate if input need to be restarted\n"
                    },
                    "maxScaleInstance": {
                        "type": "integer",
                        "description": "Maximum number of instances in auto-scaled mode\n"
                    },
                    "minScaleInstance": {
                        "type": "integer",
                        "description": "Minimum number of instances in auto-scaled mode\n"
                    },
                    "nbInstance": {
                        "type": "integer",
                        "description": "Number of instance running (input, mutually exclusive with parameter `autoscale`)\n"
                    },
                    "publicAddress": {
                        "type": "string",
                        "description": "Input IP address\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "service name\n",
                        "willReplaceOnChanges": true
                    },
                    "sslCertificate": {
                        "type": "string",
                        "description": "Input SSL certificate\n",
                        "secret": true
                    },
                    "status": {
                        "type": "string",
                        "description": "init: configuration required, pending: ready to start, running: available\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Associated Graylog stream\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Input title\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Input last update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsOutputGraylogStream:LogsOutputGraylogStream": {
            "description": "Creates a DBaaS Logs Graylog output stream.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst stream = new ovh.dbaas.LogsOutputGraylogStream(\"stream\", {\n    description: \"my graylog stream\",\n    serviceName: \"....\",\n    title: \"my stream\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nstream = ovh.dbaas.LogsOutputGraylogStream(\"stream\",\n    description=\"my graylog stream\",\n    service_name=\"....\",\n    title=\"my stream\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var stream = new Ovh.Dbaas.LogsOutputGraylogStream(\"stream\", new()\n    {\n        Description = \"my graylog stream\",\n        ServiceName = \"....\",\n        Title = \"my stream\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.NewLogsOutputGraylogStream(ctx, \"stream\", \u0026dbaas.LogsOutputGraylogStreamArgs{\n\t\t\tDescription: pulumi.String(\"my graylog stream\"),\n\t\t\tServiceName: pulumi.String(\"....\"),\n\t\t\tTitle:       pulumi.String(\"my stream\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.LogsOutputGraylogStream;\nimport com.pulumi.ovh.Dbaas.LogsOutputGraylogStreamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var stream = new LogsOutputGraylogStream(\"stream\", LogsOutputGraylogStreamArgs.builder()\n            .description(\"my graylog stream\")\n            .serviceName(\"....\")\n            .title(\"my stream\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  stream:\n    type: ovh:Dbaas:LogsOutputGraylogStream\n    properties:\n      description: my graylog stream\n      serviceName: '....'\n      title: my stream\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nTo define the retention of the stream, you can use the following configuration:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst retention = ovh.Dbaas.getLogsClustersRetention({\n    serviceName: \"ldp-xx-xxxxx\",\n    clusterId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    duration: \"P14D\",\n});\nconst stream = new ovh.dbaas.LogsOutputGraylogStream(\"stream\", {\n    serviceName: \"....\",\n    title: \"my stream\",\n    description: \"my graylog stream\",\n    retentionId: retention.then(retention =\u003e retention.retentionId),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nretention = ovh.Dbaas.get_logs_clusters_retention(service_name=\"ldp-xx-xxxxx\",\n    cluster_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    duration=\"P14D\")\nstream = ovh.dbaas.LogsOutputGraylogStream(\"stream\",\n    service_name=\"....\",\n    title=\"my stream\",\n    description=\"my graylog stream\",\n    retention_id=retention.retention_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var retention = Ovh.Dbaas.GetLogsClustersRetention.Invoke(new()\n    {\n        ServiceName = \"ldp-xx-xxxxx\",\n        ClusterId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        Duration = \"P14D\",\n    });\n\n    var stream = new Ovh.Dbaas.LogsOutputGraylogStream(\"stream\", new()\n    {\n        ServiceName = \"....\",\n        Title = \"my stream\",\n        Description = \"my graylog stream\",\n        RetentionId = retention.Apply(getLogsClustersRetentionResult =\u003e getLogsClustersRetentionResult.RetentionId),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tretention, err := dbaas.GetLogsClustersRetention(ctx, \u0026dbaas.GetLogsClustersRetentionArgs{\n\t\t\tServiceName: \"ldp-xx-xxxxx\",\n\t\t\tClusterId:   \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t\tDuration:    pulumi.StringRef(\"P14D\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dbaas.NewLogsOutputGraylogStream(ctx, \"stream\", \u0026dbaas.LogsOutputGraylogStreamArgs{\n\t\t\tServiceName: pulumi.String(\"....\"),\n\t\t\tTitle:       pulumi.String(\"my stream\"),\n\t\t\tDescription: pulumi.String(\"my graylog stream\"),\n\t\t\tRetentionId: pulumi.String(retention.RetentionId),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsClustersRetentionArgs;\nimport com.pulumi.ovh.Dbaas.LogsOutputGraylogStream;\nimport com.pulumi.ovh.Dbaas.LogsOutputGraylogStreamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var retention = DbaasFunctions.getLogsClustersRetention(GetLogsClustersRetentionArgs.builder()\n            .serviceName(\"ldp-xx-xxxxx\")\n            .clusterId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .duration(\"P14D\")\n            .build());\n\n        var stream = new LogsOutputGraylogStream(\"stream\", LogsOutputGraylogStreamArgs.builder()\n            .serviceName(\"....\")\n            .title(\"my stream\")\n            .description(\"my graylog stream\")\n            .retentionId(retention.applyValue(getLogsClustersRetentionResult -\u003e getLogsClustersRetentionResult.retentionId()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  stream:\n    type: ovh:Dbaas:LogsOutputGraylogStream\n    properties:\n      serviceName: '....'\n      title: my stream\n      description: my graylog stream\n      retentionId: ${retention.retentionId}\nvariables:\n  retention:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsClustersRetention\n      arguments:\n        serviceName: ldp-xx-xxxxx\n        clusterId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        duration: P14D\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "canAlert": {
                    "type": "boolean",
                    "description": "Indicates if the current user can create alert on the stream\n"
                },
                "coldStorageCompression": {
                    "type": "string",
                    "description": "Cold storage compression method. One of \"LZMA\", \"GZIP\", \"DEFLATED\", \"ZSTD\"\n"
                },
                "coldStorageContent": {
                    "type": "string",
                    "description": "ColdStorage content. One of \"ALL\", \"GLEF\", \"PLAIN\"\n"
                },
                "coldStorageEnabled": {
                    "type": "boolean",
                    "description": "Is Cold storage enabled?\n"
                },
                "coldStorageNotifyEnabled": {
                    "type": "boolean",
                    "description": "Notify on new Cold storage archive\n"
                },
                "coldStorageRetention": {
                    "type": "integer",
                    "description": "Cold storage retention in year\n"
                },
                "coldStorageTarget": {
                    "type": "string",
                    "description": "ColdStorage destination. One of \"PCA\", \"PCS\"\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Stream creation\n"
                },
                "description": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "indexingEnabled": {
                    "type": "boolean",
                    "description": "Enable ES indexing\n"
                },
                "indexingMaxSize": {
                    "type": "integer",
                    "description": "Maximum indexing size (in GB)\n"
                },
                "indexingNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to edit entry\n"
                },
                "isShareable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to share entry\n"
                },
                "nbAlertCondition": {
                    "type": "integer",
                    "description": "Number of alert condition\n"
                },
                "nbArchive": {
                    "type": "integer",
                    "description": "Number of coldstored archivesr\n"
                },
                "parentStreamId": {
                    "type": "string",
                    "description": "Parent stream ID\n"
                },
                "pauseIndexingOnMaxSize": {
                    "type": "boolean",
                    "description": "If set, pause indexing when maximum size is reach\n"
                },
                "retentionId": {
                    "type": "string",
                    "description": "Retention ID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Stream ID\n"
                },
                "title": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Stream last updater\n"
                },
                "webSocketEnabled": {
                    "type": "boolean",
                    "description": "Enable Websocket\n"
                },
                "writeToken": {
                    "type": "string",
                    "description": "Write token of the stream (empty if the caller is not the owner of the stream)\n",
                    "secret": true
                }
            },
            "required": [
                "canAlert",
                "coldStorageCompression",
                "coldStorageContent",
                "coldStorageEnabled",
                "coldStorageNotifyEnabled",
                "coldStorageRetention",
                "coldStorageTarget",
                "createdAt",
                "description",
                "indexingEnabled",
                "indexingMaxSize",
                "indexingNotifyEnabled",
                "isEditable",
                "isShareable",
                "nbAlertCondition",
                "nbArchive",
                "pauseIndexingOnMaxSize",
                "retentionId",
                "serviceName",
                "streamId",
                "title",
                "updatedAt",
                "webSocketEnabled",
                "writeToken"
            ],
            "inputProperties": {
                "coldStorageCompression": {
                    "type": "string",
                    "description": "Cold storage compression method. One of \"LZMA\", \"GZIP\", \"DEFLATED\", \"ZSTD\"\n"
                },
                "coldStorageContent": {
                    "type": "string",
                    "description": "ColdStorage content. One of \"ALL\", \"GLEF\", \"PLAIN\"\n"
                },
                "coldStorageEnabled": {
                    "type": "boolean",
                    "description": "Is Cold storage enabled?\n"
                },
                "coldStorageNotifyEnabled": {
                    "type": "boolean",
                    "description": "Notify on new Cold storage archive\n"
                },
                "coldStorageRetention": {
                    "type": "integer",
                    "description": "Cold storage retention in year\n"
                },
                "coldStorageTarget": {
                    "type": "string",
                    "description": "ColdStorage destination. One of \"PCA\", \"PCS\"\n"
                },
                "description": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "indexingEnabled": {
                    "type": "boolean",
                    "description": "Enable ES indexing\n"
                },
                "indexingMaxSize": {
                    "type": "integer",
                    "description": "Maximum indexing size (in GB)\n"
                },
                "indexingNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                },
                "parentStreamId": {
                    "type": "string",
                    "description": "Parent stream ID\n",
                    "willReplaceOnChanges": true
                },
                "pauseIndexingOnMaxSize": {
                    "type": "boolean",
                    "description": "If set, pause indexing when maximum size is reach\n"
                },
                "retentionId": {
                    "type": "string",
                    "description": "Retention ID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "title": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "webSocketEnabled": {
                    "type": "boolean",
                    "description": "Enable Websocket\n"
                }
            },
            "requiredInputs": [
                "description",
                "serviceName",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsOutputGraylogStream resources.\n",
                "properties": {
                    "canAlert": {
                        "type": "boolean",
                        "description": "Indicates if the current user can create alert on the stream\n"
                    },
                    "coldStorageCompression": {
                        "type": "string",
                        "description": "Cold storage compression method. One of \"LZMA\", \"GZIP\", \"DEFLATED\", \"ZSTD\"\n"
                    },
                    "coldStorageContent": {
                        "type": "string",
                        "description": "ColdStorage content. One of \"ALL\", \"GLEF\", \"PLAIN\"\n"
                    },
                    "coldStorageEnabled": {
                        "type": "boolean",
                        "description": "Is Cold storage enabled?\n"
                    },
                    "coldStorageNotifyEnabled": {
                        "type": "boolean",
                        "description": "Notify on new Cold storage archive\n"
                    },
                    "coldStorageRetention": {
                        "type": "integer",
                        "description": "Cold storage retention in year\n"
                    },
                    "coldStorageTarget": {
                        "type": "string",
                        "description": "ColdStorage destination. One of \"PCA\", \"PCS\"\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Stream creation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "indexingEnabled": {
                        "type": "boolean",
                        "description": "Enable ES indexing\n"
                    },
                    "indexingMaxSize": {
                        "type": "integer",
                        "description": "Maximum indexing size (in GB)\n"
                    },
                    "indexingNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "isShareable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to share entry\n"
                    },
                    "nbAlertCondition": {
                        "type": "integer",
                        "description": "Number of alert condition\n"
                    },
                    "nbArchive": {
                        "type": "integer",
                        "description": "Number of coldstored archivesr\n"
                    },
                    "parentStreamId": {
                        "type": "string",
                        "description": "Parent stream ID\n",
                        "willReplaceOnChanges": true
                    },
                    "pauseIndexingOnMaxSize": {
                        "type": "boolean",
                        "description": "If set, pause indexing when maximum size is reach\n"
                    },
                    "retentionId": {
                        "type": "string",
                        "description": "Retention ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Stream ID\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Stream last updater\n"
                    },
                    "webSocketEnabled": {
                        "type": "boolean",
                        "description": "Enable Websocket\n"
                    },
                    "writeToken": {
                        "type": "string",
                        "description": "Write token of the stream (empty if the caller is not the owner of the stream)\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsOutputOpenSearchAlias:LogsOutputOpenSearchAlias": {
            "description": "Creates a DBaaS Logs Opensearch output alias.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst alias = new ovh.dbaas.LogsOutputOpenSearchAlias(\"alias\", {\n    description: \"my opensearch alias\",\n    serviceName: \"....\",\n    suffix: \"alias\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nalias = ovh.dbaas.LogsOutputOpenSearchAlias(\"alias\",\n    description=\"my opensearch alias\",\n    service_name=\"....\",\n    suffix=\"alias\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @alias = new Ovh.Dbaas.LogsOutputOpenSearchAlias(\"alias\", new()\n    {\n        Description = \"my opensearch alias\",\n        ServiceName = \"....\",\n        Suffix = \"alias\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.NewLogsOutputOpenSearchAlias(ctx, \"alias\", \u0026dbaas.LogsOutputOpenSearchAliasArgs{\n\t\t\tDescription: pulumi.String(\"my opensearch alias\"),\n\t\t\tServiceName: pulumi.String(\"....\"),\n\t\t\tSuffix:      pulumi.String(\"alias\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.LogsOutputOpenSearchAlias;\nimport com.pulumi.ovh.Dbaas.LogsOutputOpenSearchAliasArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var alias = new LogsOutputOpenSearchAlias(\"alias\", LogsOutputOpenSearchAliasArgs.builder()\n            .description(\"my opensearch alias\")\n            .serviceName(\"....\")\n            .suffix(\"alias\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  alias:\n    type: ovh:Dbaas:LogsOutputOpenSearchAlias\n    properties:\n      description: my opensearch alias\n      serviceName: '....'\n      suffix: alias\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "aliasId": {
                    "type": "string",
                    "description": "Alias Id\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Alias creation\n"
                },
                "currentSize": {
                    "type": "integer",
                    "description": "Current alias size (in bytes)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Index description\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of attached indexes id\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to edit entry\n"
                },
                "name": {
                    "type": "string",
                    "description": "Alias name\n"
                },
                "nbIndex": {
                    "type": "integer",
                    "description": "Number of indices linked\n"
                },
                "nbStream": {
                    "type": "integer",
                    "description": "Number of streams linked\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of attached streams id\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "Index suffix\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Input last update\n"
                }
            },
            "required": [
                "aliasId",
                "createdAt",
                "currentSize",
                "description",
                "indexes",
                "isEditable",
                "name",
                "nbIndex",
                "nbStream",
                "serviceName",
                "streams",
                "suffix",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Index description\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of attached indexes id\n"
                },
                "nbIndex": {
                    "type": "integer",
                    "description": "Number of indices linked\n"
                },
                "nbStream": {
                    "type": "integer",
                    "description": "Number of streams linked\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of attached streams id\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "Index suffix\n"
                }
            },
            "requiredInputs": [
                "description",
                "serviceName",
                "suffix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsOutputOpenSearchAlias resources.\n",
                "properties": {
                    "aliasId": {
                        "type": "string",
                        "description": "Alias Id\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Alias creation\n"
                    },
                    "currentSize": {
                        "type": "integer",
                        "description": "Current alias size (in bytes)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Index description\n"
                    },
                    "indexes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of attached indexes id\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Alias name\n"
                    },
                    "nbIndex": {
                        "type": "integer",
                        "description": "Number of indices linked\n"
                    },
                    "nbStream": {
                        "type": "integer",
                        "description": "Number of streams linked\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "streams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of attached streams id\n"
                    },
                    "suffix": {
                        "type": "string",
                        "description": "Index suffix\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Input last update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsOutputOpenSearchIndex:LogsOutputOpenSearchIndex": {
            "description": "Creates a DBaaS Logs Opensearch output index.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst index = new ovh.dbaas.LogsOutputOpenSearchIndex(\"index\", {\n    description: \"my opensearch index\",\n    serviceName: \"....\",\n    suffix: \"index\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nindex = ovh.dbaas.LogsOutputOpenSearchIndex(\"index\",\n    description=\"my opensearch index\",\n    service_name=\"....\",\n    suffix=\"index\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var index = new Ovh.Dbaas.LogsOutputOpenSearchIndex(\"index\", new()\n    {\n        Description = \"my opensearch index\",\n        ServiceName = \"....\",\n        Suffix = \"index\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.NewLogsOutputOpenSearchIndex(ctx, \"index\", \u0026dbaas.LogsOutputOpenSearchIndexArgs{\n\t\t\tDescription: pulumi.String(\"my opensearch index\"),\n\t\t\tServiceName: pulumi.String(\"....\"),\n\t\t\tSuffix:      pulumi.String(\"index\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.LogsOutputOpenSearchIndex;\nimport com.pulumi.ovh.Dbaas.LogsOutputOpenSearchIndexArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var index = new LogsOutputOpenSearchIndex(\"index\", LogsOutputOpenSearchIndexArgs.builder()\n            .description(\"my opensearch index\")\n            .serviceName(\"....\")\n            .suffix(\"index\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  index:\n    type: ovh:Dbaas:LogsOutputOpenSearchIndex\n    properties:\n      description: my opensearch index\n      serviceName: '....'\n      suffix: index\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "alertNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of its maximum capacity\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Index creation\n"
                },
                "currentSize": {
                    "type": "integer",
                    "description": "Current index size (in bytes)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Index description\n"
                },
                "indexId": {
                    "type": "string",
                    "description": "Index ID\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to edit entry\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "Maximum index size (in bytes)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Index name\n"
                },
                "nbShard": {
                    "type": "integer",
                    "description": "Number of shards\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "Index suffix\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Index last update\n"
                }
            },
            "required": [
                "alertNotifyEnabled",
                "createdAt",
                "currentSize",
                "description",
                "indexId",
                "isEditable",
                "maxSize",
                "name",
                "nbShard",
                "serviceName",
                "suffix",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Index description\n"
                },
                "nbShard": {
                    "type": "integer",
                    "description": "Number of shards\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "Index suffix\n"
                }
            },
            "requiredInputs": [
                "description",
                "nbShard",
                "serviceName",
                "suffix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsOutputOpenSearchIndex resources.\n",
                "properties": {
                    "alertNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of its maximum capacity\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Index creation\n"
                    },
                    "currentSize": {
                        "type": "integer",
                        "description": "Current index size (in bytes)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Index description\n"
                    },
                    "indexId": {
                        "type": "string",
                        "description": "Index ID\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "Maximum index size (in bytes)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Index name\n"
                    },
                    "nbShard": {
                        "type": "integer",
                        "description": "Number of shards\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "suffix": {
                        "type": "string",
                        "description": "Index suffix\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Index last update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsRole:LogsRole": {
            "description": "Reference a DBaaS logs role.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst ro = new ovh.dbaas.LogsRole(\"ro\", {\n    description: \"Devops - RO\",\n    serviceName: \"ldp-xx-xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nro = ovh.dbaas.LogsRole(\"ro\",\n    description=\"Devops - RO\",\n    service_name=\"ldp-xx-xxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ro = new Ovh.Dbaas.LogsRole(\"ro\", new()\n    {\n        Description = \"Devops - RO\",\n        ServiceName = \"ldp-xx-xxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.NewLogsRole(ctx, \"ro\", \u0026dbaas.LogsRoleArgs{\n\t\t\tDescription: pulumi.String(\"Devops - RO\"),\n\t\t\tServiceName: pulumi.String(\"ldp-xx-xxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.LogsRole;\nimport com.pulumi.ovh.Dbaas.LogsRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ro = new LogsRole(\"ro\", LogsRoleArgs.builder()\n            .description(\"Devops - RO\")\n            .serviceName(\"ldp-xx-xxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ro:\n    type: ovh:Dbaas:LogsRole\n    properties:\n      description: Devops - RO\n      serviceName: ldp-xx-xxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud DBaaS Log Role can be imported using the `service_name` and `role_id` of the role, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Dbaas/logsRole:LogsRole ovh_dbaas_logs_role.ro ldp-ra-XX/dc145bc2-eb01-4efe-a802-XXXXXX\n```\n\n",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Role creation date\n"
                },
                "description": {
                    "type": "string",
                    "description": "The role description\n"
                },
                "name": {
                    "type": "string",
                    "description": "The role name\n"
                },
                "nbMember": {
                    "type": "integer",
                    "description": "number of member for the role\n"
                },
                "nbPermission": {
                    "type": "integer",
                    "description": "number of configured permission for the role\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "Role identifier\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Role last update date\n"
                }
            },
            "required": [
                "createdAt",
                "description",
                "name",
                "nbMember",
                "nbPermission",
                "roleId",
                "serviceName",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The role description\n"
                },
                "name": {
                    "type": "string",
                    "description": "The role name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                }
            },
            "requiredInputs": [
                "description",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsRole resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Role creation date\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The role description\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The role name\n"
                    },
                    "nbMember": {
                        "type": "integer",
                        "description": "number of member for the role\n"
                    },
                    "nbPermission": {
                        "type": "integer",
                        "description": "number of configured permission for the role\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "Role identifier\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Role last update date\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsRolePermissionStream:LogsRolePermissionStream": {
            "description": "Reference a DBaaS logs role stream permission.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst permission = new ovh.dbaas.LogsRolePermissionStream(\"permission\", {\n    serviceName: \"ldp-xx-xxxxx\",\n    roleId: ovh_dbaas_logs_role.ro.id,\n    streamId: ovh_dbaas_logs_output_graylog_stream.mystream.stream_id,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npermission = ovh.dbaas.LogsRolePermissionStream(\"permission\",\n    service_name=\"ldp-xx-xxxxx\",\n    role_id=ovh_dbaas_logs_role[\"ro\"][\"id\"],\n    stream_id=ovh_dbaas_logs_output_graylog_stream[\"mystream\"][\"stream_id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var permission = new Ovh.Dbaas.LogsRolePermissionStream(\"permission\", new()\n    {\n        ServiceName = \"ldp-xx-xxxxx\",\n        RoleId = ovh_dbaas_logs_role.Ro.Id,\n        StreamId = ovh_dbaas_logs_output_graylog_stream.Mystream.Stream_id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.NewLogsRolePermissionStream(ctx, \"permission\", \u0026dbaas.LogsRolePermissionStreamArgs{\n\t\t\tServiceName: pulumi.String(\"ldp-xx-xxxxx\"),\n\t\t\tRoleId:      pulumi.Any(ovh_dbaas_logs_role.Ro.Id),\n\t\t\tStreamId:    pulumi.Any(ovh_dbaas_logs_output_graylog_stream.Mystream.Stream_id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.LogsRolePermissionStream;\nimport com.pulumi.ovh.Dbaas.LogsRolePermissionStreamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var permission = new LogsRolePermissionStream(\"permission\", LogsRolePermissionStreamArgs.builder()\n            .serviceName(\"ldp-xx-xxxxx\")\n            .roleId(ovh_dbaas_logs_role.ro().id())\n            .streamId(ovh_dbaas_logs_output_graylog_stream.mystream().stream_id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  permission:\n    type: ovh:Dbaas:LogsRolePermissionStream\n    properties:\n      serviceName: ldp-xx-xxxxx\n      roleId: ${ovh_dbaas_logs_role.ro.id}\n      streamId: ${ovh_dbaas_logs_output_graylog_stream.mystream.stream_id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nDBaaS logs role stream permission can be imported using the `service_name`, `role_id` and `id` of the permission, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Dbaas/logsRolePermissionStream:LogsRolePermissionStream ovh_dbaas_logs_role_permission_stream.perm ldp-ra-XX/dc145bc2-eb01-4efe-a802-XXXXXX/e4818fa8-f426-11ef-a1f6-XXXXXXX\n```\n\n",
            "properties": {
                "permissionId": {
                    "type": "string",
                    "description": "Permission ID\n"
                },
                "permissionType": {
                    "type": "string",
                    "description": "Permission type (e.g., READ_ONLY)\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "The DBaaS Logs role id\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "The DBaaS Logs Graylog output stream id\n"
                }
            },
            "required": [
                "permissionId",
                "permissionType",
                "roleId",
                "serviceName",
                "streamId"
            ],
            "inputProperties": {
                "roleId": {
                    "type": "string",
                    "description": "The DBaaS Logs role id\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "The DBaaS Logs Graylog output stream id\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "roleId",
                "serviceName",
                "streamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsRolePermissionStream resources.\n",
                "properties": {
                    "permissionId": {
                        "type": "string",
                        "description": "Permission ID\n"
                    },
                    "permissionType": {
                        "type": "string",
                        "description": "Permission type (e.g., READ_ONLY)\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "The DBaaS Logs role id\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n",
                        "willReplaceOnChanges": true
                    },
                    "streamId": {
                        "type": "string",
                        "description": "The DBaaS Logs Graylog output stream id\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsToken:LogsToken": {
            "description": "Allows to manipulate LDP tokens.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst token = new ovh.dbaas.LogsToken(\"token\", {serviceName: \"ldp-xx-xxxxx\"});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntoken = ovh.dbaas.LogsToken(\"token\", service_name=\"ldp-xx-xxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var token = new Ovh.Dbaas.LogsToken(\"token\", new()\n    {\n        ServiceName = \"ldp-xx-xxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.NewLogsToken(ctx, \"token\", \u0026dbaas.LogsTokenArgs{\n\t\t\tServiceName: pulumi.String(\"ldp-xx-xxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.LogsToken;\nimport com.pulumi.ovh.Dbaas.LogsTokenArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var token = new LogsToken(\"token\", LogsTokenArgs.builder()\n            .serviceName(\"ldp-xx-xxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  token:\n    type: ovh:Dbaas:LogsToken\n    properties:\n      serviceName: ldp-xx-xxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID. If not provided, the default cluster_id is used\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Token creation date\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the token\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The LDP service name\n"
                },
                "tokenId": {
                    "type": "string",
                    "description": "ID of the token\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Token last update date\n"
                },
                "value": {
                    "type": "string",
                    "description": "Token value\n",
                    "secret": true
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "serviceName",
                "tokenId",
                "updatedAt",
                "value"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID. If not provided, the default cluster_id is used\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the token\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The LDP service name\n"
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsToken resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID. If not provided, the default cluster_id is used\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Token creation date\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the token\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The LDP service name\n"
                    },
                    "tokenId": {
                        "type": "string",
                        "description": "ID of the token\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Token last update date\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Token value\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/cephAcl:CephAcl": {
            "description": "Add a new access ACL for the given network/mask.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myCeph = ovh.Dedicated.getCeph({\n    serviceName: \"94d423da-0e55-45f2-9812-836460a19939\",\n});\nconst my_acl = new ovh.dedicated.CephAcl(\"my-acl\", {\n    serviceName: myCeph.then(myCeph =\u003e myCeph.id),\n    network: \"1.2.3.4\",\n    netmask: \"255.255.255.255\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_ceph = ovh.Dedicated.get_ceph(service_name=\"94d423da-0e55-45f2-9812-836460a19939\")\nmy_acl = ovh.dedicated.CephAcl(\"my-acl\",\n    service_name=my_ceph.id,\n    network=\"1.2.3.4\",\n    netmask=\"255.255.255.255\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myCeph = Ovh.Dedicated.GetCeph.Invoke(new()\n    {\n        ServiceName = \"94d423da-0e55-45f2-9812-836460a19939\",\n    });\n\n    var my_acl = new Ovh.Dedicated.CephAcl(\"my-acl\", new()\n    {\n        ServiceName = myCeph.Apply(getCephResult =\u003e getCephResult.Id),\n        Network = \"1.2.3.4\",\n        Netmask = \"255.255.255.255\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyCeph, err := dedicated.GetCeph(ctx, \u0026dedicated.GetCephArgs{\n\t\t\tServiceName: \"94d423da-0e55-45f2-9812-836460a19939\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dedicated.NewCephAcl(ctx, \"my-acl\", \u0026dedicated.CephAclArgs{\n\t\t\tServiceName: pulumi.String(myCeph.Id),\n\t\t\tNetwork:     pulumi.String(\"1.2.3.4\"),\n\t\t\tNetmask:     pulumi.String(\"255.255.255.255\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetCephArgs;\nimport com.pulumi.ovh.Dedicated.CephAcl;\nimport com.pulumi.ovh.Dedicated.CephAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myCeph = DedicatedFunctions.getCeph(GetCephArgs.builder()\n            .serviceName(\"94d423da-0e55-45f2-9812-836460a19939\")\n            .build());\n\n        var my_acl = new CephAcl(\"my-acl\", CephAclArgs.builder()\n            .serviceName(myCeph.applyValue(getCephResult -\u003e getCephResult.id()))\n            .network(\"1.2.3.4\")\n            .netmask(\"255.255.255.255\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  my-acl:\n    type: ovh:Dedicated:CephAcl\n    properties:\n      serviceName: ${myCeph.id}\n      network: 1.2.3.4\n      netmask: 255.255.255.255\nvariables:\n  myCeph:\n    fn::invoke:\n      function: ovh:Dedicated:getCeph\n      arguments:\n        serviceName: 94d423da-0e55-45f2-9812-836460a19939\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "family": {
                    "type": "string",
                    "description": "IP family. `IPv4` or `IPv6`\n"
                },
                "netmask": {
                    "type": "string",
                    "description": "The network mask to apply\n"
                },
                "network": {
                    "type": "string",
                    "description": "The network IP to authorize\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated CEPH\n"
                }
            },
            "required": [
                "family",
                "netmask",
                "network",
                "serviceName"
            ],
            "inputProperties": {
                "netmask": {
                    "type": "string",
                    "description": "The network mask to apply\n",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "description": "The network IP to authorize\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated CEPH\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "netmask",
                "network",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CephAcl resources.\n",
                "properties": {
                    "family": {
                        "type": "string",
                        "description": "IP family. `IPv4` or `IPv6`\n"
                    },
                    "netmask": {
                        "type": "string",
                        "description": "The network mask to apply\n",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "type": "string",
                        "description": "The network IP to authorize\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated CEPH\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/nasHAPartition:NasHAPartition": {
            "description": "Provides a resource for managing partitions on HA-NAS services\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myPartition = new ovh.dedicated.NasHAPartition(\"myPartition\", {\n    protocol: \"NFS\",\n    serviceName: \"zpool-12345\",\n    size: 20,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_partition = ovh.dedicated.NasHAPartition(\"myPartition\",\n    protocol=\"NFS\",\n    service_name=\"zpool-12345\",\n    size=20)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myPartition = new Ovh.Dedicated.NasHAPartition(\"myPartition\", new()\n    {\n        Protocol = \"NFS\",\n        ServiceName = \"zpool-12345\",\n        Size = 20,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.NewNasHAPartition(ctx, \"myPartition\", \u0026dedicated.NasHAPartitionArgs{\n\t\t\tProtocol:    pulumi.String(\"NFS\"),\n\t\t\tServiceName: pulumi.String(\"zpool-12345\"),\n\t\t\tSize:        pulumi.Int(20),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.NasHAPartition;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myPartition = new NasHAPartition(\"myPartition\", NasHAPartitionArgs.builder()\n            .protocol(\"NFS\")\n            .serviceName(\"zpool-12345\")\n            .size(20)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myPartition:\n    type: ovh:Dedicated:NasHAPartition\n    properties:\n      protocol: NFS\n      serviceName: zpool-12345\n      size: 20\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nHA-NAS can be imported using the `{service_name}/{name}`, e.g.\n\n```sh\n$ pulumi import ovh:Dedicated/nasHAPartition:NasHAPartition my-partition zpool-12345/my-partition`\n```\n\n",
            "properties": {
                "capacity": {
                    "type": "integer",
                    "description": "Percentage of partition space used in %\n"
                },
                "description": {
                    "type": "string",
                    "description": "A brief description of the partition\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the partition\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "one of \"NFS\", \"CIFS\" or \"NFS_CIFS\"\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n"
                },
                "size": {
                    "type": "integer",
                    "description": "size of the partition in GB\n"
                },
                "usedBySnapshots": {
                    "type": "integer",
                    "description": "Percentage of partition space used by snapshots in %\n"
                }
            },
            "required": [
                "capacity",
                "name",
                "protocol",
                "serviceName",
                "size",
                "usedBySnapshots"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A brief description of the partition\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the partition\n",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "description": "one of \"NFS\", \"CIFS\" or \"NFS_CIFS\"\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "size of the partition in GB\n"
                }
            },
            "requiredInputs": [
                "protocol",
                "serviceName",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NasHAPartition resources.\n",
                "properties": {
                    "capacity": {
                        "type": "integer",
                        "description": "Percentage of partition space used in %\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A brief description of the partition\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the partition\n",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "description": "one of \"NFS\", \"CIFS\" or \"NFS_CIFS\"\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "size of the partition in GB\n"
                    },
                    "usedBySnapshots": {
                        "type": "integer",
                        "description": "Percentage of partition space used by snapshots in %\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/nasHAPartitionAccess:NasHAPartitionAccess": {
            "description": "Provides a resource for managing access rights to partitions on HA-NAS services\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myPartition = new ovh.dedicated.NasHAPartitionAccess(\"myPartition\", {\n    aclDescription: \"Description of the ACL\",\n    ip: \"123.123.123.123/32\",\n    partitionName: \"my-partition\",\n    serviceName: \"zpool-12345\",\n    type: \"readwrite\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_partition = ovh.dedicated.NasHAPartitionAccess(\"myPartition\",\n    acl_description=\"Description of the ACL\",\n    ip=\"123.123.123.123/32\",\n    partition_name=\"my-partition\",\n    service_name=\"zpool-12345\",\n    type=\"readwrite\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myPartition = new Ovh.Dedicated.NasHAPartitionAccess(\"myPartition\", new()\n    {\n        AclDescription = \"Description of the ACL\",\n        Ip = \"123.123.123.123/32\",\n        PartitionName = \"my-partition\",\n        ServiceName = \"zpool-12345\",\n        Type = \"readwrite\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.NewNasHAPartitionAccess(ctx, \"myPartition\", \u0026dedicated.NasHAPartitionAccessArgs{\n\t\t\tAclDescription: pulumi.String(\"Description of the ACL\"),\n\t\t\tIp:             pulumi.String(\"123.123.123.123/32\"),\n\t\t\tPartitionName:  pulumi.String(\"my-partition\"),\n\t\t\tServiceName:    pulumi.String(\"zpool-12345\"),\n\t\t\tType:           pulumi.String(\"readwrite\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionAccess;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myPartition = new NasHAPartitionAccess(\"myPartition\", NasHAPartitionAccessArgs.builder()\n            .aclDescription(\"Description of the ACL\")\n            .ip(\"123.123.123.123/32\")\n            .partitionName(\"my-partition\")\n            .serviceName(\"zpool-12345\")\n            .type(\"readwrite\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myPartition:\n    type: ovh:Dedicated:NasHAPartitionAccess\n    properties:\n      aclDescription: Description of the ACL\n      ip: 123.123.123.123/32\n      partitionName: my-partition\n      serviceName: zpool-12345\n      type: readwrite\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nHA-NAS partition access can be imported using the `{service_name}/{partition_name}/{ip}`, e.g.\n\n```sh\n$ pulumi import ovh:Dedicated/nasHAPartitionAccess:NasHAPartitionAccess my-partition zpool-12345/my-partition/123.123.123.123%2F32`\n```\n\n",
            "properties": {
                "aclDescription": {
                    "type": "string",
                    "description": "A brief description of the acl\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP block in x.x.x.x/x format\n"
                },
                "partitionName": {
                    "type": "string",
                    "description": "Name of the partition\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of \"readwrite\", \"readonly\"\n"
                }
            },
            "required": [
                "ip",
                "partitionName",
                "serviceName"
            ],
            "inputProperties": {
                "aclDescription": {
                    "type": "string",
                    "description": "A brief description of the acl\n",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "IP block in x.x.x.x/x format\n",
                    "willReplaceOnChanges": true
                },
                "partitionName": {
                    "type": "string",
                    "description": "Name of the partition\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "One of \"readwrite\", \"readonly\"\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ip",
                "partitionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NasHAPartitionAccess resources.\n",
                "properties": {
                    "aclDescription": {
                        "type": "string",
                        "description": "A brief description of the acl\n",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "IP block in x.x.x.x/x format\n",
                        "willReplaceOnChanges": true
                    },
                    "partitionName": {
                        "type": "string",
                        "description": "Name of the partition\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "One of \"readwrite\", \"readonly\"\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/nasHAPartitionSnapshot:NasHAPartitionSnapshot": {
            "description": "Provides a resource for managing **snapshot** to partitions on HA-NAS services\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myPartition = new ovh.dedicated.NasHAPartitionSnapshot(\"myPartition\", {\n    partitionName: \"my-partition\",\n    serviceName: \"zpool-12345\",\n    type: \"day-3\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_partition = ovh.dedicated.NasHAPartitionSnapshot(\"myPartition\",\n    partition_name=\"my-partition\",\n    service_name=\"zpool-12345\",\n    type=\"day-3\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myPartition = new Ovh.Dedicated.NasHAPartitionSnapshot(\"myPartition\", new()\n    {\n        PartitionName = \"my-partition\",\n        ServiceName = \"zpool-12345\",\n        Type = \"day-3\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.NewNasHAPartitionSnapshot(ctx, \"myPartition\", \u0026dedicated.NasHAPartitionSnapshotArgs{\n\t\t\tPartitionName: pulumi.String(\"my-partition\"),\n\t\t\tServiceName:   pulumi.String(\"zpool-12345\"),\n\t\t\tType:          pulumi.String(\"day-3\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionSnapshot;\nimport com.pulumi.ovh.Dedicated.NasHAPartitionSnapshotArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myPartition = new NasHAPartitionSnapshot(\"myPartition\", NasHAPartitionSnapshotArgs.builder()\n            .partitionName(\"my-partition\")\n            .serviceName(\"zpool-12345\")\n            .type(\"day-3\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myPartition:\n    type: ovh:Dedicated:NasHAPartitionSnapshot\n    properties:\n      partitionName: my-partition\n      serviceName: zpool-12345\n      type: day-3\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nHA-NAS partition snapshot can be imported using the `{service_name}/{partition_name}/{type}`, e.g.\n\n```sh\n$ pulumi import ovh:Dedicated/nasHAPartitionSnapshot:NasHAPartitionSnapshot my-partition zpool-12345/my-partition/day-3`\n```\n\n",
            "properties": {
                "partitionName": {
                    "type": "string",
                    "description": "name of the partition\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n"
                },
                "type": {
                    "type": "string",
                    "description": "Snapshot interval, allowed : day-1, day-2, day-3, day-7, hour-1, hour-6\n"
                }
            },
            "required": [
                "partitionName",
                "serviceName",
                "type"
            ],
            "inputProperties": {
                "partitionName": {
                    "type": "string",
                    "description": "name of the partition\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Snapshot interval, allowed : day-1, day-2, day-3, day-7, hour-1, hour-6\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "partitionName",
                "serviceName",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NasHAPartitionSnapshot resources.\n",
                "properties": {
                    "partitionName": {
                        "type": "string",
                        "description": "name of the partition\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your HA-NAS (it has to be ordered via OVHcloud interface)\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "Snapshot interval, allowed : day-1, day-2, day-3, day-7, hour-1, hour-6\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/server:Server": {
            "description": "\n\n## Import\n\nDedicated servers can be imported using the `service_name`. Using the following configuration:\n\nterraform\n\nimport {\n\n  to = ovh_dedicated_server.server\n\n  id = \"\u003cservice name\u003e\"\n\n}\n\nYou can then run:\n\nbash\n\npulumi preview -generate-config-out=dedicated.tf\n\npulumi up\n\nThe file `dedicated.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "Dedicated AZ localisation\n"
                },
                "bootId": {
                    "type": "number",
                    "description": "Boot id of the server\n"
                },
                "bootScript": {
                    "type": "string",
                    "description": "Boot script of the server\n"
                },
                "commercialRange": {
                    "type": "string",
                    "description": "Dedicated server commercial range\n"
                },
                "customizations": {
                    "$ref": "#/types/ovh:Dedicated/ServerCustomizations:ServerCustomizations",
                    "description": "OS reinstallation customizations\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "Dedicated datacenter localisation (bhs1,bhs2,...)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "Path of the EFI bootloader\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Dedicated/ServerIam:ServerIam",
                    "description": "IAM resource information\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Dedicated server ip (IPv4)\n"
                },
                "linkSpeed": {
                    "type": "number",
                    "description": "Link speed of the server\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "name": {
                    "type": "string",
                    "description": "Dedicated server name\n"
                },
                "newUpgradeSystem": {
                    "type": "boolean"
                },
                "noIntervention": {
                    "type": "boolean",
                    "description": "Prevent datacenter intervention\n"
                },
                "order": {
                    "$ref": "#/types/ovh:Dedicated/ServerOrder:ServerOrder",
                    "description": "Details about an Order\n"
                },
                "os": {
                    "type": "string",
                    "description": "Operating system\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlanOption:ServerPlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlan:ServerPlan"
                    }
                },
                "powerState": {
                    "type": "string",
                    "description": "Power state of the server (poweron, poweroff)\n"
                },
                "professionalUse": {
                    "type": "boolean",
                    "description": "Does this server have professional use option\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary properties to pass to cloud-init's config drive datasource\n"
                },
                "rack": {
                    "type": "string",
                    "description": "Rack id of the server\n"
                },
                "region": {
                    "type": "string",
                    "description": "Dedicated region localisation\n"
                },
                "rescueMail": {
                    "type": "string",
                    "description": "Rescue mail of the server\n"
                },
                "rescueSshKey": {
                    "type": "string",
                    "description": "Public SSH Key used in the rescue mode\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "Dedicated server reverse\n"
                },
                "rootDevice": {
                    "type": "string",
                    "description": "Root device of the server\n"
                },
                "serverId": {
                    "type": "number",
                    "description": "Server id\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server\n"
                },
                "state": {
                    "type": "string",
                    "description": "All states a Dedicated can be in (error, hacked, hackedBlocked, ok)\n"
                },
                "storages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerStorage:ServerStorage"
                    },
                    "description": "OS reinstallation storage configurations\n"
                },
                "supportLevel": {
                    "type": "string",
                    "description": "Dedicated server support level (critical, fastpath, gs, pro)\n"
                }
            },
            "required": [
                "availabilityZone",
                "bootId",
                "bootScript",
                "commercialRange",
                "datacenter",
                "displayName",
                "efiBootloaderPath",
                "iam",
                "ip",
                "linkSpeed",
                "monitoring",
                "name",
                "newUpgradeSystem",
                "noIntervention",
                "order",
                "os",
                "plans",
                "planOptions",
                "powerState",
                "professionalUse",
                "rack",
                "region",
                "rescueMail",
                "rescueSshKey",
                "reverse",
                "rootDevice",
                "serverId",
                "serviceName",
                "state",
                "supportLevel"
            ],
            "inputProperties": {
                "bootId": {
                    "type": "number",
                    "description": "Boot id of the server\n"
                },
                "bootScript": {
                    "type": "string",
                    "description": "Boot script of the server\n"
                },
                "customizations": {
                    "$ref": "#/types/ovh:Dedicated/ServerCustomizations:ServerCustomizations",
                    "description": "OS reinstallation customizations\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "Path of the EFI bootloader\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "noIntervention": {
                    "type": "boolean",
                    "description": "Prevent datacenter intervention\n"
                },
                "os": {
                    "type": "string",
                    "description": "Operating system\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlanOption:ServerPlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlan:ServerPlan"
                    }
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary properties to pass to cloud-init's config drive datasource\n"
                },
                "rescueMail": {
                    "type": "string",
                    "description": "Rescue mail of the server\n"
                },
                "rescueSshKey": {
                    "type": "string",
                    "description": "Public SSH Key used in the rescue mode\n"
                },
                "rootDevice": {
                    "type": "string",
                    "description": "Root device of the server\n"
                },
                "state": {
                    "type": "string",
                    "description": "All states a Dedicated can be in (error, hacked, hackedBlocked, ok)\n"
                },
                "storages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerStorage:ServerStorage"
                    },
                    "description": "OS reinstallation storage configurations\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Server resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "description": "Dedicated AZ localisation\n"
                    },
                    "bootId": {
                        "type": "number",
                        "description": "Boot id of the server\n"
                    },
                    "bootScript": {
                        "type": "string",
                        "description": "Boot script of the server\n"
                    },
                    "commercialRange": {
                        "type": "string",
                        "description": "Dedicated server commercial range\n"
                    },
                    "customizations": {
                        "$ref": "#/types/ovh:Dedicated/ServerCustomizations:ServerCustomizations",
                        "description": "OS reinstallation customizations\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "Dedicated datacenter localisation (bhs1,bhs2,...)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Resource display name\n"
                    },
                    "efiBootloaderPath": {
                        "type": "string",
                        "description": "Path of the EFI bootloader\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Dedicated/ServerIam:ServerIam",
                        "description": "IAM resource information\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Dedicated server ip (IPv4)\n"
                    },
                    "linkSpeed": {
                        "type": "number",
                        "description": "Link speed of the server\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Dedicated server name\n"
                    },
                    "newUpgradeSystem": {
                        "type": "boolean"
                    },
                    "noIntervention": {
                        "type": "boolean",
                        "description": "Prevent datacenter intervention\n"
                    },
                    "order": {
                        "$ref": "#/types/ovh:Dedicated/ServerOrder:ServerOrder",
                        "description": "Details about an Order\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "Operating system\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVH subsidiaries\n"
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerPlanOption:ServerPlanOption"
                        }
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerPlan:ServerPlan"
                        }
                    },
                    "powerState": {
                        "type": "string",
                        "description": "Power state of the server (poweron, poweroff)\n"
                    },
                    "professionalUse": {
                        "type": "boolean",
                        "description": "Does this server have professional use option\n"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Arbitrary properties to pass to cloud-init's config drive datasource\n"
                    },
                    "rack": {
                        "type": "string",
                        "description": "Rack id of the server\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Dedicated region localisation\n"
                    },
                    "rescueMail": {
                        "type": "string",
                        "description": "Rescue mail of the server\n"
                    },
                    "rescueSshKey": {
                        "type": "string",
                        "description": "Public SSH Key used in the rescue mode\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "Dedicated server reverse\n"
                    },
                    "rootDevice": {
                        "type": "string",
                        "description": "Root device of the server\n"
                    },
                    "serverId": {
                        "type": "number",
                        "description": "Server id\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "All states a Dedicated can be in (error, hacked, hackedBlocked, ok)\n"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerStorage:ServerStorage"
                        },
                        "description": "OS reinstallation storage configurations\n"
                    },
                    "supportLevel": {
                        "type": "string",
                        "description": "Dedicated server support level (critical, fastpath, gs, pro)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverNetworking:ServerNetworking": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Operation description\n"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface"
                    },
                    "description": "Interface or interfaces aggregation.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Operation status\n"
                }
            },
            "required": [
                "description",
                "interfaces",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface"
                    },
                    "description": "Interface or interfaces aggregation.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "interfaces",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerNetworking resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Operation description\n"
                    },
                    "interfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface"
                        },
                        "description": "Interface or interfaces aggregation.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Operation status\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverRebootTask:ServerRebootTask": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rescue = ovh.Dedicated.getServerBoots({\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    bootType: \"rescue\",\n    kernel: \"rescue64-pro\",\n});\nconst serverOnRescue = new ovh.dedicated.ServerUpdate(\"serverOnRescue\", {\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    bootId: rescue.then(rescue =\u003e rescue.results?.[0]),\n    monitoring: true,\n    state: \"ok\",\n});\nconst serverReboot = new ovh.dedicated.ServerRebootTask(\"serverReboot\", {\n    serviceName: rescue.then(rescue =\u003e rescue.serviceName),\n    keepers: [serverOnRescue.bootId],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrescue = ovh.Dedicated.get_server_boots(service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    boot_type=\"rescue\",\n    kernel=\"rescue64-pro\")\nserver_on_rescue = ovh.dedicated.ServerUpdate(\"serverOnRescue\",\n    service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    boot_id=rescue.results[0],\n    monitoring=True,\n    state=\"ok\")\nserver_reboot = ovh.dedicated.ServerRebootTask(\"serverReboot\",\n    service_name=rescue.service_name,\n    keepers=[server_on_rescue.boot_id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rescue = Ovh.Dedicated.GetServerBoots.Invoke(new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        BootType = \"rescue\",\n        Kernel = \"rescue64-pro\",\n    });\n\n    var serverOnRescue = new Ovh.Dedicated.ServerUpdate(\"serverOnRescue\", new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        BootId = rescue.Apply(getServerBootsResult =\u003e getServerBootsResult.Results[0]),\n        Monitoring = true,\n        State = \"ok\",\n    });\n\n    var serverReboot = new Ovh.Dedicated.ServerRebootTask(\"serverReboot\", new()\n    {\n        ServiceName = rescue.Apply(getServerBootsResult =\u003e getServerBootsResult.ServiceName),\n        Keepers = new[]\n        {\n            serverOnRescue.BootId,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\trescue, err := dedicated.GetServerBoots(ctx, \u0026dedicated.GetServerBootsArgs{\n\t\t\tServiceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n\t\t\tBootType:    pulumi.StringRef(\"rescue\"),\n\t\t\tKernel:      pulumi.StringRef(\"rescue64-pro\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tserverOnRescue, err := dedicated.NewServerUpdate(ctx, \"serverOnRescue\", \u0026dedicated.ServerUpdateArgs{\n\t\t\tServiceName: pulumi.String(\"nsxxxxxxx.ip-xx-xx-xx.eu\"),\n\t\t\tBootId:      pulumi.Int(rescue.Results[0]),\n\t\t\tMonitoring:  pulumi.Bool(true),\n\t\t\tState:       pulumi.String(\"ok\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dedicated.NewServerRebootTask(ctx, \"serverReboot\", \u0026dedicated.ServerRebootTaskArgs{\n\t\t\tServiceName: pulumi.String(rescue.ServiceName),\n\t\t\tKeepers: pulumi.StringArray{\n\t\t\t\tserverOnRescue.BootId,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetServerBootsArgs;\nimport com.pulumi.ovh.Dedicated.ServerUpdate;\nimport com.pulumi.ovh.Dedicated.ServerUpdateArgs;\nimport com.pulumi.ovh.Dedicated.ServerRebootTask;\nimport com.pulumi.ovh.Dedicated.ServerRebootTaskArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rescue = DedicatedFunctions.getServerBoots(GetServerBootsArgs.builder()\n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .bootType(\"rescue\")\n            .kernel(\"rescue64-pro\")\n            .build());\n\n        var serverOnRescue = new ServerUpdate(\"serverOnRescue\", ServerUpdateArgs.builder()\n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .bootId(rescue.applyValue(getServerBootsResult -\u003e getServerBootsResult.results()[0]))\n            .monitoring(true)\n            .state(\"ok\")\n            .build());\n\n        var serverReboot = new ServerRebootTask(\"serverReboot\", ServerRebootTaskArgs.builder()\n            .serviceName(rescue.applyValue(getServerBootsResult -\u003e getServerBootsResult.serviceName()))\n            .keepers(serverOnRescue.bootId())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  serverOnRescue:\n    type: ovh:Dedicated:ServerUpdate\n    properties:\n      serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n      bootId: ${rescue.results[0]}\n      monitoring: true\n      state: ok\n  serverReboot:\n    type: ovh:Dedicated:ServerRebootTask\n    properties:\n      serviceName: ${rescue.serviceName}\n      keepers:\n        - ${serverOnRescue.bootId}\nvariables:\n  rescue:\n    fn::invoke:\n      function: ovh:Dedicated:getServerBoots\n      arguments:\n        serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n        bootType: rescue\n        kernel: rescue64-pro\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Details of this task. (should be `Reboot asked`)\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date in RFC3339 format.\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name (should be `hardReboot`).\n"
                },
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values tracked to trigger reboot, used also to form implicit dependencies.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update in RFC3339 format.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task creation date in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status (should be `done`)\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "keepers",
                "lastUpdate",
                "serviceName",
                "startDate",
                "status"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values tracked to trigger reboot, used also to form implicit dependencies.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerRebootTask resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Details of this task. (should be `Reboot asked`)\n"
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date in RFC3339 format.\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name (should be `hardReboot`).\n"
                    },
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values tracked to trigger reboot, used also to form implicit dependencies.\n",
                        "willReplaceOnChanges": true
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update in RFC3339 format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task creation date in RFC3339 format.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status (should be `done`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverReinstallTask:ServerReinstallTask": {
            "description": "\n\n## Import\n\nInstallation task can be imported using the `service_name` (`nsXXXX.ip...`) of the baremetal server, the `operating_system` used and ths `task_id`, separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Dedicated/serverReinstallTask:ServerReinstallTask ovh_dedicated_server_reinstall_task nsXXXX.ipXXXX/operating_system/12345\n```\n\n",
            "properties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                },
                "comment": {
                    "type": "string",
                    "description": "Details of this task. (should be `Install asked`)\n"
                },
                "customizations": {
                    "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskCustomizations:ServerReinstallTaskCustomizations",
                    "description": "Available attributes and their types are OS-dependant. Example: `hostname`.\n\n\u003e **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view\u0026sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date in RFC3339 format.\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name (should be `hardInstall`).\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update\n"
                },
                "os": {
                    "type": "string",
                    "description": "Operating system to install.\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary properties to pass to cloud-init's config drive datasource. It supports any key with any string value.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task creation date in RFC3339 format.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status (should be `done`)\n"
                },
                "storages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStorage:ServerReinstallTaskStorage"
                    },
                    "description": "OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view\u0026sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "lastUpdate",
                "os",
                "serviceName",
                "startDate",
                "status"
            ],
            "inputProperties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                },
                "customizations": {
                    "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskCustomizations:ServerReinstallTaskCustomizations",
                    "description": "Available attributes and their types are OS-dependant. Example: `hostname`.\n\n\u003e **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view\u0026sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).\n",
                    "willReplaceOnChanges": true
                },
                "os": {
                    "type": "string",
                    "description": "Operating system to install.\n",
                    "willReplaceOnChanges": true
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary properties to pass to cloud-init's config drive datasource. It supports any key with any string value.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                },
                "storages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStorage:ServerReinstallTaskStorage"
                    },
                    "description": "OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view\u0026sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "os",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerReinstallTask resources.\n",
                "properties": {
                    "bootidOnDestroy": {
                        "type": "integer",
                        "description": "If set, reboot the server on the specified boot id during destroy phase.\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Details of this task. (should be `Install asked`)\n"
                    },
                    "customizations": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskCustomizations:ServerReinstallTaskCustomizations",
                        "description": "Available attributes and their types are OS-dependant. Example: `hostname`.\n\n\u003e **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view\u0026sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).\n",
                        "willReplaceOnChanges": true
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date in RFC3339 format.\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name (should be `hardInstall`).\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "Operating system to install.\n",
                        "willReplaceOnChanges": true
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Arbitrary properties to pass to cloud-init's config drive datasource. It supports any key with any string value.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task creation date in RFC3339 format.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status (should be `done`)\n"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStorage:ServerReinstallTaskStorage"
                        },
                        "description": "OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view\u0026sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverUpdate:ServerUpdate": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rescue = ovh.Dedicated.getServerBoots({\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    bootType: \"rescue\",\n    kernel: \"rescue64-pro\",\n});\nconst server = new ovh.dedicated.ServerUpdate(\"server\", {\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    bootId: rescue.then(rescue =\u003e rescue.results?.[0]),\n    monitoring: true,\n    state: \"ok\",\n    displayName: \"Some human-readable name\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrescue = ovh.Dedicated.get_server_boots(service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    boot_type=\"rescue\",\n    kernel=\"rescue64-pro\")\nserver = ovh.dedicated.ServerUpdate(\"server\",\n    service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    boot_id=rescue.results[0],\n    monitoring=True,\n    state=\"ok\",\n    display_name=\"Some human-readable name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rescue = Ovh.Dedicated.GetServerBoots.Invoke(new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        BootType = \"rescue\",\n        Kernel = \"rescue64-pro\",\n    });\n\n    var server = new Ovh.Dedicated.ServerUpdate(\"server\", new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n        BootId = rescue.Apply(getServerBootsResult =\u003e getServerBootsResult.Results[0]),\n        Monitoring = true,\n        State = \"ok\",\n        DisplayName = \"Some human-readable name\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\trescue, err := dedicated.GetServerBoots(ctx, \u0026dedicated.GetServerBootsArgs{\n\t\t\tServiceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n\t\t\tBootType:    pulumi.StringRef(\"rescue\"),\n\t\t\tKernel:      pulumi.StringRef(\"rescue64-pro\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = dedicated.NewServerUpdate(ctx, \"server\", \u0026dedicated.ServerUpdateArgs{\n\t\t\tServiceName: pulumi.String(\"nsxxxxxxx.ip-xx-xx-xx.eu\"),\n\t\t\tBootId:      pulumi.Int(rescue.Results[0]),\n\t\t\tMonitoring:  pulumi.Bool(true),\n\t\t\tState:       pulumi.String(\"ok\"),\n\t\t\tDisplayName: pulumi.String(\"Some human-readable name\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetServerBootsArgs;\nimport com.pulumi.ovh.Dedicated.ServerUpdate;\nimport com.pulumi.ovh.Dedicated.ServerUpdateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rescue = DedicatedFunctions.getServerBoots(GetServerBootsArgs.builder()\n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .bootType(\"rescue\")\n            .kernel(\"rescue64-pro\")\n            .build());\n\n        var server = new ServerUpdate(\"server\", ServerUpdateArgs.builder()\n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .bootId(rescue.applyValue(getServerBootsResult -\u003e getServerBootsResult.results()[0]))\n            .monitoring(true)\n            .state(\"ok\")\n            .displayName(\"Some human-readable name\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  server:\n    type: ovh:Dedicated:ServerUpdate\n    properties:\n      serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n      bootId: ${rescue.results[0]}\n      monitoring: true\n      state: ok\n      displayName: Some human-readable name\nvariables:\n  rescue:\n    fn::invoke:\n      function: ovh:Dedicated:getServerBoots\n      arguments:\n        serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n        bootType: rescue\n        kernel: rescue64-pro\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "bootId": {
                    "type": "integer",
                    "description": "boot id of the server\n"
                },
                "bootScript": {
                    "type": "string",
                    "description": "boot script of the server\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "display name of the dedicated server\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "path of the EFI bootloader\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "required": [
                "bootId",
                "displayName",
                "efiBootloaderPath",
                "monitoring",
                "serviceName",
                "state"
            ],
            "inputProperties": {
                "bootId": {
                    "type": "integer",
                    "description": "boot id of the server\n"
                },
                "bootScript": {
                    "type": "string",
                    "description": "boot script of the server\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "display name of the dedicated server\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "path of the EFI bootloader\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service_name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerUpdate resources.\n",
                "properties": {
                    "bootId": {
                        "type": "integer",
                        "description": "boot id of the server\n"
                    },
                    "bootScript": {
                        "type": "string",
                        "description": "boot script of the server\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "display name of the dedicated server\n"
                    },
                    "efiBootloaderPath": {
                        "type": "string",
                        "description": "path of the EFI bootloader\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "error, hacked, hackedBlocked, ok\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/dSRecords:DSRecords": {
            "description": "Use this resource to manage a domain's DS records.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst dsRecords = new ovh.domain.DSRecords(\"dsRecords\", {\n    domain: \"mydomain.ovh\",\n    dsRecords: [{\n        algorithm: \"RSASHA1_NSEC3_SHA1\",\n        flags: \"KEY_SIGNING_KEY\",\n        publicKey: \"my_base64_encoded_public_key\",\n        tag: 12345,\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nds_records = ovh.domain.DSRecords(\"dsRecords\",\n    domain=\"mydomain.ovh\",\n    ds_records=[{\n        \"algorithm\": \"RSASHA1_NSEC3_SHA1\",\n        \"flags\": \"KEY_SIGNING_KEY\",\n        \"public_key\": \"my_base64_encoded_public_key\",\n        \"tag\": 12345,\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var dsRecords = new Ovh.Domain.DSRecords(\"dsRecords\", new()\n    {\n        Domain = \"mydomain.ovh\",\n        DsRecords = new[]\n        {\n            new Ovh.Domain.Inputs.DSRecordsDsRecordArgs\n            {\n                Algorithm = \"RSASHA1_NSEC3_SHA1\",\n                Flags = \"KEY_SIGNING_KEY\",\n                PublicKey = \"my_base64_encoded_public_key\",\n                Tag = 12345,\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := domain.NewDSRecords(ctx, \"dsRecords\", \u0026domain.DSRecordsArgs{\n\t\t\tDomain: pulumi.String(\"mydomain.ovh\"),\n\t\t\tDsRecords: domain.DSRecordsDsRecordArray{\n\t\t\t\t\u0026domain.DSRecordsDsRecordArgs{\n\t\t\t\t\tAlgorithm: pulumi.String(\"RSASHA1_NSEC3_SHA1\"),\n\t\t\t\t\tFlags:     pulumi.String(\"KEY_SIGNING_KEY\"),\n\t\t\t\t\tPublicKey: pulumi.String(\"my_base64_encoded_public_key\"),\n\t\t\t\t\tTag:       pulumi.Int(12345),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.DSRecords;\nimport com.pulumi.ovh.Domain.DSRecordsArgs;\nimport com.pulumi.ovh.Domain.inputs.DSRecordsDsRecordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var dsRecords = new DSRecords(\"dsRecords\", DSRecordsArgs.builder()\n            .domain(\"mydomain.ovh\")\n            .dsRecords(DSRecordsDsRecordArgs.builder()\n                .algorithm(\"RSASHA1_NSEC3_SHA1\")\n                .flags(\"KEY_SIGNING_KEY\")\n                .publicKey(\"my_base64_encoded_public_key\")\n                .tag(12345)\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  dsRecords:\n    type: ovh:Domain:DSRecords\n    properties:\n      domain: mydomain.ovh\n      dsRecords:\n        - algorithm: RSASHA1_NSEC3_SHA1\n          flags: KEY_SIGNING_KEY\n          publicKey: my_base64_encoded_public_key\n          tag: 12345\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nDS records can be imported using their `domain`.\n\nUsing the following configuration:\n\nterraform\n\nimport {\n\n  to = ovh_domain_ds_records.ds_records\n\n  id = \"\u003cdomain name\u003e\"\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=ds_records.tf\n\n$ pulumi up\n\nThe file `ds_records.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Domain name for which to manage DS records\n"
                },
                "dsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/DSRecordsDsRecord:DSRecordsDsRecord"
                    },
                    "description": "Details about a DS record\n"
                }
            },
            "required": [
                "domain",
                "dsRecords"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "Domain name for which to manage DS records\n",
                    "willReplaceOnChanges": true
                },
                "dsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/DSRecordsDsRecord:DSRecordsDsRecord"
                    },
                    "description": "Details about a DS record\n"
                }
            },
            "requiredInputs": [
                "domain",
                "dsRecords"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DSRecords resources.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "Domain name for which to manage DS records\n",
                        "willReplaceOnChanges": true
                    },
                    "dsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/DSRecordsDsRecord:DSRecordsDsRecord"
                        },
                        "description": "Details about a DS record\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/name:Name": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.Name;\nimport com.pulumi.ovh.Domain.NameArgs;\nimport com.pulumi.ovh.Domain.inputs.NameTargetSpecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var domain = new Name(\"domain\", NameArgs.builder()\n            .domainName(\"example.com\")\n            .targetSpec(NameTargetSpecArgs.builder()\n                .dns_configuration(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  domain:\n    type: ovh:Domain:Name\n    properties:\n      domainName: example.com\n      targetSpec:\n        dns_configuration:\n          nameServers:\n            - nameServer: dns101.ovh.net\n            - nameServer: ns101.ovh.net\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nA domain name can be imported using its `domain_name`.\n\nUsing the following configuration:\n\nterraform\n\nimport {\n\n  to = ovh_domain_name.domain\n\n  id = \"\u003cdomain name\u003e\"\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=domain.tf\n\n$ pulumi up\n\nThe file `domain.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "checksum": {
                    "type": "string",
                    "description": "Computed hash used to control concurrent modification requests. Here, it represents the current target specification value\n"
                },
                "currentState": {
                    "$ref": "#/types/ovh:Domain/NameCurrentState:NameCurrentState",
                    "description": "Current state of the domain name\n"
                },
                "currentTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameCurrentTask:NameCurrentTask"
                    },
                    "description": "Ongoing asynchronous tasks related to the domain name resource\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Domain/NameIam:NameIam",
                    "description": "IAM resource metadata\n"
                },
                "order": {
                    "$ref": "#/types/ovh:Domain/NameOrder:NameOrder",
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlanOption:NamePlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlan:NamePlan"
                    }
                },
                "resourceStatus": {
                    "type": "string",
                    "description": "Reflects the readiness of the domain name resource. A new target specification request will be accepted only in `READY`, `UPDATING` or `ERROR` status\n"
                },
                "targetSpec": {
                    "$ref": "#/types/ovh:Domain/NameTargetSpec:NameTargetSpec",
                    "description": "Latest target specification of the domain name resource.\n"
                }
            },
            "required": [
                "checksum",
                "currentState",
                "currentTasks",
                "domainName",
                "iam",
                "order",
                "plans",
                "planOptions",
                "resourceStatus",
                "targetSpec"
            ],
            "inputProperties": {
                "checksum": {
                    "type": "string",
                    "description": "Computed hash used to control concurrent modification requests. Here, it represents the current target specification value\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlanOption:NamePlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlan:NamePlan"
                    }
                },
                "targetSpec": {
                    "$ref": "#/types/ovh:Domain/NameTargetSpec:NameTargetSpec",
                    "description": "Latest target specification of the domain name resource.\n"
                }
            },
            "requiredInputs": [
                "domainName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Name resources.\n",
                "properties": {
                    "checksum": {
                        "type": "string",
                        "description": "Computed hash used to control concurrent modification requests. Here, it represents the current target specification value\n"
                    },
                    "currentState": {
                        "$ref": "#/types/ovh:Domain/NameCurrentState:NameCurrentState",
                        "description": "Current state of the domain name\n"
                    },
                    "currentTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/NameCurrentTask:NameCurrentTask"
                        },
                        "description": "Ongoing asynchronous tasks related to the domain name resource\n"
                    },
                    "domainName": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Domain/NameIam:NameIam",
                        "description": "IAM resource metadata\n"
                    },
                    "order": {
                        "$ref": "#/types/ovh:Domain/NameOrder:NameOrder",
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVH subsidiaries\n"
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/NamePlanOption:NamePlanOption"
                        }
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/NamePlan:NamePlan"
                        }
                    },
                    "resourceStatus": {
                        "type": "string",
                        "description": "Reflects the readiness of the domain name resource. A new target specification request will be accepted only in `READY`, `UPDATING` or `ERROR` status\n"
                    },
                    "targetSpec": {
                        "$ref": "#/types/ovh:Domain/NameTargetSpec:NameTargetSpec",
                        "description": "Latest target specification of the domain name resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/nameServers:NameServers": {
            "description": "Use this resource to manage a domain's name servers.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst nameServers = new ovh.domain.NameServers(\"nameServers\", {\n    domain: \"mydomain.ovh\",\n    servers: [\n        {\n            host: \"dns105.ovh.net\",\n            ip: \"213.251.188.144\",\n        },\n        {\n            host: \"ns105.ovh.net\",\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nname_servers = ovh.domain.NameServers(\"nameServers\",\n    domain=\"mydomain.ovh\",\n    servers=[\n        {\n            \"host\": \"dns105.ovh.net\",\n            \"ip\": \"213.251.188.144\",\n        },\n        {\n            \"host\": \"ns105.ovh.net\",\n        },\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nameServers = new Ovh.Domain.NameServers(\"nameServers\", new()\n    {\n        Domain = \"mydomain.ovh\",\n        Servers = new[]\n        {\n            new Ovh.Domain.Inputs.NameServersServerArgs\n            {\n                Host = \"dns105.ovh.net\",\n                Ip = \"213.251.188.144\",\n            },\n            new Ovh.Domain.Inputs.NameServersServerArgs\n            {\n                Host = \"ns105.ovh.net\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := domain.NewNameServers(ctx, \"nameServers\", \u0026domain.NameServersArgs{\n\t\t\tDomain: pulumi.String(\"mydomain.ovh\"),\n\t\t\tServers: domain.NameServersServerArray{\n\t\t\t\t\u0026domain.NameServersServerArgs{\n\t\t\t\t\tHost: pulumi.String(\"dns105.ovh.net\"),\n\t\t\t\t\tIp:   pulumi.String(\"213.251.188.144\"),\n\t\t\t\t},\n\t\t\t\t\u0026domain.NameServersServerArgs{\n\t\t\t\t\tHost: pulumi.String(\"ns105.ovh.net\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.NameServers;\nimport com.pulumi.ovh.Domain.NameServersArgs;\nimport com.pulumi.ovh.Domain.inputs.NameServersServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var nameServers = new NameServers(\"nameServers\", NameServersArgs.builder()\n            .domain(\"mydomain.ovh\")\n            .servers(            \n                NameServersServerArgs.builder()\n                    .host(\"dns105.ovh.net\")\n                    .ip(\"213.251.188.144\")\n                    .build(),\n                NameServersServerArgs.builder()\n                    .host(\"ns105.ovh.net\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  nameServers:\n    type: ovh:Domain:NameServers\n    properties:\n      domain: mydomain.ovh\n      servers:\n        - host: dns105.ovh.net\n          ip: 213.251.188.144\n        - host: ns105.ovh.net\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nName servers can be imported using their `domain`.\n\nUsing the following configuration:\n\nterraform\n\nimport {\n\n  to = ovh_domain_name_servers.name_servers\n\n  id = \"\u003cdomain name\u003e\"\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=name_servers.tf\n\n$ pulumi up\n\nThe file `name_servers.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Domain name for which to manage name servers\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameServersServer:NameServersServer"
                    },
                    "description": "Details about a name server\n"
                }
            },
            "required": [
                "domain",
                "servers"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "Domain name for which to manage name servers\n",
                    "willReplaceOnChanges": true
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameServersServer:NameServersServer"
                    },
                    "description": "Details about a name server\n"
                }
            },
            "requiredInputs": [
                "domain",
                "servers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NameServers resources.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "Domain name for which to manage name servers\n",
                        "willReplaceOnChanges": true
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/NameServersServer:NameServersServer"
                        },
                        "description": "Details about a name server\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zone:Zone": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myaccount = ovh.Me.getMe({});\nconst mycart = myaccount.then(myaccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myaccount.ovhSubsidiary,\n}));\nconst zoneCartProductPlan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"dns\",\n    planCode: \"zone\",\n}));\nconst zoneZone = new ovh.domain.Zone(\"zoneZone\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    plan: {\n        duration: zoneCartProductPlan.then(zoneCartProductPlan =\u003e zoneCartProductPlan.selectedPrices?.[0]?.duration),\n        planCode: zoneCartProductPlan.then(zoneCartProductPlan =\u003e zoneCartProductPlan.planCode),\n        pricingMode: zoneCartProductPlan.then(zoneCartProductPlan =\u003e zoneCartProductPlan.selectedPrices?.[0]?.pricingMode),\n        configurations: [\n            {\n                label: \"zone\",\n                value: \"myzone.mydomain.com\",\n            },\n            {\n                label: \"template\",\n                value: \"minimized\",\n            },\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyaccount = ovh.Me.get_me()\nmycart = ovh.Order.get_cart(ovh_subsidiary=myaccount.ovh_subsidiary)\nzone_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"dns\",\n    plan_code=\"zone\")\nzone_zone = ovh.domain.Zone(\"zoneZone\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    plan={\n        \"duration\": zone_cart_product_plan.selected_prices[0].duration,\n        \"plan_code\": zone_cart_product_plan.plan_code,\n        \"pricing_mode\": zone_cart_product_plan.selected_prices[0].pricing_mode,\n        \"configurations\": [\n            {\n                \"label\": \"zone\",\n                \"value\": \"myzone.mydomain.com\",\n            },\n            {\n                \"label\": \"template\",\n                \"value\": \"minimized\",\n            },\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myaccount = Ovh.Me.GetMe.Invoke();\n\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myaccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n    var zoneCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"dns\",\n        PlanCode = \"zone\",\n    });\n\n    var zoneZone = new Ovh.Domain.Zone(\"zoneZone\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        Plan = new Ovh.Domain.Inputs.ZonePlanArgs\n        {\n            Duration = zoneCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = zoneCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = zoneCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Domain.Inputs.ZonePlanConfigurationArgs\n                {\n                    Label = \"zone\",\n                    Value = \"myzone.mydomain.com\",\n                },\n                new Ovh.Domain.Inputs.ZonePlanConfigurationArgs\n                {\n                    Label = \"template\",\n                    Value = \"minimized\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/domain\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyaccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmycart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myaccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tzoneCartProductPlan, err := order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"dns\",\n\t\t\tPlanCode:      \"zone\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = domain.NewZone(ctx, \"zoneZone\", \u0026domain.ZoneArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tPlan: \u0026domain.ZonePlanArgs{\n\t\t\t\tDuration:    pulumi.String(zoneCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(zoneCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(zoneCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: domain.ZonePlanConfigurationArray{\n\t\t\t\t\t\u0026domain.ZonePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"zone\"),\n\t\t\t\t\t\tValue: pulumi.String(\"myzone.mydomain.com\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026domain.ZonePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"template\"),\n\t\t\t\t\t\tValue: pulumi.String(\"minimized\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Domain.Zone;\nimport com.pulumi.ovh.Domain.ZoneArgs;\nimport com.pulumi.ovh.Domain.inputs.ZonePlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myaccount = MeFunctions.getMe();\n\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myaccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var zoneCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"dns\")\n            .planCode(\"zone\")\n            .build());\n\n        var zoneZone = new Zone(\"zoneZone\", ZoneArgs.builder()\n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .plan(ZonePlanArgs.builder()\n                .duration(zoneCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(zoneCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(zoneCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(                \n                    ZonePlanConfigurationArgs.builder()\n                        .label(\"zone\")\n                        .value(\"myzone.mydomain.com\")\n                        .build(),\n                    ZonePlanConfigurationArgs.builder()\n                        .label(\"template\")\n                        .value(\"minimized\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  zoneZone:\n    type: ovh:Domain:Zone\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      plan:\n        duration: ${zoneCartProductPlan.selectedPrices[0].duration}\n        planCode: ${zoneCartProductPlan.planCode}\n        pricingMode: ${zoneCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: zone\n            value: myzone.mydomain.com\n          - label: template\n            value: minimized\nvariables:\n  myaccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  mycart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myaccount.ovhSubsidiary}\n  zoneCartProductPlan:\n    fn::invoke:\n      function: ovh:Order:getCartProductPlan\n      arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: dns\n        planCode: zone\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nZone can be imported using its `name`.\n\nUsing the following configuration:\n\nterraform\n\nimport {\n\n  to = ovh_domain_zone.zone\n\n  id = \"\u003czone name\u003e\"\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=zone.tf\n\n$ pulumi up\n\nThe file `zone.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "ZoneURN": {
                    "type": "string"
                },
                "dnssecSupported": {
                    "type": "boolean",
                    "description": "Is DNSSEC supported by this zone\n"
                },
                "hasDnsAnycast": {
                    "type": "boolean",
                    "description": "hasDnsAnycast flag of the DNS zone\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update date of the DNS zone\n"
                },
                "name": {
                    "type": "string",
                    "description": "Zone name\n"
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name servers that host the DNS zone\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZoneOrder:ZoneOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:Domain/ZonePlan:ZonePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanOption:ZonePlanOption"
                    },
                    "description": "Product Plan to order\n"
                }
            },
            "required": [
                "dnssecSupported",
                "hasDnsAnycast",
                "lastUpdate",
                "name",
                "nameServers",
                "orders",
                "ovhSubsidiary",
                "plan",
                "ZoneURN"
            ],
            "inputProperties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZoneOrder:ZoneOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Domain/ZonePlan:ZonePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanOption:ZonePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Zone resources.\n",
                "properties": {
                    "ZoneURN": {
                        "type": "string"
                    },
                    "dnssecSupported": {
                        "type": "boolean",
                        "description": "Is DNSSEC supported by this zone\n"
                    },
                    "hasDnsAnycast": {
                        "type": "boolean",
                        "description": "hasDnsAnycast flag of the DNS zone\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update date of the DNS zone\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Zone name\n"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name servers that host the DNS zone\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/ZoneOrder:ZoneOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Domain/ZonePlan:ZonePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/ZonePlanOption:ZonePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneDNSSec:ZoneDNSSec": {
            "description": "Enable / disable DNSSEC on a domain zone.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst dnssec = new ovh.domain.ZoneDNSSec(\"dnssec\", {zoneName: \"mysite.ovh\"});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndnssec = ovh.domain.ZoneDNSSec(\"dnssec\", zone_name=\"mysite.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var dnssec = new Ovh.Domain.ZoneDNSSec(\"dnssec\", new()\n    {\n        ZoneName = \"mysite.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := domain.NewZoneDNSSec(ctx, \"dnssec\", \u0026domain.ZoneDNSSecArgs{\n\t\t\tZoneName: pulumi.String(\"mysite.ovh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.ZoneDNSSec;\nimport com.pulumi.ovh.Domain.ZoneDNSSecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var dnssec = new ZoneDNSSec(\"dnssec\", ZoneDNSSecArgs.builder()\n            .zoneName(\"mysite.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  dnssec:\n    type: ovh:Domain:ZoneDNSSec\n    properties:\n      zoneName: mysite.ovh\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "status": {
                    "type": "string",
                    "description": "DNSSEC status (`disableInProgress`, `disabled`, `enableInProgress` or `enabled`)\n"
                },
                "zoneName": {
                    "type": "string",
                    "description": "The name of the domain zone\n"
                }
            },
            "required": [
                "status",
                "zoneName"
            ],
            "inputProperties": {
                "zoneName": {
                    "type": "string",
                    "description": "The name of the domain zone\n"
                }
            },
            "requiredInputs": [
                "zoneName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneDNSSec resources.\n",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "DNSSEC status (`disableInProgress`, `disabled`, `enableInProgress` or `enabled`)\n"
                    },
                    "zoneName": {
                        "type": "string",
                        "description": "The name of the domain zone\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneImport:ZoneImport": {
            "description": "Handle a whole DNS zone using a zone file.\n\n\u003e **WARNING** This resource and resource `ovh.Domain.ZoneRecord` should not be used together as `ovh.Domain.ZoneImport` controls the whole DNS zone at once.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fs from \"fs\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst _import = new ovh.domain.ZoneImport(\"import\", {\n    zoneName: \"mysite.ovh\",\n    zoneFile: fs.readFileSync(\"./example.zone\", \"utf8\"),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nimport_ = ovh.domain.ZoneImport(\"import\",\n    zone_name=\"mysite.ovh\",\n    zone_file=(lambda path: open(path).read())(\"./example.zone\"))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var import = new Ovh.Domain.ZoneImport(\"import\", new()\n    {\n        ZoneName = \"mysite.ovh\",\n        ZoneFile = File.ReadAllText(\"./example.zone\"),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"os\"\n\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := os.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := domain.NewZoneImport(ctx, \"import\", \u0026domain.ZoneImportArgs{\n\t\t\tZoneName: pulumi.String(\"mysite.ovh\"),\n\t\t\tZoneFile: pulumi.String(readFileOrPanic(\"./example.zone\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.ZoneImport;\nimport com.pulumi.ovh.Domain.ZoneImportArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var import_ = new ZoneImport(\"import\", ZoneImportArgs.builder()\n            .zoneName(\"mysite.ovh\")\n            .zoneFile(Files.readString(Paths.get(\"./example.zone\")))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  import:\n    type: ovh:Domain:ZoneImport\n    properties:\n      zoneName: mysite.ovh\n      zoneFile:\n        fn::readFile: ./example.zone\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "exportedContent": {
                    "type": "string",
                    "description": "Zone file exported from the API\n"
                },
                "zoneFile": {
                    "type": "string",
                    "description": "Content of the zone file to import\n"
                },
                "zoneName": {
                    "type": "string",
                    "description": "The name of the domain zone\n"
                }
            },
            "required": [
                "exportedContent",
                "zoneFile",
                "zoneName"
            ],
            "inputProperties": {
                "zoneFile": {
                    "type": "string",
                    "description": "Content of the zone file to import\n"
                },
                "zoneName": {
                    "type": "string",
                    "description": "The name of the domain zone\n"
                }
            },
            "requiredInputs": [
                "zoneFile",
                "zoneName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneImport resources.\n",
                "properties": {
                    "exportedContent": {
                        "type": "string",
                        "description": "Zone file exported from the API\n"
                    },
                    "zoneFile": {
                        "type": "string",
                        "description": "Content of the zone file to import\n"
                    },
                    "zoneName": {
                        "type": "string",
                        "description": "The name of the domain zone\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneRecord:ZoneRecord": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\n// Add a record to a sub-domain\nconst test = new ovh.domain.ZoneRecord(\"test\", {\n    fieldtype: \"A\",\n    subdomain: \"test\",\n    target: \"0.0.0.0\",\n    ttl: 3600,\n    zone: \"testdemo.ovh\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\n# Add a record to a sub-domain\ntest = ovh.domain.ZoneRecord(\"test\",\n    fieldtype=\"A\",\n    subdomain=\"test\",\n    target=\"0.0.0.0\",\n    ttl=3600,\n    zone=\"testdemo.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Add a record to a sub-domain\n    var test = new Ovh.Domain.ZoneRecord(\"test\", new()\n    {\n        Fieldtype = \"A\",\n        Subdomain = \"test\",\n        Target = \"0.0.0.0\",\n        Ttl = 3600,\n        Zone = \"testdemo.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Add a record to a sub-domain\n\t\t_, err := domain.NewZoneRecord(ctx, \"test\", \u0026domain.ZoneRecordArgs{\n\t\t\tFieldtype: pulumi.String(\"A\"),\n\t\t\tSubdomain: pulumi.String(\"test\"),\n\t\t\tTarget:    pulumi.String(\"0.0.0.0\"),\n\t\t\tTtl:       pulumi.Int(3600),\n\t\t\tZone:      pulumi.String(\"testdemo.ovh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.ZoneRecord;\nimport com.pulumi.ovh.Domain.ZoneRecordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Add a record to a sub-domain\n        var test = new ZoneRecord(\"test\", ZoneRecordArgs.builder()\n            .fieldtype(\"A\")\n            .subdomain(\"test\")\n            .target(\"0.0.0.0\")\n            .ttl(3600)\n            .zone(\"testdemo.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Add a record to a sub-domain\n  test:\n    type: ovh:Domain:ZoneRecord\n    properties:\n      fieldtype: A\n      subdomain: test\n      target: 0.0.0.0\n      ttl: 3600\n      zone: testdemo.ovh\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud domain zone record can be imported using the `id`, which can be retrieved by using [OVH API portal](https://api.ovh.com/console/#/domain/zone/%7BzoneName%7D/record~GET), and the `zone`, separated by \".\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Domain/zoneRecord:ZoneRecord test id.zone\n```\n\n",
            "properties": {
                "fieldtype": {
                    "type": "string",
                    "description": "The type of the record\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the record. It can be an empty string.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the record\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record, it shall be \u003e= to 60.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the record to\n"
                }
            },
            "required": [
                "fieldtype",
                "target",
                "zone"
            ],
            "inputProperties": {
                "fieldtype": {
                    "type": "string",
                    "description": "The type of the record\n",
                    "willReplaceOnChanges": true
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the record. It can be an empty string.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the record\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL of the record, it shall be \u003e= to 60.\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the record to\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fieldtype",
                "target",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneRecord resources.\n",
                "properties": {
                    "fieldtype": {
                        "type": "string",
                        "description": "The type of the record\n",
                        "willReplaceOnChanges": true
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The name of the record. It can be an empty string.\n"
                    },
                    "target": {
                        "type": "string",
                        "description": "The value of the record\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The TTL of the record, it shall be \u003e= to 60.\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The domain to add the record to\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneRedirection:ZoneRedirection": {
            "description": "Provides a OVHcloud domain zone redirection.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\n// Add a redirection to a sub-domain\nconst test = new ovh.domain.ZoneRedirection(\"test\", {\n    subdomain: \"test\",\n    target: \"http://www.ovh\",\n    type: \"visiblePermanent\",\n    zone: \"testdemo.ovh\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\n# Add a redirection to a sub-domain\ntest = ovh.domain.ZoneRedirection(\"test\",\n    subdomain=\"test\",\n    target=\"http://www.ovh\",\n    type=\"visiblePermanent\",\n    zone=\"testdemo.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Add a redirection to a sub-domain\n    var test = new Ovh.Domain.ZoneRedirection(\"test\", new()\n    {\n        Subdomain = \"test\",\n        Target = \"http://www.ovh\",\n        Type = \"visiblePermanent\",\n        Zone = \"testdemo.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Add a redirection to a sub-domain\n\t\t_, err := domain.NewZoneRedirection(ctx, \"test\", \u0026domain.ZoneRedirectionArgs{\n\t\t\tSubdomain: pulumi.String(\"test\"),\n\t\t\tTarget:    pulumi.String(\"http://www.ovh\"),\n\t\t\tType:      pulumi.String(\"visiblePermanent\"),\n\t\t\tZone:      pulumi.String(\"testdemo.ovh\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.ZoneRedirection;\nimport com.pulumi.ovh.Domain.ZoneRedirectionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Add a redirection to a sub-domain\n        var test = new ZoneRedirection(\"test\", ZoneRedirectionArgs.builder()\n            .subdomain(\"test\")\n            .target(\"http://www.ovh\")\n            .type(\"visiblePermanent\")\n            .zone(\"testdemo.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Add a redirection to a sub-domain\n  test:\n    type: ovh:Domain:ZoneRedirection\n    properties:\n      subdomain: test\n      target: http://www.ovh\n      type: visiblePermanent\n      zone: testdemo.ovh\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of this redirection\n"
                },
                "keywords": {
                    "type": "string",
                    "description": "Keywords to describe this redirection\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the redirection\n"
                },
                "target": {
                    "type": "string",
                    "description": "The value of the redirection\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of this redirection\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the redirection, with values:\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the redirection to\n"
                }
            },
            "required": [
                "target",
                "type",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "A description of this redirection\n"
                },
                "keywords": {
                    "type": "string",
                    "description": "Keywords to describe this redirection\n"
                },
                "subdomain": {
                    "type": "string",
                    "description": "The name of the redirection\n",
                    "willReplaceOnChanges": true
                },
                "target": {
                    "type": "string",
                    "description": "The value of the redirection\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title of this redirection\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the redirection, with values:\n"
                },
                "zone": {
                    "type": "string",
                    "description": "The domain to add the redirection to\n"
                }
            },
            "requiredInputs": [
                "target",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneRedirection resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "A description of this redirection\n"
                    },
                    "keywords": {
                        "type": "string",
                        "description": "Keywords to describe this redirection\n"
                    },
                    "subdomain": {
                        "type": "string",
                        "description": "The name of the redirection\n",
                        "willReplaceOnChanges": true
                    },
                    "target": {
                        "type": "string",
                        "description": "The value of the redirection\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title of this redirection\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the redirection, with values:\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The domain to add the redirection to\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabase:PrivateDatabase": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myaccount = ovh.Me.getMe({});\nconst mycart = myaccount.then(myaccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myaccount.ovhSubsidiary,\n}));\nconst databaseCartProductPlan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"privateSQL\",\n    planCode: \"private-sql-512-instance\",\n}));\nconst databasePrivateDatabase = new ovh.hosting.PrivateDatabase(\"databasePrivateDatabase\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    displayName: \"Postgresql-12\",\n    plan: {\n        duration: databaseCartProductPlan.then(databaseCartProductPlan =\u003e databaseCartProductPlan.prices?.[3]?.duration),\n        planCode: databaseCartProductPlan.then(databaseCartProductPlan =\u003e databaseCartProductPlan.planCode),\n        pricingMode: databaseCartProductPlan.then(databaseCartProductPlan =\u003e databaseCartProductPlan.selectedPrices?.[0]?.pricingMode),\n        configurations: [\n            {\n                label: \"dc\",\n                value: \"gra3\",\n            },\n            {\n                label: \"engine\",\n                value: \"postgresql_12\",\n            },\n        ],\n    },\n});\nexport const privatedatabaseServiceName = databasePrivateDatabase.serviceName;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyaccount = ovh.Me.get_me()\nmycart = ovh.Order.get_cart(ovh_subsidiary=myaccount.ovh_subsidiary)\ndatabase_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"privateSQL\",\n    plan_code=\"private-sql-512-instance\")\ndatabase_private_database = ovh.hosting.PrivateDatabase(\"databasePrivateDatabase\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    display_name=\"Postgresql-12\",\n    plan={\n        \"duration\": database_cart_product_plan.prices[3].duration,\n        \"plan_code\": database_cart_product_plan.plan_code,\n        \"pricing_mode\": database_cart_product_plan.selected_prices[0].pricing_mode,\n        \"configurations\": [\n            {\n                \"label\": \"dc\",\n                \"value\": \"gra3\",\n            },\n            {\n                \"label\": \"engine\",\n                \"value\": \"postgresql_12\",\n            },\n        ],\n    })\npulumi.export(\"privatedatabaseServiceName\", database_private_database.service_name)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myaccount = Ovh.Me.GetMe.Invoke();\n\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myaccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n    var databaseCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"privateSQL\",\n        PlanCode = \"private-sql-512-instance\",\n    });\n\n    var databasePrivateDatabase = new Ovh.Hosting.PrivateDatabase(\"databasePrivateDatabase\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        DisplayName = \"Postgresql-12\",\n        Plan = new Ovh.Hosting.Inputs.PrivateDatabasePlanArgs\n        {\n            Duration = databaseCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.Prices[3]?.Duration),\n            PlanCode = databaseCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = databaseCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Hosting.Inputs.PrivateDatabasePlanConfigurationArgs\n                {\n                    Label = \"dc\",\n                    Value = \"gra3\",\n                },\n                new Ovh.Hosting.Inputs.PrivateDatabasePlanConfigurationArgs\n                {\n                    Label = \"engine\",\n                    Value = \"postgresql_12\",\n                },\n            },\n        },\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"privatedatabaseServiceName\"] = databasePrivateDatabase.ServiceName,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyaccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmycart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myaccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdatabaseCartProductPlan, err := order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"privateSQL\",\n\t\t\tPlanCode:      \"private-sql-512-instance\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdatabasePrivateDatabase, err := hosting.NewPrivateDatabase(ctx, \"databasePrivateDatabase\", \u0026hosting.PrivateDatabaseArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tDisplayName:   pulumi.String(\"Postgresql-12\"),\n\t\t\tPlan: \u0026hosting.PrivateDatabasePlanArgs{\n\t\t\t\tDuration:    pulumi.String(databaseCartProductPlan.Prices[3].Duration),\n\t\t\t\tPlanCode:    pulumi.String(databaseCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(databaseCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: hosting.PrivateDatabasePlanConfigurationArray{\n\t\t\t\t\t\u0026hosting.PrivateDatabasePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"dc\"),\n\t\t\t\t\t\tValue: pulumi.String(\"gra3\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026hosting.PrivateDatabasePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"engine\"),\n\t\t\t\t\t\tValue: pulumi.String(\"postgresql_12\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"privatedatabaseServiceName\", databasePrivateDatabase.ServiceName)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Hosting.PrivateDatabase;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseArgs;\nimport com.pulumi.ovh.Hosting.inputs.PrivateDatabasePlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myaccount = MeFunctions.getMe();\n\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myaccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var databaseCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"privateSQL\")\n            .planCode(\"private-sql-512-instance\")\n            .build());\n\n        var databasePrivateDatabase = new PrivateDatabase(\"databasePrivateDatabase\", PrivateDatabaseArgs.builder()\n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .displayName(\"Postgresql-12\")\n            .plan(PrivateDatabasePlanArgs.builder()\n                .duration(databaseCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.prices()[3].duration()))\n                .planCode(databaseCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(databaseCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(                \n                    PrivateDatabasePlanConfigurationArgs.builder()\n                        .label(\"dc\")\n                        .value(\"gra3\")\n                        .build(),\n                    PrivateDatabasePlanConfigurationArgs.builder()\n                        .label(\"engine\")\n                        .value(\"postgresql_12\")\n                        .build())\n                .build())\n            .build());\n\n        ctx.export(\"privatedatabaseServiceName\", databasePrivateDatabase.serviceName());\n    }\n}\n```\n```yaml\nresources:\n  databasePrivateDatabase:\n    type: ovh:Hosting:PrivateDatabase\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      displayName: Postgresql-12\n      plan:\n        duration: ${databaseCartProductPlan.prices[3].duration}\n        planCode: ${databaseCartProductPlan.planCode}\n        pricingMode: ${databaseCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: dc\n            value: gra3\n          - label: engine\n            value: postgresql_12\nvariables:\n  myaccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  mycart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myaccount.ovhSubsidiary}\n  databaseCartProductPlan:\n    fn::invoke:\n      function: ovh:Order:getCartProductPlan\n      arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: privateSQL\n        planCode: private-sql-512-instance\noutputs:\n  privatedatabaseServiceName: ${databasePrivateDatabase.serviceName}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Webhosting database can be imported using the `service_name`. Using the following configuration:\n\nterraform\n\nimport {\n\n  to = ovh_hosting_privatedatabase.database\n\n  id = \"\u003cservice name\u003e\"\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=database.tf\n\n$ pulumi up\n\nThe file `database.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "DatabaseURN": {
                    "type": "string",
                    "description": "URN of the private database, used when writing IAM policies\n"
                },
                "cpu": {
                    "type": "integer",
                    "description": "Number of CPU on your private database\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "Datacenter where this private database is located\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name displayed in customer panel for your private database\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Private database hostname\n"
                },
                "hostnameFtp": {
                    "type": "string",
                    "description": "Private database FTP hostname\n"
                },
                "infrastructure": {
                    "type": "string",
                    "description": "Infrastructure where service was stored\n"
                },
                "offer": {
                    "type": "string",
                    "description": "Type of the private database offer\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder"
                    },
                    "description": "Details about your Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Private database service port\n"
                },
                "portFtp": {
                    "type": "integer",
                    "description": "Private database FTP port\n"
                },
                "quotaSize": {
                    "type": "integer",
                    "description": "Space allowed (in MB) on your private database\n"
                },
                "quotaUsed": {
                    "type": "integer",
                    "description": "Sapce used (in MB) on your private database\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "Amount of ram (in MB) on your private database\n"
                },
                "server": {
                    "type": "string",
                    "description": "Private database server name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "state": {
                    "type": "string",
                    "description": "Private database state\n"
                },
                "type": {
                    "type": "string",
                    "description": "Private database type\n"
                },
                "version": {
                    "type": "string",
                    "description": "Private database available versions\n"
                },
                "versionLabel": {
                    "type": "string",
                    "description": "Private database version label\n"
                },
                "versionNumber": {
                    "type": "number",
                    "description": "Private database version number\n"
                }
            },
            "required": [
                "cpu",
                "datacenter",
                "displayName",
                "hostname",
                "hostnameFtp",
                "infrastructure",
                "offer",
                "orders",
                "ovhSubsidiary",
                "plan",
                "port",
                "portFtp",
                "quotaSize",
                "quotaUsed",
                "ram",
                "server",
                "serviceName",
                "state",
                "type",
                "DatabaseURN",
                "version",
                "versionLabel",
                "versionNumber"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Name displayed in customer panel for your private database\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder"
                    },
                    "description": "Details about your Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabase resources.\n",
                "properties": {
                    "DatabaseURN": {
                        "type": "string",
                        "description": "URN of the private database, used when writing IAM policies\n"
                    },
                    "cpu": {
                        "type": "integer",
                        "description": "Number of CPU on your private database\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "Datacenter where this private database is located\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name displayed in customer panel for your private database\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Private database hostname\n"
                    },
                    "hostnameFtp": {
                        "type": "string",
                        "description": "Private database FTP hostname\n"
                    },
                    "infrastructure": {
                        "type": "string",
                        "description": "Infrastructure where service was stored\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "Type of the private database offer\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder"
                        },
                        "description": "Details about your Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Private database service port\n"
                    },
                    "portFtp": {
                        "type": "integer",
                        "description": "Private database FTP port\n"
                    },
                    "quotaSize": {
                        "type": "integer",
                        "description": "Space allowed (in MB) on your private database\n"
                    },
                    "quotaUsed": {
                        "type": "integer",
                        "description": "Sapce used (in MB) on your private database\n"
                    },
                    "ram": {
                        "type": "integer",
                        "description": "Amount of ram (in MB) on your private database\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "Private database server name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Private database state\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Private database type\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Private database available versions\n"
                    },
                    "versionLabel": {
                        "type": "string",
                        "description": "Private database version label\n"
                    },
                    "versionNumber": {
                        "type": "number",
                        "description": "Private database version number\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseAllowlist:PrivateDatabaseAllowlist": {
            "description": "Create a new IP whitelist on your private cloud database instance.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst ip = new ovh.hosting.PrivateDatabaseAllowlist(\"ip\", {\n    ip: \"1.2.3.4\",\n    service: true,\n    serviceName: \"XXXXXX\",\n    sftp: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nip = ovh.hosting.PrivateDatabaseAllowlist(\"ip\",\n    ip=\"1.2.3.4\",\n    service=True,\n    service_name=\"XXXXXX\",\n    sftp=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ip = new Ovh.Hosting.PrivateDatabaseAllowlist(\"ip\", new()\n    {\n        Ip = \"1.2.3.4\",\n        Service = true,\n        ServiceName = \"XXXXXX\",\n        Sftp = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := hosting.NewPrivateDatabaseAllowlist(ctx, \"ip\", \u0026hosting.PrivateDatabaseAllowlistArgs{\n\t\t\tIp:          pulumi.String(\"1.2.3.4\"),\n\t\t\tService:     pulumi.Bool(true),\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t\tSftp:        pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseAllowlist;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseAllowlistArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var ip = new PrivateDatabaseAllowlist(\"ip\", PrivateDatabaseAllowlistArgs.builder()\n            .ip(\"1.2.3.4\")\n            .service(true)\n            .serviceName(\"XXXXXX\")\n            .sftp(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ip:\n    type: ovh:Hosting:PrivateDatabaseAllowlist\n    properties:\n      ip: 1.2.3.4\n      service: true\n      serviceName: XXXXXX\n      sftp: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud database whitelist can be imported using the `service_name` and the `ip`, separated by \"/\" E.g.,\n\n```sh\n$ pulumi import ovh:Hosting/privateDatabaseAllowlist:PrivateDatabaseAllowlist ip service_name/ip\n```\n",
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "The whitelisted IP in your instance.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Custom name for your Whitelisted IP.\n"
                },
                "service": {
                    "type": "boolean",
                    "description": "Authorize this IP to access service port. Values can be `true` or `false`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                },
                "sftp": {
                    "type": "boolean",
                    "description": "Authorize this IP to access SFTP port. Values can be `true` or `false`\n"
                }
            },
            "required": [
                "ip",
                "name",
                "service",
                "serviceName",
                "sftp"
            ],
            "inputProperties": {
                "ip": {
                    "type": "string",
                    "description": "The whitelisted IP in your instance.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Custom name for your Whitelisted IP.\n"
                },
                "service": {
                    "type": "boolean",
                    "description": "Authorize this IP to access service port. Values can be `true` or `false`\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                },
                "sftp": {
                    "type": "boolean",
                    "description": "Authorize this IP to access SFTP port. Values can be `true` or `false`\n"
                }
            },
            "requiredInputs": [
                "ip",
                "service",
                "serviceName",
                "sftp"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseAllowlist resources.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The whitelisted IP in your instance.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom name for your Whitelisted IP.\n"
                    },
                    "service": {
                        "type": "boolean",
                        "description": "Authorize this IP to access service port. Values can be `true` or `false`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database.\n"
                    },
                    "sftp": {
                        "type": "boolean",
                        "description": "Authorize this IP to access SFTP port. Values can be `true` or `false`\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseDb:PrivateDatabaseDb": {
            "description": "Create a new database on your private cloud database service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst database = new ovh.hosting.PrivateDatabaseDb(\"database\", {\n    databaseName: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndatabase = ovh.hosting.PrivateDatabaseDb(\"database\",\n    database_name=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var database = new Ovh.Hosting.PrivateDatabaseDb(\"database\", new()\n    {\n        DatabaseName = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := hosting.NewPrivateDatabaseDb(ctx, \"database\", \u0026hosting.PrivateDatabaseDbArgs{\n\t\t\tDatabaseName: pulumi.String(\"XXXXXX\"),\n\t\t\tServiceName:  pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseDb;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseDbArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var database = new PrivateDatabaseDb(\"database\", PrivateDatabaseDbArgs.builder()\n            .databaseName(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  database:\n    type: ovh:Hosting:PrivateDatabaseDb\n    properties:\n      databaseName: XXXXXX\n      serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud Webhosting database can be imported using the `service_name` and the `database_name`, separated by \"/\" E.g.,\n\n```sh\n$ pulumi import ovh:Hosting/privateDatabaseDb:PrivateDatabaseDb database service_name/database_name\n```\n",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Name of your new database\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                }
            },
            "required": [
                "databaseName",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "Name of your new database\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseDb resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Name of your new database\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseUser:PrivateDatabaseUser": {
            "description": "Create a new user on your private cloud database instance.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst user = new ovh.hosting.PrivateDatabaseUser(\"user\", {\n    password: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n    userName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser = ovh.hosting.PrivateDatabaseUser(\"user\",\n    password=\"XXXXXX\",\n    service_name=\"XXXXXX\",\n    user_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = new Ovh.Hosting.PrivateDatabaseUser(\"user\", new()\n    {\n        Password = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n        UserName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := hosting.NewPrivateDatabaseUser(ctx, \"user\", \u0026hosting.PrivateDatabaseUserArgs{\n\t\t\tPassword:    pulumi.String(\"XXXXXX\"),\n\t\t\tServiceName: pulumi.String(\"XXXXXX\"),\n\t\t\tUserName:    pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseUser;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var user = new PrivateDatabaseUser(\"user\", PrivateDatabaseUserArgs.builder()\n            .password(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .userName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  user:\n    type: ovh:Hosting:PrivateDatabaseUser\n    properties:\n      password: XXXXXX\n      serviceName: XXXXXX\n      userName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud database user can be imported using the `service_name` and the `user_name`, separated by \"/\" E.g.,\n\n```sh\n$ pulumi import ovh:Hosting/privateDatabaseUser:PrivateDatabaseUser user service_name/user_name\n```\n",
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password for the new user (alphanumeric, minimum one number and 8 characters minimum)\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases\n"
                }
            },
            "required": [
                "password",
                "serviceName",
                "userName"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "Password for the new user (alphanumeric, minimum one number and 8 characters minimum)\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n",
                    "willReplaceOnChanges": true
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "password",
                "serviceName",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "Password for the new user (alphanumeric, minimum one number and 8 characters minimum)\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database.\n",
                        "willReplaceOnChanges": true
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name used to connect on your databases\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseUserGrant:PrivateDatabaseUserGrant": {
            "description": "Add grant on a database in your private cloud database instance.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst userGrant = new ovh.hosting.PrivateDatabaseUserGrant(\"userGrant\", {\n    databaseName: \"ovhcloud\",\n    grant: \"admin\",\n    serviceName: \"XXXXXX\",\n    userName: \"terraform\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser_grant = ovh.hosting.PrivateDatabaseUserGrant(\"userGrant\",\n    database_name=\"ovhcloud\",\n    grant=\"admin\",\n    service_name=\"XXXXXX\",\n    user_name=\"terraform\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var userGrant = new Ovh.Hosting.PrivateDatabaseUserGrant(\"userGrant\", new()\n    {\n        DatabaseName = \"ovhcloud\",\n        Grant = \"admin\",\n        ServiceName = \"XXXXXX\",\n        UserName = \"terraform\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := hosting.NewPrivateDatabaseUserGrant(ctx, \"userGrant\", \u0026hosting.PrivateDatabaseUserGrantArgs{\n\t\t\tDatabaseName: pulumi.String(\"ovhcloud\"),\n\t\t\tGrant:        pulumi.String(\"admin\"),\n\t\t\tServiceName:  pulumi.String(\"XXXXXX\"),\n\t\t\tUserName:     pulumi.String(\"terraform\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseUserGrant;\nimport com.pulumi.ovh.Hosting.PrivateDatabaseUserGrantArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var userGrant = new PrivateDatabaseUserGrant(\"userGrant\", PrivateDatabaseUserGrantArgs.builder()\n            .databaseName(\"ovhcloud\")\n            .grant(\"admin\")\n            .serviceName(\"XXXXXX\")\n            .userName(\"terraform\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  userGrant:\n    type: ovh:Hosting:PrivateDatabaseUserGrant\n    properties:\n      databaseName: ovhcloud\n      grant: admin\n      serviceName: XXXXXX\n      userName: terraform\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud database user's grant can be imported using the `service_name`, the `user_name`, the `database_name` and the `grant`, separated by \"/\" E.g.,\n\n```sh\n$ pulumi import ovh:Hosting/privateDatabaseUserGrant:PrivateDatabaseUserGrant user service_name/user_name/database_name/grant\n```\n",
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database name where add grant.\n"
                },
                "grant": {
                    "type": "string",
                    "description": "Database name where add grant. Values can be:\n- admin\n- none\n- ro\n- rw\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases.\n"
                }
            },
            "required": [
                "databaseName",
                "grant",
                "serviceName",
                "userName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database name where add grant.\n",
                    "willReplaceOnChanges": true
                },
                "grant": {
                    "type": "string",
                    "description": "Database name where add grant. Values can be:\n- admin\n- none\n- ro\n- rw\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database.\n",
                    "willReplaceOnChanges": true
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "grant",
                "serviceName",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseUserGrant resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Database name where add grant.\n",
                        "willReplaceOnChanges": true
                    },
                    "grant": {
                        "type": "string",
                        "description": "Database name where add grant. Values can be:\n- admin\n- none\n- ro\n- rw\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database.\n",
                        "willReplaceOnChanges": true
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name used to connect on your databases.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Iam/permissionsGroup:PermissionsGroup": {
            "description": "Create am IAM permissions group.\n\n",
            "properties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of actions allowed by the permissions group.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation date of this group.\n"
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of actions that will be denied no matter what permissions group exists.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Group description.\n"
                },
                "excepts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of actions that will be subtracted from the `allow` list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the permissions group.\n"
                },
                "owner": {
                    "type": "string",
                    "description": "Owner of the permissions group.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Date of the last update of this group.\n"
                },
                "urn": {
                    "type": "string",
                    "description": "URN of the permissions group.\n"
                }
            },
            "required": [
                "createdAt",
                "description",
                "name",
                "owner",
                "updatedAt",
                "urn"
            ],
            "inputProperties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of actions allowed by the permissions group.\n"
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of actions that will be denied no matter what permissions group exists.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Group description.\n"
                },
                "excepts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of actions that will be subtracted from the `allow` list.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the permissions group.\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Date of the last update of this group.\n"
                }
            },
            "requiredInputs": [
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PermissionsGroup resources.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of actions allowed by the permissions group.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date of this group.\n"
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of actions that will be denied no matter what permissions group exists.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Group description.\n"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of actions that will be subtracted from the `allow` list.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the permissions group.\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Owner of the permissions group.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of the last update of this group.\n"
                    },
                    "urn": {
                        "type": "string",
                        "description": "URN of the permissions group.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Iam/policy:Policy": {
            "description": "Creates an IAM policy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst account = ovh.Me.getMe({});\nconst myGroup = new ovh.me.IdentityGroup(\"myGroup\", {description: \"my_group created in Terraform\"});\nconst manager = new ovh.iam.Policy(\"manager\", {\n    description: \"Users are allowed to use the OVH manager\",\n    identities: [myGroup.GroupURN],\n    resources: [account.then(account =\u003e account.AccountURN)],\n    allows: [\n        \"account:apiovh:me/get\",\n        \"account:apiovh:me/supportLevel/get\",\n        \"account:apiovh:me/certificates/get\",\n        \"account:apiovh:me/tag/get\",\n        \"account:apiovh:services/get\",\n        \"account:apiovh:*\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\naccount = ovh.Me.get_me()\nmy_group = ovh.me.IdentityGroup(\"myGroup\", description=\"my_group created in Terraform\")\nmanager = ovh.iam.Policy(\"manager\",\n    description=\"Users are allowed to use the OVH manager\",\n    identities=[my_group.group_urn],\n    resources=[account.account_urn],\n    allows=[\n        \"account:apiovh:me/get\",\n        \"account:apiovh:me/supportLevel/get\",\n        \"account:apiovh:me/certificates/get\",\n        \"account:apiovh:me/tag/get\",\n        \"account:apiovh:services/get\",\n        \"account:apiovh:*\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var account = Ovh.Me.GetMe.Invoke();\n\n    var myGroup = new Ovh.Me.IdentityGroup(\"myGroup\", new()\n    {\n        Description = \"my_group created in Terraform\",\n    });\n\n    var manager = new Ovh.Iam.Policy(\"manager\", new()\n    {\n        Description = \"Users are allowed to use the OVH manager\",\n        Identities = new[]\n        {\n            myGroup.GroupURN,\n        },\n        Resources = new[]\n        {\n            account.Apply(getMeResult =\u003e getMeResult.AccountURN),\n        },\n        Allows = new[]\n        {\n            \"account:apiovh:me/get\",\n            \"account:apiovh:me/supportLevel/get\",\n            \"account:apiovh:me/certificates/get\",\n            \"account:apiovh:me/tag/get\",\n            \"account:apiovh:services/get\",\n            \"account:apiovh:*\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iam\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\taccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyGroup, err := me.NewIdentityGroup(ctx, \"myGroup\", \u0026me.IdentityGroupArgs{\n\t\t\tDescription: pulumi.String(\"my_group created in Terraform\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iam.NewPolicy(ctx, \"manager\", \u0026iam.PolicyArgs{\n\t\t\tDescription: pulumi.String(\"Users are allowed to use the OVH manager\"),\n\t\t\tIdentities: pulumi.StringArray{\n\t\t\t\tmyGroup.GroupURN,\n\t\t\t},\n\t\t\tResources: pulumi.StringArray{\n\t\t\t\tpulumi.String(account.AccountURN),\n\t\t\t},\n\t\t\tAllows: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"account:apiovh:me/get\"),\n\t\t\t\tpulumi.String(\"account:apiovh:me/supportLevel/get\"),\n\t\t\t\tpulumi.String(\"account:apiovh:me/certificates/get\"),\n\t\t\t\tpulumi.String(\"account:apiovh:me/tag/get\"),\n\t\t\t\tpulumi.String(\"account:apiovh:services/get\"),\n\t\t\t\tpulumi.String(\"account:apiovh:*\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.IdentityGroup;\nimport com.pulumi.ovh.Me.IdentityGroupArgs;\nimport com.pulumi.ovh.Iam.Policy;\nimport com.pulumi.ovh.Iam.PolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var account = MeFunctions.getMe();\n\n        var myGroup = new IdentityGroup(\"myGroup\", IdentityGroupArgs.builder()\n            .description(\"my_group created in Terraform\")\n            .build());\n\n        var manager = new Policy(\"manager\", PolicyArgs.builder()\n            .description(\"Users are allowed to use the OVH manager\")\n            .identities(myGroup.GroupURN())\n            .resources(account.applyValue(getMeResult -\u003e getMeResult.AccountURN()))\n            .allows(            \n                \"account:apiovh:me/get\",\n                \"account:apiovh:me/supportLevel/get\",\n                \"account:apiovh:me/certificates/get\",\n                \"account:apiovh:me/tag/get\",\n                \"account:apiovh:services/get\",\n                \"account:apiovh:*\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myGroup:\n    type: ovh:Me:IdentityGroup\n    properties:\n      description: my_group created in Terraform\n  manager:\n    type: ovh:Iam:Policy\n    properties:\n      description: Users are allowed to use the OVH manager\n      identities:\n        - ${myGroup.GroupURN}\n      resources:\n        - ${account.AccountURN}\n      # these are all the actions\n      allows:\n        - account:apiovh:me/get\n        - account:apiovh:me/supportLevel/get\n        - account:apiovh:me/certificates/get\n        - account:apiovh:me/tag/get\n        - account:apiovh:services/get\n        - account:apiovh:*\nvariables:\n  account:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of actions allowed on resources by identities\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation date of this group.\n"
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of actions that will always be denied even if also allowed by this policy or another one.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the policy\n"
                },
                "excepts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of overrides of action that must not be allowed even if they are caught by allow. Only makes sens if allow contains wildcards.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of identities affected by the policy\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy, must be unique\n"
                },
                "owner": {
                    "type": "string",
                    "description": "Owner of the policy.\n"
                },
                "permissionsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of permissions groups included in the policy. At evaluation, these permissions groups are each evaluated independently (notably, excepts actions only affect actions in the same permission group).\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Indicates that the policy is a default one.\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of resources affected by the policy\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Date of the last update of this group.\n"
                }
            },
            "required": [
                "createdAt",
                "identities",
                "name",
                "owner",
                "readOnly",
                "resources",
                "updatedAt"
            ],
            "inputProperties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of actions allowed on resources by identities\n"
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of actions that will always be denied even if also allowed by this policy or another one.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the policy\n"
                },
                "excepts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of overrides of action that must not be allowed even if they are caught by allow. Only makes sens if allow contains wildcards.\n"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of identities affected by the policy\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy, must be unique\n"
                },
                "permissionsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of permissions groups included in the policy. At evaluation, these permissions groups are each evaluated independently (notably, excepts actions only affect actions in the same permission group).\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of resources affected by the policy\n"
                }
            },
            "requiredInputs": [
                "identities",
                "resources"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Policy resources.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of actions allowed on resources by identities\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date of this group.\n"
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of actions that will always be denied even if also allowed by this policy or another one.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the policy\n"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of overrides of action that must not be allowed even if they are caught by allow. Only makes sens if allow contains wildcards.\n"
                    },
                    "identities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of identities affected by the policy\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy, must be unique\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Owner of the policy.\n"
                    },
                    "permissionsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of permissions groups included in the policy. At evaluation, these permissions groups are each evaluated independently (notably, excepts actions only affect actions in the same permission group).\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Indicates that the policy is a default one.\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of resources affected by the policy\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of the last update of this group.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Iam/resourceGroup:ResourceGroup": {
            "description": "Provides an OVHcloud IAM resource group.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myResourceGroup = new ovh.iam.ResourceGroup(\"myResourceGroup\", {resources: [\n    \"urn:v1:eu:resource:service1:service1-id\",\n    \"urn:v1:eu:resource:service2:service2-id\",\n]});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_resource_group = ovh.iam.ResourceGroup(\"myResourceGroup\", resources=[\n    \"urn:v1:eu:resource:service1:service1-id\",\n    \"urn:v1:eu:resource:service2:service2-id\",\n])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myResourceGroup = new Ovh.Iam.ResourceGroup(\"myResourceGroup\", new()\n    {\n        Resources = new[]\n        {\n            \"urn:v1:eu:resource:service1:service1-id\",\n            \"urn:v1:eu:resource:service2:service2-id\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iam\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iam.NewResourceGroup(ctx, \"myResourceGroup\", \u0026iam.ResourceGroupArgs{\n\t\t\tResources: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"urn:v1:eu:resource:service1:service1-id\"),\n\t\t\t\tpulumi.String(\"urn:v1:eu:resource:service2:service2-id\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Iam.ResourceGroup;\nimport com.pulumi.ovh.Iam.ResourceGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myResourceGroup = new ResourceGroup(\"myResourceGroup\", ResourceGroupArgs.builder()\n            .resources(            \n                \"urn:v1:eu:resource:service1:service1-id\",\n                \"urn:v1:eu:resource:service2:service2-id\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myResourceGroup:\n    type: ovh:Iam:ResourceGroup\n    properties:\n      resources:\n        - urn:v1:eu:resource:service1:service1-id\n        - urn:v1:eu:resource:service2:service2-id\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nResource groups can be imported by using their id.\n\nbash\n\n```sh\n$ pulumi import ovh:Iam/resourceGroup:ResourceGroup my_resource_group resource_group_id\n```\n\n-\u003e Read only resource groups cannot be imported\n\n",
            "properties": {
                "GroupURN": {
                    "type": "string",
                    "description": "URN of the resource group, used when writing policies\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the resource group\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the resource group\n"
                },
                "owner": {
                    "type": "string",
                    "description": "Name of the account owning the resource group\n"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Marks that the resource group is not editable. Usually means that this is a default resource group created by OVHcloud\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of the URNs of the resources contained in the resource group. All urns must be ones of valid resources\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Date of the last modification of the resource group\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "owner",
                "readOnly",
                "updatedAt",
                "GroupURN"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Name of the resource group\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of the URNs of the resources contained in the resource group. All urns must be ones of valid resources\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceGroup resources.\n",
                "properties": {
                    "GroupURN": {
                        "type": "string",
                        "description": "URN of the resource group, used when writing policies\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the resource group\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the resource group\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Name of the account owning the resource group\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Marks that the resource group is not editable. Usually means that this is a default resource group created by OVHcloud\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of the URNs of the resources contained in the resource group. All urns must be ones of valid resources\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of the last modification of the resource group\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/firewall:Firewall": {
            "description": "Use this resource to manage an IP firewall.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myFirewall = new ovh.ip.Firewall(\"myFirewall\", {\n    ip: \"XXXXXX\",\n    ipOnFirewall: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_firewall = ovh.ip.Firewall(\"myFirewall\",\n    ip=\"XXXXXX\",\n    ip_on_firewall=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myFirewall = new Ovh.Ip.Firewall(\"myFirewall\", new()\n    {\n        Ip = \"XXXXXX\",\n        IpOnFirewall = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ip.NewFirewall(ctx, \"myFirewall\", \u0026ip.FirewallArgs{\n\t\t\tIp:           pulumi.String(\"XXXXXX\"),\n\t\t\tIpOnFirewall: pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.Firewall;\nimport com.pulumi.ovh.Ip.FirewallArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myFirewall = new Firewall(\"myFirewall\", FirewallArgs.builder()\n            .ip(\"XXXXXX\")\n            .ipOnFirewall(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myFirewall:\n    type: ovh:Ip:Firewall\n    properties:\n      ip: XXXXXX\n      ipOnFirewall: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP or the CIDR\n"
                },
                "ipOnFirewall": {
                    "type": "string",
                    "description": "IPv4 address\n* `enabled ` - Whether firewall should be enabled\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of your ip on firewall\n"
                }
            },
            "required": [
                "enabled",
                "ip",
                "ipOnFirewall",
                "state"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP or the CIDR\n"
                },
                "ipOnFirewall": {
                    "type": "string",
                    "description": "IPv4 address\n* `enabled ` - Whether firewall should be enabled\n"
                }
            },
            "requiredInputs": [
                "ip",
                "ipOnFirewall"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Firewall resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP or the CIDR\n"
                    },
                    "ipOnFirewall": {
                        "type": "string",
                        "description": "IPv4 address\n* `enabled ` - Whether firewall should be enabled\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your ip on firewall\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/firewallRule:FirewallRule": {
            "description": "Use this resource to manage a rule on an IP firewall.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myFirewallRule = new ovh.ip.FirewallRule(\"myFirewallRule\", {\n    action: \"deny\",\n    ip: \"XXXXXX\",\n    ipOnFirewall: \"XXXXXX\",\n    protocol: \"tcp\",\n    sequence: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_firewall_rule = ovh.ip.FirewallRule(\"myFirewallRule\",\n    action=\"deny\",\n    ip=\"XXXXXX\",\n    ip_on_firewall=\"XXXXXX\",\n    protocol=\"tcp\",\n    sequence=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myFirewallRule = new Ovh.Ip.FirewallRule(\"myFirewallRule\", new()\n    {\n        Action = \"deny\",\n        Ip = \"XXXXXX\",\n        IpOnFirewall = \"XXXXXX\",\n        Protocol = \"tcp\",\n        Sequence = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ip.NewFirewallRule(ctx, \"myFirewallRule\", \u0026ip.FirewallRuleArgs{\n\t\t\tAction:       pulumi.String(\"deny\"),\n\t\t\tIp:           pulumi.String(\"XXXXXX\"),\n\t\t\tIpOnFirewall: pulumi.String(\"XXXXXX\"),\n\t\t\tProtocol:     pulumi.String(\"tcp\"),\n\t\t\tSequence:     pulumi.Float64(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.FirewallRule;\nimport com.pulumi.ovh.Ip.FirewallRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myFirewallRule = new FirewallRule(\"myFirewallRule\", FirewallRuleArgs.builder()\n            .action(\"deny\")\n            .ip(\"XXXXXX\")\n            .ipOnFirewall(\"XXXXXX\")\n            .protocol(\"tcp\")\n            .sequence(0)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myFirewallRule:\n    type: ovh:Ip:FirewallRule\n    properties:\n      action: deny\n      ip: XXXXXX\n      ipOnFirewall: XXXXXX\n      protocol: tcp\n      sequence: 0\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThe resource can be imported using the properties `ip`, `ip_on_firewall` and `sequence`, separated by \"|\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Ip/firewallRule:FirewallRule my_firewall_rule '127.0.0.1|127.0.0.2|0'\n```\n\n",
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Possible values for action (deny|permit)\n"
                },
                "creationDate": {
                    "type": "string",
                    "description": "Creation date of the rule\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination IP for your rule\n"
                },
                "destinationPort": {
                    "type": "number",
                    "description": "Destination port for your rule. Only with TCP/UDP protocol\n"
                },
                "destinationPortDesc": {
                    "type": "string",
                    "description": "String description of field `destination_port`\n"
                },
                "fragments": {
                    "type": "boolean",
                    "description": "Fragments option\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP or the CIDR\n"
                },
                "ipOnFirewall": {
                    "type": "string",
                    "description": "IPv4 address\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Possible values for protocol (ah|esp|gre|icmp|ipv4|tcp|udp)\n"
                },
                "rule": {
                    "type": "string",
                    "description": "Description of the rule\n"
                },
                "sequence": {
                    "type": "number",
                    "description": "Rule position in the rules array\n"
                },
                "source": {
                    "type": "string",
                    "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "sourcePort": {
                    "type": "number",
                    "description": "Source port for your rule. Only with TCP/UDP protocol\n"
                },
                "sourcePortDesc": {
                    "type": "string",
                    "description": "String description of field `source_port`\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of your rule\n"
                },
                "tcpOption": {
                    "type": "string",
                    "description": "TCP option on your rule (syn|established)\n"
                }
            },
            "required": [
                "action",
                "creationDate",
                "destination",
                "destinationPort",
                "destinationPortDesc",
                "fragments",
                "ip",
                "ipOnFirewall",
                "protocol",
                "rule",
                "sequence",
                "source",
                "sourcePort",
                "sourcePortDesc",
                "state",
                "tcpOption"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Possible values for action (deny|permit)\n"
                },
                "destinationPort": {
                    "type": "number",
                    "description": "Destination port for your rule. Only with TCP/UDP protocol\n"
                },
                "fragments": {
                    "type": "boolean",
                    "description": "Fragments option\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP or the CIDR\n"
                },
                "ipOnFirewall": {
                    "type": "string",
                    "description": "IPv4 address\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Possible values for protocol (ah|esp|gre|icmp|ipv4|tcp|udp)\n"
                },
                "sequence": {
                    "type": "number",
                    "description": "Rule position in the rules array\n"
                },
                "source": {
                    "type": "string",
                    "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "sourcePort": {
                    "type": "number",
                    "description": "Source port for your rule. Only with TCP/UDP protocol\n"
                },
                "tcpOption": {
                    "type": "string",
                    "description": "TCP option on your rule (syn|established)\n"
                }
            },
            "requiredInputs": [
                "action",
                "ip",
                "ipOnFirewall",
                "protocol",
                "sequence"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Possible values for action (deny|permit)\n"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the rule\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination IP for your rule\n"
                    },
                    "destinationPort": {
                        "type": "number",
                        "description": "Destination port for your rule. Only with TCP/UDP protocol\n"
                    },
                    "destinationPortDesc": {
                        "type": "string",
                        "description": "String description of field `destination_port`\n"
                    },
                    "fragments": {
                        "type": "boolean",
                        "description": "Fragments option\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP or the CIDR\n"
                    },
                    "ipOnFirewall": {
                        "type": "string",
                        "description": "IPv4 address\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Possible values for protocol (ah|esp|gre|icmp|ipv4|tcp|udp)\n"
                    },
                    "rule": {
                        "type": "string",
                        "description": "Description of the rule\n"
                    },
                    "sequence": {
                        "type": "number",
                        "description": "Rule position in the rules array\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)\n"
                    },
                    "sourcePort": {
                        "type": "number",
                        "description": "Source port for your rule. Only with TCP/UDP protocol\n"
                    },
                    "sourcePortDesc": {
                        "type": "string",
                        "description": "String description of field `source_port`\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your rule\n"
                    },
                    "tcpOption": {
                        "type": "string",
                        "description": "TCP option on your rule (syn|established)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/ipService:IpService": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myaccount = ovh.Me.getMe({});\nconst mycart = ovh.Order.getCart({\n    ovhSubsidiary: \"fr\",\n});\nconst ipblockCartProductPlan = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"ip\",\n    planCode: \"ip-v4-s30-ripe\",\n}));\nconst ipblockIpService = new ovh.ip.IpService(\"ipblockIpService\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    description: \"my ip block\",\n    plan: {\n        duration: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.selectedPrices?.[0]?.duration),\n        planCode: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.planCode),\n        pricingMode: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.selectedPrices?.[0]?.pricingMode),\n        configurations: [\n            {\n                label: \"country\",\n                value: \"FR\",\n            },\n            {\n                label: \"region\",\n                value: \"europe\",\n            },\n            {\n                label: \"destination\",\n                value: \"parking\",\n            },\n        ],\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyaccount = ovh.Me.get_me()\nmycart = ovh.Order.get_cart(ovh_subsidiary=\"fr\")\nipblock_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"ip\",\n    plan_code=\"ip-v4-s30-ripe\")\nipblock_ip_service = ovh.ip.IpService(\"ipblockIpService\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    description=\"my ip block\",\n    plan={\n        \"duration\": ipblock_cart_product_plan.selected_prices[0].duration,\n        \"plan_code\": ipblock_cart_product_plan.plan_code,\n        \"pricing_mode\": ipblock_cart_product_plan.selected_prices[0].pricing_mode,\n        \"configurations\": [\n            {\n                \"label\": \"country\",\n                \"value\": \"FR\",\n            },\n            {\n                \"label\": \"region\",\n                \"value\": \"europe\",\n            },\n            {\n                \"label\": \"destination\",\n                \"value\": \"parking\",\n            },\n        ],\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myaccount = Ovh.Me.GetMe.Invoke();\n\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = \"fr\",\n    });\n\n    var ipblockCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"ip\",\n        PlanCode = \"ip-v4-s30-ripe\",\n    });\n\n    var ipblockIpService = new Ovh.Ip.IpService(\"ipblockIpService\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        Description = \"my ip block\",\n        Plan = new Ovh.Ip.Inputs.IpServicePlanArgs\n        {\n            Duration = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Ip.Inputs.IpServicePlanConfigurationArgs\n                {\n                    Label = \"country\",\n                    Value = \"FR\",\n                },\n                new Ovh.Ip.Inputs.IpServicePlanConfigurationArgs\n                {\n                    Label = \"region\",\n                    Value = \"europe\",\n                },\n                new Ovh.Ip.Inputs.IpServicePlanConfigurationArgs\n                {\n                    Label = \"destination\",\n                    Value = \"parking\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmycart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: \"fr\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipblockCartProductPlan, err := order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"ip\",\n\t\t\tPlanCode:      \"ip-v4-s30-ripe\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ip.NewIpService(ctx, \"ipblockIpService\", \u0026ip.IpServiceArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tDescription:   pulumi.String(\"my ip block\"),\n\t\t\tPlan: \u0026ip.IpServicePlanArgs{\n\t\t\t\tDuration:    pulumi.String(ipblockCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(ipblockCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(ipblockCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: ip.IpServicePlanConfigurationArray{\n\t\t\t\t\t\u0026ip.IpServicePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"country\"),\n\t\t\t\t\t\tValue: pulumi.String(\"FR\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026ip.IpServicePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"region\"),\n\t\t\t\t\t\tValue: pulumi.String(\"europe\"),\n\t\t\t\t\t},\n\t\t\t\t\t\u0026ip.IpServicePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"destination\"),\n\t\t\t\t\t\tValue: pulumi.String(\"parking\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Ip.IpService;\nimport com.pulumi.ovh.Ip.IpServiceArgs;\nimport com.pulumi.ovh.Ip.inputs.IpServicePlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myaccount = MeFunctions.getMe();\n\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(\"fr\")\n            .build());\n\n        final var ipblockCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"ip\")\n            .planCode(\"ip-v4-s30-ripe\")\n            .build());\n\n        var ipblockIpService = new IpService(\"ipblockIpService\", IpServiceArgs.builder()\n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .description(\"my ip block\")\n            .plan(IpServicePlanArgs.builder()\n                .duration(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(                \n                    IpServicePlanConfigurationArgs.builder()\n                        .label(\"country\")\n                        .value(\"FR\")\n                        .build(),\n                    IpServicePlanConfigurationArgs.builder()\n                        .label(\"region\")\n                        .value(\"europe\")\n                        .build(),\n                    IpServicePlanConfigurationArgs.builder()\n                        .label(\"destination\")\n                        .value(\"parking\")\n                        .build())\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  ipblockIpService:\n    type: ovh:Ip:IpService\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      description: my ip block\n      plan:\n        duration: ${ipblockCartProductPlan.selectedPrices[0].duration}\n        planCode: ${ipblockCartProductPlan.planCode}\n        pricingMode: ${ipblockCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: country\n            value: FR\n          - label: region\n            value: europe\n          - label: destination\n            value: parking\nvariables:\n  myaccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  mycart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: fr\n  ipblockCartProductPlan:\n    fn::invoke:\n      function: ovh:Order:getCartProductPlan\n      arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: ip\n        planCode: ip-v4-s30-ripe\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThe resource can be imported using its `service_name`, E.g.,\n\nterraform\n\nimport {\n\n  to = ovh_ip_service.ipblock\n\n  id = \"ip-xx.xx.xx.xx\"\n\n}\n\nbash\n\n$ pulumi preview -generate-config-out=ipblock.tf\n\n$ pulumi up\n\nThe file `ipblock.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "canBeTerminated": {
                    "type": "boolean",
                    "description": "can be terminated\n"
                },
                "country": {
                    "type": "string",
                    "description": "country\n"
                },
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip.\n"
                },
                "ip": {
                    "type": "string",
                    "description": "ip block\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceOrder:IpServiceOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "organisationId": {
                    "type": "string",
                    "description": "IP block organisation Id\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:Ip/IpServicePlan:IpServicePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanOption:IpServicePlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "routedTos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceRoutedTo:IpServiceRoutedTo"
                    },
                    "description": "Routage information\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "service name\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible values for ip type\n"
                }
            },
            "required": [
                "canBeTerminated",
                "country",
                "description",
                "ip",
                "orders",
                "organisationId",
                "ovhSubsidiary",
                "plan",
                "routedTos",
                "serviceName",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip.\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceOrder:IpServiceOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Ip/IpServicePlan:IpServicePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanOption:IpServicePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpService resources.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean",
                        "description": "can be terminated\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "country\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Custom description on your ip.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "ip block\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/IpServiceOrder:IpServiceOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "organisationId": {
                        "type": "string",
                        "description": "IP block organisation Id\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Ip/IpServicePlan:IpServicePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/IpServicePlanOption:IpServicePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "routedTos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/IpServiceRoutedTo:IpServiceRoutedTo"
                        },
                        "description": "Routage information\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "service name\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible values for ip type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/mitigation:Mitigation": {
            "description": "Use this resource to manage an IP permanent mitigation.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst mitigation = new ovh.ip.Mitigation(\"mitigation\", {\n    ip: \"XXXXXX\",\n    ipOnMitigation: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmitigation = ovh.ip.Mitigation(\"mitigation\",\n    ip=\"XXXXXX\",\n    ip_on_mitigation=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mitigation = new Ovh.Ip.Mitigation(\"mitigation\", new()\n    {\n        Ip = \"XXXXXX\",\n        IpOnMitigation = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ip.NewMitigation(ctx, \"mitigation\", \u0026ip.MitigationArgs{\n\t\t\tIp:             pulumi.String(\"XXXXXX\"),\n\t\t\tIpOnMitigation: pulumi.String(\"XXXXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.Mitigation;\nimport com.pulumi.ovh.Ip.MitigationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var mitigation = new Mitigation(\"mitigation\", MitigationArgs.builder()\n            .ip(\"XXXXXX\")\n            .ipOnMitigation(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  mitigation:\n    type: ovh:Ip:Mitigation\n    properties:\n      ip: XXXXXX\n      ipOnMitigation: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "auto": {
                    "type": "boolean",
                    "description": "Set on true if the IP is on auto-mitigation\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP or the CIDR\n"
                },
                "ipOnMitigation": {
                    "type": "string",
                    "description": "IPv4 address\n* `permanent ` - Set on true if the IP is on permanent mitigation\n"
                },
                "permanent": {
                    "type": "boolean",
                    "description": "Set on true if your ip is on permanent mitigation\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of the IP on mitigation\n"
                }
            },
            "required": [
                "auto",
                "ip",
                "ipOnMitigation",
                "permanent",
                "state"
            ],
            "inputProperties": {
                "ip": {
                    "type": "string",
                    "description": "The IP or the CIDR\n"
                },
                "ipOnMitigation": {
                    "type": "string",
                    "description": "IPv4 address\n* `permanent ` - Set on true if the IP is on permanent mitigation\n"
                },
                "permanent": {
                    "type": "boolean",
                    "description": "Set on true if your ip is on permanent mitigation\n"
                }
            },
            "requiredInputs": [
                "ip",
                "ipOnMitigation"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mitigation resources.\n",
                "properties": {
                    "auto": {
                        "type": "boolean",
                        "description": "Set on true if the IP is on auto-mitigation\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP or the CIDR\n"
                    },
                    "ipOnMitigation": {
                        "type": "string",
                        "description": "IPv4 address\n* `permanent ` - Set on true if the IP is on permanent mitigation\n"
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Set on true if your ip is on permanent mitigation\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of the IP on mitigation\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/move:Move": {
            "description": "Moves a given IP to a different service, or inversely, parks it if empty service is given\n\n## Move IP `1.2.3.4` to service loadbalancer-XXXXX\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst moveIpToLoadBalancerXxxxx = new ovh.ip.Move(\"moveIpToLoadBalancerXxxxx\", {\n    ip: \"1.2.3.4\",\n    routedTo: {\n        serviceName: \"loadbalancer-XXXXX\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmove_ip_to_load_balancer_xxxxx = ovh.ip.Move(\"moveIpToLoadBalancerXxxxx\",\n    ip=\"1.2.3.4\",\n    routed_to={\n        \"service_name\": \"loadbalancer-XXXXX\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var moveIpToLoadBalancerXxxxx = new Ovh.Ip.Move(\"moveIpToLoadBalancerXxxxx\", new()\n    {\n        Ip = \"1.2.3.4\",\n        RoutedTo = new Ovh.Ip.Inputs.MoveRoutedToArgs\n        {\n            ServiceName = \"loadbalancer-XXXXX\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ip.NewMove(ctx, \"moveIpToLoadBalancerXxxxx\", \u0026ip.MoveArgs{\n\t\t\tIp: pulumi.String(\"1.2.3.4\"),\n\t\t\tRoutedTo: \u0026ip.MoveRoutedToArgs{\n\t\t\t\tServiceName: pulumi.String(\"loadbalancer-XXXXX\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.Move;\nimport com.pulumi.ovh.Ip.MoveArgs;\nimport com.pulumi.ovh.Ip.inputs.MoveRoutedToArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var moveIpToLoadBalancerXxxxx = new Move(\"moveIpToLoadBalancerXxxxx\", MoveArgs.builder()\n            .ip(\"1.2.3.4\")\n            .routedTo(MoveRoutedToArgs.builder()\n                .serviceName(\"loadbalancer-XXXXX\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  moveIpToLoadBalancerXxxxx:\n    type: ovh:Ip:Move\n    properties:\n      ip: 1.2.3.4\n      routedTo:\n        serviceName: loadbalancer-XXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Park IP/Detach IP `1.2.3.4` from any service\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst parkIp = new ovh.ip.Move(\"parkIp\", {\n    ip: \"1.2.3.4\",\n    routedTo: {\n        serviceName: \"\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npark_ip = ovh.ip.Move(\"parkIp\",\n    ip=\"1.2.3.4\",\n    routed_to={\n        \"service_name\": \"\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var parkIp = new Ovh.Ip.Move(\"parkIp\", new()\n    {\n        Ip = \"1.2.3.4\",\n        RoutedTo = new Ovh.Ip.Inputs.MoveRoutedToArgs\n        {\n            ServiceName = \"\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ip.NewMove(ctx, \"parkIp\", \u0026ip.MoveArgs{\n\t\t\tIp: pulumi.String(\"1.2.3.4\"),\n\t\t\tRoutedTo: \u0026ip.MoveRoutedToArgs{\n\t\t\t\tServiceName: pulumi.String(\"\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.Move;\nimport com.pulumi.ovh.Ip.MoveArgs;\nimport com.pulumi.ovh.Ip.inputs.MoveRoutedToArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var parkIp = new Move(\"parkIp\", MoveArgs.builder()\n            .ip(\"1.2.3.4\")\n            .routedTo(MoveRoutedToArgs.builder()\n                .serviceName(\"\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  parkIp:\n    type: ovh:Ip:Move\n    properties:\n      ip: 1.2.3.4\n      routedTo:\n        serviceName: \"\"\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThe resource can be imported using the `ip` field, e.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Ip/move:Move mv '1.2.3.4/32'\n```\n\n",
            "properties": {
                "canBeTerminated": {
                    "type": "boolean",
                    "description": "Whether IP service can be terminated\n"
                },
                "country": {
                    "type": "string",
                    "description": "Country\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description attached to the IP\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP block that we want to attach to a different service\n"
                },
                "organisationId": {
                    "type": "string",
                    "description": "IP block organisation Id\n"
                },
                "routedTo": {
                    "$ref": "#/types/ovh:Ip/MoveRoutedTo:MoveRoutedTo",
                    "description": "Service to route the IP to. If null, the IP will be [parked](https://api.ovh.com/console/#/ip/%7Bip%7D/park~POST) instead of [moved](https://api.ovh.com/console/#/ip/%7Bip%7D/move~POST)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name in the form of `ip-\u003cpart-1\u003e.\u003cpart-2\u003e.\u003cpart-3\u003e.\u003cpart-4\u003e`\n"
                },
                "taskStartDate": {
                    "type": "string",
                    "description": "Starting date and time field of the current IP task that is in charge of changing the service the IP is attached to\n"
                },
                "taskStatus": {
                    "type": "string",
                    "description": "Status field of the current IP task that is in charge of changing the service the IP is attached to\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible values for ip type\n"
                }
            },
            "required": [
                "canBeTerminated",
                "country",
                "description",
                "ip",
                "organisationId",
                "routedTo",
                "serviceName",
                "taskStartDate",
                "taskStatus",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description attached to the IP\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP block that we want to attach to a different service\n"
                },
                "routedTo": {
                    "$ref": "#/types/ovh:Ip/MoveRoutedTo:MoveRoutedTo",
                    "description": "Service to route the IP to. If null, the IP will be [parked](https://api.ovh.com/console/#/ip/%7Bip%7D/park~POST) instead of [moved](https://api.ovh.com/console/#/ip/%7Bip%7D/move~POST)\n"
                }
            },
            "requiredInputs": [
                "ip",
                "routedTo"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Move resources.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean",
                        "description": "Whether IP service can be terminated\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description attached to the IP\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "IP block that we want to attach to a different service\n"
                    },
                    "organisationId": {
                        "type": "string",
                        "description": "IP block organisation Id\n"
                    },
                    "routedTo": {
                        "$ref": "#/types/ovh:Ip/MoveRoutedTo:MoveRoutedTo",
                        "description": "Service to route the IP to. If null, the IP will be [parked](https://api.ovh.com/console/#/ip/%7Bip%7D/park~POST) instead of [moved](https://api.ovh.com/console/#/ip/%7Bip%7D/move~POST)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name in the form of `ip-\u003cpart-1\u003e.\u003cpart-2\u003e.\u003cpart-3\u003e.\u003cpart-4\u003e`\n"
                    },
                    "taskStartDate": {
                        "type": "string",
                        "description": "Starting date and time field of the current IP task that is in charge of changing the service the IP is attached to\n"
                    },
                    "taskStatus": {
                        "type": "string",
                        "description": "Status field of the current IP task that is in charge of changing the service the IP is attached to\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible values for ip type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/reverse:Reverse": {
            "description": "Provides a OVHcloud IP reverse.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\n// Set the reverse of an IP\nconst test = new ovh.ip.Reverse(\"test\", {\n    ip: \"192.0.2.0/24\",\n    ReverseIp: \"192.0.2.1\",\n    ReverseValue: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\n# Set the reverse of an IP\ntest = ovh.ip.Reverse(\"test\",\n    ip=\"192.0.2.0/24\",\n    reverse_ip=\"192.0.2.1\",\n    reverse_value=\"example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Set the reverse of an IP\n    var test = new Ovh.Ip.Reverse(\"test\", new()\n    {\n        Ip = \"192.0.2.0/24\",\n        ReverseIp = \"192.0.2.1\",\n        ReverseValue = \"example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Set the reverse of an IP\n\t\t_, err := ip.NewReverse(ctx, \"test\", \u0026ip.ReverseArgs{\n\t\t\tIp:           pulumi.String(\"192.0.2.0/24\"),\n\t\t\tReverseIp:    pulumi.String(\"192.0.2.1\"),\n\t\t\tReverseValue: pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.Reverse;\nimport com.pulumi.ovh.Ip.ReverseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Set the reverse of an IP\n        var test = new Reverse(\"test\", ReverseArgs.builder()\n            .ip(\"192.0.2.0/24\")\n            .ReverseIp(\"192.0.2.1\")\n            .ReverseValue(\"example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  # Set the reverse of an IP\n  test:\n    type: ovh:Ip:Reverse\n    properties:\n      ip: 192.0.2.0/24\n      ReverseIp: 192.0.2.1\n      ReverseValue: example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nThe resource can be imported using the `ip`, `ip_reverse` of the address, separated by \"|\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Ip/reverse:Reverse my_reverse '2001:0db8:c0ff:ee::/64|2001:0db8:c0ff:ee::42'\n```\n\n",
            "properties": {
                "ReverseIp": {
                    "type": "string",
                    "description": "The IP to set the reverse of\n"
                },
                "ReverseValue": {
                    "type": "string",
                    "description": "The value of the reverse\n"
                },
                "ip": {
                    "type": "string",
                    "description": "The IP block to which the IP belongs\n"
                }
            },
            "required": [
                "ip",
                "ReverseIp",
                "ReverseValue"
            ],
            "inputProperties": {
                "ReverseIp": {
                    "type": "string",
                    "description": "The IP to set the reverse of\n",
                    "willReplaceOnChanges": true
                },
                "ReverseValue": {
                    "type": "string",
                    "description": "The value of the reverse\n",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "The IP block to which the IP belongs\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ip",
                "ReverseIp",
                "ReverseValue"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Reverse resources.\n",
                "properties": {
                    "ReverseIp": {
                        "type": "string",
                        "description": "The IP to set the reverse of\n",
                        "willReplaceOnChanges": true
                    },
                    "ReverseValue": {
                        "type": "string",
                        "description": "The value of the reverse\n",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP block to which the IP belongs\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpFarm:HttpFarm": {
            "description": "Creates a HTTP backend server group (farm) to be used by loadbalancing frontend(s)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmname = new ovh.iploadbalancing.HttpFarm(\"farmname\", {\n    displayName: \"ingress-8080-gra\",\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"GRA\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.ip_load_balancing.HttpFarm(\"farmname\",\n    display_name=\"ingress-8080-gra\",\n    service_name=lb.service_name,\n    zone=\"GRA\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmname = new Ovh.IpLoadBalancing.HttpFarm(\"farmname\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"GRA\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewHttpFarm(ctx, \"farmname\", \u0026iploadbalancing.HttpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"GRA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmname = new HttpFarm(\"farmname\", HttpFarmArgs.builder()\n            .displayName(\"ingress-8080-gra\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"GRA\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmname:\n    type: ovh:IpLoadBalancing:HttpFarm\n    properties:\n      displayName: ingress-8080-gra\n      serviceName: ${lb.serviceName}\n      zone: GRA\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nHTTP farm can be imported using the following format `service_name` and the `id` of the farm, separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/httpFarm:HttpFarm farmname service_name/farm_id\n```\n\n",
            "properties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`, `uri`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`, `uri`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`, `uri`)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer farm\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe",
                        "description": "define a backend healthcheck probe\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "stickiness": {
                        "type": "string",
                        "description": "Stickiness type. No stickiness if null (`sourceIp`, `cookie`)\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpFarmServer:HttpFarmServer": {
            "description": "Creates a backend server entry linked to HTTP loadbalancing group (farm)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmname = new ovh.iploadbalancing.HttpFarm(\"farmname\", {\n    port: 8080,\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"all\",\n});\nconst backend = new ovh.iploadbalancing.HttpFarmServer(\"backend\", {\n    address: \"4.5.6.7\",\n    backup: true,\n    displayName: \"mybackend\",\n    farmId: farmname.id,\n    port: 80,\n    probe: true,\n    proxyProtocolVersion: \"v2\",\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    ssl: false,\n    status: \"active\",\n    weight: 2,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarmname = ovh.ip_load_balancing.HttpFarm(\"farmname\",\n    port=8080,\n    service_name=lb.service_name,\n    zone=\"all\")\nbackend = ovh.ip_load_balancing.HttpFarmServer(\"backend\",\n    address=\"4.5.6.7\",\n    backup=True,\n    display_name=\"mybackend\",\n    farm_id=farmname.id,\n    port=80,\n    probe=True,\n    proxy_protocol_version=\"v2\",\n    service_name=lb.service_name,\n    ssl=False,\n    status=\"active\",\n    weight=2)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmname = new Ovh.IpLoadBalancing.HttpFarm(\"farmname\", new()\n    {\n        Port = 8080,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n    var backend = new Ovh.IpLoadBalancing.HttpFarmServer(\"backend\", new()\n    {\n        Address = \"4.5.6.7\",\n        Backup = true,\n        DisplayName = \"mybackend\",\n        FarmId = farmname.Id,\n        Port = 80,\n        Probe = true,\n        ProxyProtocolVersion = \"v2\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Ssl = false,\n        Status = \"active\",\n        Weight = 2,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarmname, err := iploadbalancing.NewHttpFarm(ctx, \"farmname\", \u0026iploadbalancing.HttpFarmArgs{\n\t\t\tPort:        pulumi.Int(8080),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewHttpFarmServer(ctx, \"backend\", \u0026iploadbalancing.HttpFarmServerArgs{\n\t\t\tAddress:              pulumi.String(\"4.5.6.7\"),\n\t\t\tBackup:               pulumi.Bool(true),\n\t\t\tDisplayName:          pulumi.String(\"mybackend\"),\n\t\t\tFarmId:               farmname.ID(),\n\t\t\tPort:                 pulumi.Int(80),\n\t\t\tProbe:                pulumi.Bool(true),\n\t\t\tProxyProtocolVersion: pulumi.String(\"v2\"),\n\t\t\tServiceName:          pulumi.String(lb.ServiceName),\n\t\t\tSsl:                  pulumi.Bool(false),\n\t\t\tStatus:               pulumi.String(\"active\"),\n\t\t\tWeight:               pulumi.Int(2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmServer;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmname = new HttpFarm(\"farmname\", HttpFarmArgs.builder()\n            .port(8080)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n        var backend = new HttpFarmServer(\"backend\", HttpFarmServerArgs.builder()\n            .address(\"4.5.6.7\")\n            .backup(true)\n            .displayName(\"mybackend\")\n            .farmId(farmname.id())\n            .port(80)\n            .probe(true)\n            .proxyProtocolVersion(\"v2\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .ssl(false)\n            .status(\"active\")\n            .weight(2)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmname:\n    type: ovh:IpLoadBalancing:HttpFarm\n    properties:\n      port: 8080\n      serviceName: ${lb.serviceName}\n      zone: all\n  backend:\n    type: ovh:IpLoadBalancing:HttpFarmServer\n    properties:\n      address: 4.5.6.7\n      backup: true\n      displayName: mybackend\n      farmId: ${farmname.id}\n      port: 80\n      probe: true\n      proxyProtocolVersion: v2\n      serviceName: ${lb.serviceName}\n      ssl: false\n      status: active\n      weight: 2\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nHTTP farm server can be imported using the following format `service_name`, the `id` of the farm and the `id` of the server separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/httpFarmServer:HttpFarmServer backend service_name/farm_id/server_id\n```\n\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "cookie": {
                    "type": "string",
                    "description": "Value of the stickiness cookie used for this backend.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "onMarkedDown": {
                    "type": "string",
                    "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "required": [
                "address",
                "cookie",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n",
                    "willReplaceOnChanges": true
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n",
                    "willReplaceOnChanges": true
                },
                "onMarkedDown": {
                    "type": "string",
                    "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the backend server (IP from either internal or OVHcloud network)\n",
                        "willReplaceOnChanges": true
                    },
                    "backup": {
                        "type": "boolean",
                        "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "cookie": {
                        "type": "string",
                        "description": "Value of the stickiness cookie used for this backend.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Label for the server\n"
                    },
                    "farmId": {
                        "type": "integer",
                        "description": "ID of the farm this server is attached to\n",
                        "willReplaceOnChanges": true
                    },
                    "onMarkedDown": {
                        "type": "string",
                        "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port that backend will respond on\n"
                    },
                    "probe": {
                        "type": "boolean",
                        "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                    },
                    "proxyProtocolVersion": {
                        "type": "string",
                        "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "is the connection ciphered with SSL (TLS)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "backend status - `active` or `inactive`\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "used in loadbalancing algorithm\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpFrontend:HttpFrontend": {
            "description": "Creates a backend HTTP server group (frontend) to be used by loadbalancing frontend(s)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farm80 = new ovh.iploadbalancing.HttpFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"all\",\n});\nconst testFrontend = new ovh.iploadbalancing.HttpFrontend(\"testFrontend\", {\n    defaultFarmId: farm80.id,\n    displayName: \"ingress-8080-gra\",\n    port: \"80,443\",\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"all\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm80 = ovh.ip_load_balancing.HttpFarm(\"farm80\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"all\")\ntest_frontend = ovh.ip_load_balancing.HttpFrontend(\"testFrontend\",\n    default_farm_id=farm80.id,\n    display_name=\"ingress-8080-gra\",\n    port=\"80,443\",\n    service_name=lb.service_name,\n    zone=\"all\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farm80 = new Ovh.IpLoadBalancing.HttpFarm(\"farm80\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        Port = 80,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n    var testFrontend = new Ovh.IpLoadBalancing.HttpFrontend(\"testFrontend\", new()\n    {\n        DefaultFarmId = farm80.Id,\n        DisplayName = \"ingress-8080-gra\",\n        Port = \"80,443\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarm80, err := iploadbalancing.NewHttpFarm(ctx, \"farm80\", \u0026iploadbalancing.HttpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Int(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewHttpFrontend(ctx, \"testFrontend\", \u0026iploadbalancing.HttpFrontendArgs{\n\t\t\tDefaultFarmId: farm80.ID(),\n\t\t\tDisplayName:   pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:          pulumi.String(\"80,443\"),\n\t\t\tServiceName:   pulumi.String(lb.ServiceName),\n\t\t\tZone:          pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFrontend;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFrontendArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farm80 = new HttpFarm(\"farm80\", HttpFarmArgs.builder()\n            .displayName(\"ingress-8080-gra\")\n            .port(80)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n        var testFrontend = new HttpFrontend(\"testFrontend\", HttpFrontendArgs.builder()\n            .defaultFarmId(farm80.id())\n            .displayName(\"ingress-8080-gra\")\n            .port(\"80,443\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farm80:\n    type: ovh:IpLoadBalancing:HttpFarm\n    properties:\n      displayName: ingress-8080-gra\n      port: 80\n      serviceName: ${lb.serviceName}\n      zone: all\n  testFrontend:\n    type: ovh:IpLoadBalancing:HttpFrontend\n    properties:\n      defaultFarmId: ${farm80.id}\n      displayName: ingress-8080-gra\n      port: 80,443\n      serviceName: ${lb.serviceName}\n      zone: all\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n\n### With HTTP Header\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farm80 = new ovh.iploadbalancing.HttpFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"all\",\n});\nconst testFrontend = new ovh.iploadbalancing.HttpFrontend(\"testFrontend\", {\n    defaultFarmId: farm80.id,\n    displayName: \"ingress-8080-gra\",\n    httpHeaders: [\n        \"X-Ip-Header %%ci\",\n        \"X-Port-Header %%cp\",\n    ],\n    port: \"80,443\",\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"all\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm80 = ovh.ip_load_balancing.HttpFarm(\"farm80\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"all\")\ntest_frontend = ovh.ip_load_balancing.HttpFrontend(\"testFrontend\",\n    default_farm_id=farm80.id,\n    display_name=\"ingress-8080-gra\",\n    http_headers=[\n        \"X-Ip-Header %%ci\",\n        \"X-Port-Header %%cp\",\n    ],\n    port=\"80,443\",\n    service_name=lb.service_name,\n    zone=\"all\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farm80 = new Ovh.IpLoadBalancing.HttpFarm(\"farm80\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        Port = 80,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n    var testFrontend = new Ovh.IpLoadBalancing.HttpFrontend(\"testFrontend\", new()\n    {\n        DefaultFarmId = farm80.Id,\n        DisplayName = \"ingress-8080-gra\",\n        HttpHeaders = new[]\n        {\n            \"X-Ip-Header %%ci\",\n            \"X-Port-Header %%cp\",\n        },\n        Port = \"80,443\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarm80, err := iploadbalancing.NewHttpFarm(ctx, \"farm80\", \u0026iploadbalancing.HttpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Int(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewHttpFrontend(ctx, \"testFrontend\", \u0026iploadbalancing.HttpFrontendArgs{\n\t\t\tDefaultFarmId: farm80.ID(),\n\t\t\tDisplayName:   pulumi.String(\"ingress-8080-gra\"),\n\t\t\tHttpHeaders: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"X-Ip-Header %%ci\"),\n\t\t\t\tpulumi.String(\"X-Port-Header %%cp\"),\n\t\t\t},\n\t\t\tPort:        pulumi.String(\"80,443\"),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFrontend;\nimport com.pulumi.ovh.IpLoadBalancing.HttpFrontendArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farm80 = new HttpFarm(\"farm80\", HttpFarmArgs.builder()\n            .displayName(\"ingress-8080-gra\")\n            .port(80)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n        var testFrontend = new HttpFrontend(\"testFrontend\", HttpFrontendArgs.builder()\n            .defaultFarmId(farm80.id())\n            .displayName(\"ingress-8080-gra\")\n            .httpHeaders(            \n                \"X-Ip-Header %%ci\",\n                \"X-Port-Header %%cp\")\n            .port(\"80,443\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farm80:\n    type: ovh:IpLoadBalancing:HttpFarm\n    properties:\n      displayName: ingress-8080-gra\n      port: 80\n      serviceName: ${lb.serviceName}\n      zone: all\n  testFrontend:\n    type: ovh:IpLoadBalancing:HttpFrontend\n    properties:\n      defaultFarmId: ${farm80.id}\n      displayName: ingress-8080-gra\n      httpHeaders:\n        - X-Ip-Header %%ci\n        - X-Port-Header %%cp\n      port: 80,443\n      serviceName: ${lb.serviceName}\n      zone: all\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nHTTP frontend can be imported using the following format `service_name` and the `id` of the frontend separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/httpFrontend:HttpFrontend testfrontend service_name/http_frontend_id\n```\n\n",
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "hsts": {
                    "type": "boolean",
                    "description": "HTTP Strict Transport Security. Default: 'false'\n"
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "HTTP headers to add to the frontend. List of string.\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "redirectLocation": {
                    "type": "string",
                    "description": "Redirection HTTP'\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "hsts": {
                    "type": "boolean",
                    "description": "HTTP Strict Transport Security. Default: 'false'\n"
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "HTTP headers to add to the frontend. List of string.\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "redirectLocation": {
                    "type": "string",
                    "description": "Redirection HTTP'\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                    },
                    "defaultFarmId": {
                        "type": "integer",
                        "description": "Default TCP Farm of your frontend\n"
                    },
                    "defaultSslId": {
                        "type": "integer",
                        "description": "Default ssl served to your customer\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend, this field is for you\n"
                    },
                    "hsts": {
                        "type": "boolean",
                        "description": "HTTP Strict Transport Security. Default: 'false'\n"
                    },
                    "httpHeaders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "HTTP headers to add to the frontend. List of string.\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range\n"
                    },
                    "redirectLocation": {
                        "type": "string",
                        "description": "Redirection HTTP'\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "SSL deciphering. Default: 'false'\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpRoute:HttpRoute": {
            "description": "Manage HTTP route for a loadbalancer service\n\n## Example Usage\n\nRoute which redirect all url to https.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst httpsRedirect = new ovh.iploadbalancing.HttpRoute(\"httpsRedirect\", {\n    action: {\n        status: 302,\n        target: \"https://${host}${path}${arguments}\",\n        type: \"redirect\",\n    },\n    displayName: \"Redirect to HTTPS\",\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nhttps_redirect = ovh.ip_load_balancing.HttpRoute(\"httpsRedirect\",\n    action={\n        \"status\": 302,\n        \"target\": \"https://${host}${path}${arguments}\",\n        \"type\": \"redirect\",\n    },\n    display_name=\"Redirect to HTTPS\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var httpsRedirect = new Ovh.IpLoadBalancing.HttpRoute(\"httpsRedirect\", new()\n    {\n        Action = new Ovh.IpLoadBalancing.Inputs.HttpRouteActionArgs\n        {\n            Status = 302,\n            Target = \"https://${host}${path}${arguments}\",\n            Type = \"redirect\",\n        },\n        DisplayName = \"Redirect to HTTPS\",\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iploadbalancing.NewHttpRoute(ctx, \"httpsRedirect\", \u0026iploadbalancing.HttpRouteArgs{\n\t\t\tAction: \u0026iploadbalancing.HttpRouteActionArgs{\n\t\t\t\tStatus: pulumi.Int(302),\n\t\t\t\tTarget: pulumi.String(\"https://${host}${path}${arguments}\"),\n\t\t\t\tType:   pulumi.String(\"redirect\"),\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"Redirect to HTTPS\"),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRoute;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.HttpRouteActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var httpsRedirect = new HttpRoute(\"httpsRedirect\", HttpRouteArgs.builder()\n            .action(HttpRouteActionArgs.builder()\n                .status(302)\n                .target(\"https://${host}${path}${arguments}\")\n                .type(\"redirect\")\n                .build())\n            .displayName(\"Redirect to HTTPS\")\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  httpsRedirect:\n    type: ovh:IpLoadBalancing:HttpRoute\n    properties:\n      action:\n        status: 302\n        target: https://$${host}$${path}$${arguments}\n        type: redirect\n      displayName: Redirect to HTTPS\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nHTTP route can be imported using the following format `service_name` and the `id` of the route separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/httpRoute:HttpRoute httpsredirect service_name/route_id\n```\n\n",
            "properties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteRule:HttpRouteRule"
                    },
                    "description": "List of rules to match to trigger action\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "required": [
                "action",
                "frontendId",
                "rules",
                "serviceName",
                "status",
                "weight"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "requiredInputs": [
                "action",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpRoute resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction",
                        "description": "Action triggered when all rules match\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your route, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "integer",
                        "description": "Route traffic for this frontend\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteRule:HttpRouteRule"
                        },
                        "description": "List of rules to match to trigger action\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpRouteRule:HttpRouteRule": {
            "description": "Manage rules for HTTP route.\n\n## Example Usage\n\nRoute which redirect all URL to HTTPs for example.com (Vhost).\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst httpsRedirect = new ovh.iploadbalancing.HttpRoute(\"httpsRedirect\", {\n    action: {\n        status: 302,\n        target: \"https://${host}${path}${arguments}\",\n        type: \"redirect\",\n    },\n    displayName: \"Redirect to HTTPS\",\n    frontendId: 11111,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\nconst exampleRule = new ovh.iploadbalancing.HttpRouteRule(\"exampleRule\", {\n    displayName: \"Match example.com host\",\n    field: \"host\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n    routeId: httpsRedirect.id,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nhttps_redirect = ovh.ip_load_balancing.HttpRoute(\"httpsRedirect\",\n    action={\n        \"status\": 302,\n        \"target\": \"https://${host}${path}${arguments}\",\n        \"type\": \"redirect\",\n    },\n    display_name=\"Redirect to HTTPS\",\n    frontend_id=11111,\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\nexample_rule = ovh.ip_load_balancing.HttpRouteRule(\"exampleRule\",\n    display_name=\"Match example.com host\",\n    field=\"host\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\",\n    route_id=https_redirect.id,\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var httpsRedirect = new Ovh.IpLoadBalancing.HttpRoute(\"httpsRedirect\", new()\n    {\n        Action = new Ovh.IpLoadBalancing.Inputs.HttpRouteActionArgs\n        {\n            Status = 302,\n            Target = \"https://${host}${path}${arguments}\",\n            Type = \"redirect\",\n        },\n        DisplayName = \"Redirect to HTTPS\",\n        FrontendId = 11111,\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n    });\n\n    var exampleRule = new Ovh.IpLoadBalancing.HttpRouteRule(\"exampleRule\", new()\n    {\n        DisplayName = \"Match example.com host\",\n        Field = \"host\",\n        Match = \"is\",\n        Negate = false,\n        Pattern = \"example.com\",\n        RouteId = httpsRedirect.Id,\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\thttpsRedirect, err := iploadbalancing.NewHttpRoute(ctx, \"httpsRedirect\", \u0026iploadbalancing.HttpRouteArgs{\n\t\t\tAction: \u0026iploadbalancing.HttpRouteActionArgs{\n\t\t\t\tStatus: pulumi.Int(302),\n\t\t\t\tTarget: pulumi.String(\"https://${host}${path}${arguments}\"),\n\t\t\t\tType:   pulumi.String(\"redirect\"),\n\t\t\t},\n\t\t\tDisplayName: pulumi.String(\"Redirect to HTTPS\"),\n\t\t\tFrontendId:  pulumi.Int(11111),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewHttpRouteRule(ctx, \"exampleRule\", \u0026iploadbalancing.HttpRouteRuleArgs{\n\t\t\tDisplayName: pulumi.String(\"Match example.com host\"),\n\t\t\tField:       pulumi.String(\"host\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t\tRouteId:     httpsRedirect.ID(),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRoute;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.HttpRouteActionArgs;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteRule;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var httpsRedirect = new HttpRoute(\"httpsRedirect\", HttpRouteArgs.builder()\n            .action(HttpRouteActionArgs.builder()\n                .status(302)\n                .target(\"https://${host}${path}${arguments}\")\n                .type(\"redirect\")\n                .build())\n            .displayName(\"Redirect to HTTPS\")\n            .frontendId(11111)\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .build());\n\n        var exampleRule = new HttpRouteRule(\"exampleRule\", HttpRouteRuleArgs.builder()\n            .displayName(\"Match example.com host\")\n            .field(\"host\")\n            .match(\"is\")\n            .negate(false)\n            .pattern(\"example.com\")\n            .routeId(httpsRedirect.id())\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  httpsRedirect:\n    type: ovh:IpLoadBalancing:HttpRoute\n    properties:\n      action:\n        status: 302\n        target: https://$${host}$${path}$${arguments}\n        type: redirect\n      displayName: Redirect to HTTPS\n      frontendId: 11111\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n  exampleRule:\n    type: ovh:IpLoadBalancing:HttpRouteRule\n    properties:\n      displayName: Match example.com host\n      field: host\n      match: is\n      negate: false\n      pattern: example.com\n      routeId: ${httpsRedirect.id}\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nRule which match a specific header (same effect as the host match above).\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst exampleRule = new ovh.iploadbalancing.HttpRouteRule(\"exampleRule\", {\n    displayName: \"Match example.com Host header\",\n    field: \"headers\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n    routeId: ovh_iploadbalancing_http_route.https_redirect.id,\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    subField: \"Host\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nexample_rule = ovh.ip_load_balancing.HttpRouteRule(\"exampleRule\",\n    display_name=\"Match example.com Host header\",\n    field=\"headers\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\",\n    route_id=ovh_iploadbalancing_http_route[\"https_redirect\"][\"id\"],\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    sub_field=\"Host\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var exampleRule = new Ovh.IpLoadBalancing.HttpRouteRule(\"exampleRule\", new()\n    {\n        DisplayName = \"Match example.com Host header\",\n        Field = \"headers\",\n        Match = \"is\",\n        Negate = false,\n        Pattern = \"example.com\",\n        RouteId = ovh_iploadbalancing_http_route.Https_redirect.Id,\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        SubField = \"Host\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iploadbalancing.NewHttpRouteRule(ctx, \"exampleRule\", \u0026iploadbalancing.HttpRouteRuleArgs{\n\t\t\tDisplayName: pulumi.String(\"Match example.com Host header\"),\n\t\t\tField:       pulumi.String(\"headers\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t\tRouteId:     pulumi.Any(ovh_iploadbalancing_http_route.Https_redirect.Id),\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tSubField:    pulumi.String(\"Host\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteRule;\nimport com.pulumi.ovh.IpLoadBalancing.HttpRouteRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var exampleRule = new HttpRouteRule(\"exampleRule\", HttpRouteRuleArgs.builder()\n            .displayName(\"Match example.com Host header\")\n            .field(\"headers\")\n            .match(\"is\")\n            .negate(false)\n            .pattern(\"example.com\")\n            .routeId(ovh_iploadbalancing_http_route.https_redirect().id())\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .subField(\"Host\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  exampleRule:\n    type: ovh:IpLoadBalancing:HttpRouteRule\n    properties:\n      displayName: Match example.com Host header\n      field: headers\n      match: is\n      negate: false\n      pattern: example.com\n      routeId: ${ovh_iploadbalancing_http_route.https_redirect.id}\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      subField: Host\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nHTTP route rule can be imported using the following format `service_name`, the `id` of the route and the `id` of the rule separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/httpRouteRule:HttpRouteRule examplerule service_name/route_id/rule_id\n```\n\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "required": [
                "field",
                "match",
                "negate",
                "routeId",
                "serviceName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "requiredInputs": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpRouteRule resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your rule, this field is for you\n"
                    },
                    "field": {
                        "type": "string",
                        "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                    },
                    "match": {
                        "type": "string",
                        "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                    },
                    "negate": {
                        "type": "boolean",
                        "description": "Invert the matching operator effect\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                    },
                    "routeId": {
                        "type": "string",
                        "description": "The route to apply this rule\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "subField": {
                        "type": "string",
                        "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/loadBalancer:LoadBalancer": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myaccount = ovh.Me.getMe({});\nconst mycart = myaccount.then(myaccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myaccount.ovhSubsidiary,\n}));\nconst iplb = mycart.then(mycart =\u003e ovh.Order.getCartProductPlan({\n    cartId: mycart.id,\n    priceCapacity: \"renew\",\n    product: \"ipLoadbalancing\",\n    planCode: \"iplb-lb1\",\n}));\nconst bhs = Promise.all([iplb, iplb, iplb, iplb]).then(([iplb, iplb1, iplb2, iplb3]) =\u003e ovh.Order.getCartProductOptionsPlan({\n    cartId: iplb.cartId,\n    priceCapacity: iplb1.priceCapacity,\n    product: iplb2.product,\n    planCode: iplb3.planCode,\n    optionsPlanCode: \"iplb-zone-lb1-rbx\",\n}));\nconst iplb_lb1 = new ovh.iploadbalancing.LoadBalancer(\"iplb-lb1\", {\n    ovhSubsidiary: mycart.then(mycart =\u003e mycart.ovhSubsidiary),\n    displayName: \"my ip loadbalancing\",\n    plan: {\n        duration: iplb.then(iplb =\u003e iplb.selectedPrices?.[0]?.duration),\n        planCode: iplb.then(iplb =\u003e iplb.planCode),\n        pricingMode: iplb.then(iplb =\u003e iplb.selectedPrices?.[0]?.pricingMode),\n    },\n    planOptions: [{\n        duration: bhs.then(bhs =\u003e bhs.selectedPrices?.[0]?.duration),\n        planCode: bhs.then(bhs =\u003e bhs.planCode),\n        pricingMode: bhs.then(bhs =\u003e bhs.selectedPrices?.[0]?.pricingMode),\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyaccount = ovh.Me.get_me()\nmycart = ovh.Order.get_cart(ovh_subsidiary=myaccount.ovh_subsidiary)\niplb = ovh.Order.get_cart_product_plan(cart_id=mycart.id,\n    price_capacity=\"renew\",\n    product=\"ipLoadbalancing\",\n    plan_code=\"iplb-lb1\")\nbhs = ovh.Order.get_cart_product_options_plan(cart_id=iplb.cart_id,\n    price_capacity=iplb.price_capacity,\n    product=iplb.product,\n    plan_code=iplb.plan_code,\n    options_plan_code=\"iplb-zone-lb1-rbx\")\niplb_lb1 = ovh.ip_load_balancing.LoadBalancer(\"iplb-lb1\",\n    ovh_subsidiary=mycart.ovh_subsidiary,\n    display_name=\"my ip loadbalancing\",\n    plan={\n        \"duration\": iplb.selected_prices[0].duration,\n        \"plan_code\": iplb.plan_code,\n        \"pricing_mode\": iplb.selected_prices[0].pricing_mode,\n    },\n    plan_options=[{\n        \"duration\": bhs.selected_prices[0].duration,\n        \"plan_code\": bhs.plan_code,\n        \"pricing_mode\": bhs.selected_prices[0].pricing_mode,\n    }])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myaccount = Ovh.Me.GetMe.Invoke();\n\n    var mycart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myaccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n    var iplb = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = mycart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"ipLoadbalancing\",\n        PlanCode = \"iplb-lb1\",\n    });\n\n    var bhs = Ovh.Order.GetCartProductOptionsPlan.Invoke(new()\n    {\n        CartId = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.CartId),\n        PriceCapacity = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PriceCapacity),\n        Product = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.Product),\n        PlanCode = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n        OptionsPlanCode = \"iplb-zone-lb1-rbx\",\n    });\n\n    var iplb_lb1 = new Ovh.IpLoadBalancing.LoadBalancer(\"iplb-lb1\", new()\n    {\n        OvhSubsidiary = mycart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        DisplayName = \"my ip loadbalancing\",\n        Plan = new Ovh.IpLoadBalancing.Inputs.LoadBalancerPlanArgs\n        {\n            Duration = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = iplb.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n        PlanOptions = new[]\n        {\n            new Ovh.IpLoadBalancing.Inputs.LoadBalancerPlanOptionArgs\n            {\n                Duration = bhs.Apply(getCartProductOptionsPlanResult =\u003e getCartProductOptionsPlanResult.SelectedPrices[0]?.Duration),\n                PlanCode = bhs.Apply(getCartProductOptionsPlanResult =\u003e getCartProductOptionsPlanResult.PlanCode),\n                PricingMode = bhs.Apply(getCartProductOptionsPlanResult =\u003e getCartProductOptionsPlanResult.SelectedPrices[0]?.PricingMode),\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyaccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmycart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myaccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tiplb, err := order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        mycart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"ipLoadbalancing\",\n\t\t\tPlanCode:      \"iplb-lb1\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbhs, err := order.GetCartProductOptionsPlan(ctx, \u0026order.GetCartProductOptionsPlanArgs{\n\t\t\tCartId:          iplb.CartId,\n\t\t\tPriceCapacity:   iplb.PriceCapacity,\n\t\t\tProduct:         iplb.Product,\n\t\t\tPlanCode:        iplb.PlanCode,\n\t\t\tOptionsPlanCode: \"iplb-zone-lb1-rbx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewLoadBalancer(ctx, \"iplb-lb1\", \u0026iploadbalancing.LoadBalancerArgs{\n\t\t\tOvhSubsidiary: pulumi.String(mycart.OvhSubsidiary),\n\t\t\tDisplayName:   pulumi.String(\"my ip loadbalancing\"),\n\t\t\tPlan: \u0026iploadbalancing.LoadBalancerPlanArgs{\n\t\t\t\tDuration:    pulumi.String(iplb.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(iplb.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(iplb.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t\tPlanOptions: iploadbalancing.LoadBalancerPlanOptionArray{\n\t\t\t\t\u0026iploadbalancing.LoadBalancerPlanOptionArgs{\n\t\t\t\t\tDuration:    pulumi.String(bhs.SelectedPrices[0].Duration),\n\t\t\t\t\tPlanCode:    pulumi.String(bhs.PlanCode),\n\t\t\t\t\tPricingMode: pulumi.String(bhs.SelectedPrices[0].PricingMode),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductOptionsPlanArgs;\nimport com.pulumi.ovh.IpLoadBalancing.LoadBalancer;\nimport com.pulumi.ovh.IpLoadBalancing.LoadBalancerArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.LoadBalancerPlanArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.LoadBalancerPlanOptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myaccount = MeFunctions.getMe();\n\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myaccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var iplb = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"ipLoadbalancing\")\n            .planCode(\"iplb-lb1\")\n            .build());\n\n        final var bhs = OrderFunctions.getCartProductOptionsPlan(GetCartProductOptionsPlanArgs.builder()\n            .cartId(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.cartId()))\n            .priceCapacity(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.priceCapacity()))\n            .product(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.product()))\n            .planCode(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n            .optionsPlanCode(\"iplb-zone-lb1-rbx\")\n            .build());\n\n        var iplb_lb1 = new LoadBalancer(\"iplb-lb1\", LoadBalancerArgs.builder()\n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .displayName(\"my ip loadbalancing\")\n            .plan(LoadBalancerPlanArgs.builder()\n                .duration(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(iplb.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .planOptions(LoadBalancerPlanOptionArgs.builder()\n                .duration(bhs.applyValue(getCartProductOptionsPlanResult -\u003e getCartProductOptionsPlanResult.selectedPrices()[0].duration()))\n                .planCode(bhs.applyValue(getCartProductOptionsPlanResult -\u003e getCartProductOptionsPlanResult.planCode()))\n                .pricingMode(bhs.applyValue(getCartProductOptionsPlanResult -\u003e getCartProductOptionsPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  iplb-lb1:\n    type: ovh:IpLoadBalancing:LoadBalancer\n    properties:\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      displayName: my ip loadbalancing\n      plan:\n        duration: ${iplb.selectedPrices[0].duration}\n        planCode: ${iplb.planCode}\n        pricingMode: ${iplb.selectedPrices[0].pricingMode}\n      planOptions:\n        - duration: ${bhs.selectedPrices[0].duration}\n          planCode: ${bhs.planCode}\n          pricingMode: ${bhs.selectedPrices[0].pricingMode}\nvariables:\n  myaccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  mycart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myaccount.ovhSubsidiary}\n  iplb:\n    fn::invoke:\n      function: ovh:Order:getCartProductPlan\n      arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: ipLoadbalancing\n        planCode: iplb-lb1\n  bhs:\n    fn::invoke:\n      function: ovh:Order:getCartProductOptionsPlan\n      arguments:\n        cartId: ${iplb.cartId}\n        priceCapacity: ${iplb.priceCapacity}\n        product: ${iplb.product}\n        planCode: ${iplb.planCode}\n        optionsPlanCode: iplb-zone-lb1-rbx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud IP load balancing services can be imported using its `service_name`.\n\nUsing the following configuration:\n\nterraform\n\nimport {\n\n  to = ovh_iploadbalancing.iplb\n\n  id = \"\u003cservice name\u003e\"\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=iplb.tf\n\n$ pulumi up\n\nThe file `iplb.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "LoadBalancerURN": {
                    "type": "string",
                    "description": "URN of the load balancer, used when writing IAM policies\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                },
                "ipLoadbalancing": {
                    "type": "string",
                    "description": "Your IP load balancing\n"
                },
                "ipv4": {
                    "type": "string",
                    "description": "The IPV4 associated to your IP load balancing\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "The IPV6 associated to your IP load balancing. DEPRECATED.\n"
                },
                "metricsToken": {
                    "type": "string",
                    "description": "The metrics token associated with your IP load balancing\n",
                    "secret": true
                },
                "offer": {
                    "type": "string",
                    "description": "The offer of your IP load balancing\n"
                },
                "orderableZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrderableZone:LoadBalancerOrderableZone"
                    },
                    "description": "Available additional zone for your Load Balancer\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "sslConfiguration": {
                    "type": "string",
                    "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of \"intermediate\", \"modern\".\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of your IP\n"
                },
                "vrackEligibility": {
                    "type": "boolean",
                    "description": "Vrack eligibility\n"
                },
                "vrackName": {
                    "type": "string",
                    "description": "Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Location where your service is\n"
                }
            },
            "required": [
                "displayName",
                "ipLoadbalancing",
                "ipv4",
                "ipv6",
                "metricsToken",
                "offer",
                "orders",
                "orderableZones",
                "ovhSubsidiary",
                "plan",
                "serviceName",
                "sslConfiguration",
                "state",
                "LoadBalancerURN",
                "vrackEligibility",
                "vrackName",
                "zones"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "sslConfiguration": {
                    "type": "string",
                    "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of \"intermediate\", \"modern\".\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadBalancer resources.\n",
                "properties": {
                    "LoadBalancerURN": {
                        "type": "string",
                        "description": "URN of the load balancer, used when writing IAM policies\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string",
                        "description": "Your IP load balancing\n"
                    },
                    "ipv4": {
                        "type": "string",
                        "description": "The IPV4 associated to your IP load balancing\n"
                    },
                    "ipv6": {
                        "type": "string",
                        "description": "The IPV6 associated to your IP load balancing. DEPRECATED.\n"
                    },
                    "metricsToken": {
                        "type": "string",
                        "description": "The metrics token associated with your IP load balancing\n",
                        "secret": true
                    },
                    "offer": {
                        "type": "string",
                        "description": "The offer of your IP load balancing\n"
                    },
                    "orderableZones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrderableZone:LoadBalancerOrderableZone"
                        },
                        "description": "Available additional zone for your Load Balancer\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "sslConfiguration": {
                        "type": "string",
                        "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Intermediate if null. one of \"intermediate\", \"modern\".\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your IP\n"
                    },
                    "vrackEligibility": {
                        "type": "boolean",
                        "description": "Vrack eligibility\n"
                    },
                    "vrackName": {
                        "type": "string",
                        "description": "Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Location where your service is\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/refresh:Refresh": {
            "description": "Applies changes from other `ovh_iploadbalancing_*` resources to the production configuration of loadbalancers.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmName = new ovh.iploadbalancing.TcpFarm(\"farmName\", {\n    port: 8080,\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"all\",\n});\nconst backend = new ovh.iploadbalancing.TcpFarmServer(\"backend\", {\n    address: \"4.5.6.7\",\n    backup: true,\n    displayName: \"mybackend\",\n    farmId: farmName.id,\n    port: 80,\n    probe: true,\n    proxyProtocolVersion: \"v2\",\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    ssl: false,\n    status: \"active\",\n    weight: 2,\n});\nconst mylb = new ovh.iploadbalancing.Refresh(\"mylb\", {\n    keepers: [[backend].map(__item =\u003e __item.address)],\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm_name = ovh.ip_load_balancing.TcpFarm(\"farmName\",\n    port=8080,\n    service_name=lb.service_name,\n    zone=\"all\")\nbackend = ovh.ip_load_balancing.TcpFarmServer(\"backend\",\n    address=\"4.5.6.7\",\n    backup=True,\n    display_name=\"mybackend\",\n    farm_id=farm_name.id,\n    port=80,\n    probe=True,\n    proxy_protocol_version=\"v2\",\n    service_name=lb.service_name,\n    ssl=False,\n    status=\"active\",\n    weight=2)\nmylb = ovh.ip_load_balancing.Refresh(\"mylb\",\n    keepers=[[__item.address for __item in [backend]]],\n    service_name=lb.service_name)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmName = new Ovh.IpLoadBalancing.TcpFarm(\"farmName\", new()\n    {\n        Port = 8080,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n    var backend = new Ovh.IpLoadBalancing.TcpFarmServer(\"backend\", new()\n    {\n        Address = \"4.5.6.7\",\n        Backup = true,\n        DisplayName = \"mybackend\",\n        FarmId = farmName.Id,\n        Port = 80,\n        Probe = true,\n        ProxyProtocolVersion = \"v2\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Ssl = false,\n        Status = \"active\",\n        Weight = 2,\n    });\n\n    var mylb = new Ovh.IpLoadBalancing.Refresh(\"mylb\", new()\n    {\n        Keepers = new[]\n        {\n            new[]\n            {\n                backend,\n            }.Select(__item =\u003e __item.Address).ToList(),\n        },\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\nfunc main() {\npulumi.Run(func(ctx *pulumi.Context) error {\nlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\nServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\nState: pulumi.StringRef(\"ok\"),\n}, nil);\nif err != nil {\nreturn err\n}\nfarmName, err := iploadbalancing.NewTcpFarm(ctx, \"farmName\", \u0026iploadbalancing.TcpFarmArgs{\nPort: pulumi.Int(8080),\nServiceName: pulumi.String(lb.ServiceName),\nZone: pulumi.String(\"all\"),\n})\nif err != nil {\nreturn err\n}\nbackend, err := iploadbalancing.NewTcpFarmServer(ctx, \"backend\", \u0026iploadbalancing.TcpFarmServerArgs{\nAddress: pulumi.String(\"4.5.6.7\"),\nBackup: pulumi.Bool(true),\nDisplayName: pulumi.String(\"mybackend\"),\nFarmId: farmName.ID(),\nPort: pulumi.Int(80),\nProbe: pulumi.Bool(true),\nProxyProtocolVersion: pulumi.String(\"v2\"),\nServiceName: pulumi.String(lb.ServiceName),\nSsl: pulumi.Bool(false),\nStatus: pulumi.String(\"active\"),\nWeight: pulumi.Int(2),\n})\nif err != nil {\nreturn err\n}\n_, err = iploadbalancing.NewRefresh(ctx, \"mylb\", \u0026iploadbalancing.RefreshArgs{\nKeepers: pulumi.StringArray{\npulumi.String(%!v(PANIC=Format method: fatal: A failure has occurred: unlowered splat expression @ #-resources-ovh:IpLoadBalancing-refresh:Refresh.pp:23,16-35)),\n},\nServiceName: pulumi.String(lb.ServiceName),\n})\nif err != nil {\nreturn err\n}\nreturn nil\n})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmServer;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmServerArgs;\nimport com.pulumi.ovh.IpLoadBalancing.Refresh;\nimport com.pulumi.ovh.IpLoadBalancing.RefreshArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmName = new TcpFarm(\"farmName\", TcpFarmArgs.builder()\n            .port(8080)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n        var backend = new TcpFarmServer(\"backend\", TcpFarmServerArgs.builder()\n            .address(\"4.5.6.7\")\n            .backup(true)\n            .displayName(\"mybackend\")\n            .farmId(farmName.id())\n            .port(80)\n            .probe(true)\n            .proxyProtocolVersion(\"v2\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .ssl(false)\n            .status(\"active\")\n            .weight(2)\n            .build());\n\n        var mylb = new Refresh(\"mylb\", RefreshArgs.builder()\n            .keepers(backend.stream().map(element -\u003e element.address()).collect(toList()))\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .build());\n\n    }\n}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values tracked to trigger refresh, used also to form implicit dependencies\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                }
            },
            "required": [
                "keepers",
                "serviceName"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of values tracked to trigger refresh, used also to form implicit dependencies\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Refresh resources.\n",
                "properties": {
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of values tracked to trigger refresh, used also to form implicit dependencies\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/ssl:Ssl": {
            "description": "Creates a new custom SSL certificate on your IP Load Balancing\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst sslname = new ovh.iploadbalancing.Ssl(\"sslname\", {\n    certificate: \"...\",\n    chain: \"...\",\n    displayName: \"test\",\n    key: \"...\",\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nsslname = ovh.ip_load_balancing.Ssl(\"sslname\",\n    certificate=\"...\",\n    chain=\"...\",\n    display_name=\"test\",\n    key=\"...\",\n    service_name=lb.service_name)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var sslname = new Ovh.IpLoadBalancing.Ssl(\"sslname\", new()\n    {\n        Certificate = \"...\",\n        Chain = \"...\",\n        DisplayName = \"test\",\n        Key = \"...\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewSsl(ctx, \"sslname\", \u0026iploadbalancing.SslArgs{\n\t\t\tCertificate: pulumi.String(\"...\"),\n\t\t\tChain:       pulumi.String(\"...\"),\n\t\t\tDisplayName: pulumi.String(\"test\"),\n\t\t\tKey:         pulumi.String(\"...\"),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.Ssl;\nimport com.pulumi.ovh.IpLoadBalancing.SslArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var sslname = new Ssl(\"sslname\", SslArgs.builder()\n            .certificate(\"...\")\n            .chain(\"...\")\n            .displayName(\"test\")\n            .key(\"...\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  sslname:\n    type: ovh:IpLoadBalancing:Ssl\n    properties:\n      certificate: '...'\n      chain: '...'\n      displayName: test\n      key: '...'\n      serviceName: ${lb.serviceName}\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nSSL can be imported using the following format `service_name` and the `id` of the ssl, separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/ssl:Ssl sslname service_name/ssl_id\n```\n\n",
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Certificate chain\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer ssl\n"
                },
                "expireDate": {
                    "type": "string",
                    "description": "Expire date of your SSL certificate.\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "Fingerprint of your SSL certificate.\n"
                },
                "key": {
                    "type": "string",
                    "description": "Certificate key\n",
                    "secret": true
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Subject Alternative Name of your SSL certificate.\n"
                },
                "serial": {
                    "type": "string",
                    "description": "Serial of your SSL certificate (Deprecated, use fingerprint instead !)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Subject of your SSL certificate.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of your SSL certificate. 'built' for SSL certificates managed by the IP Load Balancing. 'custom' for user manager certificates.\n"
                }
            },
            "required": [
                "certificate",
                "expireDate",
                "fingerprint",
                "key",
                "sans",
                "serial",
                "serviceName",
                "subject",
                "type"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Certificate chain\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer ssl\n"
                },
                "key": {
                    "type": "string",
                    "description": "Certificate key\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                }
            },
            "requiredInputs": [
                "certificate",
                "key",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ssl resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "description": "Certificate\n"
                    },
                    "chain": {
                        "type": "string",
                        "description": "Certificate chain\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer ssl\n"
                    },
                    "expireDate": {
                        "type": "string",
                        "description": "Expire date of your SSL certificate.\n"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "Fingerprint of your SSL certificate.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Certificate key\n",
                        "secret": true
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Subject Alternative Name of your SSL certificate.\n"
                    },
                    "serial": {
                        "type": "string",
                        "description": "Serial of your SSL certificate (Deprecated, use fingerprint instead !)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject of your SSL certificate.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of your SSL certificate. 'built' for SSL certificates managed by the IP Load Balancing. 'custom' for user manager certificates.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpFarm:TcpFarm": {
            "description": "Creates a backend server group (farm) to be used by loadbalancing frontend(s)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmName = new ovh.iploadbalancing.TcpFarm(\"farmName\", {\n    displayName: \"ingress-8080-gra\",\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"GRA\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm_name = ovh.ip_load_balancing.TcpFarm(\"farmName\",\n    display_name=\"ingress-8080-gra\",\n    service_name=lb.service_name,\n    zone=\"GRA\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmName = new Ovh.IpLoadBalancing.TcpFarm(\"farmName\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"GRA\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewTcpFarm(ctx, \"farmName\", \u0026iploadbalancing.TcpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"GRA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmName = new TcpFarm(\"farmName\", TcpFarmArgs.builder()\n            .displayName(\"ingress-8080-gra\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"GRA\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmName:\n    type: ovh:IpLoadBalancing:TcpFarm\n    properties:\n      displayName: ingress-8080-gra\n      serviceName: ${lb.serviceName}\n      zone: GRA\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTCP Farm can be imported using the following format `service_name` and the `id` of the farm, separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/tcpFarm:TcpFarm farmname service_name/farm_id\n```\n\n",
            "properties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string",
                    "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe",
                    "description": "define a backend healthcheck probe\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "stickiness": {
                    "type": "string",
                    "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string",
                        "description": "Load balancing algorithm. `roundrobin` if null (`first`, `leastconn`, `roundrobin`, `source`)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer farm\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe",
                        "description": "define a backend healthcheck probe\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "stickiness": {
                        "type": "string",
                        "description": "Stickiness type. No stickiness if null (`sourceIp`)\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the farm will be defined (ie. `GRA`, `BHS` also supports `ALL`)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpFarmServer:TcpFarmServer": {
            "description": "Creates a backend server entry linked to loadbalancing group (farm)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmName = new ovh.iploadbalancing.TcpFarm(\"farmName\", {\n    port: 8080,\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"all\",\n});\nconst backend = new ovh.iploadbalancing.TcpFarmServer(\"backend\", {\n    address: \"4.5.6.7\",\n    backup: true,\n    displayName: \"mybackend\",\n    farmId: farmName.id,\n    port: 80,\n    probe: true,\n    proxyProtocolVersion: \"v2\",\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    ssl: false,\n    status: \"active\",\n    weight: 2,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm_name = ovh.ip_load_balancing.TcpFarm(\"farmName\",\n    port=8080,\n    service_name=lb.service_name,\n    zone=\"all\")\nbackend = ovh.ip_load_balancing.TcpFarmServer(\"backend\",\n    address=\"4.5.6.7\",\n    backup=True,\n    display_name=\"mybackend\",\n    farm_id=farm_name.id,\n    port=80,\n    probe=True,\n    proxy_protocol_version=\"v2\",\n    service_name=lb.service_name,\n    ssl=False,\n    status=\"active\",\n    weight=2)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmName = new Ovh.IpLoadBalancing.TcpFarm(\"farmName\", new()\n    {\n        Port = 8080,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n    var backend = new Ovh.IpLoadBalancing.TcpFarmServer(\"backend\", new()\n    {\n        Address = \"4.5.6.7\",\n        Backup = true,\n        DisplayName = \"mybackend\",\n        FarmId = farmName.Id,\n        Port = 80,\n        Probe = true,\n        ProxyProtocolVersion = \"v2\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Ssl = false,\n        Status = \"active\",\n        Weight = 2,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarmName, err := iploadbalancing.NewTcpFarm(ctx, \"farmName\", \u0026iploadbalancing.TcpFarmArgs{\n\t\t\tPort:        pulumi.Int(8080),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewTcpFarmServer(ctx, \"backend\", \u0026iploadbalancing.TcpFarmServerArgs{\n\t\t\tAddress:              pulumi.String(\"4.5.6.7\"),\n\t\t\tBackup:               pulumi.Bool(true),\n\t\t\tDisplayName:          pulumi.String(\"mybackend\"),\n\t\t\tFarmId:               farmName.ID(),\n\t\t\tPort:                 pulumi.Int(80),\n\t\t\tProbe:                pulumi.Bool(true),\n\t\t\tProxyProtocolVersion: pulumi.String(\"v2\"),\n\t\t\tServiceName:          pulumi.String(lb.ServiceName),\n\t\t\tSsl:                  pulumi.Bool(false),\n\t\t\tStatus:               pulumi.String(\"active\"),\n\t\t\tWeight:               pulumi.Int(2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmServer;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmName = new TcpFarm(\"farmName\", TcpFarmArgs.builder()\n            .port(8080)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n        var backend = new TcpFarmServer(\"backend\", TcpFarmServerArgs.builder()\n            .address(\"4.5.6.7\")\n            .backup(true)\n            .displayName(\"mybackend\")\n            .farmId(farmName.id())\n            .port(80)\n            .probe(true)\n            .proxyProtocolVersion(\"v2\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .ssl(false)\n            .status(\"active\")\n            .weight(2)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmName:\n    type: ovh:IpLoadBalancing:TcpFarm\n    properties:\n      port: 8080\n      serviceName: ${lb.serviceName}\n      zone: all\n  backend:\n    type: ovh:IpLoadBalancing:TcpFarmServer\n    properties:\n      address: 4.5.6.7\n      backup: true\n      displayName: mybackend\n      farmId: ${farmName.id}\n      port: 80\n      probe: true\n      proxyProtocolVersion: v2\n      serviceName: ${lb.serviceName}\n      ssl: false\n      status: active\n      weight: 2\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTCP farm server can be imported using the following format `service_name`, the `id` of the farm and the `id` of the server separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/tcpFarmServer:TcpFarmServer backend service_name/farm_id/server_id\n```\n\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n"
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n"
                },
                "onMarkedDown": {
                    "type": "string",
                    "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "required": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n",
                    "willReplaceOnChanges": true
                },
                "backup": {
                    "type": "boolean",
                    "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "integer",
                    "description": "ID of the farm this server is attached to\n",
                    "willReplaceOnChanges": true
                },
                "onMarkedDown": {
                    "type": "string",
                    "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port that backend will respond on\n"
                },
                "probe": {
                    "type": "boolean",
                    "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                },
                "proxyProtocolVersion": {
                    "type": "string",
                    "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "is the connection ciphered with SSL (TLS)\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "used in loadbalancing algorithm\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the backend server (IP from either internal or OVHcloud network)\n",
                        "willReplaceOnChanges": true
                    },
                    "backup": {
                        "type": "boolean",
                        "description": "is it a backup server used in case of failure of all the non-backup backends\n"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Label for the server\n"
                    },
                    "farmId": {
                        "type": "integer",
                        "description": "ID of the farm this server is attached to\n",
                        "willReplaceOnChanges": true
                    },
                    "onMarkedDown": {
                        "type": "string",
                        "description": "enable action when backend marked down. (`shutdown-sessions`)\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port that backend will respond on\n"
                    },
                    "probe": {
                        "type": "boolean",
                        "description": "defines if backend will be probed to determine health and keep as active in farm if healthy\n"
                    },
                    "proxyProtocolVersion": {
                        "type": "string",
                        "description": "version of the PROXY protocol used to pass origin connection information from loadbalancer to receiving service (`v1`, `v2`, `v2-ssl`, `v2-ssl-cn`)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "is the connection ciphered with SSL (TLS)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "backend status - `active` or `inactive`\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "used in loadbalancing algorithm\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpFrontend:TcpFrontend": {
            "description": "Creates a backend server group (frontend) to be used by loadbalancing frontend(s)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farm80 = new ovh.iploadbalancing.TcpFarm(\"farm80\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"all\",\n});\nconst testFrontend = new ovh.iploadbalancing.TcpFrontend(\"testFrontend\", {\n    defaultFarmId: farm80.id,\n    displayName: \"ingress-8080-gra\",\n    port: \"80,443\",\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"all\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm80 = ovh.ip_load_balancing.TcpFarm(\"farm80\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"all\")\ntest_frontend = ovh.ip_load_balancing.TcpFrontend(\"testFrontend\",\n    default_farm_id=farm80.id,\n    display_name=\"ingress-8080-gra\",\n    port=\"80,443\",\n    service_name=lb.service_name,\n    zone=\"all\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farm80 = new Ovh.IpLoadBalancing.TcpFarm(\"farm80\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        Port = 80,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n    var testFrontend = new Ovh.IpLoadBalancing.TcpFrontend(\"testFrontend\", new()\n    {\n        DefaultFarmId = farm80.Id,\n        DisplayName = \"ingress-8080-gra\",\n        Port = \"80,443\",\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"all\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarm80, err := iploadbalancing.NewTcpFarm(ctx, \"farm80\", \u0026iploadbalancing.TcpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Int(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewTcpFrontend(ctx, \"testFrontend\", \u0026iploadbalancing.TcpFrontendArgs{\n\t\t\tDefaultFarmId: farm80.ID(),\n\t\t\tDisplayName:   pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:          pulumi.String(\"80,443\"),\n\t\t\tServiceName:   pulumi.String(lb.ServiceName),\n\t\t\tZone:          pulumi.String(\"all\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFrontend;\nimport com.pulumi.ovh.IpLoadBalancing.TcpFrontendArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farm80 = new TcpFarm(\"farm80\", TcpFarmArgs.builder()\n            .displayName(\"ingress-8080-gra\")\n            .port(80)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n        var testFrontend = new TcpFrontend(\"testFrontend\", TcpFrontendArgs.builder()\n            .defaultFarmId(farm80.id())\n            .displayName(\"ingress-8080-gra\")\n            .port(\"80,443\")\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"all\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farm80:\n    type: ovh:IpLoadBalancing:TcpFarm\n    properties:\n      displayName: ingress-8080-gra\n      port: 80\n      serviceName: ${lb.serviceName}\n      zone: all\n  testFrontend:\n    type: ovh:IpLoadBalancing:TcpFrontend\n    properties:\n      defaultFarmId: ${farm80.id}\n      displayName: ingress-8080-gra\n      port: 80,443\n      serviceName: ${lb.serviceName}\n      zone: all\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTCP frontend can be imported using the following format `service_name` and the `id` of the frontend separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/tcpFrontend:TcpFrontend testfrontend service_name/tcp_frontend_id\n```\n\n",
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "deniedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Deny IP Load Balancing access to these ip block. No restriction if null. You cannot specify both `allowed_source` and `denied_source` at the same time. List of IP blocks.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "integer",
                    "description": "Default TCP Farm of your frontend\n"
                },
                "defaultSslId": {
                    "type": "integer",
                    "description": "Default ssl served to your customer\n"
                },
                "deniedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Deny IP Load Balancing access to these ip block. No restriction if null. You cannot specify both `allowed_source` and `denied_source` at the same time. List of IP blocks.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean",
                    "description": "SSL deciphering. Default: 'false'\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Restrict IP Load Balancing access to these ip block. No restriction if null. List of IP blocks.\n"
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                    },
                    "defaultFarmId": {
                        "type": "integer",
                        "description": "Default TCP Farm of your frontend\n"
                    },
                    "defaultSslId": {
                        "type": "integer",
                        "description": "Default ssl served to your customer\n"
                    },
                    "deniedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Deny IP Load Balancing access to these ip block. No restriction if null. You cannot specify both `allowed_source` and `denied_source` at the same time. List of IP blocks.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend, this field is for you\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean",
                        "description": "SSL deciphering. Default: 'false'\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpRoute:TcpRoute": {
            "description": "Manage TCP route for a loadbalancer service\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst tcpReject = new ovh.iploadbalancing.TcpRoute(\"tcpReject\", {\n    action: {\n        type: \"reject\",\n    },\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntcp_reject = ovh.ip_load_balancing.TcpRoute(\"tcpReject\",\n    action={\n        \"type\": \"reject\",\n    },\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var tcpReject = new Ovh.IpLoadBalancing.TcpRoute(\"tcpReject\", new()\n    {\n        Action = new Ovh.IpLoadBalancing.Inputs.TcpRouteActionArgs\n        {\n            Type = \"reject\",\n        },\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iploadbalancing.NewTcpRoute(ctx, \"tcpReject\", \u0026iploadbalancing.TcpRouteArgs{\n\t\t\tAction: \u0026iploadbalancing.TcpRouteActionArgs{\n\t\t\t\tType: pulumi.String(\"reject\"),\n\t\t\t},\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRoute;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRouteArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.TcpRouteActionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var tcpReject = new TcpRoute(\"tcpReject\", TcpRouteArgs.builder()\n            .action(TcpRouteActionArgs.builder()\n                .type(\"reject\")\n                .build())\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  tcpReject:\n    type: ovh:IpLoadBalancing:TcpRoute\n    properties:\n      action:\n        type: reject\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTCP route can be imported using the following format `service_name` and the `id` of the route separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/tcpRoute:TcpRoute tcpreject service_name/route_id\n```\n\n",
            "properties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteRule:TcpRouteRule"
                    },
                    "description": "List of rules to match to trigger action\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "required": [
                "action",
                "frontendId",
                "rules",
                "serviceName",
                "status",
                "weight"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                }
            },
            "requiredInputs": [
                "action",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpRoute resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction",
                        "description": "Action triggered when all rules match\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your route, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "integer",
                        "description": "Route traffic for this frontend\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteRule:TcpRouteRule"
                        },
                        "description": "List of rules to match to trigger action\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated first. Only the first matching route will trigger an action\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpRouteRule:TcpRouteRule": {
            "description": "Manage rules for TCP route.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst reject = new ovh.iploadbalancing.TcpRoute(\"reject\", {\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight: 1,\n    frontendId: 11111,\n    action: {\n        type: \"reject\",\n    },\n});\nconst exampleRule = new ovh.iploadbalancing.TcpRouteRule(\"exampleRule\", {\n    serviceName: \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    routeId: reject.id,\n    displayName: \"Match example.com host\",\n    field: \"sni\",\n    match: \"is\",\n    negate: false,\n    pattern: \"example.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nreject = ovh.ip_load_balancing.TcpRoute(\"reject\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    weight=1,\n    frontend_id=11111,\n    action={\n        \"type\": \"reject\",\n    })\nexample_rule = ovh.ip_load_balancing.TcpRouteRule(\"exampleRule\",\n    service_name=\"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n    route_id=reject.id,\n    display_name=\"Match example.com host\",\n    field=\"sni\",\n    match=\"is\",\n    negate=False,\n    pattern=\"example.com\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var reject = new Ovh.IpLoadBalancing.TcpRoute(\"reject\", new()\n    {\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        Weight = 1,\n        FrontendId = 11111,\n        Action = new Ovh.IpLoadBalancing.Inputs.TcpRouteActionArgs\n        {\n            Type = \"reject\",\n        },\n    });\n\n    var exampleRule = new Ovh.IpLoadBalancing.TcpRouteRule(\"exampleRule\", new()\n    {\n        ServiceName = \"loadbalancer-xxxxxxxxxxxxxxxxxx\",\n        RouteId = reject.Id,\n        DisplayName = \"Match example.com host\",\n        Field = \"sni\",\n        Match = \"is\",\n        Negate = false,\n        Pattern = \"example.com\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treject, err := iploadbalancing.NewTcpRoute(ctx, \"reject\", \u0026iploadbalancing.TcpRouteArgs{\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tWeight:      pulumi.Int(1),\n\t\t\tFrontendId:  pulumi.Int(11111),\n\t\t\tAction: \u0026iploadbalancing.TcpRouteActionArgs{\n\t\t\t\tType: pulumi.String(\"reject\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewTcpRouteRule(ctx, \"exampleRule\", \u0026iploadbalancing.TcpRouteRuleArgs{\n\t\t\tServiceName: pulumi.String(\"loadbalancer-xxxxxxxxxxxxxxxxxx\"),\n\t\t\tRouteId:     reject.ID(),\n\t\t\tDisplayName: pulumi.String(\"Match example.com host\"),\n\t\t\tField:       pulumi.String(\"sni\"),\n\t\t\tMatch:       pulumi.String(\"is\"),\n\t\t\tNegate:      pulumi.Bool(false),\n\t\t\tPattern:     pulumi.String(\"example.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRoute;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRouteArgs;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.TcpRouteActionArgs;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRouteRule;\nimport com.pulumi.ovh.IpLoadBalancing.TcpRouteRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var reject = new TcpRoute(\"reject\", TcpRouteArgs.builder()\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .weight(1)\n            .frontendId(11111)\n            .action(TcpRouteActionArgs.builder()\n                .type(\"reject\")\n                .build())\n            .build());\n\n        var exampleRule = new TcpRouteRule(\"exampleRule\", TcpRouteRuleArgs.builder()\n            .serviceName(\"loadbalancer-xxxxxxxxxxxxxxxxxx\")\n            .routeId(reject.id())\n            .displayName(\"Match example.com host\")\n            .field(\"sni\")\n            .match(\"is\")\n            .negate(false)\n            .pattern(\"example.com\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  reject:\n    type: ovh:IpLoadBalancing:TcpRoute\n    properties:\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      weight: 1\n      frontendId: 11111\n      action:\n        type: reject\n  exampleRule:\n    type: ovh:IpLoadBalancing:TcpRouteRule\n    properties:\n      serviceName: loadbalancer-xxxxxxxxxxxxxxxxxx\n      routeId: ${reject.id}\n      displayName: Match example.com host\n      field: sni\n      match: is\n      negate: false\n      pattern: example.com\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nTCP route rule can be imported using the following format `service_name`, the `id` of the route and the `id` of the rule separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/tcpRouteRule:TcpRouteRule examplerule service_name/route_id/rule_id\n```\n\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "required": [
                "field",
                "match",
                "negate",
                "routeId",
                "serviceName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your rule, this field is for you\n"
                },
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "routeId": {
                    "type": "string",
                    "description": "The route to apply this rule\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "requiredInputs": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpRouteRule resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your rule, this field is for you\n"
                    },
                    "field": {
                        "type": "string",
                        "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/availableRouteRules\" for a list of available rules\n"
                    },
                    "match": {
                        "type": "string",
                        "description": "Matching operator. Not all operators are available for all fields. See \"/ipLoadbalancing/{serviceName}/availableRouteRules\"\n"
                    },
                    "negate": {
                        "type": "boolean",
                        "description": "Invert the matching operator effect\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                    },
                    "routeId": {
                        "type": "string",
                        "description": "The route to apply this rule\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "subField": {
                        "type": "string",
                        "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/udpFarm:UdpFarm": {
            "description": "Creates a backend server group (farm) to be used by loadbalancing frontend(s)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmName = new ovh.iploadbalancing.UdpFarm(\"farmName\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"gra\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm_name = ovh.ip_load_balancing.UdpFarm(\"farmName\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"gra\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmName = new Ovh.IpLoadBalancing.UdpFarm(\"farmName\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        Port = 80,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"gra\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewUdpFarm(ctx, \"farmName\", \u0026iploadbalancing.UdpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Float64(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"gra\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.UdpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.UdpFarmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmName = new UdpFarm(\"farmName\", UdpFarmArgs.builder()\n            .displayName(\"ingress-8080-gra\")\n            .port(80)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"gra\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmName:\n    type: ovh:IpLoadBalancing:UdpFarm\n    properties:\n      displayName: ingress-8080-gra\n      port: 80\n      serviceName: ${lb.serviceName}\n      zone: gra\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nUDP Farm can be imported using the following format `service_name` and the `id` of the farm, separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/udpFarm:UdpFarm farmname service_name/farm_id\n```\n\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "farmId": {
                    "type": "number",
                    "description": "Id of your farm.\n"
                },
                "port": {
                    "type": "number",
                    "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "vrackNetworkId": {
                    "type": "number",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "farmId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Readable label for loadbalancer farm\n"
                },
                "port": {
                    "type": "number",
                    "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "vrackNetworkId": {
                    "type": "number",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the farm will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UdpFarm resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Readable label for loadbalancer farm\n"
                    },
                    "farmId": {
                        "type": "number",
                        "description": "Id of your farm.\n"
                    },
                    "port": {
                        "type": "number",
                        "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "vrackNetworkId": {
                        "type": "number",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer is attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the farm will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/udpFarmServer:UdpFarmServer": {
            "description": "Creates a backend server entry linked to loadbalancing group (farm)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst farmName = new ovh.iploadbalancing.UdpFarm(\"farmName\", {\n    displayName: \"ingress-8080-gra\",\n    port: 80,\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    zone: \"gra\",\n});\nconst backend = new ovh.iploadbalancing.UdpFarmServer(\"backend\", {\n    address: \"4.5.6.7\",\n    displayName: \"mybackend\",\n    farmId: farmName.farmId,\n    port: 80,\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    status: \"active\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\nfarm_name = ovh.ip_load_balancing.UdpFarm(\"farmName\",\n    display_name=\"ingress-8080-gra\",\n    port=80,\n    service_name=lb.service_name,\n    zone=\"gra\")\nbackend = ovh.ip_load_balancing.UdpFarmServer(\"backend\",\n    address=\"4.5.6.7\",\n    display_name=\"mybackend\",\n    farm_id=farm_name.farm_id,\n    port=80,\n    service_name=lb.service_name,\n    status=\"active\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var farmName = new Ovh.IpLoadBalancing.UdpFarm(\"farmName\", new()\n    {\n        DisplayName = \"ingress-8080-gra\",\n        Port = 80,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Zone = \"gra\",\n    });\n\n    var backend = new Ovh.IpLoadBalancing.UdpFarmServer(\"backend\", new()\n    {\n        Address = \"4.5.6.7\",\n        DisplayName = \"mybackend\",\n        FarmId = farmName.FarmId,\n        Port = 80,\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        Status = \"active\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfarmName, err := iploadbalancing.NewUdpFarm(ctx, \"farmName\", \u0026iploadbalancing.UdpFarmArgs{\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tPort:        pulumi.Float64(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tZone:        pulumi.String(\"gra\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewUdpFarmServer(ctx, \"backend\", \u0026iploadbalancing.UdpFarmServerArgs{\n\t\t\tAddress:     pulumi.String(\"4.5.6.7\"),\n\t\t\tDisplayName: pulumi.String(\"mybackend\"),\n\t\t\tFarmId:      farmName.FarmId,\n\t\t\tPort:        pulumi.Float64(80),\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tStatus:      pulumi.String(\"active\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.UdpFarm;\nimport com.pulumi.ovh.IpLoadBalancing.UdpFarmArgs;\nimport com.pulumi.ovh.IpLoadBalancing.UdpFarmServer;\nimport com.pulumi.ovh.IpLoadBalancing.UdpFarmServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var farmName = new UdpFarm(\"farmName\", UdpFarmArgs.builder()\n            .displayName(\"ingress-8080-gra\")\n            .port(80)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .zone(\"gra\")\n            .build());\n\n        var backend = new UdpFarmServer(\"backend\", UdpFarmServerArgs.builder()\n            .address(\"4.5.6.7\")\n            .displayName(\"mybackend\")\n            .farmId(farmName.farmId())\n            .port(80)\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .status(\"active\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  farmName:\n    type: ovh:IpLoadBalancing:UdpFarm\n    properties:\n      displayName: ingress-8080-gra\n      port: 80\n      serviceName: ${lb.serviceName}\n      zone: gra\n  backend:\n    type: ovh:IpLoadBalancing:UdpFarmServer\n    properties:\n      address: 4.5.6.7\n      displayName: mybackend\n      farmId: ${farmName.farmId}\n      port: 80\n      serviceName: ${lb.serviceName}\n      status: active\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nUDP farm server can be imported using the following format `service_name`, the `id` of the farm and the `id` of the server separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/udpFarmServer:UdpFarmServer backend service_name/farm_id/server_id\n```\n\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n"
                },
                "backendId": {
                    "type": "number",
                    "description": "Synonym for `farm_id`.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "number",
                    "description": "ID of the farm this server is attached to\n"
                },
                "port": {
                    "type": "number",
                    "description": "Port that backend will respond on\n"
                },
                "serverId": {
                    "type": "number",
                    "description": "Id of your server.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                }
            },
            "required": [
                "address",
                "backendId",
                "farmId",
                "serverId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Address of the backend server (IP from either internal or OVHcloud network)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Label for the server\n"
                },
                "farmId": {
                    "type": "number",
                    "description": "ID of the farm this server is attached to\n"
                },
                "port": {
                    "type": "number",
                    "description": "Port that backend will respond on\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "backend status - `active` or `inactive`\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UdpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the backend server (IP from either internal or OVHcloud network)\n"
                    },
                    "backendId": {
                        "type": "number",
                        "description": "Synonym for `farm_id`.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Label for the server\n"
                    },
                    "farmId": {
                        "type": "number",
                        "description": "ID of the farm this server is attached to\n"
                    },
                    "port": {
                        "type": "number",
                        "description": "Port that backend will respond on\n"
                    },
                    "serverId": {
                        "type": "number",
                        "description": "Id of your server.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "backend status - `active` or `inactive`\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/udpFrontend:UdpFrontend": {
            "description": "Creates a backend server group (frontend) to be used by loadbalancing frontend(s)\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"ip-1.2.3.4\",\n    state: \"ok\",\n});\nconst testFrontend = new ovh.iploadbalancing.UdpFrontend(\"testFrontend\", {\n    serviceName: lb.then(lb =\u003e lb.serviceName),\n    displayName: \"ingress-8080-gra\",\n    zone: \"all\",\n    port: \"10,11\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"ip-1.2.3.4\",\n    state=\"ok\")\ntest_frontend = ovh.ip_load_balancing.UdpFrontend(\"testFrontend\",\n    service_name=lb.service_name,\n    display_name=\"ingress-8080-gra\",\n    zone=\"all\",\n    port=\"10,11\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"ip-1.2.3.4\",\n        State = \"ok\",\n    });\n\n    var testFrontend = new Ovh.IpLoadBalancing.UdpFrontend(\"testFrontend\", new()\n    {\n        ServiceName = lb.Apply(getIpLoadBalancingResult =\u003e getIpLoadBalancingResult.ServiceName),\n        DisplayName = \"ingress-8080-gra\",\n        Zone = \"all\",\n        Port = \"10,11\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlb, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"ip-1.2.3.4\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = iploadbalancing.NewUdpFrontend(ctx, \"testFrontend\", \u0026iploadbalancing.UdpFrontendArgs{\n\t\t\tServiceName: pulumi.String(lb.ServiceName),\n\t\t\tDisplayName: pulumi.String(\"ingress-8080-gra\"),\n\t\t\tZone:        pulumi.String(\"all\"),\n\t\t\tPort:        pulumi.String(\"10,11\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport com.pulumi.ovh.IpLoadBalancing.UdpFrontend;\nimport com.pulumi.ovh.IpLoadBalancing.UdpFrontendArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"ip-1.2.3.4\")\n            .state(\"ok\")\n            .build());\n\n        var testFrontend = new UdpFrontend(\"testFrontend\", UdpFrontendArgs.builder()\n            .serviceName(lb.applyValue(getIpLoadBalancingResult -\u003e getIpLoadBalancingResult.serviceName()))\n            .displayName(\"ingress-8080-gra\")\n            .zone(\"all\")\n            .port(\"10,11\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  testFrontend:\n    type: ovh:IpLoadBalancing:UdpFrontend\n    properties:\n      serviceName: ${lb.serviceName}\n      displayName: ingress-8080-gra\n      zone: all\n      port: 10,11\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: ip-1.2.3.4\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nUDP frontend can be imported using the following format `service_name` and the `id` of the frontend separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:IpLoadBalancing/udpFrontend:UdpFrontend testfrontend service_name/frontend_id\n```\n\n",
            "properties": {
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "number",
                    "description": "Default UDP Farm of your frontend\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend\n"
                },
                "frontendId": {
                    "type": "number",
                    "description": "Id of your frontend\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "required": [
                "disabled",
                "frontendId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                },
                "defaultFarmId": {
                    "type": "number",
                    "description": "Default UDP Farm of your frontend\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UdpFrontend resources.\n",
                "properties": {
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null. List of Ip blocks.\n"
                    },
                    "defaultFarmId": {
                        "type": "number",
                        "description": "Default UDP Farm of your frontend\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend\n"
                    },
                    "frontendId": {
                        "type": "number",
                        "description": "Id of your frontend\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and comma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone where the frontend will be defined (ie. `gra`, `bhs` also supports `all`)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/vrackNetwork:VrackNetwork": {
            "description": "Manage a vrack network for your IP Loadbalancing service.\n\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVHcloud API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "(Required) Internal Load Balancer identifier of the vRack private network\n"
                }
            },
            "required": [
                "natIp",
                "serviceName",
                "subnet",
                "vlan",
                "vrackNetworkId"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVHcloud API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                }
            },
            "requiredInputs": [
                "natIp",
                "serviceName",
                "subnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrackNetwork resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your vrack network\n"
                    },
                    "farmIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "This attribute is there for documentation purpose only and isnt passed to the OVHcloud API as it may conflicts with http/tcp farms `vrack_network_id` attribute\n"
                    },
                    "natIp": {
                        "type": "string",
                        "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "IP block of the private network in the vRack\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "(Required) Internal Load Balancer identifier of the vRack private network\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/aPIOAuth2Client:APIOAuth2Client": {
            "description": "Creates an OAuth2 service account.\n\n## Example Usage\n\nAn OAuth2 client for an app hosted at `my-app.com`, that uses the authorization code flow to authenticate.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myOauth2ClientAuthCode = new ovh.me.APIOAuth2Client(\"myOauth2ClientAuthCode\", {\n    callbackUrls: [\"https://my-app.com/callback\"],\n    description: \"An OAuth2 client using the authorization code flow for my-app.com\",\n    flow: \"AUTHORIZATION_CODE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_oauth2_client_auth_code = ovh.me.APIOAuth2Client(\"myOauth2ClientAuthCode\",\n    callback_urls=[\"https://my-app.com/callback\"],\n    description=\"An OAuth2 client using the authorization code flow for my-app.com\",\n    flow=\"AUTHORIZATION_CODE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myOauth2ClientAuthCode = new Ovh.Me.APIOAuth2Client(\"myOauth2ClientAuthCode\", new()\n    {\n        CallbackUrls = new[]\n        {\n            \"https://my-app.com/callback\",\n        },\n        Description = \"An OAuth2 client using the authorization code flow for my-app.com\",\n        Flow = \"AUTHORIZATION_CODE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.NewAPIOAuth2Client(ctx, \"myOauth2ClientAuthCode\", \u0026me.APIOAuth2ClientArgs{\n\t\t\tCallbackUrls: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"https://my-app.com/callback\"),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"An OAuth2 client using the authorization code flow for my-app.com\"),\n\t\t\tFlow:        pulumi.String(\"AUTHORIZATION_CODE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.APIOAuth2Client;\nimport com.pulumi.ovh.Me.APIOAuth2ClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myOauth2ClientAuthCode = new APIOAuth2Client(\"myOauth2ClientAuthCode\", APIOAuth2ClientArgs.builder()\n            .callbackUrls(\"https://my-app.com/callback\")\n            .description(\"An OAuth2 client using the authorization code flow for my-app.com\")\n            .flow(\"AUTHORIZATION_CODE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myOauth2ClientAuthCode:\n    type: ovh:Me:APIOAuth2Client\n    properties:\n      callbackUrls:\n        - https://my-app.com/callback\n      description: An OAuth2 client using the authorization code flow for my-app.com\n      flow: AUTHORIZATION_CODE\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nAn OAuth2 client for an app hosted at `my-app.com`, that uses the client credentials flow to authenticate.\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myOauth2ClientClientCreds = new ovh.me.APIOAuth2Client(\"myOauth2ClientClientCreds\", {\n    description: \"An OAuth2 client using the client credentials flow for my app\",\n    flow: \"CLIENT_CREDENTIALS\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_oauth2_client_client_creds = ovh.me.APIOAuth2Client(\"myOauth2ClientClientCreds\",\n    description=\"An OAuth2 client using the client credentials flow for my app\",\n    flow=\"CLIENT_CREDENTIALS\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myOauth2ClientClientCreds = new Ovh.Me.APIOAuth2Client(\"myOauth2ClientClientCreds\", new()\n    {\n        Description = \"An OAuth2 client using the client credentials flow for my app\",\n        Flow = \"CLIENT_CREDENTIALS\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.NewAPIOAuth2Client(ctx, \"myOauth2ClientClientCreds\", \u0026me.APIOAuth2ClientArgs{\n\t\t\tDescription: pulumi.String(\"An OAuth2 client using the client credentials flow for my app\"),\n\t\t\tFlow:        pulumi.String(\"CLIENT_CREDENTIALS\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.APIOAuth2Client;\nimport com.pulumi.ovh.Me.APIOAuth2ClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myOauth2ClientClientCreds = new APIOAuth2Client(\"myOauth2ClientClientCreds\", APIOAuth2ClientArgs.builder()\n            .description(\"An OAuth2 client using the client credentials flow for my app\")\n            .flow(\"CLIENT_CREDENTIALS\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myOauth2ClientClientCreds:\n    type: ovh:Me:APIOAuth2Client\n    properties:\n      description: An OAuth2 client using the client credentials flow for my app\n      flow: CLIENT_CREDENTIALS\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOAuth2 clients can be imported using their `client_id`:\n\nbash\n\n```sh\n$ pulumi import ovh:Me/aPIOAuth2Client:APIOAuth2Client my_oauth2_client client_id\n```\n\nBecause the client_secret is only available for resources created using terraform, OAuth2 clients can also be imported using a `client_id` and a `client_secret` with a pipe separator:\n\nbash\n\n```sh\n$ pulumi import ovh:Me/aPIOAuth2Client:APIOAuth2Client my_oauth2_client 'client_id|client_secret'\n```\n\n",
            "properties": {
                "callbackUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of callback urls when configuring the `AUTHORIZATION_CODE` flow.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID of the created service account.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Client secret of the created service account.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "OAuth2 client description.\n"
                },
                "flow": {
                    "type": "string",
                    "description": "The OAuth2 flow to use. `AUTHORIZATION_CODE` or `CLIENT_CREDENTIALS` are supported at the moment.\n"
                },
                "identity": {
                    "type": "string",
                    "description": "URN that will allow you to associate this oauth2 client with an access policy\n"
                },
                "name": {
                    "type": "string",
                    "description": "OAuth2 client name.\n"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "description",
                "flow",
                "identity",
                "name"
            ],
            "inputProperties": {
                "callbackUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of callback urls when configuring the `AUTHORIZATION_CODE` flow.\n"
                },
                "description": {
                    "type": "string",
                    "description": "OAuth2 client description.\n"
                },
                "flow": {
                    "type": "string",
                    "description": "The OAuth2 flow to use. `AUTHORIZATION_CODE` or `CLIENT_CREDENTIALS` are supported at the moment.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "OAuth2 client name.\n"
                }
            },
            "requiredInputs": [
                "description",
                "flow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering APIOAuth2Client resources.\n",
                "properties": {
                    "callbackUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of callback urls when configuring the `AUTHORIZATION_CODE` flow.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Client ID of the created service account.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Client secret of the created service account.\n",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "OAuth2 client description.\n"
                    },
                    "flow": {
                        "type": "string",
                        "description": "The OAuth2 flow to use. `AUTHORIZATION_CODE` or `CLIENT_CREDENTIALS` are supported at the moment.\n",
                        "willReplaceOnChanges": true
                    },
                    "identity": {
                        "type": "string",
                        "description": "URN that will allow you to associate this oauth2 client with an access policy\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "OAuth2 client name.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/identityGroup:IdentityGroup": {
            "description": "Creates an identity group.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myGroup = new ovh.me.IdentityGroup(\"myGroup\", {\n    description: \"Some custom description\",\n    role: \"NONE\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_group = ovh.me.IdentityGroup(\"myGroup\",\n    description=\"Some custom description\",\n    role=\"NONE\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myGroup = new Ovh.Me.IdentityGroup(\"myGroup\", new()\n    {\n        Description = \"Some custom description\",\n        Role = \"NONE\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.NewIdentityGroup(ctx, \"myGroup\", \u0026me.IdentityGroupArgs{\n\t\t\tDescription: pulumi.String(\"Some custom description\"),\n\t\t\tRole:        pulumi.String(\"NONE\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.IdentityGroup;\nimport com.pulumi.ovh.Me.IdentityGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myGroup = new IdentityGroup(\"myGroup\", IdentityGroupArgs.builder()\n            .description(\"Some custom description\")\n            .role(\"NONE\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myGroup:\n    type: ovh:Me:IdentityGroup\n    properties:\n      description: Some custom description\n      role: NONE\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "GroupURN": {
                    "type": "string",
                    "description": "URN of the user group, used when writing IAM policies\n"
                },
                "creation": {
                    "type": "string",
                    "description": "Creation date of this group.\n"
                },
                "defaultGroup": {
                    "type": "boolean",
                    "description": "Is the group a default and immutable one.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Group description.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Date of the last update of this group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Group name.\n"
                },
                "role": {
                    "type": "string",
                    "description": "Role associated with the group. Valid roles are ADMIN, REGULAR, UNPRIVILEGED, and NONE.\n"
                }
            },
            "required": [
                "creation",
                "defaultGroup",
                "lastUpdate",
                "name",
                "GroupURN"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Group description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Group name.\n",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string",
                    "description": "Role associated with the group. Valid roles are ADMIN, REGULAR, UNPRIVILEGED, and NONE.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityGroup resources.\n",
                "properties": {
                    "GroupURN": {
                        "type": "string",
                        "description": "URN of the user group, used when writing IAM policies\n"
                    },
                    "creation": {
                        "type": "string",
                        "description": "Creation date of this group.\n"
                    },
                    "defaultGroup": {
                        "type": "boolean",
                        "description": "Is the group a default and immutable one.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Group description.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Date of the last update of this group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Group name.\n",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string",
                        "description": "Role associated with the group. Valid roles are ADMIN, REGULAR, UNPRIVILEGED, and NONE.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/identityUser:IdentityUser": {
            "description": "Creates an identity user.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst myUser = new ovh.me.IdentityUser(\"myUser\", {\n    description: \"Some custom description\",\n    email: \"my_login@example.com\",\n    group: \"DEFAULT\",\n    login: \"my_login\",\n    password: \"super-s3cr3t!password\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_user = ovh.me.IdentityUser(\"myUser\",\n    description=\"Some custom description\",\n    email=\"my_login@example.com\",\n    group=\"DEFAULT\",\n    login=\"my_login\",\n    password=\"super-s3cr3t!password\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myUser = new Ovh.Me.IdentityUser(\"myUser\", new()\n    {\n        Description = \"Some custom description\",\n        Email = \"my_login@example.com\",\n        Group = \"DEFAULT\",\n        Login = \"my_login\",\n        Password = \"super-s3cr3t!password\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.NewIdentityUser(ctx, \"myUser\", \u0026me.IdentityUserArgs{\n\t\t\tDescription: pulumi.String(\"Some custom description\"),\n\t\t\tEmail:       pulumi.String(\"my_login@example.com\"),\n\t\t\tGroup:       pulumi.String(\"DEFAULT\"),\n\t\t\tLogin:       pulumi.String(\"my_login\"),\n\t\t\tPassword:    pulumi.String(\"super-s3cr3t!password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.IdentityUser;\nimport com.pulumi.ovh.Me.IdentityUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var myUser = new IdentityUser(\"myUser\", IdentityUserArgs.builder()\n            .description(\"Some custom description\")\n            .email(\"my_login@example.com\")\n            .group(\"DEFAULT\")\n            .login(\"my_login\")\n            .password(\"super-s3cr3t!password\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  myUser:\n    type: ovh:Me:IdentityUser\n    properties:\n      description: Some custom description\n      email: my_login@example.com\n      group: DEFAULT\n      login: my_login\n      password: super-s3cr3t!password\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "UserURN": {
                    "type": "string",
                    "description": "URN of the user, used when writing IAM policies\n"
                },
                "creation": {
                    "type": "string",
                    "description": "Creation date of this user.\n"
                },
                "description": {
                    "type": "string",
                    "description": "User description.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User's email.\n"
                },
                "group": {
                    "type": "string",
                    "description": "User's group.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update of this user.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User's login suffix.\n"
                },
                "password": {
                    "type": "string",
                    "description": "User's password.\n",
                    "secret": true
                },
                "passwordLastUpdate": {
                    "type": "string",
                    "description": "When the user changed his password for the last time.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current user's status.\n"
                }
            },
            "required": [
                "creation",
                "email",
                "lastUpdate",
                "login",
                "password",
                "passwordLastUpdate",
                "status",
                "UserURN"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "User description.\n"
                },
                "email": {
                    "type": "string",
                    "description": "User's email.\n"
                },
                "group": {
                    "type": "string",
                    "description": "User's group.\n"
                },
                "login": {
                    "type": "string",
                    "description": "User's login suffix.\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "User's password.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "email",
                "login",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityUser resources.\n",
                "properties": {
                    "UserURN": {
                        "type": "string",
                        "description": "URN of the user, used when writing IAM policies\n"
                    },
                    "creation": {
                        "type": "string",
                        "description": "Creation date of this user.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User description.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "User's group.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update of this user.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User's login suffix.\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password.\n",
                        "secret": true
                    },
                    "passwordLastUpdate": {
                        "type": "string",
                        "description": "When the user changed his password for the last time.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current user's status.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Okms/credential:Credential": {
            "description": "Creates a credential for an OVHcloud KMS.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as fs from \"fs\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myaccount = ovh.Me.getMe({});\nconst credNoCsr = new ovh.okms.Credential(\"credNoCsr\", {\n    okmsId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    identityUrns: [`urn:v1:eu:identity:account:${data.ovh_me.current_account.nichandle}`],\n    description: \"Credential without CSR\",\n});\nconst credFromCsr = new ovh.okms.Credential(\"credFromCsr\", {\n    okmsId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    identityUrns: [`urn:v1:eu:identity:account:${data.ovh_me.current_account.nichandle}`],\n    csr: fs.readFileSync(\"cred.csr\", \"utf8\"),\n    description: \"Credential from CSR\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmyaccount = ovh.Me.get_me()\ncred_no_csr = ovh.okms.Credential(\"credNoCsr\",\n    okms_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    identity_urns=[f\"urn:v1:eu:identity:account:{data['ovh_me']['current_account']['nichandle']}\"],\n    description=\"Credential without CSR\")\ncred_from_csr = ovh.okms.Credential(\"credFromCsr\",\n    okms_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    identity_urns=[f\"urn:v1:eu:identity:account:{data['ovh_me']['current_account']['nichandle']}\"],\n    csr=(lambda path: open(path).read())(\"cred.csr\"),\n    description=\"Credential from CSR\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myaccount = Ovh.Me.GetMe.Invoke();\n\n    var credNoCsr = new Ovh.Okms.Credential(\"credNoCsr\", new()\n    {\n        OkmsId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        IdentityUrns = new[]\n        {\n            $\"urn:v1:eu:identity:account:{data.Ovh_me.Current_account.Nichandle}\",\n        },\n        Description = \"Credential without CSR\",\n    });\n\n    var credFromCsr = new Ovh.Okms.Credential(\"credFromCsr\", new()\n    {\n        OkmsId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        IdentityUrns = new[]\n        {\n            $\"urn:v1:eu:identity:account:{data.Ovh_me.Current_account.Nichandle}\",\n        },\n        Csr = File.ReadAllText(\"cred.csr\"),\n        Description = \"Credential from CSR\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/okms\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := os.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okms.NewCredential(ctx, \"credNoCsr\", \u0026okms.CredentialArgs{\n\t\t\tOkmsId: pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tIdentityUrns: pulumi.StringArray{\n\t\t\t\tpulumi.Sprintf(\"urn:v1:eu:identity:account:%v\", data.Ovh_me.Current_account.Nichandle),\n\t\t\t},\n\t\t\tDescription: pulumi.String(\"Credential without CSR\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okms.NewCredential(ctx, \"credFromCsr\", \u0026okms.CredentialArgs{\n\t\t\tOkmsId: pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tIdentityUrns: pulumi.StringArray{\n\t\t\t\tpulumi.Sprintf(\"urn:v1:eu:identity:account:%v\", data.Ovh_me.Current_account.Nichandle),\n\t\t\t},\n\t\t\tCsr:         pulumi.String(readFileOrPanic(\"cred.csr\")),\n\t\t\tDescription: pulumi.String(\"Credential from CSR\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Okms.Credential;\nimport com.pulumi.ovh.Okms.CredentialArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myaccount = MeFunctions.getMe();\n\n        var credNoCsr = new Credential(\"credNoCsr\", CredentialArgs.builder()\n            .okmsId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .identityUrns(String.format(\"urn:v1:eu:identity:account:%s\", data.ovh_me().current_account().nichandle()))\n            .description(\"Credential without CSR\")\n            .build());\n\n        var credFromCsr = new Credential(\"credFromCsr\", CredentialArgs.builder()\n            .okmsId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .identityUrns(String.format(\"urn:v1:eu:identity:account:%s\", data.ovh_me().current_account().nichandle()))\n            .csr(Files.readString(Paths.get(\"cred.csr\")))\n            .description(\"Credential from CSR\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  credNoCsr:\n    type: ovh:Okms:Credential\n    properties:\n      okmsId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      identityUrns:\n        - urn:v1:eu:identity:account:${data.ovh_me.current_account.nichandle}\n      description: Credential without CSR\n  credFromCsr:\n    type: ovh:Okms:Credential\n    properties:\n      okmsId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      identityUrns:\n        - urn:v1:eu:identity:account:${data.ovh_me.current_account.nichandle}\n      csr:\n        fn::readFile: cred.csr\n      description: Credential from CSR\nvariables:\n  myaccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "certificatePem": {
                    "type": "string",
                    "description": "(String) Certificate PEM of the credential.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "(String) Creation time of the credential\n"
                },
                "csr": {
                    "type": "string",
                    "description": "Valid Certificate Signing Request\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the credential (max 200)\n"
                },
                "expiredAt": {
                    "type": "string",
                    "description": "(String) Expiration time of the credential\n"
                },
                "fromCsr": {
                    "type": "boolean",
                    "description": "(Boolean) Whether the credential was generated from a CSR\n"
                },
                "identityUrns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of identity URNs associated with the credential (max 25)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the credential (max 50)\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "privateKeyPem": {
                    "type": "string",
                    "description": "(String, Sensitive) Private Key PEM of the credential if no CSR is provided\n",
                    "secret": true
                },
                "status": {
                    "type": "string",
                    "description": "(String) Status of the credential\n"
                },
                "validity": {
                    "type": "number",
                    "description": "Validity in days (default 365, max 365)\n"
                }
            },
            "required": [
                "certificatePem",
                "createdAt",
                "csr",
                "description",
                "expiredAt",
                "fromCsr",
                "identityUrns",
                "name",
                "okmsId",
                "privateKeyPem",
                "status",
                "validity"
            ],
            "inputProperties": {
                "csr": {
                    "type": "string",
                    "description": "Valid Certificate Signing Request\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the credential (max 200)\n"
                },
                "identityUrns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of identity URNs associated with the credential (max 25)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the credential (max 50)\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "validity": {
                    "type": "number",
                    "description": "Validity in days (default 365, max 365)\n"
                }
            },
            "requiredInputs": [
                "identityUrns",
                "okmsId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Credential resources.\n",
                "properties": {
                    "certificatePem": {
                        "type": "string",
                        "description": "(String) Certificate PEM of the credential.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "(String) Creation time of the credential\n"
                    },
                    "csr": {
                        "type": "string",
                        "description": "Valid Certificate Signing Request\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the credential (max 200)\n"
                    },
                    "expiredAt": {
                        "type": "string",
                        "description": "(String) Expiration time of the credential\n"
                    },
                    "fromCsr": {
                        "type": "boolean",
                        "description": "(Boolean) Whether the credential was generated from a CSR\n"
                    },
                    "identityUrns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of identity URNs associated with the credential (max 25)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the credential (max 50)\n"
                    },
                    "okmsId": {
                        "type": "string",
                        "description": "Okms ID\n"
                    },
                    "privateKeyPem": {
                        "type": "string",
                        "description": "(String, Sensitive) Private Key PEM of the credential if no CSR is provided\n",
                        "secret": true
                    },
                    "status": {
                        "type": "string",
                        "description": "(String) Status of the credential\n"
                    },
                    "validity": {
                        "type": "number",
                        "description": "Validity in days (default 365, max 365)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Okms/okms:Okms": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst newKms = new ovh.okms.Okms(\"newKms\", {\n    displayName: \"terraformed KMS\",\n    ovhSubsidiary: \"FR\",\n    region: \"eu-west-rbx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnew_kms = ovh.okms.Okms(\"newKms\",\n    display_name=\"terraformed KMS\",\n    ovh_subsidiary=\"FR\",\n    region=\"eu-west-rbx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var newKms = new Ovh.Okms.Okms(\"newKms\", new()\n    {\n        DisplayName = \"terraformed KMS\",\n        OvhSubsidiary = \"FR\",\n        Region = \"eu-west-rbx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/okms\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okms.NewOkms(ctx, \"newKms\", \u0026okms.OkmsArgs{\n\t\t\tDisplayName:   pulumi.String(\"terraformed KMS\"),\n\t\t\tOvhSubsidiary: pulumi.String(\"FR\"),\n\t\t\tRegion:        pulumi.String(\"eu-west-rbx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Okms.Okms;\nimport com.pulumi.ovh.Okms.OkmsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var newKms = new Okms(\"newKms\", OkmsArgs.builder()\n            .displayName(\"terraformed KMS\")\n            .ovhSubsidiary(\"FR\")\n            .region(\"eu-west-rbx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  newKms:\n    type: ovh:Okms:Okms\n    properties:\n      displayName: terraformed KMS\n      ovhSubsidiary: FR\n      region: eu-west-rbx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "(String) Resource display name\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Okms/OkmsIam:OkmsIam",
                    "description": "(Attributes) IAM resource metadata (see below for nested schema)\n"
                },
                "kmipEndpoint": {
                    "type": "string",
                    "description": "(String) KMS kmip API endpoint\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "publicCa": {
                    "type": "string",
                    "description": "(String) KMS public CA (Certificate Authority)\n"
                },
                "region": {
                    "type": "string",
                    "description": "KMS region\n"
                },
                "restEndpoint": {
                    "type": "string",
                    "description": "(String) KMS rest API endpoint\n"
                },
                "swaggerEndpoint": {
                    "type": "string",
                    "description": "(String) KMS rest API swagger UI\n"
                }
            },
            "required": [
                "displayName",
                "iam",
                "kmipEndpoint",
                "ovhSubsidiary",
                "publicCa",
                "region",
                "restEndpoint",
                "swaggerEndpoint"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "(String) Resource display name\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "region": {
                    "type": "string",
                    "description": "KMS region\n"
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Okms resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "(String) Resource display name\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/OkmsIam:OkmsIam",
                        "description": "(Attributes) IAM resource metadata (see below for nested schema)\n"
                    },
                    "kmipEndpoint": {
                        "type": "string",
                        "description": "(String) KMS kmip API endpoint\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVH subsidiaries\n"
                    },
                    "publicCa": {
                        "type": "string",
                        "description": "(String) KMS public CA (Certificate Authority)\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "KMS region\n"
                    },
                    "restEndpoint": {
                        "type": "string",
                        "description": "(String) KMS rest API endpoint\n"
                    },
                    "swaggerEndpoint": {
                        "type": "string",
                        "description": "(String) KMS rest API swagger UI\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Okms/serviceKey:ServiceKey": {
            "description": "Creates a Service Key in an OVHcloud KMS.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst keySymetric = new ovh.okms.ServiceKey(\"keySymetric\", {\n    okmsId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    operations: [\n        \"encrypt\",\n        \"decrypt\",\n    ],\n    size: 256,\n    type: \"oct\",\n});\nconst keyRsa = new ovh.okms.ServiceKey(\"keyRsa\", {\n    okmsId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    operations: [\n        \"sign\",\n        \"verify\",\n    ],\n    size: 2048,\n    type: \"RSA\",\n});\nconst keyEcdsa = new ovh.okms.ServiceKey(\"keyEcdsa\", {\n    curve: \"P-256\",\n    okmsId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    operations: [\n        \"sign\",\n        \"verify\",\n    ],\n    type: \"EC\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nkey_symetric = ovh.okms.ServiceKey(\"keySymetric\",\n    okms_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    operations=[\n        \"encrypt\",\n        \"decrypt\",\n    ],\n    size=256,\n    type=\"oct\")\nkey_rsa = ovh.okms.ServiceKey(\"keyRsa\",\n    okms_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    operations=[\n        \"sign\",\n        \"verify\",\n    ],\n    size=2048,\n    type=\"RSA\")\nkey_ecdsa = ovh.okms.ServiceKey(\"keyEcdsa\",\n    curve=\"P-256\",\n    okms_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    operations=[\n        \"sign\",\n        \"verify\",\n    ],\n    type=\"EC\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var keySymetric = new Ovh.Okms.ServiceKey(\"keySymetric\", new()\n    {\n        OkmsId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        Operations = new[]\n        {\n            \"encrypt\",\n            \"decrypt\",\n        },\n        Size = 256,\n        Type = \"oct\",\n    });\n\n    var keyRsa = new Ovh.Okms.ServiceKey(\"keyRsa\", new()\n    {\n        OkmsId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        Operations = new[]\n        {\n            \"sign\",\n            \"verify\",\n        },\n        Size = 2048,\n        Type = \"RSA\",\n    });\n\n    var keyEcdsa = new Ovh.Okms.ServiceKey(\"keyEcdsa\", new()\n    {\n        Curve = \"P-256\",\n        OkmsId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        Operations = new[]\n        {\n            \"sign\",\n            \"verify\",\n        },\n        Type = \"EC\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/okms\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okms.NewServiceKey(ctx, \"keySymetric\", \u0026okms.ServiceKeyArgs{\n\t\t\tOkmsId: pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tOperations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"encrypt\"),\n\t\t\t\tpulumi.String(\"decrypt\"),\n\t\t\t},\n\t\t\tSize: pulumi.Float64(256),\n\t\t\tType: pulumi.String(\"oct\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okms.NewServiceKey(ctx, \"keyRsa\", \u0026okms.ServiceKeyArgs{\n\t\t\tOkmsId: pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tOperations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sign\"),\n\t\t\t\tpulumi.String(\"verify\"),\n\t\t\t},\n\t\t\tSize: pulumi.Float64(2048),\n\t\t\tType: pulumi.String(\"RSA\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = okms.NewServiceKey(ctx, \"keyEcdsa\", \u0026okms.ServiceKeyArgs{\n\t\t\tCurve:  pulumi.String(\"P-256\"),\n\t\t\tOkmsId: pulumi.String(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tOperations: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"sign\"),\n\t\t\t\tpulumi.String(\"verify\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"EC\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Okms.ServiceKey;\nimport com.pulumi.ovh.Okms.ServiceKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var keySymetric = new ServiceKey(\"keySymetric\", ServiceKeyArgs.builder()\n            .okmsId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .operations(            \n                \"encrypt\",\n                \"decrypt\")\n            .size(256)\n            .type(\"oct\")\n            .build());\n\n        var keyRsa = new ServiceKey(\"keyRsa\", ServiceKeyArgs.builder()\n            .okmsId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .operations(            \n                \"sign\",\n                \"verify\")\n            .size(2048)\n            .type(\"RSA\")\n            .build());\n\n        var keyEcdsa = new ServiceKey(\"keyEcdsa\", ServiceKeyArgs.builder()\n            .curve(\"P-256\")\n            .okmsId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .operations(            \n                \"sign\",\n                \"verify\")\n            .type(\"EC\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  keySymetric:\n    type: ovh:Okms:ServiceKey\n    properties:\n      okmsId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      operations:\n        - encrypt\n        - decrypt\n      size: 256\n      type: oct\n  keyRsa:\n    type: ovh:Okms:ServiceKey\n    properties:\n      okmsId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      operations:\n        - sign\n        - verify\n      size: 2048\n      type: RSA\n  keyEcdsa:\n    type: ovh:Okms:ServiceKey\n    properties:\n      curve: P-256\n      okmsId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n      operations:\n        - sign\n        - verify\n      type: EC\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "context": {
                    "type": "string",
                    "description": "Context of the key\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation time of the key\n"
                },
                "curve": {
                    "type": "string",
                    "description": "Curve type for Elliptic Curve (EC) keys\n"
                },
                "deactivationReason": {
                    "type": "string",
                    "description": "Key deactivation reason\n"
                },
                "name": {
                    "type": "string",
                    "description": "Key name\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operations for which the key is intended to be used\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size of the key to be created\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the key\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the key to be created\n"
                }
            },
            "required": [
                "context",
                "createdAt",
                "curve",
                "deactivationReason",
                "name",
                "okmsId",
                "operations",
                "size",
                "state",
                "type"
            ],
            "inputProperties": {
                "context": {
                    "type": "string",
                    "description": "Context of the key\n"
                },
                "curve": {
                    "type": "string",
                    "description": "Curve type for Elliptic Curve (EC) keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "Key name\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operations for which the key is intended to be used\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size of the key to be created\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the key to be created\n"
                }
            },
            "requiredInputs": [
                "okmsId",
                "operations",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceKey resources.\n",
                "properties": {
                    "context": {
                        "type": "string",
                        "description": "Context of the key\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation time of the key\n"
                    },
                    "curve": {
                        "type": "string",
                        "description": "Curve type for Elliptic Curve (EC) keys\n"
                    },
                    "deactivationReason": {
                        "type": "string",
                        "description": "Key deactivation reason\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Key name\n"
                    },
                    "okmsId": {
                        "type": "string",
                        "description": "Okms ID\n"
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The operations for which the key is intended to be used\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Size of the key to be created\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the key\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the key to be created\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Okms/serviceKeyJWK:ServiceKeyJWK": {
            "description": "Import an existing key in the JWK format in an OVHcloud KMS.\n\n",
            "properties": {
                "context": {
                    "type": "string",
                    "description": "Context of the key\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation time of the key\n"
                },
                "deactivationReason": {
                    "type": "string",
                    "description": "Key deactivation reason\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Okms/ServiceKeyJWKIam:ServiceKeyJWKIam",
                    "description": "IAM resource metadata\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Okms/ServiceKeyJWKKey:ServiceKeyJWKKey"
                    },
                    "description": "Set of JSON Web Keys to import\n"
                },
                "name": {
                    "type": "string",
                    "description": "Key name\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size of the key to be created\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the key\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the key to be created\n"
                }
            },
            "required": [
                "createdAt",
                "deactivationReason",
                "iam",
                "keys",
                "name",
                "okmsId",
                "size",
                "state",
                "type"
            ],
            "inputProperties": {
                "context": {
                    "type": "string",
                    "description": "Context of the key\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Okms/ServiceKeyJWKKey:ServiceKeyJWKKey"
                    },
                    "description": "Set of JSON Web Keys to import\n"
                },
                "name": {
                    "type": "string",
                    "description": "Key name\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                }
            },
            "requiredInputs": [
                "keys",
                "okmsId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceKeyJWK resources.\n",
                "properties": {
                    "context": {
                        "type": "string",
                        "description": "Context of the key\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation time of the key\n"
                    },
                    "deactivationReason": {
                        "type": "string",
                        "description": "Key deactivation reason\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/ServiceKeyJWKIam:ServiceKeyJWKIam",
                        "description": "IAM resource metadata\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Okms/ServiceKeyJWKKey:ServiceKeyJWKKey"
                        },
                        "description": "Set of JSON Web Keys to import\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Key name\n"
                    },
                    "okmsId": {
                        "type": "string",
                        "description": "Okms ID\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Size of the key to be created\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the key\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the key to be created\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:SavingsPlan/savingsPlan:SavingsPlan": {
            "description": "Create and manage an OVHcloud Savings Plan\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst plan = new ovh.savingsplan.SavingsPlan(\"plan\", {\n    autoRenewal: true,\n    displayName: \"one_month_rancher_savings_plan\",\n    flavor: \"Rancher\",\n    period: \"P1M\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n    size: 2,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nplan = ovh.savings_plan.SavingsPlan(\"plan\",\n    auto_renewal=True,\n    display_name=\"one_month_rancher_savings_plan\",\n    flavor=\"Rancher\",\n    period=\"P1M\",\n    service_name=\"\u003cpublic cloud project ID\u003e\",\n    size=2)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var plan = new Ovh.SavingsPlan.SavingsPlan(\"plan\", new()\n    {\n        AutoRenewal = true,\n        DisplayName = \"one_month_rancher_savings_plan\",\n        Flavor = \"Rancher\",\n        Period = \"P1M\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n        Size = 2,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/savingsplan\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := savingsplan.NewSavingsPlan(ctx, \"plan\", \u0026savingsplan.SavingsPlanArgs{\n\t\t\tAutoRenewal: pulumi.Bool(true),\n\t\t\tDisplayName: pulumi.String(\"one_month_rancher_savings_plan\"),\n\t\t\tFlavor:      pulumi.String(\"Rancher\"),\n\t\t\tPeriod:      pulumi.String(\"P1M\"),\n\t\t\tServiceName: pulumi.String(\"\u003cpublic cloud project ID\u003e\"),\n\t\t\tSize:        pulumi.Int(2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.SavingsPlan.SavingsPlan;\nimport com.pulumi.ovh.SavingsPlan.SavingsPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var plan = new SavingsPlan(\"plan\", SavingsPlanArgs.builder()\n            .autoRenewal(true)\n            .displayName(\"one_month_rancher_savings_plan\")\n            .flavor(\"Rancher\")\n            .period(\"P1M\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .size(2)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  plan:\n    type: ovh:SavingsPlan:SavingsPlan\n    properties:\n      autoRenewal: true\n      displayName: one_month_rancher_savings_plan\n      flavor: Rancher\n      period: P1M\n      serviceName: \u003cpublic cloud project ID\u003e\n      size: 2\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nA savings plan can be imported using the following format: `service_name` and `id` of the savings plan, separated by \"/\" e.g.\n\nbash\n\n```sh\n$ pulumi import ovh:SavingsPlan/savingsPlan:SavingsPlan plan service_name/savings_plan_id\n```\n\n",
            "properties": {
                "autoRenewal": {
                    "type": "boolean",
                    "description": "Whether Savings Plan should be renewed at the end of the period (defaults to false)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Custom display name, used in invoices\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "End date of the Savings Plan\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Savings Plan flavor. The list of available flavors can be retrieved in the next section.\n"
                },
                "period": {
                    "type": "string",
                    "description": "Periodicity of the Savings Plan\n"
                },
                "periodEndAction": {
                    "type": "string",
                    "description": "Action performed when reaching the end of the period (controles by the `auto_renewal` parameter)\n"
                },
                "periodEndDate": {
                    "type": "string",
                    "description": "End date of the current period\n"
                },
                "periodStartDate": {
                    "type": "string",
                    "description": "Start date of the current period\n"
                },
                "serviceId": {
                    "type": "integer",
                    "description": "Billing ID of the service\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "ID of the public cloud project\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the Savings Plan\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Start date of the Savings Plan\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Savings Plan\n"
                }
            },
            "required": [
                "autoRenewal",
                "displayName",
                "endDate",
                "flavor",
                "period",
                "periodEndAction",
                "periodEndDate",
                "periodStartDate",
                "serviceId",
                "serviceName",
                "size",
                "startDate",
                "status"
            ],
            "inputProperties": {
                "autoRenewal": {
                    "type": "boolean",
                    "description": "Whether Savings Plan should be renewed at the end of the period (defaults to false)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Custom display name, used in invoices\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Savings Plan flavor. The list of available flavors can be retrieved in the next section.\n",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "string",
                    "description": "Periodicity of the Savings Plan\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "ID of the public cloud project\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the Savings Plan\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "flavor",
                "period",
                "serviceName",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SavingsPlan resources.\n",
                "properties": {
                    "autoRenewal": {
                        "type": "boolean",
                        "description": "Whether Savings Plan should be renewed at the end of the period (defaults to false)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Custom display name, used in invoices\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the Savings Plan\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "Savings Plan flavor. The list of available flavors can be retrieved in the next section.\n",
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "string",
                        "description": "Periodicity of the Savings Plan\n",
                        "willReplaceOnChanges": true
                    },
                    "periodEndAction": {
                        "type": "string",
                        "description": "Action performed when reaching the end of the period (controles by the `auto_renewal` parameter)\n"
                    },
                    "periodEndDate": {
                        "type": "string",
                        "description": "End date of the current period\n"
                    },
                    "periodStartDate": {
                        "type": "string",
                        "description": "Start date of the current period\n"
                    },
                    "serviceId": {
                        "type": "integer",
                        "description": "Billing ID of the service\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the public cloud project\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the Savings Plan\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the Savings Plan\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Savings Plan\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vps/vps:Vps": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Vps.Vps;\nimport com.pulumi.ovh.Vps.VpsArgs;\nimport com.pulumi.ovh.Vps.inputs.VpsPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = MeFunctions.getMe();\n\n        final var mycart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myAccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var vps = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(mycart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"vps\")\n            .planCode(\"vps-le-2-2-40\")\n            .build());\n\n        var myVps = new Vps(\"myVps\", VpsArgs.builder()\n            .displayName(\"dev_vps\")\n            .ovhSubsidiary(mycart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .plans(VpsPlanArgs.builder()\n                .duration(\"P1M\")\n                .plan_code(vps.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricing_mode(\"default\")\n                .configuration(                \n                    %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference),\n                    %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .build())\n            .build());\n\n        ctx.export(\"vpsDisplayName\", myVps.displayName());\n    }\n}\n```\n```yaml\nresources:\n  myVps:\n    type: ovh:Vps:Vps\n    properties:\n      displayName: dev_vps\n      ovhSubsidiary: ${mycart.ovhSubsidiary}\n      plans:\n        - duration: P1M\n          plan_code: ${vps.planCode}\n          pricing_mode: default\n          configuration:\n            - label: vps_datacenter\n              value: WAW\n            - label: vps_os\n              value: Debian 10\nvariables:\n  myAccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  mycart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myAccount.ovhSubsidiary}\n  vps:\n    fn::invoke:\n      function: ovh:Order:getCartProductPlan\n      arguments:\n        cartId: ${mycart.id}\n        priceCapacity: renew\n        product: vps\n        planCode: vps-le-2-2-40\noutputs:\n  vpsDisplayName: ${myVps.displayName}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nOVHcloud VPS database can be imported using the `service_name`, E.g.,\n\nterraform\n\nimport {\n\n  to = ovh_vps.myvps\n\n  id = \"\u003cyour existing VPS service_name\u003e\"\n\n}\n\nYou can then run:\n\npulumi preview -generate-config-out=./vps.tf\n\nThe file `vps.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "cluster": {
                    "type": "string",
                    "description": "VPS cluster\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Custom display name\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Vps/VpsIam:VpsIam",
                    "description": "IAM resource information\n"
                },
                "keymap": {
                    "type": "string",
                    "description": "KVM keyboard layout on VPS Cloud\n"
                },
                "memoryLimit": {
                    "type": "number",
                    "description": "RAM of this VPS\n"
                },
                "model": {
                    "$ref": "#/types/ovh:Vps/VpsModel:VpsModel",
                    "description": "Structure describing characteristics of a VPS model\n"
                },
                "monitoringIpBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP blocks for OVH monitoring servers\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the VPS\n"
                },
                "netbootMode": {
                    "type": "string",
                    "description": "VPS netboot mode (local┃rescue)\n"
                },
                "offerType": {
                    "type": "string",
                    "description": "All offers a VPS can have (beta-classic┃classic┃cloud┃cloudram┃game-classic┃lowlat┃ssd)\n"
                },
                "order": {
                    "$ref": "#/types/ovh:Vps/VpsOrder:VpsOrder",
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json](https://eu.api.ovh.com/console-preview/?section=%2Fme\u0026branch=v1#get-/me)\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlanOption:VpsPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlan:VpsPlan"
                    },
                    "description": "Product Plan to order\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your VPS offer\n"
                },
                "slaMonitoring": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string",
                    "description": "State of the VPS (backuping┃installing┃maintenance┃rebooting┃rescued┃running┃stopped┃stopping┃upgrading)\n"
                },
                "vcore": {
                    "type": "number",
                    "description": "Number of vcores\n"
                },
                "zone": {
                    "type": "string",
                    "description": "OpenStask region where the VPS is located\n"
                }
            },
            "required": [
                "cluster",
                "displayName",
                "iam",
                "keymap",
                "memoryLimit",
                "model",
                "monitoringIpBlocks",
                "name",
                "netbootMode",
                "offerType",
                "order",
                "plans",
                "planOptions",
                "serviceName",
                "slaMonitoring",
                "state",
                "vcore",
                "zone"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Custom display name\n"
                },
                "keymap": {
                    "type": "string",
                    "description": "KVM keyboard layout on VPS Cloud\n"
                },
                "memoryLimit": {
                    "type": "number",
                    "description": "RAM of this VPS\n"
                },
                "model": {
                    "$ref": "#/types/ovh:Vps/VpsModel:VpsModel",
                    "description": "Structure describing characteristics of a VPS model\n"
                },
                "monitoringIpBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP blocks for OVH monitoring servers\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the VPS\n"
                },
                "netbootMode": {
                    "type": "string",
                    "description": "VPS netboot mode (local┃rescue)\n"
                },
                "offerType": {
                    "type": "string",
                    "description": "All offers a VPS can have (beta-classic┃classic┃cloud┃cloudram┃game-classic┃lowlat┃ssd)\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json](https://eu.api.ovh.com/console-preview/?section=%2Fme\u0026branch=v1#get-/me)\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlanOption:VpsPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlan:VpsPlan"
                    },
                    "description": "Product Plan to order\n"
                },
                "slaMonitoring": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string",
                    "description": "State of the VPS (backuping┃installing┃maintenance┃rebooting┃rescued┃running┃stopped┃stopping┃upgrading)\n"
                },
                "vcore": {
                    "type": "number",
                    "description": "Number of vcores\n"
                },
                "zone": {
                    "type": "string",
                    "description": "OpenStask region where the VPS is located\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vps resources.\n",
                "properties": {
                    "cluster": {
                        "type": "string",
                        "description": "VPS cluster\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Custom display name\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Vps/VpsIam:VpsIam",
                        "description": "IAM resource information\n"
                    },
                    "keymap": {
                        "type": "string",
                        "description": "KVM keyboard layout on VPS Cloud\n"
                    },
                    "memoryLimit": {
                        "type": "number",
                        "description": "RAM of this VPS\n"
                    },
                    "model": {
                        "$ref": "#/types/ovh:Vps/VpsModel:VpsModel",
                        "description": "Structure describing characteristics of a VPS model\n"
                    },
                    "monitoringIpBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IP blocks for OVH monitoring servers\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the VPS\n"
                    },
                    "netbootMode": {
                        "type": "string",
                        "description": "VPS netboot mode (local┃rescue)\n"
                    },
                    "offerType": {
                        "type": "string",
                        "description": "All offers a VPS can have (beta-classic┃classic┃cloud┃cloudram┃game-classic┃lowlat┃ssd)\n"
                    },
                    "order": {
                        "$ref": "#/types/ovh:Vps/VpsOrder:VpsOrder",
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json](https://eu.api.ovh.com/console-preview/?section=%2Fme\u0026branch=v1#get-/me)\n"
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vps/VpsPlanOption:VpsPlanOption"
                        },
                        "description": "Product Plan to order\n"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vps/VpsPlan:VpsPlan"
                        },
                        "description": "Product Plan to order\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your VPS offer\n"
                    },
                    "slaMonitoring": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the VPS (backuping┃installing┃maintenance┃rebooting┃rescued┃running┃stopped┃stopping┃upgrading)\n"
                    },
                    "vcore": {
                        "type": "number",
                        "description": "Number of vcores\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "OpenStask region where the VPS is located\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/cloudProject:CloudProject": {
            "description": "Attach a Public Cloud Project to a VRack.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst vcp = new ovh.vrack.CloudProject(\"vcp\", {\n    projectId: \"67890\",\n    serviceName: \"12345\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvcp = ovh.vrack.CloudProject(\"vcp\",\n    project_id=\"67890\",\n    service_name=\"12345\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vcp = new Ovh.Vrack.CloudProject(\"vcp\", new()\n    {\n        ProjectId = \"67890\",\n        ServiceName = \"12345\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vrack.NewCloudProject(ctx, \"vcp\", \u0026vrack.CloudProjectArgs{\n\t\t\tProjectId:   pulumi.String(\"67890\"),\n\t\t\tServiceName: pulumi.String(\"12345\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.CloudProject;\nimport com.pulumi.ovh.Vrack.CloudProjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vcp = new CloudProject(\"vcp\", CloudProjectArgs.builder()\n            .projectId(\"67890\")\n            .serviceName(\"12345\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vcp:\n    type: ovh:Vrack:CloudProject\n    properties:\n      projectId: '67890'\n      serviceName: '12345'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAttachment of a public cloud project and a VRack can be imported using the `service_name` (vRack identifier) and the `project_id` (Cloud Project identifier), separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Vrack/cloudProject:CloudProject myattach service_name/project_id\n```\n\n",
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name of the vrack. If omitted, the `OVH_VRACK_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "projectId",
                "serviceName"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name of the vrack. If omitted, the `OVH_VRACK_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "projectId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProject resources.\n",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name of the vrack. If omitted, the `OVH_VRACK_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/dedicatedServer:DedicatedServer": {
            "description": "Attach a legacy dedicated server to a vRack.\n\n\u003e **NOTE:** The resource `ovh.Vrack.DedicatedServer` is intended to be used for legacy dedicated servers.\u003cbr /\u003e Dedicated servers that have configurable network interfaces MUST use the resource `ovh.Vrack.DedicatedServerInterface` instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst vds = new ovh.vrack.DedicatedServer(\"vds\", {\n    serverId: \"67890\",\n    serviceName: \"XXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvds = ovh.vrack.DedicatedServer(\"vds\",\n    server_id=\"67890\",\n    service_name=\"XXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vds = new Ovh.Vrack.DedicatedServer(\"vds\", new()\n    {\n        ServerId = \"67890\",\n        ServiceName = \"XXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vrack.NewDedicatedServer(ctx, \"vds\", \u0026vrack.DedicatedServerArgs{\n\t\t\tServerId:    pulumi.String(\"67890\"),\n\t\t\tServiceName: pulumi.String(\"XXXX\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.DedicatedServer;\nimport com.pulumi.ovh.Vrack.DedicatedServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vds = new DedicatedServer(\"vds\", DedicatedServerArgs.builder()\n            .serverId(\"67890\")\n            .serviceName(\"XXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vds:\n    type: ovh:Vrack:DedicatedServer\n    properties:\n      serverId: '67890'\n      serviceName: XXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "serverId": {
                    "type": "string",
                    "description": "The id of the dedicated server.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name of the vrack. If omitted, the `OVH_VRACK_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "serverId",
                "serviceName"
            ],
            "inputProperties": {
                "serverId": {
                    "type": "string",
                    "description": "The id of the dedicated server.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name of the vrack. If omitted, the `OVH_VRACK_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serverId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServer resources.\n",
                "properties": {
                    "serverId": {
                        "type": "string",
                        "description": "The id of the dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name of the vrack. If omitted, the `OVH_VRACK_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/dedicatedServerInterface:DedicatedServerInterface": {
            "description": "Attach a Dedicated Server Network Interface to a vRack.\n\n\u003e **NOTE:** The resource `ovh.Vrack.DedicatedServerInterface` is intended to be used for dedicated servers that have configurable network interfaces.\u003cbr /\u003e Legacy Dedicated servers that do not have configurable network interfaces MUST use the resource `ovh.Vrack.DedicatedServer` instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = ovh.getServer({\n    serviceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n});\nconst vdsi = new ovh.vrack.DedicatedServerInterface(\"vdsi\", {\n    serviceName: \"pn-xxxxxxx\",\n    interfaceId: server.then(server =\u003e server.enabledVrackVnis?.[0]),\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nserver = ovh.get_server(service_name=\"nsxxxxxxx.ip-xx-xx-xx.eu\")\nvdsi = ovh.vrack.DedicatedServerInterface(\"vdsi\",\n    service_name=\"pn-xxxxxxx\",\n    interface_id=server.enabled_vrack_vnis[0])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var server = Ovh.GetServer.Invoke(new()\n    {\n        ServiceName = \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n    });\n\n    var vdsi = new Ovh.Vrack.DedicatedServerInterface(\"vdsi\", new()\n    {\n        ServiceName = \"pn-xxxxxxx\",\n        InterfaceId = server.Apply(getServerResult =\u003e getServerResult.EnabledVrackVnis[0]),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tserver, err := ovh.GetServer(ctx, \u0026ovh.GetServerArgs{\n\t\t\tServiceName: \"nsxxxxxxx.ip-xx-xx-xx.eu\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = vrack.NewDedicatedServerInterface(ctx, \"vdsi\", \u0026vrack.DedicatedServerInterfaceArgs{\n\t\t\tServiceName: pulumi.String(\"pn-xxxxxxx\"),\n\t\t\tInterfaceId: pulumi.String(server.EnabledVrackVnis[0]),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetServerArgs;\nimport com.pulumi.ovh.Vrack.DedicatedServerInterface;\nimport com.pulumi.ovh.Vrack.DedicatedServerInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var server = OvhFunctions.getServer(GetServerArgs.builder()\n            .serviceName(\"nsxxxxxxx.ip-xx-xx-xx.eu\")\n            .build());\n\n        var vdsi = new DedicatedServerInterface(\"vdsi\", DedicatedServerInterfaceArgs.builder()\n            .serviceName(\"pn-xxxxxxx\")\n            .interfaceId(server.applyValue(getServerResult -\u003e getServerResult.enabledVrackVnis()[0]))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vdsi:\n    type: ovh:Vrack:DedicatedServerInterface\n    properties:\n      serviceName: pn-xxxxxxx\n      #name of the vrack\n      interfaceId: ${server.enabledVrackVnis[0]}\nvariables:\n  server:\n    fn::invoke:\n      function: ovh:getServer\n      arguments:\n        serviceName: nsxxxxxxx.ip-xx-xx-xx.eu\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "interfaceId": {
                    "type": "string",
                    "description": "The id of dedicated server network interface.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted, the `OVH_VRACK_SERVICE` environment variable is used.\n"
                }
            },
            "required": [
                "interfaceId",
                "serviceName"
            ],
            "inputProperties": {
                "interfaceId": {
                    "type": "string",
                    "description": "The id of dedicated server network interface.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack. If omitted, the `OVH_VRACK_SERVICE` environment variable is used.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "interfaceId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServerInterface resources.\n",
                "properties": {
                    "interfaceId": {
                        "type": "string",
                        "description": "The id of dedicated server network interface.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the vrack. If omitted, the `OVH_VRACK_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/ipAddress:IpAddress": {
            "description": "Attach an IP block to a VRack.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myAccount = ovh.Me.getMe({});\nconst myCart = myAccount.then(myAccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myAccount.ovhSubsidiary,\n}));\nconst vrackCartProductPlan = myCart.then(myCart =\u003e ovh.Order.getCartProductPlan({\n    cartId: myCart.id,\n    priceCapacity: \"renew\",\n    product: \"vrack\",\n    planCode: \"vrack\",\n}));\nconst vrackVrack = new ovh.vrack.Vrack(\"vrackVrack\", {\n    description: myCart.then(myCart =\u003e myCart.description),\n    ovhSubsidiary: myCart.then(myCart =\u003e myCart.ovhSubsidiary),\n    plan: {\n        duration: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.selectedPrices?.[0]?.duration),\n        planCode: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.planCode),\n        pricingMode: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.selectedPrices?.[0]?.pricingMode),\n    },\n});\nconst ipblockCartProductPlan = myCart.then(myCart =\u003e ovh.Order.getCartProductPlan({\n    cartId: myCart.id,\n    priceCapacity: \"renew\",\n    product: \"ip\",\n    planCode: \"ip-v4-s30-ripe\",\n}));\nconst ipblockIpService = new ovh.ip.IpService(\"ipblockIpService\", {\n    ovhSubsidiary: myCart.then(myCart =\u003e myCart.ovhSubsidiary),\n    description: myCart.then(myCart =\u003e myCart.description),\n    plan: {\n        duration: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.selectedPrices?.[0]?.duration),\n        planCode: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.planCode),\n        pricingMode: ipblockCartProductPlan.then(ipblockCartProductPlan =\u003e ipblockCartProductPlan.selectedPrices?.[0]?.pricingMode),\n        configurations: [{\n            label: \"country\",\n            value: \"FR\",\n        }],\n    },\n});\nconst vrackBlock = new ovh.vrack.IpAddress(\"vrackBlock\", {\n    serviceName: vrackVrack.serviceName,\n    block: ipblockIpService.ip,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_account = ovh.Me.get_me()\nmy_cart = ovh.Order.get_cart(ovh_subsidiary=my_account.ovh_subsidiary)\nvrack_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=my_cart.id,\n    price_capacity=\"renew\",\n    product=\"vrack\",\n    plan_code=\"vrack\")\nvrack_vrack = ovh.vrack.Vrack(\"vrackVrack\",\n    description=my_cart.description,\n    ovh_subsidiary=my_cart.ovh_subsidiary,\n    plan={\n        \"duration\": vrack_cart_product_plan.selected_prices[0].duration,\n        \"plan_code\": vrack_cart_product_plan.plan_code,\n        \"pricing_mode\": vrack_cart_product_plan.selected_prices[0].pricing_mode,\n    })\nipblock_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=my_cart.id,\n    price_capacity=\"renew\",\n    product=\"ip\",\n    plan_code=\"ip-v4-s30-ripe\")\nipblock_ip_service = ovh.ip.IpService(\"ipblockIpService\",\n    ovh_subsidiary=my_cart.ovh_subsidiary,\n    description=my_cart.description,\n    plan={\n        \"duration\": ipblock_cart_product_plan.selected_prices[0].duration,\n        \"plan_code\": ipblock_cart_product_plan.plan_code,\n        \"pricing_mode\": ipblock_cart_product_plan.selected_prices[0].pricing_mode,\n        \"configurations\": [{\n            \"label\": \"country\",\n            \"value\": \"FR\",\n        }],\n    })\nvrack_block = ovh.vrack.IpAddress(\"vrackBlock\",\n    service_name=vrack_vrack.service_name,\n    block=ipblock_ip_service.ip)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAccount = Ovh.Me.GetMe.Invoke();\n\n    var myCart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myAccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n    var vrackCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = myCart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"vrack\",\n        PlanCode = \"vrack\",\n    });\n\n    var vrackVrack = new Ovh.Vrack.Vrack(\"vrackVrack\", new()\n    {\n        Description = myCart.Apply(getCartResult =\u003e getCartResult.Description),\n        OvhSubsidiary = myCart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        Plan = new Ovh.Vrack.Inputs.VrackPlanArgs\n        {\n            Duration = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n    });\n\n    var ipblockCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = myCart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"ip\",\n        PlanCode = \"ip-v4-s30-ripe\",\n    });\n\n    var ipblockIpService = new Ovh.Ip.IpService(\"ipblockIpService\", new()\n    {\n        OvhSubsidiary = myCart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        Description = myCart.Apply(getCartResult =\u003e getCartResult.Description),\n        Plan = new Ovh.Ip.Inputs.IpServicePlanArgs\n        {\n            Duration = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = ipblockCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n            Configurations = new[]\n            {\n                new Ovh.Ip.Inputs.IpServicePlanConfigurationArgs\n                {\n                    Label = \"country\",\n                    Value = \"FR\",\n                },\n            },\n        },\n    });\n\n    var vrackBlock = new Ovh.Vrack.IpAddress(\"vrackBlock\", new()\n    {\n        ServiceName = vrackVrack.ServiceName,\n        Block = ipblockIpService.Ip,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyAccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyCart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myAccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvrackCartProductPlan, err := order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        myCart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"vrack\",\n\t\t\tPlanCode:      \"vrack\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvrackVrack, err := vrack.NewVrack(ctx, \"vrackVrack\", \u0026vrack.VrackArgs{\n\t\t\tDescription:   pulumi.String(myCart.Description),\n\t\t\tOvhSubsidiary: pulumi.String(myCart.OvhSubsidiary),\n\t\t\tPlan: \u0026vrack.VrackPlanArgs{\n\t\t\t\tDuration:    pulumi.String(vrackCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(vrackCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(vrackCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipblockCartProductPlan, err := order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        myCart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"ip\",\n\t\t\tPlanCode:      \"ip-v4-s30-ripe\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tipblockIpService, err := ip.NewIpService(ctx, \"ipblockIpService\", \u0026ip.IpServiceArgs{\n\t\t\tOvhSubsidiary: pulumi.String(myCart.OvhSubsidiary),\n\t\t\tDescription:   pulumi.String(myCart.Description),\n\t\t\tPlan: \u0026ip.IpServicePlanArgs{\n\t\t\t\tDuration:    pulumi.String(ipblockCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(ipblockCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(ipblockCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t\tConfigurations: ip.IpServicePlanConfigurationArray{\n\t\t\t\t\t\u0026ip.IpServicePlanConfigurationArgs{\n\t\t\t\t\t\tLabel: pulumi.String(\"country\"),\n\t\t\t\t\t\tValue: pulumi.String(\"FR\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = vrack.NewIpAddress(ctx, \"vrackBlock\", \u0026vrack.IpAddressArgs{\n\t\t\tServiceName: vrackVrack.ServiceName,\n\t\t\tBlock:       ipblockIpService.Ip,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Vrack.Vrack;\nimport com.pulumi.ovh.Vrack.VrackArgs;\nimport com.pulumi.ovh.Vrack.inputs.VrackPlanArgs;\nimport com.pulumi.ovh.Ip.IpService;\nimport com.pulumi.ovh.Ip.IpServiceArgs;\nimport com.pulumi.ovh.Ip.inputs.IpServicePlanArgs;\nimport com.pulumi.ovh.Vrack.IpAddress;\nimport com.pulumi.ovh.Vrack.IpAddressArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = MeFunctions.getMe();\n\n        final var myCart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myAccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var vrackCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(myCart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"vrack\")\n            .planCode(\"vrack\")\n            .build());\n\n        var vrackVrack = new Vrack(\"vrackVrack\", VrackArgs.builder()\n            .description(myCart.applyValue(getCartResult -\u003e getCartResult.description()))\n            .ovhSubsidiary(myCart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .plan(VrackPlanArgs.builder()\n                .duration(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n        final var ipblockCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(myCart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"ip\")\n            .planCode(\"ip-v4-s30-ripe\")\n            .build());\n\n        var ipblockIpService = new IpService(\"ipblockIpService\", IpServiceArgs.builder()\n            .ovhSubsidiary(myCart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .description(myCart.applyValue(getCartResult -\u003e getCartResult.description()))\n            .plan(IpServicePlanArgs.builder()\n                .duration(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(ipblockCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .configurations(IpServicePlanConfigurationArgs.builder()\n                    .label(\"country\")\n                    .value(\"FR\")\n                    .build())\n                .build())\n            .build());\n\n        var vrackBlock = new IpAddress(\"vrackBlock\", IpAddressArgs.builder()\n            .serviceName(vrackVrack.serviceName())\n            .block(ipblockIpService.ip())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackVrack:\n    type: ovh:Vrack:Vrack\n    properties:\n      description: ${myCart.description}\n      ovhSubsidiary: ${myCart.ovhSubsidiary}\n      plan:\n        duration: ${vrackCartProductPlan.selectedPrices[0].duration}\n        planCode: ${vrackCartProductPlan.planCode}\n        pricingMode: ${vrackCartProductPlan.selectedPrices[0].pricingMode}\n  ipblockIpService:\n    type: ovh:Ip:IpService\n    properties:\n      ovhSubsidiary: ${myCart.ovhSubsidiary}\n      description: ${myCart.description}\n      plan:\n        duration: ${ipblockCartProductPlan.selectedPrices[0].duration}\n        planCode: ${ipblockCartProductPlan.planCode}\n        pricingMode: ${ipblockCartProductPlan.selectedPrices[0].pricingMode}\n        configurations:\n          - label: country\n            value: FR\n  vrackBlock:\n    type: ovh:Vrack:IpAddress\n    properties:\n      serviceName: ${vrackVrack.serviceName}\n      block: ${ipblockIpService.ip}\nvariables:\n  myAccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  myCart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myAccount.ovhSubsidiary}\n  vrackCartProductPlan:\n    fn::invoke:\n      function: ovh:Order:getCartProductPlan\n      arguments:\n        cartId: ${myCart.id}\n        priceCapacity: renew\n        product: vrack\n        planCode: vrack\n  ipblockCartProductPlan:\n    fn::invoke:\n      function: ovh:Order:getCartProductPlan\n      arguments:\n        cartId: ${myCart.id}\n        priceCapacity: renew\n        product: ip\n        planCode: ip-v4-s30-ripe\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "block": {
                    "type": "string",
                    "description": "Your IP block.\n"
                },
                "gateway": {
                    "type": "string",
                    "description": "Your gateway\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Your IP block\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Where you want your block announced on the network\n"
                }
            },
            "required": [
                "block",
                "gateway",
                "ip",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "Your IP block.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "block",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpAddress resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "Your IP block.\n",
                        "willReplaceOnChanges": true
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Your gateway\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Your IP block\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n",
                        "willReplaceOnChanges": true
                    },
                    "zone": {
                        "type": "string",
                        "description": "Where you want your block announced on the network\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/ipLoadbalancing:IpLoadbalancing": {
            "description": "Attach an IP Load Balancing to a VRack.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst viplb = new ovh.vrack.IpLoadbalancing(\"viplb\", {\n    LoadbalancingId: \"yyy\",\n    serviceName: \"xxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nviplb = ovh.vrack.IpLoadbalancing(\"viplb\",\n    loadbalancing_id=\"yyy\",\n    service_name=\"xxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var viplb = new Ovh.Vrack.IpLoadbalancing(\"viplb\", new()\n    {\n        LoadbalancingId = \"yyy\",\n        ServiceName = \"xxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vrack.NewIpLoadbalancing(ctx, \"viplb\", \u0026vrack.IpLoadbalancingArgs{\n\t\t\tLoadbalancingId: pulumi.String(\"yyy\"),\n\t\t\tServiceName:     pulumi.String(\"xxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.IpLoadbalancing;\nimport com.pulumi.ovh.Vrack.IpLoadbalancingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var viplb = new IpLoadbalancing(\"viplb\", IpLoadbalancingArgs.builder()\n            .LoadbalancingId(\"yyy\")\n            .serviceName(\"xxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  viplb:\n    type: ovh:Vrack:IpLoadbalancing\n    properties:\n      LoadbalancingId: yyy\n      serviceName: xxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "properties": {
                "LoadbalancingId": {
                    "type": "string",
                    "description": "The id of the IP Load Balancing.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack.\n"
                }
            },
            "required": [
                "LoadbalancingId",
                "serviceName"
            ],
            "inputProperties": {
                "LoadbalancingId": {
                    "type": "string",
                    "description": "The id of the IP Load Balancing.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The id of the vrack.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "LoadbalancingId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadbalancing resources.\n",
                "properties": {
                    "LoadbalancingId": {
                        "type": "string",
                        "description": "The id of the IP Load Balancing.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the vrack.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/ipV6:IpV6": {
            "description": "Attach an IPv6 block to a VRack.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst vrackBlock = new ovh.vrack.IpV6(\"vrackBlock\", {\n    block: \"\u003cipv6 block\u003e\",\n    serviceName: \"\u003cvRack service name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvrack_block = ovh.vrack.IpV6(\"vrackBlock\",\n    block=\"\u003cipv6 block\u003e\",\n    service_name=\"\u003cvRack service name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vrackBlock = new Ovh.Vrack.IpV6(\"vrackBlock\", new()\n    {\n        Block = \"\u003cipv6 block\u003e\",\n        ServiceName = \"\u003cvRack service name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vrack.NewIpV6(ctx, \"vrackBlock\", \u0026vrack.IpV6Args{\n\t\t\tBlock:       pulumi.String(\"\u003cipv6 block\u003e\"),\n\t\t\tServiceName: pulumi.String(\"\u003cvRack service name\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.IpV6;\nimport com.pulumi.ovh.Vrack.IpV6Args;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vrackBlock = new IpV6(\"vrackBlock\", IpV6Args.builder()\n            .block(\"\u003cipv6 block\u003e\")\n            .serviceName(\"\u003cvRack service name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackBlock:\n    type: ovh:Vrack:IpV6\n    properties:\n      block: \u003cipv6 block\u003e\n      serviceName: \u003cvRack service name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAttachment of an IPv6 block and a VRack can be imported using the `service_name` (vRack identifier) and the `block` (IPv6 block), separated by \",\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Vrack/ipV6:IpV6 myattach \"\u003cservice_name\u003e,\u003cblock\u003e\"\n```\n\n",
            "properties": {
                "block": {
                    "type": "string",
                    "description": "Your IPv6 block.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "block",
                "serviceName"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "Your IPv6 block.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "block",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpV6 resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "Your IPv6 block.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/oVHcloudConnect:OVHcloudConnect": {
            "description": "Attach an OVH Cloud Connect to the vrack.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst vrackOvhcloudconnect = new ovh.vrack.OVHcloudConnect(\"vrackOvhcloudconnect\", {\n    ovhCloudConnect: \"\u003cOVH Cloud Connect service name\u003e\",\n    serviceName: \"\u003cvRack service name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvrack_ovhcloudconnect = ovh.vrack.OVHcloudConnect(\"vrackOvhcloudconnect\",\n    ovh_cloud_connect=\"\u003cOVH Cloud Connect service name\u003e\",\n    service_name=\"\u003cvRack service name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vrackOvhcloudconnect = new Ovh.Vrack.OVHcloudConnect(\"vrackOvhcloudconnect\", new()\n    {\n        OvhCloudConnect = \"\u003cOVH Cloud Connect service name\u003e\",\n        ServiceName = \"\u003cvRack service name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vrack.NewOVHcloudConnect(ctx, \"vrackOvhcloudconnect\", \u0026vrack.OVHcloudConnectArgs{\n\t\t\tOvhCloudConnect: pulumi.String(\"\u003cOVH Cloud Connect service name\u003e\"),\n\t\t\tServiceName:     pulumi.String(\"\u003cvRack service name\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.OVHcloudConnect;\nimport com.pulumi.ovh.Vrack.OVHcloudConnectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vrackOvhcloudconnect = new OVHcloudConnect(\"vrackOvhcloudconnect\", OVHcloudConnectArgs.builder()\n            .ovhCloudConnect(\"\u003cOVH Cloud Connect service name\u003e\")\n            .serviceName(\"\u003cvRack service name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackOvhcloudconnect:\n    type: ovh:Vrack:OVHcloudConnect\n    properties:\n      ovhCloudConnect: \u003cOVH Cloud Connect service name\u003e\n      serviceName: \u003cvRack service name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAttachment of an OVH Cloud Connect and a vRack can be imported using the `service_name` (vRack identifier) and the `ovh_cloud_connect` (OVH Cloud Connect service name), separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Vrack/oVHcloudConnect:OVHcloudConnect myattach \"\u003cservice_name\u003e/\u003cOVH Cloud Connect service name\u003e\"\n```\n\n",
            "properties": {
                "ovhCloudConnect": {
                    "type": "string",
                    "description": "Your OVH Cloud Connect service name.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "ovhCloudConnect",
                "serviceName"
            ],
            "inputProperties": {
                "ovhCloudConnect": {
                    "type": "string",
                    "description": "Your OVH Cloud Connect service name.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "requiredInputs": [
                "ovhCloudConnect",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OVHcloudConnect resources.\n",
                "properties": {
                    "ovhCloudConnect": {
                        "type": "string",
                        "description": "Your OVH Cloud Connect service name.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/vrack:Vrack": {
            "description": "## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myAccount = ovh.Me.getMe({});\nconst myCart = myAccount.then(myAccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myAccount.ovhSubsidiary,\n}));\nconst vrackCartProductPlan = myCart.then(myCart =\u003e ovh.Order.getCartProductPlan({\n    cartId: myCart.id,\n    priceCapacity: \"renew\",\n    product: \"vrack\",\n    planCode: \"vrack\",\n}));\nconst vrackVrack = new ovh.vrack.Vrack(\"vrackVrack\", {\n    ovhSubsidiary: myCart.then(myCart =\u003e myCart.ovhSubsidiary),\n    description: \"my vrack\",\n    plan: {\n        duration: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.selectedPrices?.[0]?.duration),\n        planCode: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.planCode),\n        pricingMode: vrackCartProductPlan.then(vrackCartProductPlan =\u003e vrackCartProductPlan.selectedPrices?.[0]?.pricingMode),\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_account = ovh.Me.get_me()\nmy_cart = ovh.Order.get_cart(ovh_subsidiary=my_account.ovh_subsidiary)\nvrack_cart_product_plan = ovh.Order.get_cart_product_plan(cart_id=my_cart.id,\n    price_capacity=\"renew\",\n    product=\"vrack\",\n    plan_code=\"vrack\")\nvrack_vrack = ovh.vrack.Vrack(\"vrackVrack\",\n    ovh_subsidiary=my_cart.ovh_subsidiary,\n    description=\"my vrack\",\n    plan={\n        \"duration\": vrack_cart_product_plan.selected_prices[0].duration,\n        \"plan_code\": vrack_cart_product_plan.plan_code,\n        \"pricing_mode\": vrack_cart_product_plan.selected_prices[0].pricing_mode,\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAccount = Ovh.Me.GetMe.Invoke();\n\n    var myCart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myAccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n    var vrackCartProductPlan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = myCart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"vrack\",\n        PlanCode = \"vrack\",\n    });\n\n    var vrackVrack = new Ovh.Vrack.Vrack(\"vrackVrack\", new()\n    {\n        OvhSubsidiary = myCart.Apply(getCartResult =\u003e getCartResult.OvhSubsidiary),\n        Description = \"my vrack\",\n        Plan = new Ovh.Vrack.Inputs.VrackPlanArgs\n        {\n            Duration = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.Duration),\n            PlanCode = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.PlanCode),\n            PricingMode = vrackCartProductPlan.Apply(getCartProductPlanResult =\u003e getCartProductPlanResult.SelectedPrices[0]?.PricingMode),\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyAccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyCart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myAccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tvrackCartProductPlan, err := order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        myCart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"vrack\",\n\t\t\tPlanCode:      \"vrack\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = vrack.NewVrack(ctx, \"vrackVrack\", \u0026vrack.VrackArgs{\n\t\t\tOvhSubsidiary: pulumi.String(myCart.OvhSubsidiary),\n\t\t\tDescription:   pulumi.String(\"my vrack\"),\n\t\t\tPlan: \u0026vrack.VrackPlanArgs{\n\t\t\t\tDuration:    pulumi.String(vrackCartProductPlan.SelectedPrices[0].Duration),\n\t\t\t\tPlanCode:    pulumi.String(vrackCartProductPlan.PlanCode),\n\t\t\t\tPricingMode: pulumi.String(vrackCartProductPlan.SelectedPrices[0].PricingMode),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport com.pulumi.ovh.Vrack.Vrack;\nimport com.pulumi.ovh.Vrack.VrackArgs;\nimport com.pulumi.ovh.Vrack.inputs.VrackPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = MeFunctions.getMe();\n\n        final var myCart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myAccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var vrackCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(myCart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"vrack\")\n            .planCode(\"vrack\")\n            .build());\n\n        var vrackVrack = new Vrack(\"vrackVrack\", VrackArgs.builder()\n            .ovhSubsidiary(myCart.applyValue(getCartResult -\u003e getCartResult.ovhSubsidiary()))\n            .description(\"my vrack\")\n            .plan(VrackPlanArgs.builder()\n                .duration(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].duration()))\n                .planCode(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.planCode()))\n                .pricingMode(vrackCartProductPlan.applyValue(getCartProductPlanResult -\u003e getCartProductPlanResult.selectedPrices()[0].pricingMode()))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackVrack:\n    type: ovh:Vrack:Vrack\n    properties:\n      ovhSubsidiary: ${myCart.ovhSubsidiary}\n      description: my vrack\n      plan:\n        duration: ${vrackCartProductPlan.selectedPrices[0].duration}\n        planCode: ${vrackCartProductPlan.planCode}\n        pricingMode: ${vrackCartProductPlan.selectedPrices[0].pricingMode}\nvariables:\n  myAccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  myCart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myAccount.ovhSubsidiary}\n  vrackCartProductPlan:\n    fn::invoke:\n      function: ovh:Order:getCartProductPlan\n      arguments:\n        cartId: ${myCart.id}\n        priceCapacity: renew\n        product: vrack\n        planCode: vrack\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nA vRack can be imported using the `service_name`. Using the following configuration:\n\nterraform\n\nimport {\n\n  to = ovh_vrack.vrack\n\n  id = \"\u003cservice name\u003e\"\n\n}\n\nYou can then run:\n\nbash\n\n$ pulumi preview -generate-config-out=vrack.tf\n\n$ pulumi up\n\nThe file `vrack.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.\n\n",
            "properties": {
                "VrackURN": {
                    "type": "string",
                    "description": "The URN of the vrack, used with IAM permissions\n"
                },
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n"
                },
                "name": {
                    "type": "string",
                    "description": "yourvrackname\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackOrder:VrackOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:Vrack/VrackPlan:VrackPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanOption:VrackPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "description",
                "name",
                "orders",
                "ovhSubsidiary",
                "plan",
                "serviceName",
                "VrackURN"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n"
                },
                "name": {
                    "type": "string",
                    "description": "yourvrackname\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackOrder:VrackOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Vrack/VrackPlan:VrackPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanOption:VrackPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vrack resources.\n",
                "properties": {
                    "VrackURN": {
                        "type": "string",
                        "description": "The URN of the vrack, used with IAM permissions\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "yourvrackdescription\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "yourvrackname\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vrack/VrackOrder:VrackOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Vrack/VrackPlan:VrackPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vrack/VrackPlanOption:VrackPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/vrackDedicatedCloud:VrackDedicatedCloud": {
            "description": "Attach a Dedicated Cloud to the vrack.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst vrack_dedicatedCloud = new ovh.vrack.VrackDedicatedCloud(\"vrack-dedicatedCloud\", {\n    dedicatedCloud: \"\u003cDedicated Cloud service name\u003e\",\n    serviceName: \"\u003cvRack service name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvrack_dedicated_cloud = ovh.vrack.VrackDedicatedCloud(\"vrack-dedicatedCloud\",\n    dedicated_cloud=\"\u003cDedicated Cloud service name\u003e\",\n    service_name=\"\u003cvRack service name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vrack_dedicatedCloud = new Ovh.Vrack.VrackDedicatedCloud(\"vrack-dedicatedCloud\", new()\n    {\n        DedicatedCloud = \"\u003cDedicated Cloud service name\u003e\",\n        ServiceName = \"\u003cvRack service name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vrack.NewVrackDedicatedCloud(ctx, \"vrack-dedicatedCloud\", \u0026vrack.VrackDedicatedCloudArgs{\n\t\t\tDedicatedCloud: pulumi.String(\"\u003cDedicated Cloud service name\u003e\"),\n\t\t\tServiceName:    pulumi.String(\"\u003cvRack service name\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.VrackDedicatedCloud;\nimport com.pulumi.ovh.Vrack.VrackDedicatedCloudArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vrack_dedicatedCloud = new VrackDedicatedCloud(\"vrack-dedicatedCloud\", VrackDedicatedCloudArgs.builder()\n            .dedicatedCloud(\"\u003cDedicated Cloud service name\u003e\")\n            .serviceName(\"\u003cvRack service name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrack-dedicatedCloud:\n    type: ovh:Vrack:VrackDedicatedCloud\n    properties:\n      dedicatedCloud: \u003cDedicated Cloud service name\u003e\n      serviceName: \u003cvRack service name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAttachment of a Dedicated Cloud and a vRack can be imported using the `service_name` (vRack identifier) and the `dedicated_cloud` (Dedicated Cloud service name), separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Vrack/vrackDedicatedCloud:VrackDedicatedCloud myattach \"\u003cvRack service name\u003e/\u003cDedicated Cloud service name\u003e\"\n```\n\n",
            "properties": {
                "dedicatedCloud": {
                    "type": "string",
                    "description": "Your Dedicated Cloud service name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "dedicatedCloud",
                "serviceName"
            ],
            "inputProperties": {
                "dedicatedCloud": {
                    "type": "string",
                    "description": "Your Dedicated Cloud service name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "requiredInputs": [
                "dedicatedCloud",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrackDedicatedCloud resources.\n",
                "properties": {
                    "dedicatedCloud": {
                        "type": "string",
                        "description": "Your Dedicated Cloud service name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/vrackservices:Vrackservices": {
            "description": "Attach a vrackServices to the vrack.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@ovhcloud/pulumi-ovh\";\n\nconst vrackVrackservices = new ovh.vrack.Vrackservices(\"vrackVrackservices\", {\n    serviceName: \"\u003cvRack service name\u003e\",\n    vrackServices: \"\u003cvrackServices service name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvrack_vrackservices = ovh.vrack.Vrackservices(\"vrackVrackservices\",\n    service_name=\"\u003cvRack service name\u003e\",\n    vrack_services=\"\u003cvrackServices service name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vrackVrackservices = new Ovh.Vrack.Vrackservices(\"vrackVrackservices\", new()\n    {\n        ServiceName = \"\u003cvRack service name\u003e\",\n        VrackServices = \"\u003cvrackServices service name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vrack.NewVrackservices(ctx, \"vrackVrackservices\", \u0026vrack.VrackservicesArgs{\n\t\t\tServiceName:   pulumi.String(\"\u003cvRack service name\u003e\"),\n\t\t\tVrackServices: pulumi.String(\"\u003cvrackServices service name\u003e\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.Vrackservices;\nimport com.pulumi.ovh.Vrack.VrackservicesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var vrackVrackservices = new Vrackservices(\"vrackVrackservices\", VrackservicesArgs.builder()\n            .serviceName(\"\u003cvRack service name\u003e\")\n            .vrackServices(\"\u003cvrackServices service name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  vrackVrackservices:\n    type: ovh:Vrack:Vrackservices\n    properties:\n      serviceName: \u003cvRack service name\u003e\n      vrackServices: \u003cvrackServices service name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\nAttachment of a vrackServices and a vRack can be imported using the `service_name` (vRack identifier) and the `vrack_services` (vrackServices service name), separated by \"/\" E.g.,\n\nbash\n\n```sh\n$ pulumi import ovh:Vrack/vrackservices:Vrackservices myattach \"\u003cservice_name\u003e/\u003cvrackServices service name\u003e\"\n```\n\n",
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                },
                "vrackServices": {
                    "type": "string",
                    "description": "Your vrackServices service name.\n"
                }
            },
            "required": [
                "serviceName",
                "vrackServices"
            ],
            "inputProperties": {
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n",
                    "willReplaceOnChanges": true
                },
                "vrackServices": {
                    "type": "string",
                    "description": "Your vrackServices service name.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "vrackServices"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vrackservices resources.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n",
                        "willReplaceOnChanges": true
                    },
                    "vrackServices": {
                        "type": "string",
                        "description": "Your vrackServices service name.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "ovh:Cloud/getProject:getProject": {
            "description": "Get the details of a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst project = ovh.Cloud.getProject({\n    serviceName: \"XXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nproject = ovh.Cloud.get_project(service_name=\"XXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var project = Ovh.Cloud.GetProject.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloud\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloud.GetProject(ctx, \u0026cloud.GetProjectArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Cloud.CloudFunctions;\nimport com.pulumi.ovh.Cloud.inputs.GetProjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var project = CloudFunctions.getProject(GetProjectArgs.builder()\n            .serviceName(\"XXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  project:\n    fn::invoke:\n      function: ovh:Cloud:getProject\n      arguments:\n        serviceName: XXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "access": {
                        "type": "string",
                        "description": "Project access\n"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "Project creation date\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of your project\n"
                    },
                    "expiration": {
                        "type": "string",
                        "description": "Expiration date of your project. After this date, your project will be deleted\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Cloud/getProjectIam:getProjectIam",
                        "description": "IAM resource information\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "manualQuota": {
                        "type": "boolean",
                        "description": "Manual quota prevent automatic quota upgrade\n"
                    },
                    "orderId": {
                        "type": "number",
                        "description": "Project order ID\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Order plan code\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID\n"
                    },
                    "projectName": {
                        "type": "string",
                        "description": "Project name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the public cloud project\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status\n"
                    },
                    "unleash": {
                        "type": "boolean",
                        "description": "Project unleashed\n"
                    }
                },
                "type": "object",
                "required": [
                    "access",
                    "creationDate",
                    "description",
                    "expiration",
                    "iam",
                    "manualQuota",
                    "orderId",
                    "planCode",
                    "projectId",
                    "projectName",
                    "serviceName",
                    "status",
                    "unleash",
                    "id"
                ]
            }
        },
        "ovh:Cloud/getProjects:getProjects": {
            "description": "Get the details of your public cloud projects.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst projects = ovh.Cloud.getProjects({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nprojects = ovh.Cloud.get_projects()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var projects = Ovh.Cloud.GetProjects.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloud\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloud.GetProjects(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Cloud.CloudFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var projects = CloudFunctions.getProjects();\n\n    }\n}\n```\n```yaml\nvariables:\n  projects:\n    fn::invoke:\n      function: ovh:Cloud:getProjects\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getProjects.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Cloud/getProjectsProject:getProjectsProject"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "projects",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerFilter:getCapabilitiesContainerFilter": {
            "description": "Use this data source to filter the list of container registry capabilities associated with a public cloud project to match one and only one capability.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst capability = ovh.CloudProject.getCapabilitiesContainerFilter({\n    planName: \"SMALL\",\n    region: \"GRA\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncapability = ovh.CloudProject.get_capabilities_container_filter(plan_name=\"SMALL\",\n    region=\"GRA\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var capability = Ovh.CloudProject.GetCapabilitiesContainerFilter.Invoke(new()\n    {\n        PlanName = \"SMALL\",\n        Region = \"GRA\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetCapabilitiesContainerFilter(ctx, \u0026cloudproject.GetCapabilitiesContainerFilterArgs{\n\t\t\tPlanName:    \"SMALL\",\n\t\t\tRegion:      \"GRA\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetCapabilitiesContainerFilterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var capability = CloudProjectFunctions.getCapabilitiesContainerFilter(GetCapabilitiesContainerFilterArgs.builder()\n            .planName(\"SMALL\")\n            .region(\"GRA\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  capability:\n    fn::invoke:\n      function: ovh:CloudProject:getCapabilitiesContainerFilter\n      arguments:\n        planName: SMALL\n        region: GRA\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCapabilitiesContainerFilter.\n",
                "properties": {
                    "planName": {
                        "type": "string",
                        "description": "The plan name. It can be 'SMALL', 'MEDIUM' or 'LARGE'.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "planName",
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCapabilitiesContainerFilter.\n",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Plan code from the catalog\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Plan creation date\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerFilterFeature:getCapabilitiesContainerFilterFeature"
                        },
                        "description": "Features of the plan\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Plan name\n"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registryLimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerFilterRegistryLimit:getCapabilitiesContainerFilterRegistryLimit"
                        },
                        "description": "Container registry limits\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Plan last update date\n"
                    }
                },
                "type": "object",
                "required": [
                    "code",
                    "createdAt",
                    "features",
                    "name",
                    "planName",
                    "region",
                    "registryLimits",
                    "serviceName",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistry:getCapabilitiesContainerRegistry": {
            "description": "Use this data source to get the container registry capabilities of a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst capabilities = ovh.CloudProject.getCapabilitiesContainerRegistry({\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncapabilities = ovh.CloudProject.get_capabilities_container_registry(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var capabilities = Ovh.CloudProject.GetCapabilitiesContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetCapabilitiesContainerRegistry(ctx, \u0026cloudproject.GetCapabilitiesContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetCapabilitiesContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var capabilities = CloudProjectFunctions.getCapabilitiesContainerRegistry(GetCapabilitiesContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  capabilities:\n    fn::invoke:\n      function: ovh:CloudProject:getCapabilitiesContainerRegistry\n      arguments:\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCapabilitiesContainerRegistry.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCapabilitiesContainerRegistry.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResult:getCapabilitiesContainerRegistryResult"
                        },
                        "description": "List of container registry capability for a single region\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistries:getContainerRegistries": {
            "description": "Use this data source to get the container registries of a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst registries = ovh.CloudProject.getContainerRegistries({\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregistries = ovh.CloudProject.get_container_registries(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var registries = Ovh.CloudProject.GetContainerRegistries.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetContainerRegistries(ctx, \u0026cloudproject.GetContainerRegistriesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistriesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var registries = CloudProjectFunctions.getContainerRegistries(GetContainerRegistriesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  registries:\n    fn::invoke:\n      function: ovh:CloudProject:getContainerRegistries\n      arguments:\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistries.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistries.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getContainerRegistriesResult:getContainerRegistriesResult"
                        },
                        "description": "The list of container registries associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistry:getContainerRegistry": {
            "description": "Use this data source to get information about a container registry associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myRegistry = ovh.CloudProject.getContainerRegistry({\n    registryId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_registry = ovh.CloudProject.get_container_registry(registry_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myRegistry = Ovh.CloudProject.GetContainerRegistry.Invoke(new()\n    {\n        RegistryId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetContainerRegistry(ctx, \u0026cloudproject.GetContainerRegistryArgs{\n\t\t\tRegistryId:  \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myRegistry = CloudProjectFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()\n            .registryId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myRegistry:\n    fn::invoke:\n      function: ovh:CloudProject:getContainerRegistry\n      arguments:\n        registryId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistry.\n",
                "properties": {
                    "registryId": {
                        "type": "string",
                        "description": "Registry ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistry.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Registry creation date\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Registry name\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID of your registry\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the registry\n"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Current size of the registry (bytes)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Registry status\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Registry last update date\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Access url of the registry\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of your registry\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "name",
                    "projectId",
                    "region",
                    "registryId",
                    "serviceName",
                    "size",
                    "status",
                    "updatedAt",
                    "url",
                    "version",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistryIPRestrictionsManagement:getContainerRegistryIPRestrictionsManagement": {
            "description": "Use this data source to get the list of Management IP Restrictions of a container registry associated with a public cloud project.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryIPRestrictionsManagement.\n",
                "properties": {
                    "registryId": {
                        "type": "string",
                        "description": "The id of the Managed Private Registry.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryIPRestrictionsManagement.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "description": "IP restrictions applied on Harbor UI and API.\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "The ID of the Managed Private Registry.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ipRestrictions",
                    "registryId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistryIPRestrictionsRegistry:getContainerRegistryIPRestrictionsRegistry": {
            "description": "Use this data source to get the list of Registry IP Restrictions of a container registry associated with a public cloud project.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryIPRestrictionsRegistry.\n",
                "properties": {
                    "registryId": {
                        "type": "string",
                        "description": "The id of the Managed Private Registry.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryIPRestrictionsRegistry.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "description": "IP restrictions applied on artifact manager component.\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "The ID of the Managed Private Registry.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ipRestrictions",
                    "registryId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistryOIDC:getContainerRegistryOIDC": {
            "description": "Use this data source to get a OVHcloud Managed Private Registry OIDC.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nexport = async () =\u003e {\n    const myOidc = await ovh.CloudProject.getContainerRegistryOIDC({\n        serviceName: \"XXXXXX\",\n        registryId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n    return {\n        \"oidc-client-id\": myOidc.oidcClientId,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_oidc = ovh.CloudProject.get_container_registry_oidc(service_name=\"XXXXXX\",\n    registry_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\npulumi.export(\"oidc-client-id\", my_oidc.oidc_client_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myOidc = Ovh.CloudProject.GetContainerRegistryOIDC.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oidc-client-id\"] = myOidc.Apply(getContainerRegistryOIDCResult =\u003e getContainerRegistryOIDCResult.OidcClientId),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyOidc, err := cloudproject.GetContainerRegistryOIDC(ctx, \u0026cloudproject.GetContainerRegistryOIDCArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegistryId:  \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"oidc-client-id\", myOidc.OidcClientId)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryOIDCArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myOidc = CloudProjectFunctions.getContainerRegistryOIDC(GetContainerRegistryOIDCArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        ctx.export(\"oidc-client-id\", myOidc.applyValue(getContainerRegistryOIDCResult -\u003e getContainerRegistryOIDCResult.oidcClientId()));\n    }\n}\n```\n```yaml\nvariables:\n  myOidc:\n    fn::invoke:\n      function: ovh:CloudProject:getContainerRegistryOIDC\n      arguments:\n        serviceName: XXXXXX\n        registryId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\noutputs:\n  oidc-client-id: ${myOidc.oidcClientId}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryOIDC.\n",
                "properties": {
                    "oidcAdminGroup": {
                        "type": "string",
                        "description": "Specify an OIDC admin group name. All OIDC users in this group will have harbor admin privilege. Keep it blank if you do not want to.\n"
                    },
                    "oidcAutoOnboard": {
                        "type": "boolean",
                        "description": "Skip the onboarding screen, so user cannot change its username. Username is provided from ID Token.\n"
                    },
                    "oidcClientId": {
                        "type": "string",
                        "description": "The client ID with which Harbor is registered as client application with the OIDC provider.\n"
                    },
                    "oidcEndpoint": {
                        "type": "string",
                        "description": "The URL of an OIDC-compliant server.\n"
                    },
                    "oidcGroupsClaim": {
                        "type": "string",
                        "description": "The name of Claim in the ID token whose value is the list of group names.\n"
                    },
                    "oidcName": {
                        "type": "string",
                        "description": "The name of the OIDC provider.\n"
                    },
                    "oidcScope": {
                        "type": "string",
                        "description": "The scope sent to OIDC server during authentication. It's a comma-separated string that must contain 'openid' and usually also contains 'profile' and 'email'. To obtain refresh tokens it should also contain 'offline_access'.\n"
                    },
                    "oidcUserClaim": {
                        "type": "string",
                        "description": "The name of the claim in the ID Token where the username is retrieved from. If not specified, it will default to 'name' (only useful when automatic Onboarding is enabled).\n"
                    },
                    "oidcVerifyCert": {
                        "type": "boolean",
                        "description": "Set it to `false` if your OIDC server is hosted via self-signed certificate.\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "The id of the Managed Private Registry.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryOIDC.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "oidcAdminGroup": {
                        "type": "string",
                        "description": "Specify an OIDC admin group name. All OIDC users in this group will have harbor admin privilege. Keep it blank if you do not want to.\n"
                    },
                    "oidcAutoOnboard": {
                        "type": "boolean",
                        "description": "Skip the onboarding screen, so user cannot change its username. Username is provided from ID Token.\n"
                    },
                    "oidcClientId": {
                        "type": "string",
                        "description": "The client ID with which Harbor is registered as client application with the OIDC provider.\n"
                    },
                    "oidcEndpoint": {
                        "type": "string",
                        "description": "The URL of an OIDC-compliant server.\n"
                    },
                    "oidcGroupsClaim": {
                        "type": "string",
                        "description": "The name of Claim in the ID token whose value is the list of group names.\n"
                    },
                    "oidcName": {
                        "type": "string",
                        "description": "The name of the OIDC provider.\n"
                    },
                    "oidcScope": {
                        "type": "string",
                        "description": "The scope sent to OIDC server during authentication. It's a comma-separated string that must contain 'openid' and usually also contains 'profile' and 'email'. To obtain refresh tokens it should also contain 'offline_access'.\n"
                    },
                    "oidcUserClaim": {
                        "type": "string",
                        "description": "The name of the claim in the ID Token where the username is retrieved from. If not specified, it will default to 'name' (only useful when automatic Onboarding is enabled).\n"
                    },
                    "oidcVerifyCert": {
                        "type": "boolean",
                        "description": "Set it to `false` if your OIDC server is hosted via self-signed certificate.\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "The ID of the Managed Private Registry.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistryUsers:getContainerRegistryUsers": {
            "description": "Use this data source to get the list of users of a container registry associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myRegistry = ovh.CloudProject.getContainerRegistry({\n    serviceName: \"XXXXXX\",\n    registryId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nconst users = ovh.CloudProject.getContainerRegistryUsers({\n    serviceName: ovh_cloud_project_containerregistry.my_registry.service_name,\n    registryId: ovh_cloud_project_containerregistry.my_registry.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_registry = ovh.CloudProject.get_container_registry(service_name=\"XXXXXX\",\n    registry_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\nusers = ovh.CloudProject.get_container_registry_users(service_name=ovh_cloud_project_containerregistry[\"my_registry\"][\"service_name\"],\n    registry_id=ovh_cloud_project_containerregistry[\"my_registry\"][\"id\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myRegistry = Ovh.CloudProject.GetContainerRegistry.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegistryId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    var users = Ovh.CloudProject.GetContainerRegistryUsers.Invoke(new()\n    {\n        ServiceName = ovh_cloud_project_containerregistry.My_registry.Service_name,\n        RegistryId = ovh_cloud_project_containerregistry.My_registry.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetContainerRegistry(ctx, \u0026cloudproject.GetContainerRegistryArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegistryId:  \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = cloudproject.GetContainerRegistryUsers(ctx, \u0026cloudproject.GetContainerRegistryUsersArgs{\n\t\t\tServiceName: ovh_cloud_project_containerregistry.My_registry.Service_name,\n\t\t\tRegistryId:  ovh_cloud_project_containerregistry.My_registry.Id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryArgs;\nimport com.pulumi.ovh.CloudProject.inputs.GetContainerRegistryUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myRegistry = CloudProjectFunctions.getContainerRegistry(GetContainerRegistryArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .registryId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        final var users = CloudProjectFunctions.getContainerRegistryUsers(GetContainerRegistryUsersArgs.builder()\n            .serviceName(ovh_cloud_project_containerregistry.my_registry().service_name())\n            .registryId(ovh_cloud_project_containerregistry.my_registry().id())\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myRegistry:\n    fn::invoke:\n      function: ovh:CloudProject:getContainerRegistry\n      arguments:\n        serviceName: XXXXXX\n        registryId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n  users:\n    fn::invoke:\n      function: ovh:CloudProject:getContainerRegistryUsers\n      arguments:\n        serviceName: ${ovh_cloud_project_containerregistry.my_registry.service_name}\n        registryId: ${ovh_cloud_project_containerregistry.my_registry.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryUsers.\n",
                "properties": {
                    "registryId": {
                        "type": "string",
                        "description": "Registry ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getContainerRegistryUsersResult:getContainerRegistryUsersResult"
                        },
                        "description": "The list of users of the container registry associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getFailoverIpAttach:getFailoverIpAttach": {
            "description": "Use this data source to get the details of a failover IP address of a service in a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myFailoverIp = ovh.CloudProject.getFailoverIpAttach({\n    ip: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_failover_ip = ovh.CloudProject.get_failover_ip_attach(ip=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myFailoverIp = Ovh.CloudProject.GetFailoverIpAttach.Invoke(new()\n    {\n        Ip = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetFailoverIpAttach(ctx, \u0026cloudproject.GetFailoverIpAttachArgs{\n\t\t\tIp:          pulumi.StringRef(\"XXXXXX\"),\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetFailoverIpAttachArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myFailoverIp = CloudProjectFunctions.getFailoverIpAttach(GetFailoverIpAttachArgs.builder()\n            .ip(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myFailoverIp:\n    fn::invoke:\n      function: ovh:CloudProject:getFailoverIpAttach\n      arguments:\n        ip: XXXXXX\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFailoverIpAttach.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "The IP block\n* `continentCode` - The Ip continent\n"
                    },
                    "continentCode": {
                        "type": "string"
                    },
                    "geoLoc": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The failover ip address to query\n"
                    },
                    "routedTo": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFailoverIpAttach.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "The IP block\n* `continentCode` - The Ip continent\n"
                    },
                    "continentCode": {
                        "type": "string"
                    },
                    "geoLoc": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The Ip id\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The Ip Address\n"
                    },
                    "progress": {
                        "type": "integer",
                        "description": "Current operation progress in percent\n* `routedTo` - Instance where ip is routed to\n"
                    },
                    "routedTo": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "Ip status, can be `ok` or `operationPending`\n* `subType` - IP sub type, can be `cloud` or `ovh`\n"
                    },
                    "subType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "block",
                    "continentCode",
                    "geoLoc",
                    "id",
                    "ip",
                    "progress",
                    "routedTo",
                    "serviceName",
                    "status",
                    "subType"
                ]
            }
        },
        "ovh:CloudProject/getFlavors:getFlavors": {
            "description": "Retrieves the available flavors on the given public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst flavors = ovh.CloudProject.getFlavors({\n    serviceName: \"YYYY\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nflavors = ovh.CloudProject.get_flavors(service_name=\"YYYY\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var flavors = Ovh.CloudProject.GetFlavors.Invoke(new()\n    {\n        ServiceName = \"YYYY\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetFlavors(ctx, \u0026cloudproject.GetFlavorsArgs{\n\t\t\tServiceName: \"YYYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetFlavorsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var flavors = CloudProjectFunctions.getFlavors(GetFlavorsArgs.builder()\n            .serviceName(\"YYYY\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  flavors:\n    fn::invoke:\n      function: ovh:CloudProject:getFlavors\n      arguments:\n        serviceName: YYYY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFlavors.\n",
                "properties": {
                    "region": {
                        "type": "string",
                        "description": "Flavor region\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlavors.\n",
                "properties": {
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getFlavorsFlavor:getFlavorsFlavor"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Flavor region\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "flavors",
                    "region",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getFloatingIPs:getFloatingIPs": {
            "description": "Use this data source to get the floating IPs of a public cloud project.\n\n## Example Usage\n\nTo get information of floating IPs:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetFloatingIPsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ips = CloudProjectFunctions.getFloatingIPs(GetFloatingIPsArgs.builder()\n            .region(\"XXXX\")\n            .serviceName(\"YYYY\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  ips:\n    fn::invoke:\n      function: ovh:CloudProject:getFloatingIPs\n      arguments:\n        region: XXXX\n        serviceName: YYYY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFloatingIPs.\n",
                "properties": {
                    "regionName": {
                        "type": "string",
                        "description": "Public cloud region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project\n"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFloatingIPs.\n",
                "properties": {
                    "cloudProjectFloatingips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getFloatingIPsCloudProjectFloatingip:getFloatingIPsCloudProjectFloatingip"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Floating IP region\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cloudProjectFloatingips",
                    "regionName",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getGatewayInterface:getGatewayInterface": {
            "description": "Use this datasource to get a public cloud project Gateway Interface.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst _interface = ovh.CloudProject.getGatewayInterface({\n    id: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    interfaceId: \"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyy\",\n    region: \"GRA11\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ninterface = ovh.CloudProject.get_gateway_interface(id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    interface_id=\"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyy\",\n    region=\"GRA11\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @interface = Ovh.CloudProject.GetGatewayInterface.Invoke(new()\n    {\n        Id = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n        InterfaceId = \"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyy\",\n        Region = \"GRA11\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetGatewayInterface(ctx, \u0026cloudproject.GetGatewayInterfaceArgs{\n\t\t\tId:          \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t\tInterfaceId: \"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyy\",\n\t\t\tRegion:      \"GRA11\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetGatewayInterfaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var interface = CloudProjectFunctions.getGatewayInterface(GetGatewayInterfaceArgs.builder()\n            .id(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .interfaceId(\"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyy\")\n            .region(\"GRA11\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  interface:\n    fn::invoke:\n      function: ovh:CloudProject:getGatewayInterface\n      arguments:\n        id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\n        interfaceId: yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyy\n        region: GRA11\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGatewayInterface.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the gateway\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "ID of the interface\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the gateway\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the cloud project\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGatewayInterface.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the gateway\n"
                    },
                    "interfaceId": {
                        "type": "string",
                        "description": "ID of the interface\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "IP of the interface\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "Network ID of the interface\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the gateway\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the cloud project\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "ID of the subnet to add\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "ip",
                    "networkId",
                    "region",
                    "serviceName",
                    "subnetId"
                ]
            }
        },
        "ovh:CloudProject/getImage:getImage": {
            "description": "Get information about an image in the given public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst image = ovh.CloudProject.getImage({\n    imageId: \"\u003cimage ID\u003e\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nimage = ovh.CloudProject.get_image(image_id=\"\u003cimage ID\u003e\",\n    service_name=\"\u003cpublic cloud project ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var image = Ovh.CloudProject.GetImage.Invoke(new()\n    {\n        ImageId = \"\u003cimage ID\u003e\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetImage(ctx, \u0026cloudproject.GetImageArgs{\n\t\t\tImageId:     \"\u003cimage ID\u003e\",\n\t\t\tServiceName: \"\u003cpublic cloud project ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetImageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var image = CloudProjectFunctions.getImage(GetImageArgs.builder()\n            .imageId(\"\u003cimage ID\u003e\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  image:\n    fn::invoke:\n      function: ovh:CloudProject:getImage\n      arguments:\n        imageId: \u003cimage ID\u003e\n        serviceName: \u003cpublic cloud project ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getImage.\n",
                "properties": {
                    "imageId": {
                        "type": "string",
                        "description": "Image ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Public cloud project ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "imageId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getImage.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Image creation date\n"
                    },
                    "flavorType": {
                        "type": "string",
                        "description": "Image usable only for this type of flavor if not null\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Image ID\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "Image ID\n"
                    },
                    "minDisk": {
                        "type": "number",
                        "description": "Minimum disks required to use image\n"
                    },
                    "minRam": {
                        "type": "number",
                        "description": "Minimum RAM required to use image\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Image name\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Order plan code\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Image region\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Public cloud project ID\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Image size (in GiB)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Image status\n"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tags about the image\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Image type\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "User to connect with\n"
                    },
                    "visibility": {
                        "type": "string",
                        "description": "Image visibility\n"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "flavorType",
                    "id",
                    "imageId",
                    "minDisk",
                    "minRam",
                    "name",
                    "planCode",
                    "region",
                    "serviceName",
                    "size",
                    "status",
                    "tags",
                    "type",
                    "user",
                    "visibility"
                ]
            }
        },
        "ovh:CloudProject/getImages:getImages": {
            "description": "Get available images in the given public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst images = ovh.CloudProject.getImages({\n    osType: \"linux\",\n    region: \"WAW1\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nimages = ovh.CloudProject.get_images(os_type=\"linux\",\n    region=\"WAW1\",\n    service_name=\"\u003cpublic cloud project ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var images = Ovh.CloudProject.GetImages.Invoke(new()\n    {\n        OsType = \"linux\",\n        Region = \"WAW1\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetImages(ctx, \u0026cloudproject.GetImagesArgs{\n\t\t\tOsType:      pulumi.StringRef(\"linux\"),\n\t\t\tRegion:      pulumi.StringRef(\"WAW1\"),\n\t\t\tServiceName: \"\u003cpublic cloud project ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetImagesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var images = CloudProjectFunctions.getImages(GetImagesArgs.builder()\n            .osType(\"linux\")\n            .region(\"WAW1\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  images:\n    fn::invoke:\n      function: ovh:CloudProject:getImages\n      arguments:\n        osType: linux\n        region: WAW1\n        serviceName: \u003cpublic cloud project ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getImages.\n",
                "properties": {
                    "flavorType": {
                        "type": "string",
                        "description": "Get compatible images with flavor type\n"
                    },
                    "osType": {
                        "type": "string",
                        "description": "Image OS (Allowed values: baremetal-linux ┃ bsd ┃ linux ┃ windows)\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Image region\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Public cloud project ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getImages.\n",
                "properties": {
                    "flavorType": {
                        "type": "string",
                        "description": "Get compatible images with flavor type\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getImagesImage:getImagesImage"
                        }
                    },
                    "osType": {
                        "type": "string",
                        "description": "Image OS (Allowed values: baremetal-linux ┃ bsd ┃ linux ┃ windows)\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Image region\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Public cloud project ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "flavorType",
                    "images",
                    "osType",
                    "region",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getInstance:getInstance": {
            "description": "**This datasource uses a Beta API** Use this data source to get the instance of a public cloud project.\n\n## Example Usage\n\nTo get information of an instance:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst instance = ovh.CloudProject.getInstance({\n    instanceId: \"ZZZZZ\",\n    region: \"XXXX\",\n    serviceName: \"YYYY\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ninstance = ovh.CloudProject.get_instance(instance_id=\"ZZZZZ\",\n    region=\"XXXX\",\n    service_name=\"YYYY\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = Ovh.CloudProject.GetInstance.Invoke(new()\n    {\n        InstanceId = \"ZZZZZ\",\n        Region = \"XXXX\",\n        ServiceName = \"YYYY\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetInstance(ctx, \u0026cloudproject.GetInstanceArgs{\n\t\t\tInstanceId:  \"ZZZZZ\",\n\t\t\tRegion:      \"XXXX\",\n\t\t\tServiceName: \"YYYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var instance = CloudProjectFunctions.getInstance(GetInstanceArgs.builder()\n            .instanceId(\"ZZZZZ\")\n            .region(\"XXXX\")\n            .serviceName(\"YYYY\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  instance:\n    fn::invoke:\n      function: ovh:CloudProject:getInstance\n      arguments:\n        instanceId: ZZZZZ\n        region: XXXX\n        serviceName: YYYY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getInstance.\n",
                "properties": {
                    "instanceId": {
                        "type": "string",
                        "description": "Instance id\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Instance region\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used\n"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstance.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getInstanceAddress:getInstanceAddress"
                        },
                        "description": "Instance IP addresses\n"
                    },
                    "attachedVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getInstanceAttachedVolume:getInstanceAttachedVolume"
                        },
                        "description": "Volumes attached to the instance\n"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "description": "Availability zone of the instance\n"
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Flavor id\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "Image id\n"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Instance name\n"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sshKey": {
                        "type": "string",
                        "description": "SSH Keypair\n"
                    },
                    "taskState": {
                        "type": "string",
                        "description": "Instance task state\n"
                    }
                },
                "type": "object",
                "required": [
                    "addresses",
                    "attachedVolumes",
                    "availabilityZone",
                    "flavorId",
                    "flavorName",
                    "imageId",
                    "instanceId",
                    "name",
                    "region",
                    "serviceName",
                    "sshKey",
                    "taskState",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getInstances:getInstances": {
            "description": "**This datasource uses a Beta API**\n\nUse this data source to get the list of instances in a region of a public cloud project.\n\n## Example Usage\n\nTo list your instances:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst instance = ovh.CloudProject.getInstances({\n    region: \"XXXX\",\n    serviceName: \"YYYY\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ninstance = ovh.CloudProject.get_instances(region=\"XXXX\",\n    service_name=\"YYYY\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var instance = Ovh.CloudProject.GetInstances.Invoke(new()\n    {\n        Region = \"XXXX\",\n        ServiceName = \"YYYY\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetInstances(ctx, \u0026cloudproject.GetInstancesArgs{\n\t\t\tRegion:      \"XXXX\",\n\t\t\tServiceName: \"YYYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetInstancesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var instance = CloudProjectFunctions.getInstances(GetInstancesArgs.builder()\n            .region(\"XXXX\")\n            .serviceName(\"YYYY\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  instance:\n    fn::invoke:\n      function: ovh:CloudProject:getInstances\n      arguments:\n        region: XXXX\n        serviceName: YYYY\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getInstances.\n",
                "properties": {
                    "region": {
                        "type": "string",
                        "description": "Instance region.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstances.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getInstancesInstance:getInstancesInstance"
                        },
                        "description": "List of instances\n"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instances",
                    "region",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKube:getKube": {
            "description": "Use this data source to get a OVHcloud Managed Kubernetes Service cluster.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myKubeCluster = ovh.CloudProject.getKube({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nexport const version = myKubeCluster.then(myKubeCluster =\u003e myKubeCluster.version);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_kube_cluster = ovh.CloudProject.get_kube(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\npulumi.export(\"version\", my_kube_cluster.version)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myKubeCluster = Ovh.CloudProject.GetKube.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"version\"] = myKubeCluster.Apply(getKubeResult =\u003e getKubeResult.Version),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyKubeCluster, err := cloudproject.GetKube(ctx, \u0026cloudproject.GetKubeArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"version\", myKubeCluster.Version)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myKubeCluster = CloudProjectFunctions.getKube(GetKubeArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        ctx.export(\"version\", myKubeCluster.applyValue(getKubeResult -\u003e getKubeResult.version()));\n    }\n}\n```\n```yaml\nvariables:\n  myKubeCluster:\n    fn::invoke:\n      function: ovh:CloudProject:getKube\n      arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\noutputs:\n  version: ${myKubeCluster.version}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKube.\n",
                "properties": {
                    "customizationApiservers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver"
                        },
                        "description": "Kubernetes API server customization\n"
                    },
                    "customizationKubeProxy": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomizationKubeProxy:getKubeCustomizationKubeProxy",
                        "description": "Kubernetes kube-proxy customization\n"
                    },
                    "customizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeCustomization:getKubeCustomization"
                        },
                        "description": "**Deprecated** (Optional) Use `customization_apiserver` and `customization_kube_proxy` instead. Kubernetes cluster customization\n",
                        "deprecationMessage": "Use customization_apiserver instead"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n"
                    },
                    "kubeProxyMode": {
                        "type": "string",
                        "description": "Selected mode for kube-proxy.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the managed kubernetes cluster.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The OVHcloud public cloud region ID of the managed kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Kubernetes version of the managed kubernetes cluster.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKube.\n",
                "properties": {
                    "controlPlaneIsUpToDate": {
                        "type": "boolean",
                        "description": "True if control-plane is up-to-date.\n"
                    },
                    "customizationApiservers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver"
                        },
                        "description": "Kubernetes API server customization\n"
                    },
                    "customizationKubeProxy": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomizationKubeProxy:getKubeCustomizationKubeProxy",
                        "description": "Kubernetes kube-proxy customization\n"
                    },
                    "customizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeCustomization:getKubeCustomization"
                        },
                        "description": "**Deprecated** (Optional) Use `customization_apiserver` and `customization_kube_proxy` instead. Kubernetes cluster customization\n",
                        "deprecationMessage": "Use customization_apiserver instead"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isUpToDate": {
                        "type": "boolean",
                        "description": "True if all nodes and control-plane are up-to-date.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "kubeProxyMode": {
                        "type": "string",
                        "description": "Selected mode for kube-proxy.\n"
                    },
                    "loadBalancersSubnetId": {
                        "type": "string",
                        "description": "Openstack private network (or vRack) ID to use for load balancers.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the managed kubernetes cluster.\n"
                    },
                    "nextUpgradeVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Kubernetes versions available for upgrade.\n"
                    },
                    "nodesSubnetId": {
                        "type": "string",
                        "description": "Openstack private network (or vRack) ID to use for nodes.\n"
                    },
                    "nodesUrl": {
                        "type": "string",
                        "description": "Cluster nodes URL.\n"
                    },
                    "privateNetworkId": {
                        "type": "string",
                        "description": "OpenStack private network (or vrack) ID to use.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The OVHcloud public cloud region ID of the managed kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Cluster status. Should be normally set to 'READY'.\n"
                    },
                    "updatePolicy": {
                        "type": "string",
                        "description": "Cluster update policy. Choose between [ALWAYS_UPDATE,MINIMAL_DOWNTIME,NEVER_UPDATE]'.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Management URL of your cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Kubernetes version of the managed kubernetes cluster.\n"
                    }
                },
                "type": "object",
                "required": [
                    "controlPlaneIsUpToDate",
                    "customizations",
                    "customizationApiservers",
                    "isUpToDate",
                    "kubeId",
                    "loadBalancersSubnetId",
                    "nextUpgradeVersions",
                    "nodesSubnetId",
                    "nodesUrl",
                    "privateNetworkId",
                    "serviceName",
                    "status",
                    "url",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeIpRestrictions:getKubeIpRestrictions": {
            "description": "Use this data source to get a OVHcloud Managed Kubernetes Service cluster IP restrictions.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst ipRestrictions = ovh.CloudProject.getKubeIpRestrictions({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n});\nexport const ips = ipRestrictions.then(ipRestrictions =\u003e ipRestrictions.ips);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nip_restrictions = ovh.CloudProject.get_kube_ip_restrictions(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\npulumi.export(\"ips\", ip_restrictions.ips)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ipRestrictions = Ovh.CloudProject.GetKubeIpRestrictions.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"ips\"] = ipRestrictions.Apply(getKubeIpRestrictionsResult =\u003e getKubeIpRestrictionsResult.Ips),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tipRestrictions, err := cloudproject.GetKubeIpRestrictions(ctx, \u0026cloudproject.GetKubeIpRestrictionsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ips\", ipRestrictions.Ips)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeIpRestrictionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ipRestrictions = CloudProjectFunctions.getKubeIpRestrictions(GetKubeIpRestrictionsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        ctx.export(\"ips\", ipRestrictions.applyValue(getKubeIpRestrictionsResult -\u003e getKubeIpRestrictionsResult.ips()));\n    }\n}\n```\n```yaml\nvariables:\n  ipRestrictions:\n    fn::invoke:\n      function: ovh:CloudProject:getKubeIpRestrictions\n      arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\noutputs:\n  ips: ${ipRestrictions.ips}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeIpRestrictions.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeIpRestrictions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of CIDRs that restricts the access to the API server.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ips",
                    "kubeId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeNodePool:getKubeNodePool": {
            "description": "Use this data source to get a OVHcloud Managed Kubernetes node pool.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst nodepool = ovh.CloudProject.getKubeNodePool({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name: \"xxxxxx\",\n});\nexport const maxNodes = nodepool.then(nodepool =\u003e nodepool.maxNodes);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnodepool = ovh.CloudProject.get_kube_node_pool(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name=\"xxxxxx\")\npulumi.export(\"maxNodes\", nodepool.max_nodes)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodepool = Ovh.CloudProject.GetKubeNodePool.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n        Name = \"xxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"maxNodes\"] = nodepool.Apply(getKubeNodePoolResult =\u003e getKubeNodePoolResult.MaxNodes),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnodepool, err := cloudproject.GetKubeNodePool(ctx, \u0026cloudproject.GetKubeNodePoolArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n\t\t\tName:        \"xxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"maxNodes\", nodepool.MaxNodes)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeNodePoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var nodepool = CloudProjectFunctions.getKubeNodePool(GetKubeNodePoolArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\")\n            .name(\"xxxxxx\")\n            .build());\n\n        ctx.export(\"maxNodes\", nodepool.applyValue(getKubeNodePoolResult -\u003e getKubeNodePoolResult.maxNodes()));\n    }\n}\n```\n```yaml\nvariables:\n  nodepool:\n    fn::invoke:\n      function: ovh:CloudProject:getKubeNodePool\n      arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\n        name: xxxxxx\noutputs:\n  maxNodes: ${nodepool.maxNodes}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeNodePool.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the node pool.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "template": {
                        "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplate:getKubeNodePoolTemplate"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeNodePool.\n",
                "properties": {
                    "antiAffinity": {
                        "type": "boolean",
                        "description": "(Optional) should the pool use the anti-affinity feature. Default to `false`.\n"
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "(Optional) Enable auto-scaling for the pool. Default to `false`.\n"
                    },
                    "autoscalingScaleDownUnneededTimeSeconds": {
                        "type": "integer",
                        "description": "(Optional) scaleDownUnneededTimeSeconds autoscaling parameter How long a node should be unneeded before it is eligible for scale down\n"
                    },
                    "autoscalingScaleDownUnreadyTimeSeconds": {
                        "type": "integer",
                        "description": "(Optional) scaleDownUnreadyTimeSeconds autoscaling parameter How long an unready node should be unneeded before it is eligible for scale down\n"
                    },
                    "autoscalingScaleDownUtilizationThreshold": {
                        "type": "number",
                        "description": "(Optional) scaleDownUtilizationThreshold autoscaling parameter Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down\n"
                    },
                    "availableNodes": {
                        "type": "integer",
                        "description": "Number of nodes which are actually ready in the pool\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date\n"
                    },
                    "currentNodes": {
                        "type": "integer",
                        "description": "Number of nodes present in the pool\n"
                    },
                    "desiredNodes": {
                        "type": "integer",
                        "description": "Number of nodes you desire in the pool\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "a valid OVHcloud public cloud flavor ID in which the nodes will be started. Ex: \"b2-7\". Changing this value recreates the resource. You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "maxNodes": {
                        "type": "integer",
                        "description": "maximum number of nodes allowed in the pool. Setting `desired_nodes` over this value will raise an error.\n"
                    },
                    "minNodes": {
                        "type": "integer",
                        "description": "minimum number of nodes allowed in the pool. Setting `desired_nodes` under this value will raise an error.\n"
                    },
                    "monthlyBilled": {
                        "type": "boolean",
                        "description": "(Optional) should the nodes be billed on a monthly basis. Default to `false`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(Optional) The name of the nodepool. Changing this value recreates the resource. Warning: \"_\" char is not allowed!\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project id\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "sizeStatus": {
                        "type": "string",
                        "description": "Status describing the state between number of nodes wanted and available ones\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status\n"
                    },
                    "template": {
                        "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplate:getKubeNodePoolTemplate"
                    },
                    "upToDateNodes": {
                        "type": "integer",
                        "description": "Number of nodes with the latest version installed in the pool\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date\n"
                    }
                },
                "type": "object",
                "required": [
                    "antiAffinity",
                    "autoscale",
                    "autoscalingScaleDownUnneededTimeSeconds",
                    "autoscalingScaleDownUnreadyTimeSeconds",
                    "autoscalingScaleDownUtilizationThreshold",
                    "availableNodes",
                    "createdAt",
                    "currentNodes",
                    "desiredNodes",
                    "flavor",
                    "flavorName",
                    "kubeId",
                    "maxNodes",
                    "minNodes",
                    "monthlyBilled",
                    "name",
                    "projectId",
                    "serviceName",
                    "sizeStatus",
                    "status",
                    "upToDateNodes",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeNodePoolNodes:getKubeNodePoolNodes": {
            "description": "Use this data source to get a list of OVHcloud Managed Kubernetes nodes in a specific node pool.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst nodesKubeNodePoolNodes = ovh.CloudProject.getKubeNodePoolNodes({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name: \"XXXXXX\",\n});\nexport const nodes = nodesKubeNodePoolNodes;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnodes_kube_node_pool_nodes = ovh.CloudProject.get_kube_node_pool_nodes(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    name=\"XXXXXX\")\npulumi.export(\"nodes\", nodes_kube_node_pool_nodes)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodesKubeNodePoolNodes = Ovh.CloudProject.GetKubeNodePoolNodes.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n        Name = \"XXXXXX\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"nodes\"] = nodesKubeNodePoolNodes,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnodesKubeNodePoolNodes, err := cloudproject.GetKubeNodePoolNodes(ctx, \u0026cloudproject.GetKubeNodePoolNodesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n\t\t\tName:        \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"nodes\", nodesKubeNodePoolNodes)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeNodePoolNodesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var nodesKubeNodePoolNodes = CloudProjectFunctions.getKubeNodePoolNodes(GetKubeNodePoolNodesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\")\n            .name(\"XXXXXX\")\n            .build());\n\n        ctx.export(\"nodes\", nodesKubeNodePoolNodes.applyValue(getKubeNodePoolNodesResult -\u003e getKubeNodePoolNodesResult));\n    }\n}\n```\n```yaml\nvariables:\n  nodesKubeNodePoolNodes:\n    fn::invoke:\n      function: ovh:CloudProject:getKubeNodePoolNodes\n      arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\n        name: XXXXXX\noutputs:\n  nodes: ${nodesKubeNodePoolNodes}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeNodePoolNodes.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The ID of the managed kubernetes cluster.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the node pool from which we want the nodes.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeNodePoolNodes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the node.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeNodePoolNodesNode:getKubeNodePoolNodesNode"
                        },
                        "description": "List of all nodes composing the kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "nodes",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeNodes:getKubeNodes": {
            "description": "Use this data source to get a list of OVHcloud Managed Kubernetes nodes.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst nodesKubeNodes = ovh.CloudProject.getKubeNodes({\n    serviceName: \"XXXXXX\",\n    kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n});\nexport const nodes = nodesKubeNodes;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnodes_kube_nodes = ovh.CloudProject.get_kube_nodes(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\")\npulumi.export(\"nodes\", nodes_kube_nodes)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var nodesKubeNodes = Ovh.CloudProject.GetKubeNodes.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"nodes\"] = nodesKubeNodes,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnodesKubeNodes, err := cloudproject.GetKubeNodes(ctx, \u0026cloudproject.GetKubeNodesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"nodes\", nodesKubeNodes)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeNodesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var nodesKubeNodes = CloudProjectFunctions.getKubeNodes(GetKubeNodesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\")\n            .build());\n\n        ctx.export(\"nodes\", nodesKubeNodes.applyValue(getKubeNodesResult -\u003e getKubeNodesResult));\n    }\n}\n```\n```yaml\nvariables:\n  nodesKubeNodes:\n    fn::invoke:\n      function: ovh:CloudProject:getKubeNodes\n      arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxx\noutputs:\n  nodes: ${nodesKubeNodes}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeNodes.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "description": "The ID of the managed kubernetes cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeNodes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeNodesNode:getKubeNodesNode"
                        },
                        "description": "List of all nodes composing the kubernetes cluster\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "nodes",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeOidc:getKubeOidc": {
            "description": "Use this data source to get a OVHcloud Managed Kubernetes Service cluster OIDC.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nexport = async () =\u003e {\n    const oidc = await ovh.CloudProject.getKubeOidc({\n        serviceName: \"XXXXXX\",\n        kubeId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n    return {\n        \"oidc-val\": oidc.clientId,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\noidc = ovh.CloudProject.get_kube_oidc(service_name=\"XXXXXX\",\n    kube_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\npulumi.export(\"oidc-val\", oidc.client_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var oidc = Ovh.CloudProject.GetKubeOidc.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        KubeId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"oidc-val\"] = oidc.Apply(getKubeOidcResult =\u003e getKubeOidcResult.ClientId),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\toidc, err := cloudproject.GetKubeOidc(ctx, \u0026cloudproject.GetKubeOidcArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tKubeId:      \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"oidc-val\", oidc.ClientId)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetKubeOidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var oidc = CloudProjectFunctions.getKubeOidc(GetKubeOidcArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .kubeId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\")\n            .build());\n\n        ctx.export(\"oidc-val\", oidc.applyValue(getKubeOidcResult -\u003e getKubeOidcResult.clientId()));\n    }\n}\n```\n```yaml\nvariables:\n  oidc:\n    fn::invoke:\n      function: ovh:CloudProject:getKubeOidc\n      arguments:\n        serviceName: XXXXXX\n        kubeId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxx\noutputs:\n  oidc-val: ${oidc.clientId}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKubeOidc.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "The OIDC client ID.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "The OIDC issuer url.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "The id of the managed kubernetes cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "oidcCaContent": {
                        "type": "string",
                        "description": "Content of the certificate for the CA, in base64 format, that signed your identity provider's web certificate. Defaults to the host's root CAs.\n"
                    },
                    "oidcGroupsClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of JWT claim to use as the user's group. If the claim is present it must be an array of strings.\n"
                    },
                    "oidcGroupsPrefix": {
                        "type": "string",
                        "description": "Prefix prepended to group claims to prevent clashes with existing names (such as system: groups). For example, the value oidc: will create group names like oidc:engineering and oidc:infra.\n"
                    },
                    "oidcRequiredClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of key=value pairs that describe required claims in the ID Token. If set, the claims are verified to be present in the ID Token with a matching value.\"\n"
                    },
                    "oidcSigningAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of signing algorithms accepted. Default is \\\"RS256\\\".\n"
                    },
                    "oidcUsernameClaim": {
                        "type": "string",
                        "description": "JWT claim to use as the user name. By default sub, which is expected to be a unique identifier of the end user. Admins can choose other claims, such as email or name, depending on their provider. However, claims other than email will be prefixed with the issuer URL to prevent naming clashes with other plugins.\n"
                    },
                    "oidcUsernamePrefix": {
                        "type": "string",
                        "description": "Prefix prepended to username claims to prevent clashes with existing names (such as system: users). For example, the value oidc: will create usernames like oidc:jane.doe. If this field isn't set and `oidc_username_claim` is a value other than email the prefix defaults to ( Issuer URL )# where ( Issuer URL ) is the value of oidcIssuerUrl. The value - can be used to disable all prefixing.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeOidc.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "The OIDC client ID.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "issuerUrl": {
                        "type": "string",
                        "description": "The OIDC issuer url.\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "oidcCaContent": {
                        "type": "string",
                        "description": "Content of the certificate for the CA, in base64 format, that signed your identity provider's web certificate. Defaults to the host's root CAs.\n"
                    },
                    "oidcGroupsClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of JWT claim to use as the user's group. If the claim is present it must be an array of strings.\n"
                    },
                    "oidcGroupsPrefix": {
                        "type": "string",
                        "description": "Prefix prepended to group claims to prevent clashes with existing names (such as system: groups). For example, the value oidc: will create group names like oidc:engineering and oidc:infra.\n"
                    },
                    "oidcRequiredClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of key=value pairs that describe required claims in the ID Token. If set, the claims are verified to be present in the ID Token with a matching value.\"\n"
                    },
                    "oidcSigningAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Array of signing algorithms accepted. Default is \\\"RS256\\\".\n"
                    },
                    "oidcUsernameClaim": {
                        "type": "string",
                        "description": "JWT claim to use as the user name. By default sub, which is expected to be a unique identifier of the end user. Admins can choose other claims, such as email or name, depending on their provider. However, claims other than email will be prefixed with the issuer URL to prevent naming clashes with other plugins.\n"
                    },
                    "oidcUsernamePrefix": {
                        "type": "string",
                        "description": "Prefix prepended to username claims to prevent clashes with existing names (such as system: users). For example, the value oidc: will create usernames like oidc:jane.doe. If this field isn't set and `oidc_username_claim` is a value other than email the prefix defaults to ( Issuer URL )# where ( Issuer URL ) is the value of oidcIssuerUrl. The value - can be used to disable all prefixing.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getLoadBalancer:getLoadBalancer": {
            "description": "Get the details of a public cloud project loadbalancer.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbLoadBalancer = ovh.CloudProject.getLoadBalancer({\n    serviceName: \"XXXXXX\",\n    regionName: \"XXX\",\n    id: \"XXX\",\n});\nexport const lb = lbLoadBalancer;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb_load_balancer = ovh.CloudProject.get_load_balancer(service_name=\"XXXXXX\",\n    region_name=\"XXX\",\n    id=\"XXX\")\npulumi.export(\"lb\", lb_load_balancer)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lbLoadBalancer = Ovh.CloudProject.GetLoadBalancer.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegionName = \"XXX\",\n        Id = \"XXX\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"lb\"] = lbLoadBalancer,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlbLoadBalancer, err := cloudproject.GetLoadBalancer(ctx, \u0026cloudproject.GetLoadBalancerArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegionName:  \"XXX\",\n\t\t\tId:          \"XXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"lb\", lbLoadBalancer)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetLoadBalancerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lbLoadBalancer = CloudProjectFunctions.getLoadBalancer(GetLoadBalancerArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .regionName(\"XXX\")\n            .id(\"XXX\")\n            .build());\n\n        ctx.export(\"lb\", lbLoadBalancer.applyValue(getLoadBalancerResult -\u003e getLoadBalancerResult));\n    }\n}\n```\n```yaml\nvariables:\n  lbLoadBalancer:\n    fn::invoke:\n      function: ovh:CloudProject:getLoadBalancer\n      arguments:\n        serviceName: XXXXXX\n        regionName: XXX\n        id: XXX\noutputs:\n  lb: ${lbLoadBalancer}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLoadBalancer.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the loadbalancer\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region of the loadbalancer.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoadBalancer.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Date of creation of the loadbalancer\n"
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "ID of the flavor\n"
                    },
                    "floatingIp": {
                        "$ref": "#/types/ovh:CloudProject/getLoadBalancerFloatingIp:getLoadBalancerFloatingIp",
                        "description": "Information about the floating IP\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the floating IP\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the loadbalancer\n"
                    },
                    "operatingStatus": {
                        "type": "string",
                        "description": "Operating status of the loadbalancer\n"
                    },
                    "provisioningStatus": {
                        "type": "string",
                        "description": "Provisioning status of the loadbalancer\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region of the loadbalancer\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the public cloud project\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date of the loadbalancer\n"
                    },
                    "vipAddress": {
                        "type": "string",
                        "description": "IP address of the Virtual IP\n"
                    },
                    "vipNetworkId": {
                        "type": "string",
                        "description": "Openstack ID of the network for the Virtual IP\n"
                    },
                    "vipSubnetId": {
                        "type": "string",
                        "description": "ID of the subnet for the Virtual IP\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "flavorId",
                    "floatingIp",
                    "id",
                    "name",
                    "operatingStatus",
                    "provisioningStatus",
                    "regionName",
                    "serviceName",
                    "updatedAt",
                    "vipAddress",
                    "vipNetworkId",
                    "vipSubnetId"
                ]
            }
        },
        "ovh:CloudProject/getLoadBalancerFlavors:getLoadBalancerFlavors": {
            "description": "List loadbalancer flavors in the given public cloud region.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst flavors = ovh.CloudProject.getLoadBalancerFlavors({\n    regionName: \"GRA9\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nflavors = ovh.CloudProject.get_load_balancer_flavors(region_name=\"GRA9\",\n    service_name=\"\u003cpublic cloud project ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var flavors = Ovh.CloudProject.GetLoadBalancerFlavors.Invoke(new()\n    {\n        RegionName = \"GRA9\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetLoadBalancerFlavors(ctx, \u0026cloudproject.GetLoadBalancerFlavorsArgs{\n\t\t\tRegionName:  \"GRA9\",\n\t\t\tServiceName: \"\u003cpublic cloud project ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetLoadBalancerFlavorsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var flavors = CloudProjectFunctions.getLoadBalancerFlavors(GetLoadBalancerFlavorsArgs.builder()\n            .regionName(\"GRA9\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  flavors:\n    fn::invoke:\n      function: ovh:CloudProject:getLoadBalancerFlavors\n      arguments:\n        regionName: GRA9\n        serviceName: \u003cpublic cloud project ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLoadBalancerFlavors.\n",
                "properties": {
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoadBalancerFlavors.\n",
                "properties": {
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getLoadBalancerFlavorsFlavor:getLoadBalancerFlavorsFlavor"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "flavors",
                    "regionName",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getLoadBalancers:getLoadBalancers": {
            "description": "List your public cloud loadbalancers.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbsLoadBalancers = ovh.CloudProject.getLoadBalancers({\n    serviceName: \"XXXXXX\",\n    regionName: \"XXX\",\n});\nexport const lbs = lbsLoadBalancers;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlbs_load_balancers = ovh.CloudProject.get_load_balancers(service_name=\"XXXXXX\",\n    region_name=\"XXX\")\npulumi.export(\"lbs\", lbs_load_balancers)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lbsLoadBalancers = Ovh.CloudProject.GetLoadBalancers.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        RegionName = \"XXX\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"lbs\"] = lbsLoadBalancers,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tlbsLoadBalancers, err := cloudproject.GetLoadBalancers(ctx, \u0026cloudproject.GetLoadBalancersArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tRegionName:  \"XXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"lbs\", lbsLoadBalancers)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetLoadBalancersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lbsLoadBalancers = CloudProjectFunctions.getLoadBalancers(GetLoadBalancersArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .regionName(\"XXX\")\n            .build());\n\n        ctx.export(\"lbs\", lbsLoadBalancers.applyValue(getLoadBalancersResult -\u003e getLoadBalancersResult));\n    }\n}\n```\n```yaml\nvariables:\n  lbsLoadBalancers:\n    fn::invoke:\n      function: ovh:CloudProject:getLoadBalancers\n      arguments:\n        serviceName: XXXXXX\n        regionName: XXX\noutputs:\n  lbs: ${lbsLoadBalancers}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLoadBalancers.\n",
                "properties": {
                    "regionName": {
                        "type": "string",
                        "description": "Region of the loadbalancers.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoadBalancers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "loadbalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getLoadBalancersLoadbalancer:getLoadBalancersLoadbalancer"
                        },
                        "description": "List of loadbalancer\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region of the loadbalancers\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the public cloud project\n"
                    }
                },
                "type": "object",
                "required": [
                    "loadbalancers",
                    "regionName",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getM3dbNamespace:getM3dbNamespace": {
            "description": "Use this data source to get information about a namespace of a M3DB cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst m3dbNamespace = ovh.CloudProject.getM3dbNamespace({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const m3dbnamespaceType = m3dbNamespace.then(m3dbNamespace =\u003e m3dbNamespace.type);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nm3db_namespace = ovh.CloudProject.get_m3db_namespace(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"m3dbnamespaceType\", m3db_namespace.type)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3dbNamespace = Ovh.CloudProject.GetM3dbNamespace.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"m3dbnamespaceType\"] = m3dbNamespace.Apply(getM3dbNamespaceResult =\u003e getM3dbNamespaceResult.Type),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tm3dbNamespace, err := cloudproject.GetM3dbNamespace(ctx, \u0026cloudproject.GetM3dbNamespaceArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"m3dbnamespaceType\", m3dbNamespace.Type)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetM3dbNamespaceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3dbNamespace = CloudProjectFunctions.getM3dbNamespace(GetM3dbNamespaceArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"m3dbnamespaceType\", m3dbNamespace.applyValue(getM3dbNamespaceResult -\u003e getM3dbNamespaceResult.type()));\n    }\n}\n```\n```yaml\nvariables:\n  m3dbNamespace:\n    fn::invoke:\n      function: ovh:CloudProject:getM3dbNamespace\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  m3dbnamespaceType: ${m3dbNamespace.type}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbNamespace.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the namespace.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbNamespace.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "resolution": {
                        "type": "string",
                        "description": "Resolution for an aggregated namespace.\n"
                    },
                    "retentionBlockDataExpirationDuration": {
                        "type": "string",
                        "description": "Controls how long we wait before expiring stale data.\n"
                    },
                    "retentionBlockSizeDuration": {
                        "type": "string",
                        "description": "Controls how long to keep a block in memory before flushing to a fileset on disk.\n"
                    },
                    "retentionBufferFutureDuration": {
                        "type": "string",
                        "description": "Controls how far into the future writes to the namespace will be accepted.\n"
                    },
                    "retentionBufferPastDuration": {
                        "type": "string",
                        "description": "Controls how far into the past writes to the namespace will be accepted.\n"
                    },
                    "retentionPeriodDuration": {
                        "type": "string",
                        "description": "Controls the duration of time that M3DB will retain data for the namespace.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "snapshotEnabled": {
                        "type": "boolean",
                        "description": "SDefines whether M3db will create snapshot files for this namespace.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of namespace.\n"
                    },
                    "writesToCommitLogEnabled": {
                        "type": "boolean",
                        "description": "Defines whether M3DB will include writes to this namespace in the commit log.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "resolution",
                    "retentionBlockDataExpirationDuration",
                    "retentionBlockSizeDuration",
                    "retentionBufferFutureDuration",
                    "retentionBufferPastDuration",
                    "retentionPeriodDuration",
                    "serviceName",
                    "snapshotEnabled",
                    "type",
                    "writesToCommitLogEnabled",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getM3dbNamespaces:getM3dbNamespaces": {
            "description": "Use this data source to get the list of namespaces of a M3DB cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst namespaces = ovh.CloudProject.getM3dbNamespaces({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const namespaceIds = namespaces.then(namespaces =\u003e namespaces.namespaceIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnamespaces = ovh.CloudProject.get_m3db_namespaces(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"namespaceIds\", namespaces.namespace_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var namespaces = Ovh.CloudProject.GetM3dbNamespaces.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"namespaceIds\"] = namespaces.Apply(getM3dbNamespacesResult =\u003e getM3dbNamespacesResult.NamespaceIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnamespaces, err := cloudproject.GetM3dbNamespaces(ctx, \u0026cloudproject.GetM3dbNamespacesArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"namespaceIds\", namespaces.NamespaceIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetM3dbNamespacesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var namespaces = CloudProjectFunctions.getM3dbNamespaces(GetM3dbNamespacesArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"namespaceIds\", namespaces.applyValue(getM3dbNamespacesResult -\u003e getM3dbNamespacesResult.namespaceIds()));\n    }\n}\n```\n```yaml\nvariables:\n  namespaces:\n    fn::invoke:\n      function: ovh:CloudProject:getM3dbNamespaces\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  namespaceIds: ${namespaces.namespaceIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbNamespaces.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbNamespaces.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "namespaceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of namespaces ids of the M3DB cluster associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "namespaceIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getM3dbUser:getM3dbUser": {
            "description": "Use this data source to get information about a user of a M3DB cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst m3dbUser = ovh.CloudProject.getM3dbUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const m3dbUserGroup = m3dbUser.then(m3dbUser =\u003e m3dbUser.group);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nm3db_user = ovh.CloudProject.get_m3db_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"m3dbUserGroup\", m3db_user.group)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var m3dbUser = Ovh.CloudProject.GetM3dbUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"m3dbUserGroup\"] = m3dbUser.Apply(getM3dbUserResult =\u003e getM3dbUserResult.Group),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tm3dbUser, err := cloudproject.GetM3dbUser(ctx, \u0026cloudproject.GetM3dbUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"m3dbUserGroup\", m3dbUser.Group)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetM3dbUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var m3dbUser = CloudProjectFunctions.getM3dbUser(GetM3dbUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"m3dbUserGroup\", m3dbUser.applyValue(getM3dbUserResult -\u003e getM3dbUserResult.group()));\n    }\n}\n```\n```yaml\nvariables:\n  m3dbUser:\n    fn::invoke:\n      function: ovh:CloudProject:getM3dbUser\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  m3dbUserGroup: ${m3dbUser.group}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "group",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getMongoDbPrometheus:getMongoDbPrometheus": {
            "description": "Use this data source to get information about a prometheus of a MongoDB cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst prometheus = ovh.CloudProject.getMongoDbPrometheus({\n    serviceName: \"XXX\",\n    clusterId: \"ZZZ\",\n});\nexport const name = prometheus.then(prometheus =\u003e prometheus.username);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nprometheus = ovh.CloudProject.get_mongo_db_prometheus(service_name=\"XXX\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"name\", prometheus.username)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var prometheus = Ovh.CloudProject.GetMongoDbPrometheus.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"name\"] = prometheus.Apply(getMongoDbPrometheusResult =\u003e getMongoDbPrometheusResult.Username),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tprometheus, err := cloudproject.GetMongoDbPrometheus(ctx, \u0026cloudproject.GetMongoDbPrometheusArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"name\", prometheus.Username)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetMongoDbPrometheusArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var prometheus = CloudProjectFunctions.getMongoDbPrometheus(GetMongoDbPrometheusArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"name\", prometheus.applyValue(getMongoDbPrometheusResult -\u003e getMongoDbPrometheusResult.username()));\n    }\n}\n```\n```yaml\nvariables:\n  prometheus:\n    fn::invoke:\n      function: ovh:CloudProject:getMongoDbPrometheus\n      arguments:\n        serviceName: XXX\n        clusterId: ZZZ\noutputs:\n  name: ${prometheus.username}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMongoDbPrometheus.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMongoDbPrometheus.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "srvDomain": {
                        "type": "string",
                        "description": "Name of the srv domain endpoint.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "name of the prometheus user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName",
                    "srvDomain",
                    "username",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getMongoDbUser:getMongoDbUser": {
            "description": "Use this data source to get information about a user of a mongodb cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mongoUser = ovh.CloudProject.getMongoDbUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ@admin\",\n});\nexport const mongoUserRoles = mongoUser.then(mongoUser =\u003e mongoUser.roles);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmongo_user = ovh.CloudProject.get_mongo_db_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ@admin\")\npulumi.export(\"mongoUserRoles\", mongo_user.roles)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mongoUser = Ovh.CloudProject.GetMongoDbUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ@admin\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"mongoUserRoles\"] = mongoUser.Apply(getMongoDbUserResult =\u003e getMongoDbUserResult.Roles),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmongoUser, err := cloudproject.GetMongoDbUser(ctx, \u0026cloudproject.GetMongoDbUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ@admin\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"mongoUserRoles\", mongoUser.Roles)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetMongoDbUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mongoUser = CloudProjectFunctions.getMongoDbUser(GetMongoDbUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ@admin\")\n            .build());\n\n        ctx.export(\"mongoUserRoles\", mongoUser.applyValue(getMongoDbUserResult -\u003e getMongoDbUserResult.roles()));\n    }\n}\n```\n```yaml\nvariables:\n  mongoUser:\n    fn::invoke:\n      function: ovh:CloudProject:getMongoDbUser\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ@admin\noutputs:\n  mongoUserRoles: ${mongoUser.roles}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMongoDbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user with the authentication database in the format name@authDB, for example: johndoe@admin\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMongoDbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "name",
                    "roles",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getNetworkPrivate:getNetworkPrivate": {
            "description": "Get the details of a public cloud project private network.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nexport = async () =\u003e {\n    const privateNetworkPrivate = await ovh.CloudProject.getNetworkPrivate({\n        serviceName: \"XXXXXX\",\n        networkId: \"XXX\",\n    });\n    return {\n        \"private\": privateNetworkPrivate,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nprivate_network_private = ovh.CloudProject.get_network_private(service_name=\"XXXXXX\",\n    network_id=\"XXX\")\npulumi.export(\"private\", private_network_private)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var privateNetworkPrivate = Ovh.CloudProject.GetNetworkPrivate.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        NetworkId = \"XXX\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"private\"] = privateNetworkPrivate,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tprivateNetworkPrivate, err := cloudproject.GetNetworkPrivate(ctx, \u0026cloudproject.GetNetworkPrivateArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tNetworkId:   \"XXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"private\", privateNetworkPrivate)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetNetworkPrivateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var privateNetworkPrivate = CloudProjectFunctions.getNetworkPrivate(GetNetworkPrivateArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .networkId(\"XXX\")\n            .build());\n\n        ctx.export(\"private\", privateNetworkPrivate.applyValue(getNetworkPrivateResult -\u003e getNetworkPrivateResult));\n    }\n}\n```\n```yaml\nvariables:\n  privateNetworkPrivate:\n    fn::invoke:\n      function: ovh:CloudProject:getNetworkPrivate\n      arguments:\n        serviceName: XXXXXX\n        networkId: XXX\noutputs:\n  private: ${privateNetworkPrivate}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkPrivate.\n",
                "properties": {
                    "networkId": {
                        "type": "string",
                        "description": "ID of the network\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "networkId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkPrivate.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the network\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "ID of the network\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getNetworkPrivateRegion:getNetworkPrivateRegion"
                        },
                        "description": "Information about the private network in the openstack region\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the public cloud project\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the network\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the network\n"
                    },
                    "vlanId": {
                        "type": "number",
                        "description": "VLAN ID of the network\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "networkId",
                    "regions",
                    "serviceName",
                    "status",
                    "type",
                    "vlanId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getNetworkPrivateSubnets:getNetworkPrivateSubnets": {
            "description": "List public cloud project subnets of a private network.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nexport = async () =\u003e {\n    const privateNetworkPrivateSubnets = await ovh.CloudProject.getNetworkPrivateSubnets({\n        serviceName: \"XXXXXX\",\n        networkId: \"XXXXXX\",\n    });\n    return {\n        \"private\": privateNetworkPrivateSubnets,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nprivate_network_private_subnets = ovh.CloudProject.get_network_private_subnets(service_name=\"XXXXXX\",\n    network_id=\"XXXXXX\")\npulumi.export(\"private\", private_network_private_subnets)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var privateNetworkPrivateSubnets = Ovh.CloudProject.GetNetworkPrivateSubnets.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        NetworkId = \"XXXXXX\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"private\"] = privateNetworkPrivateSubnets,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tprivateNetworkPrivateSubnets, err := cloudproject.GetNetworkPrivateSubnets(ctx, \u0026cloudproject.GetNetworkPrivateSubnetsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tNetworkId:   \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"private\", privateNetworkPrivateSubnets)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetNetworkPrivateSubnetsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var privateNetworkPrivateSubnets = CloudProjectFunctions.getNetworkPrivateSubnets(GetNetworkPrivateSubnetsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .networkId(\"XXXXXX\")\n            .build());\n\n        ctx.export(\"private\", privateNetworkPrivateSubnets.applyValue(getNetworkPrivateSubnetsResult -\u003e getNetworkPrivateSubnetsResult));\n    }\n}\n```\n```yaml\nvariables:\n  privateNetworkPrivateSubnets:\n    fn::invoke:\n      function: ovh:CloudProject:getNetworkPrivateSubnets\n      arguments:\n        serviceName: XXXXXX\n        networkId: XXXXXX\noutputs:\n  private: ${privateNetworkPrivateSubnets}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkPrivateSubnets.\n",
                "properties": {
                    "networkId": {
                        "type": "string",
                        "description": "ID of the network\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "networkId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkPrivateSubnets.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "ID of the network\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the public cloud project\n"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getNetworkPrivateSubnetsSubnet:getNetworkPrivateSubnetsSubnet"
                        },
                        "description": "List of subnets\n"
                    }
                },
                "type": "object",
                "required": [
                    "networkId",
                    "serviceName",
                    "subnets",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getNetworkPrivates:getNetworkPrivates": {
            "description": "List public cloud project private networks.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nexport = async () =\u003e {\n    const privateNetworkPrivates = await ovh.CloudProject.getNetworkPrivates({\n        serviceName: \"XXXXXX\",\n    });\n    return {\n        \"private\": privateNetworkPrivates,\n    };\n}\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nprivate_network_privates = ovh.CloudProject.get_network_privates(service_name=\"XXXXXX\")\npulumi.export(\"private\", private_network_privates)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var privateNetworkPrivates = Ovh.CloudProject.GetNetworkPrivates.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"private\"] = privateNetworkPrivates,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tprivateNetworkPrivates, err := cloudproject.GetNetworkPrivates(ctx, \u0026cloudproject.GetNetworkPrivatesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"private\", privateNetworkPrivates)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetNetworkPrivatesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var privateNetworkPrivates = CloudProjectFunctions.getNetworkPrivates(GetNetworkPrivatesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n        ctx.export(\"private\", privateNetworkPrivates.applyValue(getNetworkPrivatesResult -\u003e getNetworkPrivatesResult));\n    }\n}\n```\n```yaml\nvariables:\n  privateNetworkPrivates:\n    fn::invoke:\n      function: ovh:CloudProject:getNetworkPrivates\n      arguments:\n        serviceName: XXXXXX\noutputs:\n  private: ${privateNetworkPrivates}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkPrivates.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkPrivates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getNetworkPrivatesNetwork:getNetworkPrivatesNetwork"
                        },
                        "description": "List of network\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the public cloud project\n"
                    }
                },
                "type": "object",
                "required": [
                    "networks",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getOpenSearchPattern:getOpenSearchPattern": {
            "description": "Use this data source to get information about a pattern of a opensearch cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst pattern = ovh.CloudProject.getOpenSearchPattern({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    id: \"ZZZ\",\n});\nexport const patternPattern = pattern.then(pattern =\u003e pattern.pattern);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npattern = ovh.CloudProject.get_open_search_pattern(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    id=\"ZZZ\")\npulumi.export(\"patternPattern\", pattern.pattern)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pattern = Ovh.CloudProject.GetOpenSearchPattern.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Id = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"patternPattern\"] = pattern.Apply(getOpenSearchPatternResult =\u003e getOpenSearchPatternResult.Pattern),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpattern, err := cloudproject.GetOpenSearchPattern(ctx, \u0026cloudproject.GetOpenSearchPatternArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"patternPattern\", pattern.Pattern)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetOpenSearchPatternArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var pattern = CloudProjectFunctions.getOpenSearchPattern(GetOpenSearchPatternArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .id(\"ZZZ\")\n            .build());\n\n        ctx.export(\"patternPattern\", pattern.applyValue(getOpenSearchPatternResult -\u003e getOpenSearchPatternResult.pattern()));\n    }\n}\n```\n```yaml\nvariables:\n  pattern:\n    fn::invoke:\n      function: ovh:CloudProject:getOpenSearchPattern\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        id: ZZZ\noutputs:\n  patternPattern: ${pattern.pattern}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchPattern.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Pattern ID.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchPattern.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "maxIndexCount": {
                        "type": "integer",
                        "description": "Maximum number of index for this pattern.\n"
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Pattern format.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the pattern.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "maxIndexCount",
                    "pattern",
                    "serviceName"
                ]
            }
        },
        "ovh:CloudProject/getOpenSearchPatterns:getOpenSearchPatterns": {
            "description": "Use this data source to get the list of pattern of a opensearch cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst patterns = ovh.CloudProject.getOpenSearchPatterns({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const patternIds = patterns.then(patterns =\u003e patterns.patternIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npatterns = ovh.CloudProject.get_open_search_patterns(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"patternIds\", patterns.pattern_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var patterns = Ovh.CloudProject.GetOpenSearchPatterns.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"patternIds\"] = patterns.Apply(getOpenSearchPatternsResult =\u003e getOpenSearchPatternsResult.PatternIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpatterns, err := cloudproject.GetOpenSearchPatterns(ctx, \u0026cloudproject.GetOpenSearchPatternsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"patternIds\", patterns.PatternIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetOpenSearchPatternsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var patterns = CloudProjectFunctions.getOpenSearchPatterns(GetOpenSearchPatternsArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"patternIds\", patterns.applyValue(getOpenSearchPatternsResult -\u003e getOpenSearchPatternsResult.patternIds()));\n    }\n}\n```\n```yaml\nvariables:\n  patterns:\n    fn::invoke:\n      function: ovh:CloudProject:getOpenSearchPatterns\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  patternIds: ${patterns.patternIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchPatterns.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchPatterns.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "patternIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of patterns ids of the opensearch cluster associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "patternIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getOpenSearchUser:getOpenSearchUser": {
            "description": "Use this data source to get information about a user of a opensearch cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst osUser = ovh.CloudProject.getOpenSearchUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const osUserAcls = osUser.then(osUser =\u003e osUser.acls);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nos_user = ovh.CloudProject.get_open_search_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"osUserAcls\", os_user.acls)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var osUser = Ovh.CloudProject.GetOpenSearchUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"osUserAcls\"] = osUser.Apply(getOpenSearchUserResult =\u003e getOpenSearchUserResult.Acls),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tosUser, err := cloudproject.GetOpenSearchUser(ctx, \u0026cloudproject.GetOpenSearchUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"osUserAcls\", osUser.Acls)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetOpenSearchUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var osUser = CloudProjectFunctions.getOpenSearchUser(GetOpenSearchUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"osUserAcls\", osUser.applyValue(getOpenSearchUserResult -\u003e getOpenSearchUserResult.acls()));\n    }\n}\n```\n```yaml\nvariables:\n  osUser:\n    fn::invoke:\n      function: ovh:CloudProject:getOpenSearchUser\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  osUserAcls: ${osUser.acls}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchUser.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getOpenSearchUserAcl:getOpenSearchUserAcl"
                        },
                        "description": "Acls of the user.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "acls",
                    "clusterId",
                    "createdAt",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getPrometheus:getPrometheus": {
            "description": "Use this data source to get information about a prometheus of a database cluster associated with a public cloud project. For mongodb, please use ovh.CloudProjectDatabase.MongoDbPrometheus datasource\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst prometheus = ovh.CloudProject.getPrometheus({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n});\nexport const name = prometheus.then(prometheus =\u003e prometheus.username);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nprometheus = ovh.CloudProject.get_prometheus(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"name\", prometheus.username)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var prometheus = Ovh.CloudProject.GetPrometheus.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"name\"] = prometheus.Apply(getPrometheusResult =\u003e getPrometheusResult.Username),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tprometheus, err := cloudproject.GetPrometheus(ctx, \u0026cloudproject.GetPrometheusArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"name\", prometheus.Username)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetPrometheusArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var prometheus = CloudProjectFunctions.getPrometheus(GetPrometheusArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"name\", prometheus.applyValue(getPrometheusResult -\u003e getPrometheusResult.username()));\n    }\n}\n```\n```yaml\nvariables:\n  prometheus:\n    fn::invoke:\n      function: ovh:CloudProject:getPrometheus\n      arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\noutputs:\n  name: ${prometheus.username}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPrometheus.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n",
                        "willReplaceOnChanges": true
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want user information. To get a full list of available engine visit : [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrometheus.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getPrometheusTarget:getPrometheusTarget"
                        },
                        "description": "List of all endpoint targets.\n* `Host` - Host of the endpoint.\n* `Port` - Connection port for the endpoint.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "name of the prometheus user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName",
                    "targets",
                    "username",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRancher:getRancher": {
            "description": "Retrieve information about a Managed Rancher Service in the given public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rancher = ovh.CloudProject.getRancher({\n    id: \"\u003cRancher service ID\u003e\",\n    projectId: \"\u003cpublic cloud project ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nrancher = ovh.CloudProject.get_rancher(id=\"\u003cRancher service ID\u003e\",\n    project_id=\"\u003cpublic cloud project ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rancher = Ovh.CloudProject.GetRancher.Invoke(new()\n    {\n        Id = \"\u003cRancher service ID\u003e\",\n        ProjectId = \"\u003cpublic cloud project ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetRancher(ctx, \u0026cloudproject.GetRancherArgs{\n\t\t\tId:        \"\u003cRancher service ID\u003e\",\n\t\t\tProjectId: \"\u003cpublic cloud project ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRancherArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rancher = CloudProjectFunctions.getRancher(GetRancherArgs.builder()\n            .id(\"\u003cRancher service ID\u003e\")\n            .projectId(\"\u003cpublic cloud project ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  rancher:\n    fn::invoke:\n      function: ovh:CloudProject:getRancher\n      arguments:\n        id: \u003cRancher service ID\u003e\n        projectId: \u003cpublic cloud project ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRancher.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRancher.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the managed Rancher service creation\n"
                    },
                    "currentState": {
                        "$ref": "#/types/ovh:CloudProject/getRancherCurrentState:getRancherCurrentState",
                        "description": "Current configuration applied to the managed Rancher service\n"
                    },
                    "currentTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getRancherCurrentTask:getRancherCurrentTask"
                        },
                        "description": "Asynchronous operations ongoing on the managed Rancher service\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID\n"
                    },
                    "resourceStatus": {
                        "type": "string",
                        "description": "Reflects the readiness of the managed Rancher service. A new target specification request will be accepted only in `READY` status\n"
                    },
                    "targetSpec": {
                        "$ref": "#/types/ovh:CloudProject/getRancherTargetSpec:getRancherTargetSpec",
                        "description": "Last target specification of the managed Rancher service\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of the last managed Rancher service update\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "currentState",
                    "currentTasks",
                    "id",
                    "projectId",
                    "resourceStatus",
                    "targetSpec",
                    "updatedAt"
                ]
            }
        },
        "ovh:CloudProject/getRancherPlan:getRancherPlan": {
            "description": "Use this datasource to retrieve information about the Managed Rancher plans available in the given public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst plans = ovh.CloudProject.getRancherPlan({\n    projectId: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nplans = ovh.CloudProject.get_rancher_plan(project_id=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var plans = Ovh.CloudProject.GetRancherPlan.Invoke(new()\n    {\n        ProjectId = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetRancherPlan(ctx, \u0026cloudproject.GetRancherPlanArgs{\n\t\t\tProjectId: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRancherPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var plans = CloudProjectFunctions.getRancherPlan(GetRancherPlanArgs.builder()\n            .projectId(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  plans:\n    fn::invoke:\n      function: ovh:CloudProject:getRancherPlan\n      arguments:\n        projectId: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRancherPlan.\n",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "Project ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRancherPlan.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getRancherPlanPlan:getRancherPlanPlan"
                        }
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "plans",
                    "projectId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRancherVersion:getRancherVersion": {
            "description": "Use this datasource to retrieve information about the Managed Rancher available versions in the given public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst versions = ovh.CloudProject.getRancherVersion({\n    projectId: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nversions = ovh.CloudProject.get_rancher_version(project_id=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var versions = Ovh.CloudProject.GetRancherVersion.Invoke(new()\n    {\n        ProjectId = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetRancherVersion(ctx, \u0026cloudproject.GetRancherVersionArgs{\n\t\t\tProjectId: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRancherVersionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var versions = CloudProjectFunctions.getRancherVersion(GetRancherVersionArgs.builder()\n            .projectId(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  versions:\n    fn::invoke:\n      function: ovh:CloudProject:getRancherVersion\n      arguments:\n        projectId: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRancherVersion.\n",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "Project ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRancherVersion.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID\n"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getRancherVersionVersion:getRancherVersionVersion"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "projectId",
                    "versions",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRedisUser:getRedisUser": {
            "description": "Use this data source to get information about a user of a redis cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst redisUser = ovh.CloudProject.getRedisUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const redisUserCommands = redisUser.then(redisUser =\u003e redisUser.commands);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nredis_user = ovh.CloudProject.get_redis_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"redisUserCommands\", redis_user.commands)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var redisUser = Ovh.CloudProject.GetRedisUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"redisUserCommands\"] = redisUser.Apply(getRedisUserResult =\u003e getRedisUserResult.Commands),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tredisUser, err := cloudproject.GetRedisUser(ctx, \u0026cloudproject.GetRedisUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"redisUserCommands\", redisUser.Commands)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRedisUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var redisUser = CloudProjectFunctions.getRedisUser(GetRedisUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"redisUserCommands\", redisUser.applyValue(getRedisUserResult -\u003e getRedisUserResult.commands()));\n    }\n}\n```\n```yaml\nvariables:\n  redisUser:\n    fn::invoke:\n      function: ovh:CloudProject:getRedisUser\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  redisUserCommands: ${redisUser.commands}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRedisUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRedisUser.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Categories of the user.\n"
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Channels of the user.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Commands of the user.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys of the user.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "categories",
                    "channels",
                    "clusterId",
                    "commands",
                    "createdAt",
                    "keys",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegion:getRegion": {
            "description": "Use this data source to retrieve information about a region associated with a public cloud project. The region must be associated with the project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst gRA1 = ovh.CloudProject.getRegion({\n    name: \"GRA1\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ng_ra1 = ovh.CloudProject.get_region(name=\"GRA1\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var gRA1 = Ovh.CloudProject.GetRegion.Invoke(new()\n    {\n        Name = \"GRA1\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetRegion(ctx, \u0026cloudproject.GetRegionArgs{\n\t\t\tName:        \"GRA1\",\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRegionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var gRA1 = CloudProjectFunctions.getRegion(GetRegionArgs.builder()\n            .name(\"GRA1\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  gRA1:\n    fn::invoke:\n      function: ovh:CloudProject:getRegion\n      arguments:\n        name: GRA1\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRegion.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the region associated with the public cloud project.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegion.\n",
                "properties": {
                    "continentCode": {
                        "type": "string",
                        "description": "the code of the geographic continent the region is running. E.g.: EU for Europe, US for America...\n"
                    },
                    "datacenterLocation": {
                        "type": "string",
                        "description": "The location code of the datacenter. E.g.: \"GRA\", meaning Gravelines, for region \"GRA1\"\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "the name of the public cloud service\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getRegionService:getRegionService"
                        },
                        "description": "The list of public cloud services running within the region\n"
                    }
                },
                "type": "object",
                "required": [
                    "continentCode",
                    "datacenterLocation",
                    "name",
                    "serviceName",
                    "services",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegionLoadBalancerLogSubscription:getRegionLoadBalancerLogSubscription": {
            "description": "Get information about a subscription to a Managed Loadbalancer Logs Service in a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst sub = ovh.CloudProject.getRegionLoadBalancerLogSubscription({\n    loadbalancerId: \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n    regionName: \"gggg\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    subscriptionId: \"zzzzzzzz-yyyy-xxxx-wwww-vvvvvvvvvvvv\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsub = ovh.CloudProject.get_region_load_balancer_log_subscription(loadbalancer_id=\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n    region_name=\"gggg\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    subscription_id=\"zzzzzzzz-yyyy-xxxx-wwww-vvvvvvvvvvvv\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var sub = Ovh.CloudProject.GetRegionLoadBalancerLogSubscription.Invoke(new()\n    {\n        LoadbalancerId = \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n        RegionName = \"gggg\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        SubscriptionId = \"zzzzzzzz-yyyy-xxxx-wwww-vvvvvvvvvvvv\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetRegionLoadBalancerLogSubscription(ctx, \u0026cloudproject.GetRegionLoadBalancerLogSubscriptionArgs{\n\t\t\tLoadbalancerId: \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n\t\t\tRegionName:     \"gggg\",\n\t\t\tServiceName:    \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n\t\t\tSubscriptionId: \"zzzzzzzz-yyyy-xxxx-wwww-vvvvvvvvvvvv\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRegionLoadBalancerLogSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var sub = CloudProjectFunctions.getRegionLoadBalancerLogSubscription(GetRegionLoadBalancerLogSubscriptionArgs.builder()\n            .loadbalancerId(\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\")\n            .regionName(\"gggg\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .subscriptionId(\"zzzzzzzz-yyyy-xxxx-wwww-vvvvvvvvvvvv\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  sub:\n    fn::invoke:\n      function: ovh:CloudProject:getRegionLoadBalancerLogSubscription\n      arguments:\n        loadbalancerId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\n        regionName: gggg\n        serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n        subscriptionId: zzzzzzzz-yyyy-xxxx-wwww-vvvvvvvvvvvv\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRegionLoadBalancerLogSubscription.\n",
                "properties": {
                    "loadbalancerId": {
                        "type": "string",
                        "description": "Loadbalancer id to get the logs\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud region name in which the loadbalancer is available. Ex.: \"GRA11\".\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "Subscription id\n"
                    }
                },
                "type": "object",
                "required": [
                    "loadbalancerId",
                    "regionName",
                    "serviceName",
                    "subscriptionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegionLoadBalancerLogSubscription.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date of the subscription creation\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kind": {
                        "type": "string",
                        "description": "Router used for forwarding log\n"
                    },
                    "ldpServiceName": {
                        "type": "string",
                        "description": "LDP service name\n"
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "description": "Loadbalancer id to get the logs\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud region name in which the loadbalancer will be available. Ex.: \"GRA11\".\n"
                    },
                    "resourceName": {
                        "type": "string",
                        "description": "The resource name\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "The resource type\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project.\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Data stream id to use for the subscription\n"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "The subscription id\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update of the subscription\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "kind",
                    "ldpServiceName",
                    "loadbalancerId",
                    "regionName",
                    "resourceName",
                    "resourceType",
                    "serviceName",
                    "streamId",
                    "subscriptionId",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegionLoadBalancerLogSubscriptions:getRegionLoadBalancerLogSubscriptions": {
            "description": "Get information about subscriptions to a Managed Loadbalancer Logs Service in a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst subs = ovh.CloudProject.getRegionLoadBalancerLogSubscriptions({\n    loadbalancerId: \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n    regionName: \"gggg\",\n    serviceName: \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsubs = ovh.CloudProject.get_region_load_balancer_log_subscriptions(loadbalancer_id=\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n    region_name=\"gggg\",\n    service_name=\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var subs = Ovh.CloudProject.GetRegionLoadBalancerLogSubscriptions.Invoke(new()\n    {\n        LoadbalancerId = \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n        RegionName = \"gggg\",\n        ServiceName = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetRegionLoadBalancerLogSubscriptions(ctx, \u0026cloudproject.GetRegionLoadBalancerLogSubscriptionsArgs{\n\t\t\tLoadbalancerId: \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n\t\t\tRegionName:     \"gggg\",\n\t\t\tServiceName:    \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRegionLoadBalancerLogSubscriptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var subs = CloudProjectFunctions.getRegionLoadBalancerLogSubscriptions(GetRegionLoadBalancerLogSubscriptionsArgs.builder()\n            .loadbalancerId(\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\")\n            .regionName(\"gggg\")\n            .serviceName(\"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  subs:\n    fn::invoke:\n      function: ovh:CloudProject:getRegionLoadBalancerLogSubscriptions\n      arguments:\n        loadbalancerId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\n        regionName: gggg\n        serviceName: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRegionLoadBalancerLogSubscriptions.\n",
                "properties": {
                    "kind": {
                        "type": "string",
                        "description": "currently only \"haproxy\" is available\n"
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "description": "Loadbalancer id to get the logs\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud region name in which the loadbalancer is available. Ex.: \"GRA11\".\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "loadbalancerId",
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegionLoadBalancerLogSubscriptions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kind": {
                        "type": "string",
                        "description": "Router used for forwarding log\n"
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "description": "Loadbalancer id to get the logs\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud region name in which the loadbalancer will be available. Ex.: \"GRA11\".\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project.\n"
                    },
                    "subscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the subscription id\n"
                    }
                },
                "type": "object",
                "required": [
                    "loadbalancerId",
                    "regionName",
                    "serviceName",
                    "subscriptionIds",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegions:getRegions": {
            "description": "Use this data source to get the regions of a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst regions = ovh.CloudProject.getRegions({\n    hasServicesUps: [\"network\"],\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nregions = ovh.CloudProject.get_regions(has_services_ups=[\"network\"],\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var regions = Ovh.CloudProject.GetRegions.Invoke(new()\n    {\n        HasServicesUps = new[]\n        {\n            \"network\",\n        },\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetRegions(ctx, \u0026cloudproject.GetRegionsArgs{\n\t\t\tHasServicesUps: []string{\n\t\t\t\t\"network\",\n\t\t\t},\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetRegionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var regions = CloudProjectFunctions.getRegions(GetRegionsArgs.builder()\n            .hasServicesUps(\"network\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  regions:\n    fn::invoke:\n      function: ovh:CloudProject:getRegions\n      arguments:\n        hasServicesUps:\n          - network\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of services which has to be UP in regions. Example: \"image\", \"instance\", \"network\", \"storage\", \"volume\", \"workflow\", ... If left blank, returns all regions associated with the service_name.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of regions associated with the project, filtered by services UP.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "names",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getStorage:getStorage": {
            "description": "Get S3™* compatible storage container. \\* S3 is a trademark filed by Amazon Technologies,Inc. OVHcloud's service is not sponsored by, endorsed by, or otherwise affiliated with Amazon Technologies,Inc.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst storage = ovh.CloudProject.getStorage({\n    name: \"my-storage-name\",\n    regionName: \"GRA\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nstorage = ovh.CloudProject.get_storage(name=\"my-storage-name\",\n    region_name=\"GRA\",\n    service_name=\"\u003cpublic cloud project ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var storage = Ovh.CloudProject.GetStorage.Invoke(new()\n    {\n        Name = \"my-storage-name\",\n        RegionName = \"GRA\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetStorage(ctx, \u0026cloudproject.GetStorageArgs{\n\t\t\tName:        \"my-storage-name\",\n\t\t\tRegionName:  \"GRA\",\n\t\t\tServiceName: \"\u003cpublic cloud project ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetStorageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var storage = CloudProjectFunctions.getStorage(GetStorageArgs.builder()\n            .name(\"my-storage-name\")\n            .regionName(\"GRA\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  storage:\n    fn::invoke:\n      function: ovh:CloudProject:getStorage\n      arguments:\n        name: my-storage-name\n        regionName: GRA\n        serviceName: \u003cpublic cloud project ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getStorage.\n",
                "properties": {
                    "limit": {
                        "type": "number",
                        "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                    },
                    "marker": {
                        "type": "string",
                        "description": "Key to start with when listing objects\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "List objects whose key begins with this prefix\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStorage.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and timestamp when the resource was created\n"
                    },
                    "encryption": {
                        "$ref": "#/types/ovh:CloudProject/getStorageEncryption:getStorageEncryption",
                        "description": "Encryption configuration\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "limit": {
                        "type": "number",
                        "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                    },
                    "marker": {
                        "type": "string",
                        "description": "Key to start with when listing objects\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getStorageObject:getStorageObject"
                        },
                        "description": "Container objects\n"
                    },
                    "objectsCount": {
                        "type": "number",
                        "description": "Container total objects count\n"
                    },
                    "objectsSize": {
                        "type": "number",
                        "description": "Container total objects size (bytes)\n"
                    },
                    "ownerId": {
                        "type": "number",
                        "description": "Container owner user ID\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "List objects whose key begins with this prefix\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Container region\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "replication": {
                        "$ref": "#/types/ovh:CloudProject/getStorageReplication:getStorageReplication",
                        "description": "Replication configuration\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Container tags\n"
                    },
                    "versioning": {
                        "$ref": "#/types/ovh:CloudProject/getStorageVersioning:getStorageVersioning",
                        "description": "Versioning configuration\n"
                    },
                    "virtualHost": {
                        "type": "string",
                        "description": "Container virtual host\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "encryption",
                    "limit",
                    "marker",
                    "name",
                    "objects",
                    "objectsCount",
                    "objectsSize",
                    "ownerId",
                    "prefix",
                    "region",
                    "regionName",
                    "replication",
                    "serviceName",
                    "tags",
                    "versioning",
                    "virtualHost",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getStorageObject:getStorageObject": {
            "description": "Get information about an object in a S3™* compatible storage container. \\* S3 is a trademark filed by Amazon Technologies,Inc. OVHcloud's service is not sponsored by, endorsed by, or otherwise affiliated with Amazon Technologies,Inc.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst object = ovh.CloudProject.getStorageObject({\n    key: \"\u003cobject name\u003e\",\n    name: \"\u003cbucket name\u003e\",\n    regionName: \"GRA\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nobject = ovh.CloudProject.get_storage_object(key=\"\u003cobject name\u003e\",\n    name=\"\u003cbucket name\u003e\",\n    region_name=\"GRA\",\n    service_name=\"\u003cpublic cloud project ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @object = Ovh.CloudProject.GetStorageObject.Invoke(new()\n    {\n        Key = \"\u003cobject name\u003e\",\n        Name = \"\u003cbucket name\u003e\",\n        RegionName = \"GRA\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetStorageObject(ctx, \u0026cloudproject.GetStorageObjectArgs{\n\t\t\tKey:         \"\u003cobject name\u003e\",\n\t\t\tName:        \"\u003cbucket name\u003e\",\n\t\t\tRegionName:  \"GRA\",\n\t\t\tServiceName: \"\u003cpublic cloud project ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetStorageObjectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var object = CloudProjectFunctions.getStorageObject(GetStorageObjectArgs.builder()\n            .key(\"\u003cobject name\u003e\")\n            .name(\"\u003cbucket name\u003e\")\n            .regionName(\"GRA\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  object:\n    fn::invoke:\n      function: ovh:CloudProject:getStorageObject\n      arguments:\n        key: \u003cobject name\u003e\n        name: \u003cbucket name\u003e\n        regionName: GRA\n        serviceName: \u003cpublic cloud project ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getStorageObject.\n",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "Key\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "key",
                    "name",
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStorageObject.\n",
                "properties": {
                    "etag": {
                        "type": "string",
                        "description": "ETag\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isDeleteMarker": {
                        "type": "boolean",
                        "description": "Whether this object is a delete marker\n"
                    },
                    "isLatest": {
                        "type": "boolean",
                        "description": "Whether this is the latest version of the object\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Key\n"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "Last modification date\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Size (bytes)\n"
                    },
                    "storageClass": {
                        "type": "string",
                        "description": "Storage class\n"
                    },
                    "versionId": {
                        "type": "string",
                        "description": "Version ID of the object\n"
                    }
                },
                "type": "object",
                "required": [
                    "etag",
                    "isDeleteMarker",
                    "isLatest",
                    "key",
                    "lastModified",
                    "name",
                    "regionName",
                    "serviceName",
                    "size",
                    "storageClass",
                    "versionId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getStorageObjects:getStorageObjects": {
            "description": "Get objects of S3™* compatible storage containers. \\* S3 is a trademark filed by Amazon Technologies,Inc. OVHcloud's service is not sponsored by, endorsed by, or otherwise affiliated with Amazon Technologies,Inc.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst objects = ovh.CloudProject.getStorageObjects({\n    name: \"\u003cbucket name\u003e\",\n    regionName: \"GRA\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nobjects = ovh.CloudProject.get_storage_objects(name=\"\u003cbucket name\u003e\",\n    region_name=\"GRA\",\n    service_name=\"\u003cpublic cloud project ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var objects = Ovh.CloudProject.GetStorageObjects.Invoke(new()\n    {\n        Name = \"\u003cbucket name\u003e\",\n        RegionName = \"GRA\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetStorageObjects(ctx, \u0026cloudproject.GetStorageObjectsArgs{\n\t\t\tName:        \"\u003cbucket name\u003e\",\n\t\t\tRegionName:  \"GRA\",\n\t\t\tServiceName: \"\u003cpublic cloud project ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetStorageObjectsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var objects = CloudProjectFunctions.getStorageObjects(GetStorageObjectsArgs.builder()\n            .name(\"\u003cbucket name\u003e\")\n            .regionName(\"GRA\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  objects:\n    fn::invoke:\n      function: ovh:CloudProject:getStorageObjects\n      arguments:\n        name: \u003cbucket name\u003e\n        regionName: GRA\n        serviceName: \u003cpublic cloud project ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getStorageObjects.\n",
                "properties": {
                    "keyMarker": {
                        "type": "string",
                        "description": "Key to start with when listing objects\n"
                    },
                    "limit": {
                        "type": "number",
                        "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "List objects whose key begins with this prefix\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "versionIdMarker": {
                        "type": "string",
                        "description": "Version ID to start listing from\n"
                    },
                    "withVersions": {
                        "type": "boolean",
                        "description": "List object versions\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStorageObjects.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keyMarker": {
                        "type": "string",
                        "description": "Key to start with when listing objects\n"
                    },
                    "limit": {
                        "type": "number",
                        "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name\n"
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getStorageObjectsObject:getStorageObjectsObject"
                        }
                    },
                    "prefix": {
                        "type": "string",
                        "description": "List objects whose key begins with this prefix\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "versionIdMarker": {
                        "type": "string",
                        "description": "Version ID to start listing from\n"
                    },
                    "withVersions": {
                        "type": "boolean",
                        "description": "List object versions\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "objects",
                    "regionName",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getStorages:getStorages": {
            "description": "List your S3™* compatible storage container. \\* S3 is a trademark filed by Amazon Technologies,Inc. OVHcloud's service is not sponsored by, endorsed by, or otherwise affiliated with Amazon Technologies,Inc.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst storage = ovh.CloudProject.getStorage({\n    regionName: \"GRA\",\n    serviceName: \"\u003cpublic cloud project ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nstorage = ovh.CloudProject.get_storage(region_name=\"GRA\",\n    service_name=\"\u003cpublic cloud project ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var storage = Ovh.CloudProject.GetStorage.Invoke(new()\n    {\n        RegionName = \"GRA\",\n        ServiceName = \"\u003cpublic cloud project ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetStorage(ctx, \u0026cloudproject.GetStorageArgs{\n\t\t\tRegionName:  \"GRA\",\n\t\t\tServiceName: \"\u003cpublic cloud project ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetStorageArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var storage = CloudProjectFunctions.getStorage(GetStorageArgs.builder()\n            .regionName(\"GRA\")\n            .serviceName(\"\u003cpublic cloud project ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  storage:\n    fn::invoke:\n      function: ovh:CloudProject:getStorage\n      arguments:\n        regionName: GRA\n        serviceName: \u003cpublic cloud project ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getStorages.\n",
                "properties": {
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStorages.\n",
                "properties": {
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getStoragesContainer:getStoragesContainer"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "containers",
                    "regionName",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUser:getUser": {
            "description": "Get the user details of a previously created public cloud project user.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst projectUsers = ovh.CloudProject.getUsers({\n    serviceName: \"XXX\",\n});\n// Get the user ID of a previously created user with the description \"S3-User\"\nconst users = projectUsers.then(projectUsers =\u003e .filter(user =\u003e user.description == \"S3-User\").map(user =\u003e (user.userId)));\nconst s3UserId = users[0];\nconst myUser = Promise.all([projectUsers, s3UserId]).then(([projectUsers, s3UserId]) =\u003e ovh.CloudProject.getUser({\n    serviceName: projectUsers.serviceName,\n    userId: s3UserId,\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nproject_users = ovh.CloudProject.get_users(service_name=\"XXX\")\n# Get the user ID of a previously created user with the description \"S3-User\"\nusers = [user.user_id for user in project_users.users if user.description == \"S3-User\"]\ns3_user_id = users[0]\nmy_user = ovh.CloudProject.get_user(service_name=project_users.service_name,\n    user_id=s3_user_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var projectUsers = Ovh.CloudProject.GetUsers.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n    });\n\n    // Get the user ID of a previously created user with the description \"S3-User\"\n    var users = .Where(user =\u003e user.Description == \"S3-User\").Select(user =\u003e \n    {\n        return user.UserId;\n    }).ToList();\n\n    var s3UserId = users[0];\n\n    var myUser = Ovh.CloudProject.GetUser.Invoke(new()\n    {\n        ServiceName = projectUsers.Apply(getUsersResult =\u003e getUsersResult.ServiceName),\n        UserId = s3UserId,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tprojectUsers, err := cloudproject.GetUsers(ctx, \u0026cloudproject.GetUsersArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Get the user ID of a previously created user with the description \"S3-User\"\n\t\tusers := \"TODO: For expression\"\n\t\ts3UserId := users[0]\n\t\t_, err = cloudproject.GetUser(ctx, \u0026cloudproject.GetUserArgs{\n\t\t\tServiceName: projectUsers.ServiceName,\n\t\t\tUserId:      s3UserId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetUsersArgs;\nimport com.pulumi.ovh.CloudProject.inputs.GetUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var projectUsers = CloudProjectFunctions.getUsers(GetUsersArgs.builder()\n            .serviceName(\"XXX\")\n            .build());\n\n        // Get the user ID of a previously created user with the description \"S3-User\"\n        final var users = \"TODO: ForExpression\";\n\n        final var s3UserId = users[0];\n\n        final var myUser = CloudProjectFunctions.getUser(GetUserArgs.builder()\n            .serviceName(projectUsers.applyValue(getUsersResult -\u003e getUsersResult.serviceName()))\n            .userId(s3UserId)\n            .build());\n\n    }\n}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "the date the user was created.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "description of the role\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getUserRole:getUserRole"
                        },
                        "description": "A list of roles associated with the user.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the user. should be normally set to 'ok'.\n"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string",
                        "description": "the username generated for the user. This username can be used with the Openstack API.\n"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "description",
                    "roles",
                    "serviceName",
                    "status",
                    "userId",
                    "username",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUserS3Credential:getUserS3Credential": {
            "description": "Use this data source to retrieve the Secret Access Key of an Access Key ID associated with a public cloud project's user.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst projectUsers = ovh.CloudProject.getUsers({\n    serviceName: \"XXX\",\n});\n// Get the user ID of a previously created user with the description \"S3-User\"\nconst users = projectUsers.then(projectUsers =\u003e .filter(user =\u003e user.description == \"S3-User\").map(user =\u003e (user.userId)));\nconst s3UserId = users[0];\nconst myS3Credentials = Promise.all([projectUsers, s3UserId]).then(([projectUsers, s3UserId]) =\u003e ovh.CloudProject.getUserS3Credentials({\n    serviceName: projectUsers.serviceName,\n    userId: s3UserId,\n}));\nconst myS3Credential = Promise.all([myS3Credentials, myS3Credentials, myS3Credentials]).then(([myS3Credentials, myS3Credentials1, myS3Credentials2]) =\u003e ovh.CloudProject.getUserS3Credential({\n    serviceName: myS3Credentials.serviceName,\n    userId: myS3Credentials1.userId,\n    accessKeyId: myS3Credentials2.accessKeyIds?.[0],\n}));\nexport const myAccessKeyId = myS3Credential.then(myS3Credential =\u003e myS3Credential.accessKeyId);\nexport const mySecretAccessKey = myS3Credential.then(myS3Credential =\u003e myS3Credential.secretAccessKey);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nproject_users = ovh.CloudProject.get_users(service_name=\"XXX\")\n# Get the user ID of a previously created user with the description \"S3-User\"\nusers = [user.user_id for user in project_users.users if user.description == \"S3-User\"]\ns3_user_id = users[0]\nmy_s3_credentials = ovh.CloudProject.get_user_s3_credentials(service_name=project_users.service_name,\n    user_id=s3_user_id)\nmy_s3_credential = ovh.CloudProject.get_user_s3_credential(service_name=my_s3_credentials.service_name,\n    user_id=my_s3_credentials.user_id,\n    access_key_id=my_s3_credentials.access_key_ids[0])\npulumi.export(\"myAccessKeyId\", my_s3_credential.access_key_id)\npulumi.export(\"mySecretAccessKey\", my_s3_credential.secret_access_key)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var projectUsers = Ovh.CloudProject.GetUsers.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n    });\n\n    // Get the user ID of a previously created user with the description \"S3-User\"\n    var users = .Where(user =\u003e user.Description == \"S3-User\").Select(user =\u003e \n    {\n        return user.UserId;\n    }).ToList();\n\n    var s3UserId = users[0];\n\n    var myS3Credentials = Ovh.CloudProject.GetUserS3Credentials.Invoke(new()\n    {\n        ServiceName = projectUsers.Apply(getUsersResult =\u003e getUsersResult.ServiceName),\n        UserId = s3UserId,\n    });\n\n    var myS3Credential = Ovh.CloudProject.GetUserS3Credential.Invoke(new()\n    {\n        ServiceName = myS3Credentials.Apply(getUserS3CredentialsResult =\u003e getUserS3CredentialsResult.ServiceName),\n        UserId = myS3Credentials.Apply(getUserS3CredentialsResult =\u003e getUserS3CredentialsResult.UserId),\n        AccessKeyId = myS3Credentials.Apply(getUserS3CredentialsResult =\u003e getUserS3CredentialsResult.AccessKeyIds[0]),\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"myAccessKeyId\"] = myS3Credential.Apply(getUserS3CredentialResult =\u003e getUserS3CredentialResult.AccessKeyId),\n        [\"mySecretAccessKey\"] = myS3Credential.Apply(getUserS3CredentialResult =\u003e getUserS3CredentialResult.SecretAccessKey),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tprojectUsers, err := cloudproject.GetUsers(ctx, \u0026cloudproject.GetUsersArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Get the user ID of a previously created user with the description \"S3-User\"\n\t\tusers := \"TODO: For expression\"\n\t\ts3UserId := users[0]\n\t\tmyS3Credentials, err := cloudproject.GetUserS3Credentials(ctx, \u0026cloudproject.GetUserS3CredentialsArgs{\n\t\t\tServiceName: projectUsers.ServiceName,\n\t\t\tUserId:      s3UserId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyS3Credential, err := cloudproject.GetUserS3Credential(ctx, \u0026cloudproject.GetUserS3CredentialArgs{\n\t\t\tServiceName: myS3Credentials.ServiceName,\n\t\t\tUserId:      myS3Credentials.UserId,\n\t\t\tAccessKeyId: myS3Credentials.AccessKeyIds[0],\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"myAccessKeyId\", myS3Credential.AccessKeyId)\n\t\tctx.Export(\"mySecretAccessKey\", myS3Credential.SecretAccessKey)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetUsersArgs;\nimport com.pulumi.ovh.CloudProject.inputs.GetUserS3CredentialsArgs;\nimport com.pulumi.ovh.CloudProject.inputs.GetUserS3CredentialArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var projectUsers = CloudProjectFunctions.getUsers(GetUsersArgs.builder()\n            .serviceName(\"XXX\")\n            .build());\n\n        // Get the user ID of a previously created user with the description \"S3-User\"\n        final var users = \"TODO: ForExpression\";\n\n        final var s3UserId = users[0];\n\n        final var myS3Credentials = CloudProjectFunctions.getUserS3Credentials(GetUserS3CredentialsArgs.builder()\n            .serviceName(projectUsers.applyValue(getUsersResult -\u003e getUsersResult.serviceName()))\n            .userId(s3UserId)\n            .build());\n\n        final var myS3Credential = CloudProjectFunctions.getUserS3Credential(GetUserS3CredentialArgs.builder()\n            .serviceName(myS3Credentials.applyValue(getUserS3CredentialsResult -\u003e getUserS3CredentialsResult.serviceName()))\n            .userId(myS3Credentials.applyValue(getUserS3CredentialsResult -\u003e getUserS3CredentialsResult.userId()))\n            .accessKeyId(myS3Credentials.applyValue(getUserS3CredentialsResult -\u003e getUserS3CredentialsResult.accessKeyIds()[0]))\n            .build());\n\n        ctx.export(\"myAccessKeyId\", myS3Credential.applyValue(getUserS3CredentialResult -\u003e getUserS3CredentialResult.accessKeyId()));\n        ctx.export(\"mySecretAccessKey\", myS3Credential.applyValue(getUserS3CredentialResult -\u003e getUserS3CredentialResult.secretAccessKey()));\n    }\n}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserS3Credential.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "the Access Key ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyId",
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserS3Credential.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "(Sensitive) the Secret Access Key\n",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyId",
                    "secretAccessKey",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUserS3Credentials:getUserS3Credentials": {
            "description": "Use this data source to retrieve the list of all the S3 access_key_id associated with a public cloud project's user.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myS3Credentials = ovh.CloudProject.getUserS3Credentials({\n    serviceName: \"XXXXXX\",\n    userId: \"1234\",\n});\nexport const accessKeyIds = myS3Credentials.then(myS3Credentials =\u003e myS3Credentials.accessKeyIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_s3_credentials = ovh.CloudProject.get_user_s3_credentials(service_name=\"XXXXXX\",\n    user_id=\"1234\")\npulumi.export(\"accessKeyIds\", my_s3_credentials.access_key_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myS3Credentials = Ovh.CloudProject.GetUserS3Credentials.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        UserId = \"1234\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"accessKeyIds\"] = myS3Credentials.Apply(getUserS3CredentialsResult =\u003e getUserS3CredentialsResult.AccessKeyIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyS3Credentials, err := cloudproject.GetUserS3Credentials(ctx, \u0026cloudproject.GetUserS3CredentialsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tUserId:      \"1234\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"accessKeyIds\", myS3Credentials.AccessKeyIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetUserS3CredentialsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myS3Credentials = CloudProjectFunctions.getUserS3Credentials(GetUserS3CredentialsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .userId(\"1234\")\n            .build());\n\n        ctx.export(\"accessKeyIds\", myS3Credentials.applyValue(getUserS3CredentialsResult -\u003e getUserS3CredentialsResult.accessKeyIds()));\n    }\n}\n```\n```yaml\nvariables:\n  myS3Credentials:\n    fn::invoke:\n      function: ovh:CloudProject:getUserS3Credentials\n      arguments:\n        serviceName: XXXXXX\n        userId: '1234'\noutputs:\n  accessKeyIds: ${myS3Credentials.accessKeyIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserS3Credentials.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserS3Credentials.\n",
                "properties": {
                    "accessKeyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the Access Key ID associated with this user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyIds",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUserS3Policy:getUserS3Policy": {
            "description": "Get the S3 Policy of a public cloud project user. The policy can be set by using the `ovh.CloudProject.S3Policy` resource.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst projectUsers = ovh.CloudProject.getUsers({\n    serviceName: \"XXX\",\n});\n// Get the user ID of a previously created user with the description \"S3-User\"\nconst users = projectUsers.then(projectUsers =\u003e .filter(user =\u003e user.description == \"S3-User\").map(user =\u003e (user.userId)));\nconst s3UserId = users[0];\nconst policy = Promise.all([projectUsers, s3UserId]).then(([projectUsers, s3UserId]) =\u003e ovh.CloudProject.getUserS3Policy({\n    serviceName: projectUsers.serviceName,\n    userId: s3UserId,\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nproject_users = ovh.CloudProject.get_users(service_name=\"XXX\")\n# Get the user ID of a previously created user with the description \"S3-User\"\nusers = [user.user_id for user in project_users.users if user.description == \"S3-User\"]\ns3_user_id = users[0]\npolicy = ovh.CloudProject.get_user_s3_policy(service_name=project_users.service_name,\n    user_id=s3_user_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var projectUsers = Ovh.CloudProject.GetUsers.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n    });\n\n    // Get the user ID of a previously created user with the description \"S3-User\"\n    var users = .Where(user =\u003e user.Description == \"S3-User\").Select(user =\u003e \n    {\n        return user.UserId;\n    }).ToList();\n\n    var s3UserId = users[0];\n\n    var policy = Ovh.CloudProject.GetUserS3Policy.Invoke(new()\n    {\n        ServiceName = projectUsers.Apply(getUsersResult =\u003e getUsersResult.ServiceName),\n        UserId = s3UserId,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tprojectUsers, err := cloudproject.GetUsers(ctx, \u0026cloudproject.GetUsersArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Get the user ID of a previously created user with the description \"S3-User\"\n\t\tusers := \"TODO: For expression\"\n\t\ts3UserId := users[0]\n\t\t_, err = cloudproject.GetUserS3Policy(ctx, \u0026cloudproject.GetUserS3PolicyArgs{\n\t\t\tServiceName: projectUsers.ServiceName,\n\t\t\tUserId:      s3UserId,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetUsersArgs;\nimport com.pulumi.ovh.CloudProject.inputs.GetUserS3PolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var projectUsers = CloudProjectFunctions.getUsers(GetUsersArgs.builder()\n            .serviceName(\"XXX\")\n            .build());\n\n        // Get the user ID of a previously created user with the description \"S3-User\"\n        final var users = \"TODO: ForExpression\";\n\n        final var s3UserId = users[0];\n\n        final var policy = CloudProjectFunctions.getUserS3Policy(GetUserS3PolicyArgs.builder()\n            .serviceName(projectUsers.applyValue(getUsersResult -\u003e getUsersResult.serviceName()))\n            .userId(s3UserId)\n            .build());\n\n    }\n}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUserS3Policy.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of a public cloud project's user.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserS3Policy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "policy": {
                        "type": "string",
                        "description": "(Required) The policy document. This is a JSON formatted string.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "policy",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUsers:getUsers": {
            "description": "Get the list of all users of a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst projectUsers = ovh.CloudProject.getUsers({\n    serviceName: \"XXX\",\n});\n// Get the user ID of a previously created user with the description \"S3-User\"\nconst users = projectUsers.then(projectUsers =\u003e .filter(user =\u003e user.description == \"S3-User\").map(user =\u003e (user.userId)));\nconst s3UserId = users[0];\nexport const userId = s3UserId;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nproject_users = ovh.CloudProject.get_users(service_name=\"XXX\")\n# Get the user ID of a previously created user with the description \"S3-User\"\nusers = [user.user_id for user in project_users.users if user.description == \"S3-User\"]\ns3_user_id = users[0]\npulumi.export(\"userId\", s3_user_id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var projectUsers = Ovh.CloudProject.GetUsers.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n    });\n\n    // Get the user ID of a previously created user with the description \"S3-User\"\n    var users = .Where(user =\u003e user.Description == \"S3-User\").Select(user =\u003e \n    {\n        return user.UserId;\n    }).ToList();\n\n    var s3UserId = users[0];\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"userId\"] = s3UserId,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tprojectUsers, err := cloudproject.GetUsers(ctx, \u0026cloudproject.GetUsersArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// Get the user ID of a previously created user with the description \"S3-User\"\n\t\tusers := \"TODO: For expression\"\n\t\ts3UserId := users[0]\n\t\tctx.Export(\"userId\", s3UserId)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var projectUsers = CloudProjectFunctions.getUsers(GetUsersArgs.builder()\n            .serviceName(\"XXX\")\n            .build());\n\n        // Get the user ID of a previously created user with the description \"S3-User\"\n        final var users = \"TODO: ForExpression\";\n\n        final var s3UserId = users[0];\n\n        ctx.export(\"userId\", s3UserId);\n    }\n}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getUsersUser:getUsersUser"
                        },
                        "description": "The list of users of a public cloud project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "users",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getVRack:getVRack": {
            "description": "Use this data source to get the linked vrack on your public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vrackVRack = ovh.CloudProject.getVRack({\n    serviceName: \"XXXXXX\",\n});\nexport const vrack = vrackVRack;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvrack_v_rack = ovh.CloudProject.get_v_rack(service_name=\"XXXXXX\")\npulumi.export(\"vrack\", vrack_v_rack)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vrackVRack = Ovh.CloudProject.GetVRack.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"vrack\"] = vrackVRack,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tvrackVRack, err := cloudproject.GetVRack(ctx, \u0026cloudproject.GetVRackArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"vrack\", vrackVRack)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetVRackArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var vrackVRack = CloudProjectFunctions.getVRack(GetVRackArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n        ctx.export(\"vrack\", vrackVRack.applyValue(getVRackResult -\u003e getVRackResult));\n    }\n}\n```\n```yaml\nvariables:\n  vrackVRack:\n    fn::invoke:\n      function: ovh:CloudProject:getVRack\n      arguments:\n        serviceName: XXXXXX\noutputs:\n  vrack: ${vrackVRack}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVRack.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVRack.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The id of the vrack\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the vrack\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project\n"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "name",
                    "serviceName"
                ]
            }
        },
        "ovh:CloudProject/getVolume:getVolume": {
            "description": "Get information about a volume in a public cloud project\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst volume = ovh.CloudProject.getVolume({\n    regionName: \"xxx\",\n    serviceName: \"yyy\",\n    volumeId: \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvolume = ovh.CloudProject.get_volume(region_name=\"xxx\",\n    service_name=\"yyy\",\n    volume_id=\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var volume = Ovh.CloudProject.GetVolume.Invoke(new()\n    {\n        RegionName = \"xxx\",\n        ServiceName = \"yyy\",\n        VolumeId = \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetVolume(ctx, \u0026cloudproject.GetVolumeArgs{\n\t\t\tRegionName:  \"xxx\",\n\t\t\tServiceName: \"yyy\",\n\t\t\tVolumeId:    \"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetVolumeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var volume = CloudProjectFunctions.getVolume(GetVolumeArgs.builder()\n            .regionName(\"xxx\")\n            .serviceName(\"yyy\")\n            .volumeId(\"aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  volume:\n    fn::invoke:\n      function: ovh:CloudProject:getVolume\n      arguments:\n        regionName: xxx\n        serviceName: yyy\n        volumeId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVolume.\n",
                "properties": {
                    "regionName": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud region name in which the volume is available. Ex.: \"GRA11\".\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project.\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "Volume id to get the informations\n"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName",
                    "volumeId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVolume.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the volume (E.g.: \"GRA\", meaning Gravelines, for region \"GRA1\")\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "The region name where volume is available\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project.\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "The size of the volume\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "The id of the volume\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "regionName",
                    "serviceName",
                    "size",
                    "volumeId"
                ]
            }
        },
        "ovh:CloudProject/getVolumes:getVolumes": {
            "description": "Get all the volume from a region of a public cloud project\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst volume = ovh.CloudProject.getVolume({\n    regionName: \"xxx\",\n    serviceName: \"yyy\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvolume = ovh.CloudProject.get_volume(region_name=\"xxx\",\n    service_name=\"yyy\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var volume = Ovh.CloudProject.GetVolume.Invoke(new()\n    {\n        RegionName = \"xxx\",\n        ServiceName = \"yyy\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cloudproject.GetVolume(ctx, \u0026cloudproject.GetVolumeArgs{\n\t\t\tRegionName:  \"xxx\",\n\t\t\tServiceName: \"yyy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProject.CloudProjectFunctions;\nimport com.pulumi.ovh.CloudProject.inputs.GetVolumeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var volume = CloudProjectFunctions.getVolume(GetVolumeArgs.builder()\n            .regionName(\"xxx\")\n            .serviceName(\"yyy\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  volume:\n    fn::invoke:\n      function: ovh:CloudProject:getVolume\n      arguments:\n        regionName: xxx\n        serviceName: yyy\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVolumes.\n",
                "properties": {
                    "regionName": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud region name in which the volumes are available. Ex.: \"GRA11\".\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVolumes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "The region name where volumes are available\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project.\n"
                    },
                    "volumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getVolumesVolume:getVolumesVolume"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName",
                    "volumes",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getCapabilities:getCapabilities": {
            "description": "Use this data source to get information about capabilities of a public cloud project.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCapabilities.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCapabilities.\n",
                "properties": {
                    "engines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesEngine:getCapabilitiesEngine"
                        },
                        "description": "Database engines available.\n"
                    },
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesFlavor:getCapabilitiesFlavor"
                        },
                        "description": "Flavors available.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesOption:getCapabilitiesOption"
                        },
                        "description": "Options available.\n"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesPlan:getCapabilitiesPlan"
                        },
                        "description": "Plans available.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "engines",
                    "flavors",
                    "options",
                    "plans",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getCertificates:getCertificates": {
            "description": "Use this data source to get information about certificates of a cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst certificates = ovh.CloudProjectDatabase.getCertificates({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n});\nexport const certificatesCa = certificates.then(certificates =\u003e certificates.ca);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncertificates = ovh.CloudProjectDatabase.get_certificates(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"certificatesCa\", certificates.ca)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var certificates = Ovh.CloudProjectDatabase.GetCertificates.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"certificatesCa\"] = certificates.Apply(getCertificatesResult =\u003e getCertificatesResult.Ca),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tcertificates, err := cloudprojectdatabase.GetCertificates(ctx, \u0026cloudprojectdatabase.GetCertificatesArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"certificatesCa\", certificates.Ca)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetCertificatesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var certificates = CloudProjectDatabaseFunctions.getCertificates(GetCertificatesArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"certificatesCa\", certificates.applyValue(getCertificatesResult -\u003e getCertificatesResult.ca()));\n    }\n}\n```\n```yaml\nvariables:\n  certificates:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getCertificates\n      arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\noutputs:\n  certificatesCa: ${certificates.ca}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCertificates.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want database information. To get a full list of available engine visit: [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCertificates.\n",
                "properties": {
                    "ca": {
                        "type": "string",
                        "description": "CA certificate used for the service.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "ca",
                    "clusterId",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabase:getDatabase": {
            "description": "Use this data source to get the managed database of a public cloud project.\n\n## Example Usage\n\nTo get information of a database cluster service:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst db = ovh.CloudProjectDatabase.getDatabase({\n    serviceName: \"XXXXXX\",\n    engine: \"YYYY\",\n    id: \"ZZZZ\",\n});\nexport const clusterId = db.then(db =\u003e db.id);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndb = ovh.CloudProjectDatabase.get_database(service_name=\"XXXXXX\",\n    engine=\"YYYY\",\n    id=\"ZZZZ\")\npulumi.export(\"clusterId\", db.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var db = Ovh.CloudProjectDatabase.GetDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Engine = \"YYYY\",\n        Id = \"ZZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"clusterId\"] = db.Apply(getDatabaseResult =\u003e getDatabaseResult.Id),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdb, err := cloudprojectdatabase.GetDatabase(ctx, \u0026cloudprojectdatabase.GetDatabaseArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tId:          \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"clusterId\", db.Id)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var db = CloudProjectDatabaseFunctions.getDatabase(GetDatabaseArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .engine(\"YYYY\")\n            .id(\"ZZZZ\")\n            .build());\n\n        ctx.export(\"clusterId\", db.applyValue(getDatabaseResult -\u003e getDatabaseResult.id()));\n    }\n}\n```\n```yaml\nvariables:\n  db:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabase\n      arguments:\n        serviceName: XXXXXX\n        engine: YYYY\n        id: ZZZZ\noutputs:\n  clusterId: ${db.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabase.\n",
                "properties": {
                    "engine": {
                        "type": "string",
                        "description": "The database engine you want to get information. To get a full list of available engine visit: [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "engine",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabase.\n",
                "properties": {
                    "advancedConfiguration": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Advanced configuration key / value.\n"
                    },
                    "backupRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of region where backups are pushed.\n"
                    },
                    "backupTime": {
                        "type": "string",
                        "description": "Time on which backups start every day.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the cluster.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the IP restriction\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "The disk size (in GB) of the database service.\n"
                    },
                    "diskType": {
                        "type": "string",
                        "description": "The disk type of the database service.\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getDatabaseEndpoint:getDatabaseEndpoint"
                        },
                        "description": "List of all endpoints objects of the service.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "A valid OVHcloud public cloud database flavor name in which the nodes will be started.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getDatabaseIpRestriction:getDatabaseIpRestriction"
                        },
                        "description": "IP Blocks authorized to access to the cluster.\n"
                    },
                    "kafkaRestApi": {
                        "type": "boolean",
                        "description": "Defines whether the REST API is enabled on a kafka cluster.\n"
                    },
                    "kafkaSchemaRegistry": {
                        "type": "boolean",
                        "description": "Defines whether the schema registry is enabled on a Kafka cluster\n"
                    },
                    "maintenanceTime": {
                        "type": "string",
                        "description": "Time on which maintenances can start every day.\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Type of network of the cluster.\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getDatabaseNode:getDatabaseNode"
                        },
                        "description": "List of nodes object.\n"
                    },
                    "opensearchAclsEnabled": {
                        "type": "boolean"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Plan of the cluster.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the cluster.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the engine in which the service should be deployed\n"
                    }
                },
                "type": "object",
                "required": [
                    "advancedConfiguration",
                    "backupRegions",
                    "backupTime",
                    "createdAt",
                    "description",
                    "diskSize",
                    "diskType",
                    "endpoints",
                    "engine",
                    "flavor",
                    "id",
                    "ipRestrictions",
                    "kafkaRestApi",
                    "kafkaSchemaRegistry",
                    "maintenanceTime",
                    "networkType",
                    "nodes",
                    "opensearchAclsEnabled",
                    "plan",
                    "serviceName",
                    "status",
                    "version"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseInstance:getDatabaseInstance": {
            "description": "Use this data source to get information about a database of a database cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst database = ovh.CloudProjectDatabase.getDatabaseInstance({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n    name: \"UUU\",\n});\nexport const databaseName = database.then(database =\u003e database.name);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndatabase = ovh.CloudProjectDatabase.get_database_instance(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\",\n    name=\"UUU\")\npulumi.export(\"databaseName\", database.name)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var database = Ovh.CloudProjectDatabase.GetDatabaseInstance.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n        Name = \"UUU\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"databaseName\"] = database.Apply(getDatabaseInstanceResult =\u003e getDatabaseInstanceResult.Name),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdatabase, err := cloudprojectdatabase.GetDatabaseInstance(ctx, \u0026cloudprojectdatabase.GetDatabaseInstanceArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t\tName:        \"UUU\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"databaseName\", database.Name)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseInstanceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var database = CloudProjectDatabaseFunctions.getDatabaseInstance(GetDatabaseInstanceArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .name(\"UUU\")\n            .build());\n\n        ctx.export(\"databaseName\", database.applyValue(getDatabaseInstanceResult -\u003e getDatabaseInstanceResult.name()));\n    }\n}\n```\n```yaml\nvariables:\n  database:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabaseInstance\n      arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\n        name: UUU\noutputs:\n  databaseName: ${database.name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseInstance.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want database information. To get a full list of available engine visit: [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the database.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseInstance.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Defines if the database has been created by default.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the database.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the database.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "default",
                    "engine",
                    "name",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseInstances:getDatabaseInstances": {
            "description": "Use this data source to get the list of databases of a database cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst databases = ovh.CloudProjectDatabase.getDatabaseInstances({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZ\",\n});\nexport const databaseIds = databases.then(databases =\u003e databases.databaseIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndatabases = ovh.CloudProjectDatabase.get_database_instances(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"databaseIds\", databases.database_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var databases = Ovh.CloudProjectDatabase.GetDatabaseInstances.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"databaseIds\"] = databases.Apply(getDatabaseInstancesResult =\u003e getDatabaseInstancesResult.DatabaseIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdatabases, err := cloudprojectdatabase.GetDatabaseInstances(ctx, \u0026cloudprojectdatabase.GetDatabaseInstancesArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"databaseIds\", databases.DatabaseIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseInstancesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var databases = CloudProjectDatabaseFunctions.getDatabaseInstances(GetDatabaseInstancesArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"databaseIds\", databases.applyValue(getDatabaseInstancesResult -\u003e getDatabaseInstancesResult.databaseIds()));\n    }\n}\n```\n```yaml\nvariables:\n  databases:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabaseInstances\n      arguments:\n        serviceName: XXXX\n        engine: YYYY\n        clusterId: ZZZ\noutputs:\n  databaseIds: ${databases.databaseIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseInstances.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list databases. To get a full list of available engine visit: [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseInstances.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "databaseIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of databases ids of the database cluster associated with the project.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "databaseIds",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseIntegration:getDatabaseIntegration": {
            "description": "Use this data source to get information about an integration of a database cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst integration = ovh.CloudProjectDatabase.getDatabaseIntegration({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n    id: \"UUU\",\n});\nexport const integrationType = integration.then(integration =\u003e integration.type);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nintegration = ovh.CloudProjectDatabase.get_database_integration(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\",\n    id=\"UUU\")\npulumi.export(\"integrationType\", integration.type)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var integration = Ovh.CloudProjectDatabase.GetDatabaseIntegration.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n        Id = \"UUU\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"integrationType\"] = integration.Apply(getDatabaseIntegrationResult =\u003e getDatabaseIntegrationResult.Type),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tintegration, err := cloudprojectdatabase.GetDatabaseIntegration(ctx, \u0026cloudprojectdatabase.GetDatabaseIntegrationArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t\tId:          \"UUU\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"integrationType\", integration.Type)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseIntegrationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var integration = CloudProjectDatabaseFunctions.getDatabaseIntegration(GetDatabaseIntegrationArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .id(\"UUU\")\n            .build());\n\n        ctx.export(\"integrationType\", integration.applyValue(getDatabaseIntegrationResult -\u003e getDatabaseIntegrationResult.type()));\n    }\n}\n```\n```yaml\nvariables:\n  integration:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabaseIntegration\n      arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\n        id: UUU\noutputs:\n  integrationType: ${integration.type}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseIntegration.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to add. You can find the complete list of available engine in the [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). All engines available exept `mongodb`\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Integration ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseIntegration.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "destinationServiceId": {
                        "type": "string",
                        "description": "ID of the destination service.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Parameters for the integration.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "sourceServiceId": {
                        "type": "string",
                        "description": "ID of the source service.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the integration.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the integration.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "destinationServiceId",
                    "engine",
                    "id",
                    "parameters",
                    "serviceName",
                    "sourceServiceId",
                    "status",
                    "type"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseIntegrations:getDatabaseIntegrations": {
            "description": "Use this data source to get the list of integrations of a database cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst integrations = ovh.CloudProjectDatabase.getDatabaseIntegrations({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n});\nexport const integrationIds = integrations.then(integrations =\u003e integrations.integrationIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nintegrations = ovh.CloudProjectDatabase.get_database_integrations(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"integrationIds\", integrations.integration_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var integrations = Ovh.CloudProjectDatabase.GetDatabaseIntegrations.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"integrationIds\"] = integrations.Apply(getDatabaseIntegrationsResult =\u003e getDatabaseIntegrationsResult.IntegrationIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tintegrations, err := cloudprojectdatabase.GetDatabaseIntegrations(ctx, \u0026cloudprojectdatabase.GetDatabaseIntegrationsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"integrationIds\", integrations.IntegrationIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseIntegrationsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var integrations = CloudProjectDatabaseFunctions.getDatabaseIntegrations(GetDatabaseIntegrationsArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"integrationIds\", integrations.applyValue(getDatabaseIntegrationsResult -\u003e getDatabaseIntegrationsResult.integrationIds()));\n    }\n}\n```\n```yaml\nvariables:\n  integrations:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabaseIntegrations\n      arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\noutputs:\n  integrationIds: ${integrations.integrationIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseIntegrations.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list integrations. To get a full list of available engine visit: [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). All engines available exept `mongodb`\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseIntegrations.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "integrationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of integrations ids of the database cluster associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "integrationIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseLogSubscription:getDatabaseLogSubscription": {
            "description": "Use this data source to get information about a log subscription for a cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst subscription = ovh.CloudProjectDatabase.getDatabaseLogSubscription({\n    serviceName: \"VVV\",\n    engine: \"XXX\",\n    clusterId: \"YYY\",\n    id: \"ZZZ\",\n});\nexport const subscriptionLdpName = subscription.then(subscription =\u003e subscription.ldpServiceName);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsubscription = ovh.CloudProjectDatabase.get_database_log_subscription(service_name=\"VVV\",\n    engine=\"XXX\",\n    cluster_id=\"YYY\",\n    id=\"ZZZ\")\npulumi.export(\"subscriptionLdpName\", subscription.ldp_service_name)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var subscription = Ovh.CloudProjectDatabase.GetDatabaseLogSubscription.Invoke(new()\n    {\n        ServiceName = \"VVV\",\n        Engine = \"XXX\",\n        ClusterId = \"YYY\",\n        Id = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"subscriptionLdpName\"] = subscription.Apply(getDatabaseLogSubscriptionResult =\u003e getDatabaseLogSubscriptionResult.LdpServiceName),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tsubscription, err := cloudprojectdatabase.GetDatabaseLogSubscription(ctx, \u0026cloudprojectdatabase.GetDatabaseLogSubscriptionArgs{\n\t\t\tServiceName: \"VVV\",\n\t\t\tEngine:      \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"subscriptionLdpName\", subscription.LdpServiceName)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseLogSubscriptionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var subscription = CloudProjectDatabaseFunctions.getDatabaseLogSubscription(GetDatabaseLogSubscriptionArgs.builder()\n            .serviceName(\"VVV\")\n            .engine(\"XXX\")\n            .clusterId(\"YYY\")\n            .id(\"ZZZ\")\n            .build());\n\n        ctx.export(\"subscriptionLdpName\", subscription.applyValue(getDatabaseLogSubscriptionResult -\u003e getDatabaseLogSubscriptionResult.ldpServiceName()));\n    }\n}\n```\n```yaml\nvariables:\n  subscription:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabaseLogSubscription\n      arguments:\n        serviceName: VVV\n        engine: XXX\n        clusterId: YYY\n        id: ZZZ\noutputs:\n  subscriptionLdpName: ${subscription.ldpServiceName}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseLogSubscription.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The database engine for which you want to retrieve a subscription. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Id of the log subscription.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseLogSubscription.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date of the subscription.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the log subscription.\n"
                    },
                    "kind": {
                        "type": "string",
                        "description": "Log kind name of this subscription.\n"
                    },
                    "ldpServiceName": {
                        "type": "string",
                        "description": "Name of the destination log service.\n",
                        "secret": true
                    },
                    "resourceName": {
                        "type": "string",
                        "description": "Name of subscribed resource, where the logs come from.\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "Type of subscribed resource, where the logs come from.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date of the subscription.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "engine",
                    "id",
                    "kind",
                    "ldpServiceName",
                    "resourceName",
                    "resourceType",
                    "serviceName",
                    "streamId",
                    "updatedAt"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseLogSubscriptions:getDatabaseLogSubscriptions": {
            "description": "Use this data source to get the list of log subscription for a cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst subscriptions = ovh.CloudProjectDatabase.getDatabaseLogSubscriptions({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n});\nexport const subscriptionIds = subscriptions.then(subscriptions =\u003e subscriptions.subscriptionIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nsubscriptions = ovh.CloudProjectDatabase.get_database_log_subscriptions(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"subscriptionIds\", subscriptions.subscription_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var subscriptions = Ovh.CloudProjectDatabase.GetDatabaseLogSubscriptions.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"subscriptionIds\"] = subscriptions.Apply(getDatabaseLogSubscriptionsResult =\u003e getDatabaseLogSubscriptionsResult.SubscriptionIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tsubscriptions, err := cloudprojectdatabase.GetDatabaseLogSubscriptions(ctx, \u0026cloudprojectdatabase.GetDatabaseLogSubscriptionsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"subscriptionIds\", subscriptions.SubscriptionIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabaseLogSubscriptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var subscriptions = CloudProjectDatabaseFunctions.getDatabaseLogSubscriptions(GetDatabaseLogSubscriptionsArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"subscriptionIds\", subscriptions.applyValue(getDatabaseLogSubscriptionsResult -\u003e getDatabaseLogSubscriptionsResult.subscriptionIds()));\n    }\n}\n```\n```yaml\nvariables:\n  subscriptions:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabaseLogSubscriptions\n      arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\noutputs:\n  subscriptionIds: ${subscriptions.subscriptionIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseLogSubscriptions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The database engine for which you want to retrieve a subscription. To get a full list of available engine visit. [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseLogSubscriptions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "subscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of log subscription ids of the cluster associated with the project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName",
                    "subscriptionIds",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabasePostgreSQLConnectionPools:getDatabasePostgreSQLConnectionPools": {
            "description": "Use this data source to get the list of connection pools of a postgresql cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst testPools = ovh.CloudProjectDatabase.getDatabasePostgreSQLConnectionPools({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const connectionPoolIds = testPools.then(testPools =\u003e testPools.connectionPoolIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntest_pools = ovh.CloudProjectDatabase.get_database_postgre_sql_connection_pools(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"connectionPoolIds\", test_pools.connection_pool_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testPools = Ovh.CloudProjectDatabase.GetDatabasePostgreSQLConnectionPools.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"connectionPoolIds\"] = testPools.Apply(getDatabasePostgreSQLConnectionPoolsResult =\u003e getDatabasePostgreSQLConnectionPoolsResult.ConnectionPoolIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestPools, err := cloudprojectdatabase.GetDatabasePostgreSQLConnectionPools(ctx, \u0026cloudprojectdatabase.GetDatabasePostgreSQLConnectionPoolsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"connectionPoolIds\", testPools.ConnectionPoolIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabasePostgreSQLConnectionPoolsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var testPools = CloudProjectDatabaseFunctions.getDatabasePostgreSQLConnectionPools(GetDatabasePostgreSQLConnectionPoolsArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"connectionPoolIds\", testPools.applyValue(getDatabasePostgreSQLConnectionPoolsResult -\u003e getDatabasePostgreSQLConnectionPoolsResult.connectionPoolIds()));\n    }\n}\n```\n```yaml\nvariables:\n  testPools:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabasePostgreSQLConnectionPools\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  connectionPoolIds: ${testPools.connectionPoolIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabasePostgreSQLConnectionPools.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabasePostgreSQLConnectionPools.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "connectionPoolIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of patterns ids of the opensearch cluster associated with the project.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "connectionPoolIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabases:getDatabases": {
            "description": "Use this data source to get the list of managed databases of a public cloud project.\n\n## Example Usage\n\nTo get the list of database clusters service for a given engine:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst dbs = ovh.CloudProjectDatabase.getDatabases({\n    serviceName: \"XXXXXX\",\n    engine: \"YYYY\",\n});\nexport const clusterIds = dbs.then(dbs =\u003e dbs.clusterIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndbs = ovh.CloudProjectDatabase.get_databases(service_name=\"XXXXXX\",\n    engine=\"YYYY\")\npulumi.export(\"clusterIds\", dbs.cluster_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var dbs = Ovh.CloudProjectDatabase.GetDatabases.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Engine = \"YYYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"clusterIds\"] = dbs.Apply(getDatabasesResult =\u003e getDatabasesResult.ClusterIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tdbs, err := cloudprojectdatabase.GetDatabases(ctx, \u0026cloudprojectdatabase.GetDatabasesArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"clusterIds\", dbs.ClusterIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetDatabasesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var dbs = CloudProjectDatabaseFunctions.getDatabases(GetDatabasesArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .engine(\"YYYY\")\n            .build());\n\n        ctx.export(\"clusterIds\", dbs.applyValue(getDatabasesResult -\u003e getDatabasesResult.clusterIds()));\n    }\n}\n```\n```yaml\nvariables:\n  dbs:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getDatabases\n      arguments:\n        serviceName: XXXXXX\n        engine: YYYY\noutputs:\n  clusterIds: ${dbs.clusterIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getDatabases.\n",
                "properties": {
                    "engine": {
                        "type": "string",
                        "description": "The database engine you want to list. To get a full list of available engine visit: [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabases.\n",
                "properties": {
                    "clusterIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of managed databases ids of the project.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterIds",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getIpRestrictions:getIpRestrictions": {
            "description": "Deprecated: Use ip_restrictions field in cloud_project_database datasource instead.\n\nUse this data source to get the list of IP restrictions associated with a public cloud project.\n\n## Example Usage\n\nTo get the list of IP restriction on a database cluster service:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst ipRestrictions = ovh.CloudProjectDatabase.getIpRestrictions({\n    serviceName: \"XXXXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZZ\",\n});\nexport const ips = ipRestrictions.then(ipRestrictions =\u003e ipRestrictions.ips);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nip_restrictions = ovh.CloudProjectDatabase.get_ip_restrictions(service_name=\"XXXXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZZ\")\npulumi.export(\"ips\", ip_restrictions.ips)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ipRestrictions = Ovh.CloudProjectDatabase.GetIpRestrictions.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"ips\"] = ipRestrictions.Apply(getIpRestrictionsResult =\u003e getIpRestrictionsResult.Ips),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tipRestrictions, err := cloudprojectdatabase.GetIpRestrictions(ctx, \u0026cloudprojectdatabase.GetIpRestrictionsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"ips\", ipRestrictions.Ips)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetIpRestrictionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ipRestrictions = CloudProjectDatabaseFunctions.getIpRestrictions(GetIpRestrictionsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZZ\")\n            .build());\n\n        ctx.export(\"ips\", ipRestrictions.applyValue(getIpRestrictionsResult -\u003e getIpRestrictionsResult.ips()));\n    }\n}\n```\n```yaml\nvariables:\n  ipRestrictions:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getIpRestrictions\n      arguments:\n        serviceName: XXXXXX\n        engine: YYYY\n        clusterId: ZZZZ\noutputs:\n  ips: ${ipRestrictions.ips}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getIpRestrictions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list IP restrictions. To get a full list of available engine visit: [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpRestrictions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IP restriction of the database associated with the project.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "ips",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaAcl:getKafkaAcl": {
            "description": "Use this data source to get information about an ACL of a kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst acl = ovh.CloudProjectDatabase.getKafkaAcl({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    id: \"ZZZ\",\n});\nexport const aclPermission = acl.then(acl =\u003e acl.permission);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nacl = ovh.CloudProjectDatabase.get_kafka_acl(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    id=\"ZZZ\")\npulumi.export(\"aclPermission\", acl.permission)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var acl = Ovh.CloudProjectDatabase.GetKafkaAcl.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Id = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"aclPermission\"] = acl.Apply(getKafkaAclResult =\u003e getKafkaAclResult.Permission),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tacl, err := cloudprojectdatabase.GetKafkaAcl(ctx, \u0026cloudprojectdatabase.GetKafkaAclArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"aclPermission\", acl.Permission)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var acl = CloudProjectDatabaseFunctions.getKafkaAcl(GetKafkaAclArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .id(\"ZZZ\")\n            .build());\n\n        ctx.export(\"aclPermission\", acl.applyValue(getKafkaAclResult -\u003e getKafkaAclResult.permission()));\n    }\n}\n```\n```yaml\nvariables:\n  acl:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getKafkaAcl\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        id: ZZZ\noutputs:\n  aclPermission: ${acl.permission}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ACL ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission to give to this username on this topic.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic affected by this ACL.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username affected by this ACL.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "permission",
                    "serviceName",
                    "topic",
                    "username"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaAcls:getKafkaAcls": {
            "description": "Use this data source to get the list of ACLs of a kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst acls = ovh.CloudProjectDatabase.getKafkaAcls({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const aclIds = acls.then(acls =\u003e acls.aclIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nacls = ovh.CloudProjectDatabase.get_kafka_acls(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"aclIds\", acls.acl_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var acls = Ovh.CloudProjectDatabase.GetKafkaAcls.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"aclIds\"] = acls.Apply(getKafkaAclsResult =\u003e getKafkaAclsResult.AclIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tacls, err := cloudprojectdatabase.GetKafkaAcls(ctx, \u0026cloudprojectdatabase.GetKafkaAclsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"aclIds\", acls.AclIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaAclsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var acls = CloudProjectDatabaseFunctions.getKafkaAcls(GetKafkaAclsArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"aclIds\", acls.applyValue(getKafkaAclsResult -\u003e getKafkaAclsResult.aclIds()));\n    }\n}\n```\n```yaml\nvariables:\n  acls:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getKafkaAcls\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  aclIds: ${acls.aclIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcls.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcls.\n",
                "properties": {
                    "aclIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of ACLs ids of the kafka cluster associated with the project.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "aclIds",
                    "clusterId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl": {
            "description": "Use this data source to get information about a schema registry ACL of a kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst schemaRegistryAcl = ovh.CloudProjectDatabase.getKafkaSchemaRegistryAcl({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    id: \"ZZZ\",\n});\nexport const aclPermission = schemaRegistryAcl.then(schemaRegistryAcl =\u003e schemaRegistryAcl.permission);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nschema_registry_acl = ovh.CloudProjectDatabase.get_kafka_schema_registry_acl(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    id=\"ZZZ\")\npulumi.export(\"aclPermission\", schema_registry_acl.permission)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var schemaRegistryAcl = Ovh.CloudProjectDatabase.GetKafkaSchemaRegistryAcl.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Id = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"aclPermission\"] = schemaRegistryAcl.Apply(getKafkaSchemaRegistryAclResult =\u003e getKafkaSchemaRegistryAclResult.Permission),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tschemaRegistryAcl, err := cloudprojectdatabase.GetKafkaSchemaRegistryAcl(ctx, \u0026cloudprojectdatabase.GetKafkaSchemaRegistryAclArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"aclPermission\", schemaRegistryAcl.Permission)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaSchemaRegistryAclArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var schemaRegistryAcl = CloudProjectDatabaseFunctions.getKafkaSchemaRegistryAcl(GetKafkaSchemaRegistryAclArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .id(\"ZZZ\")\n            .build());\n\n        ctx.export(\"aclPermission\", schemaRegistryAcl.applyValue(getKafkaSchemaRegistryAclResult -\u003e getKafkaSchemaRegistryAclResult.permission()));\n    }\n}\n```\n```yaml\nvariables:\n  schemaRegistryAcl:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getKafkaSchemaRegistryAcl\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        id: ZZZ\noutputs:\n  aclPermission: ${schemaRegistryAcl.permission}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaRegistryAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Schema registry ACL ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaRegistryAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission to give to this username on this topic.\n"
                    },
                    "resource": {
                        "type": "string",
                        "description": "Resource affected by this ACL.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username affected by this ACL.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "permission",
                    "resource",
                    "serviceName",
                    "username"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaSchemaRegistryAcls:getKafkaSchemaRegistryAcls": {
            "description": "Use this data source to get the list of ACLs of a kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst schemaRegistryAcls = ovh.CloudProjectDatabase.getKafkaSchemaRegistryAcls({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const aclIds = schemaRegistryAcls.then(schemaRegistryAcls =\u003e schemaRegistryAcls.aclIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nschema_registry_acls = ovh.CloudProjectDatabase.get_kafka_schema_registry_acls(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"aclIds\", schema_registry_acls.acl_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var schemaRegistryAcls = Ovh.CloudProjectDatabase.GetKafkaSchemaRegistryAcls.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"aclIds\"] = schemaRegistryAcls.Apply(getKafkaSchemaRegistryAclsResult =\u003e getKafkaSchemaRegistryAclsResult.AclIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tschemaRegistryAcls, err := cloudprojectdatabase.GetKafkaSchemaRegistryAcls(ctx, \u0026cloudprojectdatabase.GetKafkaSchemaRegistryAclsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"aclIds\", schemaRegistryAcls.AclIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaSchemaRegistryAclsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var schemaRegistryAcls = CloudProjectDatabaseFunctions.getKafkaSchemaRegistryAcls(GetKafkaSchemaRegistryAclsArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"aclIds\", schemaRegistryAcls.applyValue(getKafkaSchemaRegistryAclsResult -\u003e getKafkaSchemaRegistryAclsResult.aclIds()));\n    }\n}\n```\n```yaml\nvariables:\n  schemaRegistryAcls:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getKafkaSchemaRegistryAcls\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  aclIds: ${schemaRegistryAcls.aclIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaRegistryAcls.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaRegistryAcls.\n",
                "properties": {
                    "aclIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of schema refistry ACLs ids of the kafka cluster associated with the project.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "aclIds",
                    "clusterId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaTopic:getKafkaTopic": {
            "description": "Use this data source to get information about a topic of a kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst topic = ovh.CloudProjectDatabase.getKafkaTopic({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    id: \"ZZZ\",\n});\nexport const topicName = topic.then(topic =\u003e topic.name);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntopic = ovh.CloudProjectDatabase.get_kafka_topic(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    id=\"ZZZ\")\npulumi.export(\"topicName\", topic.name)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var topic = Ovh.CloudProjectDatabase.GetKafkaTopic.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Id = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"topicName\"] = topic.Apply(getKafkaTopicResult =\u003e getKafkaTopicResult.Name),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttopic, err := cloudprojectdatabase.GetKafkaTopic(ctx, \u0026cloudprojectdatabase.GetKafkaTopicArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tId:          \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"topicName\", topic.Name)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaTopicArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var topic = CloudProjectDatabaseFunctions.getKafkaTopic(GetKafkaTopicArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .id(\"ZZZ\")\n            .build());\n\n        ctx.export(\"topicName\", topic.applyValue(getKafkaTopicResult -\u003e getKafkaTopicResult.name()));\n    }\n}\n```\n```yaml\nvariables:\n  topic:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getKafkaTopic\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        id: ZZZ\noutputs:\n  topicName: ${topic.name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Topic ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "minInsyncReplicas": {
                        "type": "integer",
                        "description": "Minimum insync replica accepted for this topic.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the topic.\n"
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "Number of partitions for this topic.\n"
                    },
                    "replication": {
                        "type": "integer",
                        "description": "Number of replication for this topic.\n"
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "Number of bytes for the retention of the data for this topic. Inferior to 0 mean Unlimited\n"
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "Number of hours for the retention of the data for this topic. Inferior to 0 mean Unlimited\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "minInsyncReplicas",
                    "name",
                    "partitions",
                    "replication",
                    "retentionBytes",
                    "retentionHours",
                    "serviceName"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaTopics:getKafkaTopics": {
            "description": "Use this data source to get the list of topics of a kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst topics = ovh.CloudProjectDatabase.getKafkaTopics({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n});\nexport const topicIds = topics.then(topics =\u003e topics.topicIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntopics = ovh.CloudProjectDatabase.get_kafka_topics(service_name=\"XXX\",\n    cluster_id=\"YYY\")\npulumi.export(\"topicIds\", topics.topic_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var topics = Ovh.CloudProjectDatabase.GetKafkaTopics.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"topicIds\"] = topics.Apply(getKafkaTopicsResult =\u003e getKafkaTopicsResult.TopicIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttopics, err := cloudprojectdatabase.GetKafkaTopics(ctx, \u0026cloudprojectdatabase.GetKafkaTopicsArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"topicIds\", topics.TopicIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaTopicsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var topics = CloudProjectDatabaseFunctions.getKafkaTopics(GetKafkaTopicsArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .build());\n\n        ctx.export(\"topicIds\", topics.applyValue(getKafkaTopicsResult -\u003e getKafkaTopicsResult.topicIds()));\n    }\n}\n```\n```yaml\nvariables:\n  topics:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getKafkaTopics\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\noutputs:\n  topicIds: ${topics.topicIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopics.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopics.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "topicIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of topics ids of the kafka cluster associated with the project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName",
                    "topicIds",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaUserAccess:getKafkaUserAccess": {
            "description": "Use this data source to get information about user acces of a kafka cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst access = ovh.CloudProjectDatabase.getKafkaUserAccess({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    userId: \"ZZZ\",\n});\nexport const accessCert = access.then(access =\u003e access.cert);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\naccess = ovh.CloudProjectDatabase.get_kafka_user_access(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    user_id=\"ZZZ\")\npulumi.export(\"accessCert\", access.cert)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var access = Ovh.CloudProjectDatabase.GetKafkaUserAccess.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        UserId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"accessCert\"] = access.Apply(getKafkaUserAccessResult =\u003e getKafkaUserAccessResult.Cert),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\taccess, err := cloudprojectdatabase.GetKafkaUserAccess(ctx, \u0026cloudprojectdatabase.GetKafkaUserAccessArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tUserId:      \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"accessCert\", access.Cert)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetKafkaUserAccessArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var access = CloudProjectDatabaseFunctions.getKafkaUserAccess(GetKafkaUserAccessArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .userId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"accessCert\", access.applyValue(getKafkaUserAccessResult -\u003e getKafkaUserAccessResult.cert()));\n    }\n}\n```\n```yaml\nvariables:\n  access:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getKafkaUserAccess\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        userId: ZZZ\noutputs:\n  accessCert: ${access.cert}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaUserAccess.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "User ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaUserAccess.\n",
                "properties": {
                    "cert": {
                        "type": "string",
                        "description": "User cert.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "(Sensitive) User key for the cert.\n",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "cert",
                    "clusterId",
                    "key",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getPostgresSqlConnectionPool:getPostgresSqlConnectionPool": {
            "description": "Use this data source to get information about a connection pool of a postgresql cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst testPoolPostgresSqlConnectionPool = ovh.CloudProjectDatabase.getPostgresSqlConnectionPool({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const testPool = {\n    service_name: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.serviceName),\n    cluster_id: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.clusterId),\n    name: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.name),\n    database_id: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.databaseId),\n    mode: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.mode),\n    size: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.size),\n    port: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.port),\n    ssl_mode: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.sslMode),\n    uri: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.uri),\n    user_id: testPoolPostgresSqlConnectionPool.then(testPoolPostgresSqlConnectionPool =\u003e testPoolPostgresSqlConnectionPool.userId),\n};\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntest_pool_postgres_sql_connection_pool = ovh.CloudProjectDatabase.get_postgres_sql_connection_pool(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"testPool\", {\n    \"service_name\": test_pool_postgres_sql_connection_pool.service_name,\n    \"cluster_id\": test_pool_postgres_sql_connection_pool.cluster_id,\n    \"name\": test_pool_postgres_sql_connection_pool.name,\n    \"database_id\": test_pool_postgres_sql_connection_pool.database_id,\n    \"mode\": test_pool_postgres_sql_connection_pool.mode,\n    \"size\": test_pool_postgres_sql_connection_pool.size,\n    \"port\": test_pool_postgres_sql_connection_pool.port,\n    \"ssl_mode\": test_pool_postgres_sql_connection_pool.ssl_mode,\n    \"uri\": test_pool_postgres_sql_connection_pool.uri,\n    \"user_id\": test_pool_postgres_sql_connection_pool.user_id,\n})\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var testPoolPostgresSqlConnectionPool = Ovh.CloudProjectDatabase.GetPostgresSqlConnectionPool.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"testPool\"] = \n        {\n            { \"service_name\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.ServiceName) },\n            { \"cluster_id\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.ClusterId) },\n            { \"name\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.Name) },\n            { \"database_id\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.DatabaseId) },\n            { \"mode\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.Mode) },\n            { \"size\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.Size) },\n            { \"port\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.Port) },\n            { \"ssl_mode\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.SslMode) },\n            { \"uri\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.Uri) },\n            { \"user_id\", testPoolPostgresSqlConnectionPool.Apply(getPostgresSqlConnectionPoolResult =\u003e getPostgresSqlConnectionPoolResult.UserId) },\n        },\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttestPoolPostgresSqlConnectionPool, err := cloudprojectdatabase.GetPostgresSqlConnectionPool(ctx, \u0026cloudprojectdatabase.GetPostgresSqlConnectionPoolArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"testPool\", pulumi.Map{\n\t\t\t\"service_name\": testPoolPostgresSqlConnectionPool.ServiceName,\n\t\t\t\"cluster_id\":   testPoolPostgresSqlConnectionPool.ClusterId,\n\t\t\t\"name\":         testPoolPostgresSqlConnectionPool.Name,\n\t\t\t\"database_id\":  testPoolPostgresSqlConnectionPool.DatabaseId,\n\t\t\t\"mode\":         testPoolPostgresSqlConnectionPool.Mode,\n\t\t\t\"size\":         testPoolPostgresSqlConnectionPool.Size,\n\t\t\t\"port\":         testPoolPostgresSqlConnectionPool.Port,\n\t\t\t\"ssl_mode\":     testPoolPostgresSqlConnectionPool.SslMode,\n\t\t\t\"uri\":          testPoolPostgresSqlConnectionPool.Uri,\n\t\t\t\"user_id\":      testPoolPostgresSqlConnectionPool.UserId,\n\t\t})\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetPostgresSqlConnectionPoolArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var testPoolPostgresSqlConnectionPool = CloudProjectDatabaseFunctions.getPostgresSqlConnectionPool(GetPostgresSqlConnectionPoolArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"testPool\", %!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference));\n    }\n}\n```\n```yaml\nvariables:\n  testPoolPostgresSqlConnectionPool:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getPostgresSqlConnectionPool\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  testPool:\n    service_name: ${testPoolPostgresSqlConnectionPool.serviceName}\n    cluster_id: ${testPoolPostgresSqlConnectionPool.clusterId}\n    name: ${testPoolPostgresSqlConnectionPool.name}\n    database_id: ${testPoolPostgresSqlConnectionPool.databaseId}\n    mode: ${testPoolPostgresSqlConnectionPool.mode}\n    size: ${testPoolPostgresSqlConnectionPool.size}\n    port: ${testPoolPostgresSqlConnectionPool.port}\n    ssl_mode: ${testPoolPostgresSqlConnectionPool.sslMode}\n    uri: ${testPoolPostgresSqlConnectionPool.uri}\n    user_id: ${testPoolPostgresSqlConnectionPool.userId}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPostgresSqlConnectionPool.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Connection pool.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPostgresSqlConnectionPool.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above\n"
                    },
                    "databaseId": {
                        "type": "string",
                        "description": "Database ID for a database that belongs to the Database cluster given above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Connection mode to the connection pool Available modes:\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "See Argument Reference above\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port of the connection pool.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the connection pool.\n"
                    },
                    "sslMode": {
                        "type": "string",
                        "description": "Ssl connection mode for the pool.\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "Connection URI to the pool.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Database user authorized to connect to the pool, if none all the users are allowed.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "databaseId",
                    "mode",
                    "name",
                    "port",
                    "serviceName",
                    "size",
                    "sslMode",
                    "uri",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getPostgresSqlUser:getPostgresSqlUser": {
            "description": "Use this data source to get information about a user of a postgresql cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst pgUser = ovh.CloudProjectDatabase.getPostgresSqlUser({\n    serviceName: \"XXX\",\n    clusterId: \"YYY\",\n    name: \"ZZZ\",\n});\nexport const pgUserRoles = pgUser.then(pgUser =\u003e pgUser.roles);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npg_user = ovh.CloudProjectDatabase.get_postgres_sql_user(service_name=\"XXX\",\n    cluster_id=\"YYY\",\n    name=\"ZZZ\")\npulumi.export(\"pgUserRoles\", pg_user.roles)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pgUser = Ovh.CloudProjectDatabase.GetPostgresSqlUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        ClusterId = \"YYY\",\n        Name = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"pgUserRoles\"] = pgUser.Apply(getPostgresSqlUserResult =\u003e getPostgresSqlUserResult.Roles),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tpgUser, err := cloudprojectdatabase.GetPostgresSqlUser(ctx, \u0026cloudprojectdatabase.GetPostgresSqlUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tClusterId:   \"YYY\",\n\t\t\tName:        \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"pgUserRoles\", pgUser.Roles)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetPostgresSqlUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var pgUser = CloudProjectDatabaseFunctions.getPostgresSqlUser(GetPostgresSqlUserArgs.builder()\n            .serviceName(\"XXX\")\n            .clusterId(\"YYY\")\n            .name(\"ZZZ\")\n            .build());\n\n        ctx.export(\"pgUserRoles\", pgUser.applyValue(getPostgresSqlUserResult -\u003e getPostgresSqlUserResult.roles()));\n    }\n}\n```\n```yaml\nvariables:\n  pgUser:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getPostgresSqlUser\n      arguments:\n        serviceName: XXX\n        clusterId: YYY\n        name: ZZZ\noutputs:\n  pgUserRoles: ${pgUser.roles}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPostgresSqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPostgresSqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "name",
                    "roles",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getUser:getUser": {
            "description": "Use this data source to get information about a user of a database cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user = ovh.CloudProjectDatabase.getUser({\n    serviceName: \"XXX\",\n    engine: \"YYY\",\n    clusterId: \"ZZZ\",\n    name: \"UUU\",\n});\nexport const userName = user.then(user =\u003e user.name);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser = ovh.CloudProjectDatabase.get_user(service_name=\"XXX\",\n    engine=\"YYY\",\n    cluster_id=\"ZZZ\",\n    name=\"UUU\")\npulumi.export(\"userName\", user.name)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Ovh.CloudProjectDatabase.GetUser.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n        Engine = \"YYY\",\n        ClusterId = \"ZZZ\",\n        Name = \"UUU\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"userName\"] = user.Apply(getUserResult =\u003e getUserResult.Name),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tuser, err := cloudprojectdatabase.GetUser(ctx, \u0026cloudprojectdatabase.GetUserArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t\tEngine:      \"YYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t\tName:        \"UUU\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"userName\", user.Name)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = CloudProjectDatabaseFunctions.getUser(GetUserArgs.builder()\n            .serviceName(\"XXX\")\n            .engine(\"YYY\")\n            .clusterId(\"ZZZ\")\n            .name(\"UUU\")\n            .build());\n\n        ctx.export(\"userName\", user.applyValue(getUserResult -\u003e getUserResult.name()));\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getUser\n      arguments:\n        serviceName: XXX\n        engine: YYY\n        clusterId: ZZZ\n        name: UUU\noutputs:\n  userName: ${user.name}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want user information. To get a full list of available engine visit : [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases). Available engines:\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "engine",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getUsers:getUsers": {
            "description": "Use this data source to get the list of users of a database cluster associated with a public cloud project.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst users = ovh.CloudProjectDatabase.getUsers({\n    serviceName: \"XXXX\",\n    engine: \"YYYY\",\n    clusterId: \"ZZZ\",\n});\nexport const userIds = users.then(users =\u003e users.userIds);\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nusers = ovh.CloudProjectDatabase.get_users(service_name=\"XXXX\",\n    engine=\"YYYY\",\n    cluster_id=\"ZZZ\")\npulumi.export(\"userIds\", users.user_ids)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var users = Ovh.CloudProjectDatabase.GetUsers.Invoke(new()\n    {\n        ServiceName = \"XXXX\",\n        Engine = \"YYYY\",\n        ClusterId = \"ZZZ\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"userIds\"] = users.Apply(getUsersResult =\u003e getUsersResult.UserIds),\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudprojectdatabase\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tusers, err := cloudprojectdatabase.GetUsers(ctx, \u0026cloudprojectdatabase.GetUsersArgs{\n\t\t\tServiceName: \"XXXX\",\n\t\t\tEngine:      \"YYYY\",\n\t\t\tClusterId:   \"ZZZ\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"userIds\", users.UserIds)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.CloudProjectDatabase.CloudProjectDatabaseFunctions;\nimport com.pulumi.ovh.CloudProjectDatabase.inputs.GetUsersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var users = CloudProjectDatabaseFunctions.getUsers(GetUsersArgs.builder()\n            .serviceName(\"XXXX\")\n            .engine(\"YYYY\")\n            .clusterId(\"ZZZ\")\n            .build());\n\n        ctx.export(\"userIds\", users.applyValue(getUsersResult -\u003e getUsersResult.userIds()));\n    }\n}\n```\n```yaml\nvariables:\n  users:\n    fn::invoke:\n      function: ovh:CloudProjectDatabase:getUsers\n      arguments:\n        serviceName: XXXX\n        engine: YYYY\n        clusterId: ZZZ\noutputs:\n  userIds: ${users.userIds}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "The engine of the database cluster you want to list users. To get a full list of available engine visit: [public documentation](https://docs.ovh.com/gb/en/publiccloud/databases).\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "See Argument Reference above.\n"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of users ids of the database cluster associated with the project.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName",
                    "userIds",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsCluster:getLogsCluster": {
            "description": "Use this data source to retrieve informations about a DBaas logs cluster tenant.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst logstash = ovh.Dbaas.getLogsCluster({\n    clusterId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    serviceName: \"ldp-xx-xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlogstash = ovh.Dbaas.get_logs_cluster(cluster_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    service_name=\"ldp-xx-xxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logstash = Ovh.Dbaas.GetLogsCluster.Invoke(new()\n    {\n        ClusterId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        ServiceName = \"ldp-xx-xxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.GetLogsCluster(ctx, \u0026dbaas.GetLogsClusterArgs{\n\t\t\tClusterId:   pulumi.StringRef(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"),\n\t\t\tServiceName: \"ldp-xx-xxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsClusterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var logstash = DbaasFunctions.getLogsCluster(GetLogsClusterArgs.builder()\n            .clusterId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .serviceName(\"ldp-xx-xxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  logstash:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsCluster\n      arguments:\n        clusterId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        serviceName: ldp-xx-xxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID. If not provided, the default cluster_id is returned\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name. It's the ID of your Logs Data Platform instance.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsCluster.\n",
                "properties": {
                    "archiveAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is allowed networks for ARCHIVE flow type\n"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "clusterType": {
                        "type": "string",
                        "description": "is type of cluster (DEDICATED, PRO or TRIAL)\n"
                    },
                    "dedicatedInputPem": {
                        "type": "string",
                        "description": "is PEM for dedicated inputs\n",
                        "secret": true
                    },
                    "directInputAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is allowed networks for DIRECT_INPUT flow type\n"
                    },
                    "directInputPem": {
                        "type": "string",
                        "description": "is PEM for direct inputs\n",
                        "secret": true
                    },
                    "hostname": {
                        "type": "string",
                        "description": "is cluster hostname hosting the tenant\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "is true if all content generated by given service will be placed on this cluster\n"
                    },
                    "isUnlocked": {
                        "type": "boolean",
                        "description": "is true if given service can perform advanced operations on cluster\n"
                    },
                    "queryAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is allowed networks for QUERY flow type\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "is datacenter localization\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string",
                        "description": "is the URN of the DBaas logs instance\n"
                    }
                },
                "type": "object",
                "required": [
                    "archiveAllowedNetworks",
                    "clusterId",
                    "clusterType",
                    "dedicatedInputPem",
                    "directInputAllowedNetworks",
                    "directInputPem",
                    "hostname",
                    "isDefault",
                    "isUnlocked",
                    "queryAllowedNetworks",
                    "region",
                    "serviceName",
                    "urn",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsClusters:getLogsClusters": {
            "description": "Use this data source to retrieve UUIDs of DBaas logs clusters.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst logstash = ovh.Dbaas.getLogsClusters({\n    serviceName: \"ldp-xx-xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlogstash = ovh.Dbaas.get_logs_clusters(service_name=\"ldp-xx-xxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logstash = Ovh.Dbaas.GetLogsClusters.Invoke(new()\n    {\n        ServiceName = \"ldp-xx-xxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.GetLogsClusters(ctx, \u0026dbaas.GetLogsClustersArgs{\n\t\t\tServiceName: \"ldp-xx-xxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsClustersArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var logstash = DbaasFunctions.getLogsClusters(GetLogsClustersArgs.builder()\n            .serviceName(\"ldp-xx-xxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  logstash:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsClusters\n      arguments:\n        serviceName: ldp-xx-xxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsClusters.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service name. It's the ID of your Logs Data Platform instance.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsClusters.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    },
                    "uuids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "is the cluster id\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "urn",
                    "uuids",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsClustersRetention:getLogsClustersRetention": {
            "description": "Use this data source to retrieve information about a DBaas logs cluster retention.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst retention = ovh.Dbaas.getLogsClustersRetention({\n    clusterId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    retentionId: \"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy\",\n    serviceName: \"ldp-xx-xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nretention = ovh.Dbaas.get_logs_clusters_retention(cluster_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    retention_id=\"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy\",\n    service_name=\"ldp-xx-xxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var retention = Ovh.Dbaas.GetLogsClustersRetention.Invoke(new()\n    {\n        ClusterId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        RetentionId = \"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy\",\n        ServiceName = \"ldp-xx-xxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.GetLogsClustersRetention(ctx, \u0026dbaas.GetLogsClustersRetentionArgs{\n\t\t\tClusterId:   \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t\tRetentionId: pulumi.StringRef(\"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy\"),\n\t\t\tServiceName: \"ldp-xx-xxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsClustersRetentionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var retention = DbaasFunctions.getLogsClustersRetention(GetLogsClustersRetentionArgs.builder()\n            .clusterId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .retentionId(\"yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy\")\n            .serviceName(\"ldp-xx-xxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  retention:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsClustersRetention\n      arguments:\n        clusterId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        retentionId: yyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy\n        serviceName: ldp-xx-xxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nIt is also possible to retrieve a retention using its duration:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst retention = ovh.Dbaas.getLogsClustersRetention({\n    clusterId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    duration: \"P14D\",\n    serviceName: \"ldp-xx-xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nretention = ovh.Dbaas.get_logs_clusters_retention(cluster_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    duration=\"P14D\",\n    service_name=\"ldp-xx-xxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var retention = Ovh.Dbaas.GetLogsClustersRetention.Invoke(new()\n    {\n        ClusterId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        Duration = \"P14D\",\n        ServiceName = \"ldp-xx-xxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.GetLogsClustersRetention(ctx, \u0026dbaas.GetLogsClustersRetentionArgs{\n\t\t\tClusterId:   \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t\tDuration:    pulumi.StringRef(\"P14D\"),\n\t\t\tServiceName: \"ldp-xx-xxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsClustersRetentionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var retention = DbaasFunctions.getLogsClustersRetention(GetLogsClustersRetentionArgs.builder()\n            .clusterId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .duration(\"P14D\")\n            .serviceName(\"ldp-xx-xxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  retention:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsClustersRetention\n      arguments:\n        clusterId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        duration: P14D\n        serviceName: ldp-xx-xxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nAdditionnaly, you can filter retentions on their type:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst retention = ovh.Dbaas.getLogsClustersRetention({\n    clusterId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    duration: \"P14D\",\n    retentionType: \"LOGS_INDEXING\",\n    serviceName: \"ldp-xx-xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nretention = ovh.Dbaas.get_logs_clusters_retention(cluster_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    duration=\"P14D\",\n    retention_type=\"LOGS_INDEXING\",\n    service_name=\"ldp-xx-xxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var retention = Ovh.Dbaas.GetLogsClustersRetention.Invoke(new()\n    {\n        ClusterId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        Duration = \"P14D\",\n        RetentionType = \"LOGS_INDEXING\",\n        ServiceName = \"ldp-xx-xxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.GetLogsClustersRetention(ctx, \u0026dbaas.GetLogsClustersRetentionArgs{\n\t\t\tClusterId:     \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t\tDuration:      pulumi.StringRef(\"P14D\"),\n\t\t\tRetentionType: pulumi.StringRef(\"LOGS_INDEXING\"),\n\t\t\tServiceName:   \"ldp-xx-xxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsClustersRetentionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var retention = DbaasFunctions.getLogsClustersRetention(GetLogsClustersRetentionArgs.builder()\n            .clusterId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .duration(\"P14D\")\n            .retentionType(\"LOGS_INDEXING\")\n            .serviceName(\"ldp-xx-xxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  retention:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsClustersRetention\n      arguments:\n        clusterId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        duration: P14D\n        retentionType: LOGS_INDEXING\n        serviceName: ldp-xx-xxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsClustersRetention.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Indexed duration expressed in ISO-8601 format. Cannot be used if `retention_id` is defined.\n"
                    },
                    "retentionId": {
                        "type": "string",
                        "description": "ID of the retention object. Cannot be used if `duration` or `retention_type` is defined.\n"
                    },
                    "retentionType": {
                        "type": "string",
                        "description": "Type of the retention (LOGS_INDEXING | LOGS_COLD_STORAGE | METRICS_TENANT). Cannot be used if `retention_id` is defined. Defaults to `LOGS_INDEXING` if not defined.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name. It's the ID of your Logs Data Platform instance.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsClustersRetention.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "string",
                        "description": "Indexed duration expressed in ISO-8601 format\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isSupported": {
                        "type": "boolean",
                        "description": "Indicates if a new stream can use it\n"
                    },
                    "retentionId": {
                        "type": "string",
                        "description": "ID of the retention that can be used when creating a stream\n"
                    },
                    "retentionType": {
                        "type": "string",
                        "description": "Type of the retention (LOGS_INDEXING | LOGS_COLD_STORAGE | METRICS_TENANT)\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "duration",
                    "isSupported",
                    "retentionId",
                    "retentionType",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsInputEngine:getLogsInputEngine": {
            "description": "Use this data source to retrieve information about a DBaas logs input engine.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst logstash = ovh.Dbaas.getLogsInputEngine({\n    isDeprecated: true,\n    name: \"logstash\",\n    serviceName: \"ldp-xx-xxxxx\",\n    version: \"6.8\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlogstash = ovh.Dbaas.get_logs_input_engine(is_deprecated=True,\n    name=\"logstash\",\n    service_name=\"ldp-xx-xxxxx\",\n    version=\"6.8\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var logstash = Ovh.Dbaas.GetLogsInputEngine.Invoke(new()\n    {\n        IsDeprecated = true,\n        Name = \"logstash\",\n        ServiceName = \"ldp-xx-xxxxx\",\n        Version = \"6.8\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.GetLogsInputEngine(ctx, \u0026dbaas.GetLogsInputEngineArgs{\n\t\t\tIsDeprecated: pulumi.BoolRef(true),\n\t\t\tName:         pulumi.StringRef(\"logstash\"),\n\t\t\tServiceName:  \"ldp-xx-xxxxx\",\n\t\t\tVersion:      pulumi.StringRef(\"6.8\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsInputEngineArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var logstash = DbaasFunctions.getLogsInputEngine(GetLogsInputEngineArgs.builder()\n            .isDeprecated(true)\n            .name(\"logstash\")\n            .serviceName(\"ldp-xx-xxxxx\")\n            .version(\"6.8\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  logstash:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsInputEngine\n      arguments:\n        isDeprecated: true\n        name: logstash\n        serviceName: ldp-xx-xxxxx\n        version: '6.8'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsInputEngine.\n",
                "properties": {
                    "isDeprecated": {
                        "type": "boolean",
                        "description": "Indicates if engine will soon not be supported.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the logs input engine.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name. It's the ID of your Logs Data Platform instance.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Software version\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsInputEngine.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isDeprecated": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "isDeprecated",
                    "name",
                    "serviceName",
                    "version",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsOutputGraylogStream:getLogsOutputGraylogStream": {
            "description": "Use this data source to retrieve information about a DBaas logs output graylog stream.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst stream = ovh.Dbaas.getLogsOutputGraylogStream({\n    serviceName: \"ldp-xx-xxxxx\",\n    title: \"my stream\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nstream = ovh.Dbaas.get_logs_output_graylog_stream(service_name=\"ldp-xx-xxxxx\",\n    title=\"my stream\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var stream = Ovh.Dbaas.GetLogsOutputGraylogStream.Invoke(new()\n    {\n        ServiceName = \"ldp-xx-xxxxx\",\n        Title = \"my stream\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.GetLogsOutputGraylogStream(ctx, \u0026dbaas.GetLogsOutputGraylogStreamArgs{\n\t\t\tServiceName: \"ldp-xx-xxxxx\",\n\t\t\tTitle:       \"my stream\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsOutputGraylogStreamArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var stream = DbaasFunctions.getLogsOutputGraylogStream(GetLogsOutputGraylogStreamArgs.builder()\n            .serviceName(\"ldp-xx-xxxxx\")\n            .title(\"my stream\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  stream:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsOutputGraylogStream\n      arguments:\n        serviceName: ldp-xx-xxxxx\n        title: my stream\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsOutputGraylogStream.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service name. It's the ID of your Logs Data Platform instance.\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Stream description\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "title"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsOutputGraylogStream.\n",
                "properties": {
                    "canAlert": {
                        "type": "boolean"
                    },
                    "coldStorageCompression": {
                        "type": "string",
                        "description": "Cold storage compression method\n"
                    },
                    "coldStorageContent": {
                        "type": "string",
                        "description": "ColdStorage content\n"
                    },
                    "coldStorageEnabled": {
                        "type": "boolean",
                        "description": "Is Cold storage enabled?\n"
                    },
                    "coldStorageNotifyEnabled": {
                        "type": "boolean",
                        "description": "Notify on new Cold storage archive\n"
                    },
                    "coldStorageRetention": {
                        "type": "integer",
                        "description": "Cold storage retention in year\n"
                    },
                    "coldStorageTarget": {
                        "type": "string",
                        "description": "ColdStorage destination\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Stream creation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "indexingEnabled": {
                        "type": "boolean",
                        "description": "Enable ES indexing\n"
                    },
                    "indexingMaxSize": {
                        "type": "integer",
                        "description": "Maximum indexing size (in GB)\n"
                    },
                    "indexingNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "isShareable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to share entry\n"
                    },
                    "nbAlertCondition": {
                        "type": "integer",
                        "description": "Number of alert condition\n"
                    },
                    "nbArchive": {
                        "type": "integer",
                        "description": "Number of coldstored archives\n"
                    },
                    "parentStreamId": {
                        "type": "string",
                        "description": "Parent stream ID\n"
                    },
                    "pauseIndexingOnMaxSize": {
                        "type": "boolean",
                        "description": "If set, pause indexing when maximum size is reach\n"
                    },
                    "retentionId": {
                        "type": "string",
                        "description": "Retention ID\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Stream ID\n"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Stream last update\n"
                    },
                    "webSocketEnabled": {
                        "type": "boolean",
                        "description": "Enable Websocket\n"
                    },
                    "writeToken": {
                        "type": "string",
                        "description": "Write token of the stream (empty if the caller is not the owner of the stream)\n",
                        "secret": true
                    }
                },
                "type": "object",
                "required": [
                    "canAlert",
                    "coldStorageCompression",
                    "coldStorageContent",
                    "coldStorageEnabled",
                    "coldStorageNotifyEnabled",
                    "coldStorageRetention",
                    "coldStorageTarget",
                    "createdAt",
                    "description",
                    "indexingEnabled",
                    "indexingMaxSize",
                    "indexingNotifyEnabled",
                    "isEditable",
                    "isShareable",
                    "nbAlertCondition",
                    "nbArchive",
                    "parentStreamId",
                    "pauseIndexingOnMaxSize",
                    "retentionId",
                    "serviceName",
                    "streamId",
                    "title",
                    "updatedAt",
                    "webSocketEnabled",
                    "writeToken",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsOutputOpenSearchIndex:getLogsOutputOpenSearchIndex": {
            "description": "Use this data source to retrieve information about a DBaas logs output opensearch index.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst index = ovh.Dbaas.getLogsOutputOpenSearchIndex({\n    name: \"index-name\",\n    serviceName: \"ldp-xx-xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nindex = ovh.Dbaas.get_logs_output_open_search_index(name=\"index-name\",\n    service_name=\"ldp-xx-xxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var index = Ovh.Dbaas.GetLogsOutputOpenSearchIndex.Invoke(new()\n    {\n        Name = \"index-name\",\n        ServiceName = \"ldp-xx-xxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dbaas.GetLogsOutputOpenSearchIndex(ctx, \u0026dbaas.GetLogsOutputOpenSearchIndexArgs{\n\t\t\tName:        \"index-name\",\n\t\t\tServiceName: \"ldp-xx-xxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dbaas.DbaasFunctions;\nimport com.pulumi.ovh.Dbaas.inputs.GetLogsOutputOpenSearchIndexArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var index = DbaasFunctions.getLogsOutputOpenSearchIndex(GetLogsOutputOpenSearchIndexArgs.builder()\n            .name(\"index-name\")\n            .serviceName(\"ldp-xx-xxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  index:\n    fn::invoke:\n      function: ovh:Dbaas:getLogsOutputOpenSearchIndex\n      arguments:\n        name: index-name\n        serviceName: ldp-xx-xxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getLogsOutputOpenSearchIndex.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Index name\n"
                    },
                    "nbShard": {
                        "type": "integer",
                        "description": "Number of shard\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name. It's the ID of your Logs Data Platform instance.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsOutputOpenSearchIndex.\n",
                "properties": {
                    "alertNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of its maximum capacity\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Index creation\n"
                    },
                    "currentSize": {
                        "type": "integer",
                        "description": "Current index size (in bytes)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Index description\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "indexId": {
                        "type": "string",
                        "description": "Index ID\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "Maximum index size (in bytes)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Index name\n"
                    },
                    "nbShard": {
                        "type": "integer",
                        "description": "Number of shard\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Index last update\n"
                    }
                },
                "type": "object",
                "required": [
                    "alertNotifyEnabled",
                    "createdAt",
                    "currentSize",
                    "description",
                    "indexId",
                    "isEditable",
                    "maxSize",
                    "name",
                    "nbShard",
                    "serviceName",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getCeph:getCeph": {
            "description": "Use this data source to retrieve information about a dedicated CEPH.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myCeph = ovh.Dedicated.getCeph({\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_ceph = ovh.Dedicated.get_ceph(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myCeph = Ovh.Dedicated.GetCeph.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.GetCeph(ctx, \u0026dedicated.GetCephArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetCephArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myCeph = DedicatedFunctions.getCeph(GetCephArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myCeph:\n    fn::invoke:\n      function: ovh:Dedicated:getCeph\n      arguments:\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCeph.\n",
                "properties": {
                    "cephVersion": {
                        "type": "string",
                        "description": "CEPH cluster version\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name of the dedicated CEPH cluster.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCeph.\n",
                "properties": {
                    "CephURN": {
                        "type": "string",
                        "description": "URN of the CEPH instance\n"
                    },
                    "cephMons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "list of CEPH monitors IPs\n"
                    },
                    "cephVersion": {
                        "type": "string",
                        "description": "CEPH cluster version\n"
                    },
                    "crushTunables": {
                        "type": "string",
                        "description": "CRUSH algorithm settings. Possible values\n* OPTIMAL\n* DEFAULT\n* LEGACY\n* BOBTAIL\n* ARGONAUT\n* FIREFLY\n* HAMMER\n* JEWEL\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "CEPH cluster label\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "cluster region\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number",
                        "description": "Cluster size in TB\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "the state of the cluster\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "the status of the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "cephMons",
                    "cephVersion",
                    "crushTunables",
                    "label",
                    "region",
                    "serviceName",
                    "size",
                    "state",
                    "status",
                    "CephURN",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getCloud:getCloud": {
            "description": "Get information about a Managed VMware service. \n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst pcc = ovh.Dedicated.getCloud({\n    serviceName: \"\u003cDedicated Cloud service name\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\npcc = ovh.Dedicated.get_cloud(service_name=\"\u003cDedicated Cloud service name\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var pcc = Ovh.Dedicated.GetCloud.Invoke(new()\n    {\n        ServiceName = \"\u003cDedicated Cloud service name\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.GetCloud(ctx, \u0026dedicated.GetCloudArgs{\n\t\t\tServiceName: \"\u003cDedicated Cloud service name\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetCloudArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var pcc = DedicatedFunctions.getCloud(GetCloudArgs.builder()\n            .serviceName(\"\u003cDedicated Cloud service name\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  pcc:\n    fn::invoke:\n      function: ovh:Dedicated:getCloud\n      arguments:\n        serviceName: \u003cDedicated Cloud service name\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCloud.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "Domain of the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloud.\n",
                "properties": {
                    "advancedSecurity": {
                        "type": "boolean",
                        "description": "Advanced security state\n"
                    },
                    "bandwidth": {
                        "type": "string",
                        "description": "The current bandwidth of your VMware on OVHcloud\n"
                    },
                    "billingType": {
                        "type": "string",
                        "description": "Billing type of your VMware on OVHcloud\n"
                    },
                    "canMigrateToVcd": {
                        "type": "boolean",
                        "description": "Can the PCC be migrated to VCD\n"
                    },
                    "certifiedInterfaceUrl": {
                        "type": "string",
                        "description": "Url to the VMware on OVHcloud certified interface\n"
                    },
                    "commercialRange": {
                        "type": "string",
                        "description": "The current version of your VMware on OVHcloud\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of your VMware on OVHcloud\n"
                    },
                    "generation": {
                        "type": "string",
                        "description": "Generation of your VMware on OVHcloud\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Dedicated/getCloudIam:getCloudIam",
                        "description": "IAM resource metadata\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "Datacenter where your VMware on OVHcloud is physically located\n"
                    },
                    "managementInterface": {
                        "type": "string",
                        "description": "The management interface name\n"
                    },
                    "productReference": {
                        "type": "string",
                        "description": "The reference universe information for your VMware on OVHcloud\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Domain of the service\n"
                    },
                    "servicePackName": {
                        "type": "string",
                        "description": "Name of the current service pack\n"
                    },
                    "spla": {
                        "type": "boolean",
                        "description": "SPLA licensing state\n"
                    },
                    "sslV3": {
                        "type": "boolean",
                        "description": "Enable SSL v3 support. Warning : this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your VMware on OVHcloud\n"
                    },
                    "userAccessPolicy": {
                        "type": "string",
                        "description": "Access policy of your VMware on OVHcloud : opened to every IPs or filtered\n"
                    },
                    "userLimitConcurrentSession": {
                        "type": "number",
                        "description": "The maximum amount of connected users allowed on the VMware on OVHcloud management interface\n"
                    },
                    "userLogoutPolicy": {
                        "type": "string",
                        "description": "Which user will be disconnected first in case of quota of maximum connection is reached\n"
                    },
                    "userSessionTimeout": {
                        "type": "number",
                        "description": "The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout\n"
                    },
                    "vScopeUrl": {
                        "type": "string",
                        "description": "Url to the VMware on OVHcloud vScope interface\n"
                    },
                    "version": {
                        "$ref": "#/types/ovh:Dedicated/getCloudVersion:getCloudVersion",
                        "description": "Version of the management interface\n"
                    },
                    "webInterfaceUrl": {
                        "type": "string",
                        "description": "Url to the VMware on OVHcloud web interface\n"
                    }
                },
                "type": "object",
                "required": [
                    "advancedSecurity",
                    "bandwidth",
                    "billingType",
                    "canMigrateToVcd",
                    "certifiedInterfaceUrl",
                    "commercialRange",
                    "description",
                    "generation",
                    "iam",
                    "location",
                    "managementInterface",
                    "productReference",
                    "serviceName",
                    "servicePackName",
                    "spla",
                    "sslV3",
                    "state",
                    "userAccessPolicy",
                    "userLimitConcurrentSession",
                    "userLogoutPolicy",
                    "userSessionTimeout",
                    "vScopeUrl",
                    "version",
                    "webInterfaceUrl",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getNasHA:getNasHA": {
            "description": "Use this data source to retrieve information about a dedicated HA-NAS.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myNasHa = ovh.Dedicated.getNasHA({\n    serviceName: \"zpool-12345\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_nas_ha = ovh.Dedicated.get_nas_ha(service_name=\"zpool-12345\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myNasHa = Ovh.Dedicated.GetNasHA.Invoke(new()\n    {\n        ServiceName = \"zpool-12345\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.GetNasHA(ctx, \u0026dedicated.GetNasHAArgs{\n\t\t\tServiceName: \"zpool-12345\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetNasHAArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myNasHa = DedicatedFunctions.getNasHA(GetNasHAArgs.builder()\n            .serviceName(\"zpool-12345\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myNasHa:\n    fn::invoke:\n      function: ovh:Dedicated:getNasHA\n      arguments:\n        serviceName: zpool-12345\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNasHA.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated HA-NAS.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNasHA.\n",
                "properties": {
                    "NasHAURN": {
                        "type": "string",
                        "description": "the URN of the HA-NAS instance\n"
                    },
                    "canCreatePartition": {
                        "type": "boolean",
                        "description": "True, if partition creation is allowed on this HA-NAS\n"
                    },
                    "customName": {
                        "type": "string",
                        "description": "The name you give to the HA-NAS\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "area of HA-NAS\n"
                    },
                    "diskType": {
                        "type": "string",
                        "description": "the disk type of the HA-NAS. Possible values are: `hdd`, `ssd`, `nvme`\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Access IP of HA-NAS\n"
                    },
                    "monitored": {
                        "type": "boolean",
                        "description": "Send an email to customer if any issue is detected\n"
                    },
                    "partitionsLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "the list of the HA-NAS partitions name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The storage service name\n"
                    },
                    "zpoolCapacity": {
                        "type": "number",
                        "description": "percentage of HA-NAS space used in %\n"
                    },
                    "zpoolSize": {
                        "type": "number",
                        "description": "the size of the HA-NAS in GB\n"
                    }
                },
                "type": "object",
                "required": [
                    "canCreatePartition",
                    "customName",
                    "datacenter",
                    "diskType",
                    "ip",
                    "monitored",
                    "partitionsLists",
                    "serviceName",
                    "NasHAURN",
                    "zpoolCapacity",
                    "zpoolSize",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getNasHAPartition:getNasHAPartition": {
            "description": "Use this data source to retrieve information about a dedicated HA-NAS partition.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myNasHaPartition = ovh.Dedicated.getNasHAPartition({\n    name: \"my-zpool-partition\",\n    serviceName: \"zpool-12345\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_nas_ha_partition = ovh.Dedicated.get_nas_ha_partition(name=\"my-zpool-partition\",\n    service_name=\"zpool-12345\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myNasHaPartition = Ovh.Dedicated.GetNasHAPartition.Invoke(new()\n    {\n        Name = \"my-zpool-partition\",\n        ServiceName = \"zpool-12345\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.GetNasHAPartition(ctx, \u0026dedicated.GetNasHAPartitionArgs{\n\t\t\tName:        \"my-zpool-partition\",\n\t\t\tServiceName: \"zpool-12345\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetNasHAPartitionArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myNasHaPartition = DedicatedFunctions.getNasHAPartition(GetNasHAPartitionArgs.builder()\n            .name(\"my-zpool-partition\")\n            .serviceName(\"zpool-12345\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myNasHaPartition:\n    fn::invoke:\n      function: ovh:Dedicated:getNasHAPartition\n      arguments:\n        name: my-zpool-partition\n        serviceName: zpool-12345\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNasHAPartition.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of your dedicated HA-NAS partition.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated HA-NAS.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNasHAPartition.\n",
                "properties": {
                    "capacity": {
                        "type": "integer",
                        "description": "Percentage of partition space used in %\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A brief description of the partition\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "one of \"NFS\", \"CIFS\" or \"NFS_CIFS\"\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "description": "size of the partition in GB\n"
                    },
                    "usedBySnapshots": {
                        "type": "integer",
                        "description": "Percentage of partition space used by snapshots in %\n"
                    }
                },
                "type": "object",
                "required": [
                    "capacity",
                    "description",
                    "name",
                    "protocol",
                    "serviceName",
                    "size",
                    "usedBySnapshots",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getServerBoots:getServerBoots": {
            "description": "Use this data source to get the list of compatible netboots for a dedicated server associated with your OVHcloud Account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst netboots = ovh.Dedicated.getServerBoots({\n    bootType: \"harddisk\",\n    serviceName: \"myserver\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nnetboots = ovh.Dedicated.get_server_boots(boot_type=\"harddisk\",\n    service_name=\"myserver\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var netboots = Ovh.Dedicated.GetServerBoots.Invoke(new()\n    {\n        BootType = \"harddisk\",\n        ServiceName = \"myserver\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.GetServerBoots(ctx, \u0026dedicated.GetServerBootsArgs{\n\t\t\tBootType:    pulumi.StringRef(\"harddisk\"),\n\t\t\tServiceName: \"myserver\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetServerBootsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var netboots = DedicatedFunctions.getServerBoots(GetServerBootsArgs.builder()\n            .bootType(\"harddisk\")\n            .serviceName(\"myserver\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  netboots:\n    fn::invoke:\n      function: ovh:Dedicated:getServerBoots\n      arguments:\n        bootType: harddisk\n        serviceName: myserver\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServerBoots.\n",
                "properties": {
                    "bootType": {
                        "type": "string",
                        "description": "Filter the value of bootType property (harddisk, rescue, internal, network)\n"
                    },
                    "kernel": {
                        "type": "string",
                        "description": "Filter the value of kernel property (iPXE script name)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerBoots.\n",
                "properties": {
                    "bootType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kernel": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of dedicated server netboots.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardware:getServerSpecificationsHardware": {
            "description": "Use this data source to get the hardward information about a dedicated server associated with your OVHcloud Account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst spec = ovh.Dedicated.getServerSpecificationsHardware({\n    serviceName: \"myserver\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nspec = ovh.Dedicated.get_server_specifications_hardware(service_name=\"myserver\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var spec = Ovh.Dedicated.GetServerSpecificationsHardware.Invoke(new()\n    {\n        ServiceName = \"myserver\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.GetServerSpecificationsHardware(ctx, \u0026dedicated.GetServerSpecificationsHardwareArgs{\n\t\t\tServiceName: \"myserver\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetServerSpecificationsHardwareArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var spec = DedicatedFunctions.getServerSpecificationsHardware(GetServerSpecificationsHardwareArgs.builder()\n            .serviceName(\"myserver\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  spec:\n    fn::invoke:\n      function: ovh:Dedicated:getServerSpecificationsHardware\n      arguments:\n        serviceName: myserver\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServerSpecificationsHardware.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerSpecificationsHardware.\n",
                "properties": {
                    "bootMode": {
                        "type": "string",
                        "description": "Server boot mode\n"
                    },
                    "coresPerProcessor": {
                        "type": "number",
                        "description": "Number of cores per processor\n"
                    },
                    "defaultHardwareRaidSize": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareDefaultHardwareRaidSize:getServerSpecificationsHardwareDefaultHardwareRaidSize",
                        "description": "Default hardware raid size for this disk group\n"
                    },
                    "defaultHardwareRaidType": {
                        "type": "string",
                        "description": "Default hardware raid type for this disk group\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Expansion card description\n"
                    },
                    "diskGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareDiskGroup:getServerSpecificationsHardwareDiskGroup"
                        },
                        "description": "Details about the groups of disks in the server\n"
                    },
                    "expansionCards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareExpansionCard:getServerSpecificationsHardwareExpansionCard"
                        },
                        "description": "Details about the server's expansion cards\n"
                    },
                    "formFactor": {
                        "type": "string",
                        "description": "Server form factor\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "memorySize": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareMemorySize:getServerSpecificationsHardwareMemorySize",
                        "description": "RAM capacity\n"
                    },
                    "motherboard": {
                        "type": "string",
                        "description": "Server motherboard\n"
                    },
                    "numberOfProcessors": {
                        "type": "number",
                        "description": "Number of processors in this dedicated server\n"
                    },
                    "processorArchitecture": {
                        "type": "string",
                        "description": "Processor architecture bit\n"
                    },
                    "processorName": {
                        "type": "string",
                        "description": "Processor name\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "threadsPerProcessor": {
                        "type": "number",
                        "description": "Number of threads per processor\n"
                    },
                    "usbKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareUsbKey:getServerSpecificationsHardwareUsbKey"
                        },
                        "description": "Capacity of the USB keys installed on your server, if any\n"
                    }
                },
                "type": "object",
                "required": [
                    "bootMode",
                    "coresPerProcessor",
                    "defaultHardwareRaidSize",
                    "defaultHardwareRaidType",
                    "description",
                    "diskGroups",
                    "expansionCards",
                    "formFactor",
                    "memorySize",
                    "motherboard",
                    "numberOfProcessors",
                    "processorArchitecture",
                    "processorName",
                    "serviceName",
                    "threadsPerProcessor",
                    "usbKeys",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetwork:getServerSpecificationsNetwork": {
            "description": "Use this data source to get the network information about a dedicated server associated with your OVHcloud Account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst spec = ovh.Dedicated.getServerSpecificationsNetwork({\n    serviceName: \"myserver\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nspec = ovh.Dedicated.get_server_specifications_network(service_name=\"myserver\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var spec = Ovh.Dedicated.GetServerSpecificationsNetwork.Invoke(new()\n    {\n        ServiceName = \"myserver\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := dedicated.GetServerSpecificationsNetwork(ctx, \u0026dedicated.GetServerSpecificationsNetworkArgs{\n\t\t\tServiceName: \"myserver\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Dedicated.DedicatedFunctions;\nimport com.pulumi.ovh.Dedicated.inputs.GetServerSpecificationsNetworkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var spec = DedicatedFunctions.getServerSpecificationsNetwork(GetServerSpecificationsNetworkArgs.builder()\n            .serviceName(\"myserver\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  spec:\n    fn::invoke:\n      function: ovh:Dedicated:getServerSpecificationsNetwork\n      arguments:\n        serviceName: myserver\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServerSpecificationsNetwork.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerSpecificationsNetwork.\n",
                "properties": {
                    "bandwidth": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkBandwidth:getServerSpecificationsNetworkBandwidth",
                        "description": "vrack bandwidth limitation\n"
                    },
                    "connectionVal": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkConnectionVal:getServerSpecificationsNetworkConnectionVal",
                        "description": "Network connection flow rate\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ola": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkOla:getServerSpecificationsNetworkOla",
                        "description": "OLA details\n"
                    },
                    "routing": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkRouting:getServerSpecificationsNetworkRouting",
                        "description": "Routing details\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "switching": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkSwitching:getServerSpecificationsNetworkSwitching",
                        "description": "Switching details\n"
                    },
                    "traffic": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTraffic:getServerSpecificationsNetworkTraffic",
                        "description": "Traffic details\n"
                    },
                    "vmac": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkVmac:getServerSpecificationsNetworkVmac",
                        "description": "VMAC information for this dedicated server\n"
                    },
                    "vrack": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkVrack:getServerSpecificationsNetworkVrack",
                        "description": "vRack details\n"
                    }
                },
                "type": "object",
                "required": [
                    "bandwidth",
                    "connectionVal",
                    "ola",
                    "routing",
                    "serviceName",
                    "switching",
                    "traffic",
                    "vmac",
                    "vrack",
                    "id"
                ]
            }
        },
        "ovh:Domain/getZone:getZone": {
            "description": "Use this data source to retrieve information about a domain zone.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst rootZone = ovh.Domain.getZone({\n    name: \"mysite.ovh\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nroot_zone = ovh.Domain.get_zone(name=\"mysite.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var rootZone = Ovh.Domain.GetZone.Invoke(new()\n    {\n        Name = \"mysite.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := domain.GetZone(ctx, \u0026domain.GetZoneArgs{\n\t\t\tName: \"mysite.ovh\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.DomainFunctions;\nimport com.pulumi.ovh.Domain.inputs.GetZoneArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var rootZone = DomainFunctions.getZone(GetZoneArgs.builder()\n            .name(\"mysite.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  rootZone:\n    fn::invoke:\n      function: ovh:Domain:getZone\n      arguments:\n        name: mysite.ovh\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getZone.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the domain zone.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZone.\n",
                "properties": {
                    "ZoneURN": {
                        "type": "string",
                        "description": "URN of the DNS zone\n"
                    },
                    "dnssecSupported": {
                        "type": "boolean",
                        "description": "Is DNSSEC supported by this zone\n"
                    },
                    "hasDnsAnycast": {
                        "type": "boolean",
                        "description": "hasDnsAnycast flag of the DNS zone\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update date of the DNS zone\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name servers that host the DNS zone\n"
                    }
                },
                "type": "object",
                "required": [
                    "dnssecSupported",
                    "hasDnsAnycast",
                    "lastUpdate",
                    "name",
                    "nameServers",
                    "ZoneURN",
                    "id"
                ]
            }
        },
        "ovh:Domain/getZoneDNSSec:getZoneDNSSec": {
            "description": "Use this data source to retrieve information about a domain zone DNSSEC status.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst dnssec = ovh.Domain.getZoneDNSSec({\n    zoneName: \"mysite.ovh\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndnssec = ovh.Domain.get_zone_dns_sec(zone_name=\"mysite.ovh\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var dnssec = Ovh.Domain.GetZoneDNSSec.Invoke(new()\n    {\n        ZoneName = \"mysite.ovh\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/domain\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := domain.GetZoneDNSSec(ctx, \u0026domain.GetZoneDNSSecArgs{\n\t\t\tZoneName: \"mysite.ovh\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Domain.DomainFunctions;\nimport com.pulumi.ovh.Domain.inputs.GetZoneDNSSecArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var dnssec = DomainFunctions.getZoneDNSSec(GetZoneDNSSecArgs.builder()\n            .zoneName(\"mysite.ovh\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  dnssec:\n    fn::invoke:\n      function: ovh:Domain:getZoneDNSSec\n      arguments:\n        zoneName: mysite.ovh\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getZoneDNSSec.\n",
                "properties": {
                    "zoneName": {
                        "type": "string",
                        "description": "The name of the domain zone\n"
                    }
                },
                "type": "object",
                "required": [
                    "zoneName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZoneDNSSec.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "DNSSEC status (`disableInProgress`, `disabled`, `enableInProgress` or `enabled`)\n"
                    },
                    "zoneName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "zoneName",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabase:getPrivateDatabase": {
            "description": "Use this data source to retrieve information about an hosting database.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst database = ovh.Hosting.getPrivateDatabase({\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ndatabase = ovh.Hosting.get_private_database(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var database = Ovh.Hosting.GetPrivateDatabase.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := hosting.GetPrivateDatabase(ctx, \u0026hosting.GetPrivateDatabaseArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var database = HostingFunctions.getPrivateDatabase(GetPrivateDatabaseArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  database:\n    fn::invoke:\n      function: ovh:Hosting:getPrivateDatabase\n      arguments:\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabase.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabase.\n",
                "properties": {
                    "cpu": {
                        "type": "integer",
                        "description": "Number of CPU on your private database\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "Datacenter where this private database is located\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name displayed in customer panel for your private database\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Private database hostname\n"
                    },
                    "hostnameFtp": {
                        "type": "string",
                        "description": "Private database FTP hostname\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "infrastructure": {
                        "type": "string",
                        "description": "Infrastructure where service was stored\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "Type of the private database offer\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Private database service port\n"
                    },
                    "portFtp": {
                        "type": "integer",
                        "description": "Private database FTP port\n"
                    },
                    "quotaSize": {
                        "type": "integer",
                        "description": "Space allowed (in MB) on your private database\n"
                    },
                    "quotaUsed": {
                        "type": "integer",
                        "description": "Sapce used (in MB) on your private database\n"
                    },
                    "ram": {
                        "type": "integer",
                        "description": "Amount of ram (in MB) on your private database\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "Private database server name\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "Private database state\n"
                    },
                    "type": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string",
                        "description": "URN of the private database\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Private database available versions\n"
                    },
                    "versionLabel": {
                        "type": "string",
                        "description": "Private database version label\n"
                    },
                    "versionNumber": {
                        "type": "number",
                        "description": "Private database version number\n"
                    }
                },
                "type": "object",
                "required": [
                    "cpu",
                    "datacenter",
                    "displayName",
                    "hostname",
                    "hostnameFtp",
                    "infrastructure",
                    "offer",
                    "port",
                    "portFtp",
                    "quotaSize",
                    "quotaUsed",
                    "ram",
                    "server",
                    "serviceName",
                    "state",
                    "type",
                    "urn",
                    "version",
                    "versionLabel",
                    "versionNumber",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseAllowlist:getPrivateDatabaseAllowlist": {
            "description": "Use this data source to retrieve information about an hosting privatedatabase whitelist.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst whitelist = ovh.Hosting.getPrivateDatabaseAllowlist({\n    ip: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nwhitelist = ovh.Hosting.get_private_database_allowlist(ip=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var whitelist = Ovh.Hosting.GetPrivateDatabaseAllowlist.Invoke(new()\n    {\n        Ip = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := hosting.GetPrivateDatabaseAllowlist(ctx, \u0026hosting.GetPrivateDatabaseAllowlistArgs{\n\t\t\tIp:          pulumi.StringRef(\"XXXXXX\"),\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseAllowlistArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var whitelist = HostingFunctions.getPrivateDatabaseAllowlist(GetPrivateDatabaseAllowlistArgs.builder()\n            .ip(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  whitelist:\n    fn::invoke:\n      function: ovh:Hosting:getPrivateDatabaseAllowlist\n      arguments:\n        ip: XXXXXX\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseAllowlist.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The whitelisted IP in your instance\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseAllowlist.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the database\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "The last update date of this whitelist\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom name for your Whitelisted IP\n"
                    },
                    "service": {
                        "type": "boolean",
                        "description": "Authorize this IP to access service port\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sftp": {
                        "type": "boolean",
                        "description": "Authorize this IP to access SFTP port\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Whitelist status\n"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "lastUpdate",
                    "name",
                    "service",
                    "serviceName",
                    "sftp",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseDb:getPrivateDatabaseDb": {
            "description": "Use this data source to retrieve information about an hosting privatedatabase.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myDatabase = ovh.Hosting.getPrivateDatabaseDb({\n    databaseName: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_database = ovh.Hosting.get_private_database_db(database_name=\"XXXXXX\",\n    service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myDatabase = Ovh.Hosting.GetPrivateDatabaseDb.Invoke(new()\n    {\n        DatabaseName = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := hosting.GetPrivateDatabaseDb(ctx, \u0026hosting.GetPrivateDatabaseDbArgs{\n\t\t\tDatabaseName: \"XXXXXX\",\n\t\t\tServiceName:  \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseDbArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myDatabase = HostingFunctions.getPrivateDatabaseDb(GetPrivateDatabaseDbArgs.builder()\n            .databaseName(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myDatabase:\n    fn::invoke:\n      function: ovh:Hosting:getPrivateDatabaseDb\n      arguments:\n        databaseName: XXXXXX\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseDb.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Database name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseDb.\n",
                "properties": {
                    "backupTime": {
                        "type": "string",
                        "description": "Time of the next backup (every day)\n"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the database\n"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "quotaUsed": {
                        "type": "integer",
                        "description": "Space used by the database (in MB)\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/getPrivateDatabaseDbUser:getPrivateDatabaseDbUser"
                        },
                        "description": "Users granted to this database\n"
                    }
                },
                "type": "object",
                "required": [
                    "backupTime",
                    "creationDate",
                    "databaseName",
                    "quotaUsed",
                    "serviceName",
                    "users",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseUser:getPrivateDatabaseUser": {
            "description": "Use this data source to retrieve information about an hosting privatedatabase user.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst user = ovh.Hosting.getPrivateDatabaseUser({\n    serviceName: \"XXXXXX\",\n    userName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser = ovh.Hosting.get_private_database_user(service_name=\"XXXXXX\",\n    user_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var user = Ovh.Hosting.GetPrivateDatabaseUser.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        UserName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := hosting.GetPrivateDatabaseUser(ctx, \u0026hosting.GetPrivateDatabaseUserArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tUserName:    \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var user = HostingFunctions.getPrivateDatabaseUser(GetPrivateDatabaseUserArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .userName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  user:\n    fn::invoke:\n      function: ovh:Hosting:getPrivateDatabaseUser\n      arguments:\n        serviceName: XXXXXX\n        userName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseUser.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseUser.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the database\n"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/getPrivateDatabaseUserDatabase:getPrivateDatabaseUserDatabase"
                        },
                        "description": "Users granted to this database\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "databases",
                    "serviceName",
                    "userName",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseUserGrant:getPrivateDatabaseUserGrant": {
            "description": "Use this data source to retrieve information about an hosting privatedatabase user grant.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst userGrant = ovh.Hosting.getPrivateDatabaseUserGrant({\n    databaseName: \"XXXXXX\",\n    serviceName: \"XXXXXX\",\n    userName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nuser_grant = ovh.Hosting.get_private_database_user_grant(database_name=\"XXXXXX\",\n    service_name=\"XXXXXX\",\n    user_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var userGrant = Ovh.Hosting.GetPrivateDatabaseUserGrant.Invoke(new()\n    {\n        DatabaseName = \"XXXXXX\",\n        ServiceName = \"XXXXXX\",\n        UserName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/hosting\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := hosting.GetPrivateDatabaseUserGrant(ctx, \u0026hosting.GetPrivateDatabaseUserGrantArgs{\n\t\t\tDatabaseName: \"XXXXXX\",\n\t\t\tServiceName:  \"XXXXXX\",\n\t\t\tUserName:     \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Hosting.HostingFunctions;\nimport com.pulumi.ovh.Hosting.inputs.GetPrivateDatabaseUserGrantArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var userGrant = HostingFunctions.getPrivateDatabaseUserGrant(GetPrivateDatabaseUserGrantArgs.builder()\n            .databaseName(\"XXXXXX\")\n            .serviceName(\"XXXXXX\")\n            .userName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  userGrant:\n    fn::invoke:\n      function: ovh:Hosting:getPrivateDatabaseUserGrant\n      arguments:\n        databaseName: XXXXXX\n        serviceName: XXXXXX\n        userName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseUserGrant.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "The database name on which grant the user\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The user name\n"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "serviceName",
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseUserGrant.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the database\n"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "grant": {
                        "type": "string",
                        "description": "Grant name\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "databaseName",
                    "grant",
                    "serviceName",
                    "userName",
                    "id"
                ]
            }
        },
        "ovh:Iam/getPermissionsGroup:getPermissionsGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getPermissionsGroup.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "urn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPermissionsGroup.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The ID of this resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "id",
                    "name",
                    "owner",
                    "updatedAt",
                    "urn"
                ]
            }
        },
        "ovh:Iam/getPermissionsGroups:getPermissionsGroups": {
            "description": "Use this data source to retrieve an IAM permissions group.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst website = ovh.Iam.getPermissionsGroup({\n    urn: \"urn:v1:eu:permissionsGroup:ovh:controlPanelAccess\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nwebsite = ovh.Iam.get_permissions_group(urn=\"urn:v1:eu:permissionsGroup:ovh:controlPanelAccess\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var website = Ovh.Iam.GetPermissionsGroup.Invoke(new()\n    {\n        Urn = \"urn:v1:eu:permissionsGroup:ovh:controlPanelAccess\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iam\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iam.GetPermissionsGroup(ctx, \u0026iam.GetPermissionsGroupArgs{\n\t\t\tUrn: \"urn:v1:eu:permissionsGroup:ovh:controlPanelAccess\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Iam.IamFunctions;\nimport com.pulumi.ovh.Iam.inputs.GetPermissionsGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var website = IamFunctions.getPermissionsGroup(GetPermissionsGroupArgs.builder()\n            .urn(\"urn:v1:eu:permissionsGroup:ovh:controlPanelAccess\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  website:\n    fn::invoke:\n      function: ovh:Iam:getPermissionsGroup\n      arguments:\n        urn: urn:v1:eu:permissionsGroup:ovh:controlPanelAccess\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getPermissionsGroups.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "urns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "urns",
                    "id"
                ]
            }
        },
        "ovh:Iam/getPolicies:getPolicies": {
            "description": "Use this data source to list the existing IAM policies of an account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myPolicies = ovh.Iam.getPolicies({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_policies = ovh.Iam.get_policies()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myPolicies = Ovh.Iam.GetPolicies.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iam\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iam.GetPolicies(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Iam.IamFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myPolicies = IamFunctions.getPolicies();\n\n    }\n}\n```\n```yaml\nvariables:\n  myPolicies:\n    fn::invoke:\n      function: ovh:Iam:getPolicies\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getPolicies.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the policies IDs.\n"
                    }
                },
                "type": "object",
                "required": [
                    "policies",
                    "id"
                ]
            }
        },
        "ovh:Iam/getPolicy:getPolicy": {
            "description": "Use this data source to retrieve am IAM policy.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myPolicy = ovh.Iam.getPolicy({\n    id: \"my_policy_id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_policy = ovh.Iam.get_policy(id=\"my_policy_id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myPolicy = Ovh.Iam.GetPolicy.Invoke(new()\n    {\n        Id = \"my_policy_id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iam\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iam.GetPolicy(ctx, \u0026iam.GetPolicyArgs{\n\t\t\tId: \"my_policy_id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Iam.IamFunctions;\nimport com.pulumi.ovh.Iam.inputs.GetPolicyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myPolicy = IamFunctions.getPolicy(GetPolicyArgs.builder()\n            .id(\"my_policy_id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myPolicy:\n    fn::invoke:\n      function: ovh:Iam:getPolicy\n      arguments:\n        id: my_policy_id\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPolicy.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of actions allowed by the policy.\n"
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of actions that will be denied no matter what policy exists.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Group description.\n"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of actions that will be subtracted from the `allow` list.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "UUID of the policy.\n"
                    },
                    "permissionsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of permissions groups that apply to the policy.\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicy.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of actions allowed by the policy.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date of this group.\n"
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of actions that will be denied no matter what policy exists.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Group description.\n"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of actions that will be subtracted from the `allow` list.\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "identities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of identities affected by the policy.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy.\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Owner of the policy.\n"
                    },
                    "permissionsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of permissions groups that apply to the policy.\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Indicates that the policy is a default one.\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of resources affected by the policy.\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of the last update of this group.\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "id",
                    "identities",
                    "name",
                    "owner",
                    "readOnly",
                    "resources",
                    "updatedAt"
                ]
            }
        },
        "ovh:Iam/getReferenceActions:getReferenceActions": {
            "description": "Use this data source to list the IAM action associated with a resource type.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Iam.IamFunctions;\nimport com.pulumi.ovh.Iam.inputs.GetReferenceActionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var vpsActions = IamFunctions.getReferenceActions(GetReferenceActionsArgs.builder()\n            .resourceType(\"vps\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  vpsActions:\n    fn::invoke:\n      function: ovh:Iam:getReferenceActions\n      arguments:\n        resourceType: vps\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getReferenceActions.\n",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Kind of resource we want the actions for\n"
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getReferenceActions.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Iam/getReferenceActionsAction:getReferenceActionsAction"
                        },
                        "description": "List of actions\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "actions",
                    "type",
                    "id"
                ]
            }
        },
        "ovh:Iam/getReferenceResourceType:getReferenceResourceType": {
            "description": "Use this data source to list all the IAM resource types.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst types = ovh.Iam.getReferenceResourceType({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntypes = ovh.Iam.get_reference_resource_type()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var types = Ovh.Iam.GetReferenceResourceType.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iam\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iam.GetReferenceResourceType(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Iam.IamFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var types = IamFunctions.getReferenceResourceType();\n\n    }\n}\n```\n```yaml\nvariables:\n  types:\n    fn::invoke:\n      function: ovh:Iam:getReferenceResourceType\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getReferenceResourceType.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of resource types\n"
                    }
                },
                "type": "object",
                "required": [
                    "types",
                    "id"
                ]
            }
        },
        "ovh:Iam/getResourceGroup:getResourceGroup": {
            "description": "Use this data source get details about a resource group.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myResourceGroup = ovh.Iam.getResourceGroup({\n    id: \"my_resource_group_id\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_resource_group = ovh.Iam.get_resource_group(id=\"my_resource_group_id\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myResourceGroup = Ovh.Iam.GetResourceGroup.Invoke(new()\n    {\n        Id = \"my_resource_group_id\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iam\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iam.GetResourceGroup(ctx, \u0026iam.GetResourceGroupArgs{\n\t\t\tId: \"my_resource_group_id\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Iam.IamFunctions;\nimport com.pulumi.ovh.Iam.inputs.GetResourceGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myResourceGroup = IamFunctions.getResourceGroup(GetResourceGroupArgs.builder()\n            .id(\"my_resource_group_id\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myResourceGroup:\n    fn::invoke:\n      function: ovh:Iam:getResourceGroup\n      arguments:\n        id: my_resource_group_id\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getResourceGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the resource group\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getResourceGroup.\n",
                "properties": {
                    "GroupURN": {
                        "type": "string",
                        "description": "URN of the resource group, used when writing policies\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the resource group\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the resource group\n"
                    },
                    "owner": {
                        "type": "string",
                        "description": "Name of the account owning the resource group\n"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Marks that the resource group is not editable. Usually means that this is a default resource group created by OVHcloud\n"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of the URNs of the resources contained in the resource group\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of the last modification of the resource group\n"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "id",
                    "name",
                    "owner",
                    "readOnly",
                    "resources",
                    "updatedAt",
                    "GroupURN"
                ]
            }
        },
        "ovh:Iam/getResourceGroups:getResourceGroups": {
            "description": "Use this data source to list the existing IAM policies of an account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myGroups = ovh.Iam.getResourceGroups({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_groups = ovh.Iam.get_resource_groups()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myGroups = Ovh.Iam.GetResourceGroups.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iam\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iam.GetResourceGroups(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Iam.IamFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myGroups = IamFunctions.getResourceGroups();\n\n    }\n}\n```\n```yaml\nvariables:\n  myGroups:\n    fn::invoke:\n      function: ovh:Iam:getResourceGroups\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getResourceGroups.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "resourceGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of the resource groups IDs.\n"
                    }
                },
                "type": "object",
                "required": [
                    "resourceGroups",
                    "id"
                ]
            }
        },
        "ovh:Ip/getFirewall:getFirewall": {
            "description": "Use this data source to retrieve information about an IP firewall.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myFirewall = ovh.Ip.getFirewall({\n    ip: \"XXXXXX\",\n    ipOnFirewall: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_firewall = ovh.Ip.get_firewall(ip=\"XXXXXX\",\n    ip_on_firewall=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myFirewall = Ovh.Ip.GetFirewall.Invoke(new()\n    {\n        Ip = \"XXXXXX\",\n        IpOnFirewall = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ip.GetFirewall(ctx, \u0026ip.GetFirewallArgs{\n\t\t\tIp:           \"XXXXXX\",\n\t\t\tIpOnFirewall: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.IpFunctions;\nimport com.pulumi.ovh.Ip.inputs.GetFirewallArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myFirewall = IpFunctions.getFirewall(GetFirewallArgs.builder()\n            .ip(\"XXXXXX\")\n            .ipOnFirewall(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myFirewall:\n    fn::invoke:\n      function: ovh:Ip:getFirewall\n      arguments:\n        ip: XXXXXX\n        ipOnFirewall: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewall.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The IP or the CIDR\n"
                    },
                    "ipOnFirewall": {
                        "type": "string",
                        "description": "IPv4 address\n"
                    }
                },
                "type": "object",
                "required": [
                    "ip",
                    "ipOnFirewall"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFirewall.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP or the CIDR\n"
                    },
                    "ipOnFirewall": {
                        "type": "string",
                        "description": "IPv4 address\n* `enabled ` - Whether firewall is enabled\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your ip on firewall\n"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "ip",
                    "ipOnFirewall",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:Ip/getFirewallRule:getFirewallRule": {
            "description": "Use this data source to retrieve information about a rule on an IP firewall.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myFirewallRule = ovh.Ip.getFirewallRule({\n    ip: \"XXXXXX\",\n    ipOnFirewall: \"XXXXXX\",\n    sequence: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_firewall_rule = ovh.Ip.get_firewall_rule(ip=\"XXXXXX\",\n    ip_on_firewall=\"XXXXXX\",\n    sequence=0)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myFirewallRule = Ovh.Ip.GetFirewallRule.Invoke(new()\n    {\n        Ip = \"XXXXXX\",\n        IpOnFirewall = \"XXXXXX\",\n        Sequence = 0,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ip.GetFirewallRule(ctx, \u0026ip.GetFirewallRuleArgs{\n\t\t\tIp:           \"XXXXXX\",\n\t\t\tIpOnFirewall: \"XXXXXX\",\n\t\t\tSequence:     0,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.IpFunctions;\nimport com.pulumi.ovh.Ip.inputs.GetFirewallRuleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myFirewallRule = IpFunctions.getFirewallRule(GetFirewallRuleArgs.builder()\n            .ip(\"XXXXXX\")\n            .ipOnFirewall(\"XXXXXX\")\n            .sequence(0)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myFirewallRule:\n    fn::invoke:\n      function: ovh:Ip:getFirewallRule\n      arguments:\n        ip: XXXXXX\n        ipOnFirewall: XXXXXX\n        sequence: 0\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallRule.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The IP or the CIDR\n"
                    },
                    "ipOnFirewall": {
                        "type": "string",
                        "description": "IPv4 address\n"
                    },
                    "sequence": {
                        "type": "number",
                        "description": "Rule position in the rules array\n"
                    }
                },
                "type": "object",
                "required": [
                    "ip",
                    "ipOnFirewall",
                    "sequence"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallRule.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Possible values for action (deny|permit)\n"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the rule\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination IP for your rule\n"
                    },
                    "destinationPort": {
                        "type": "string",
                        "description": "Destination port for your rule. Only with TCP/UDP protocol\n"
                    },
                    "fragments": {
                        "type": "boolean",
                        "description": "Fragments option\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP or the CIDR\n"
                    },
                    "ipOnFirewall": {
                        "type": "string",
                        "description": "IPv4 address\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Possible values for protocol (ah|esp|gre|icmp|ipv4|tcp|udp)\n"
                    },
                    "rule": {
                        "type": "string",
                        "description": "Description of the rule\n"
                    },
                    "sequence": {
                        "type": "number",
                        "description": "Rule position in the rules array\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)\n"
                    },
                    "sourcePort": {
                        "type": "string",
                        "description": "Source port for your rule. Only with TCP/UDP protocol\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your rule\n"
                    },
                    "tcpOption": {
                        "type": "string",
                        "description": "TCP option on your rule (syn|established)\n"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "creationDate",
                    "destination",
                    "destinationPort",
                    "fragments",
                    "ip",
                    "ipOnFirewall",
                    "protocol",
                    "rule",
                    "sequence",
                    "source",
                    "sourcePort",
                    "state",
                    "tcpOption",
                    "id"
                ]
            }
        },
        "ovh:Ip/getMitigation:getMitigation": {
            "description": "Use this resource to retrieve information about an IP permanent mitigation.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst mitigationData = ovh.Ip.getMitigation({\n    ip: \"XXXXXX\",\n    ipOnMitigation: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmitigation_data = ovh.Ip.get_mitigation(ip=\"XXXXXX\",\n    ip_on_mitigation=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var mitigationData = Ovh.Ip.GetMitigation.Invoke(new()\n    {\n        Ip = \"XXXXXX\",\n        IpOnMitigation = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ip.GetMitigation(ctx, \u0026ip.GetMitigationArgs{\n\t\t\tIp:             \"XXXXXX\",\n\t\t\tIpOnMitigation: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.IpFunctions;\nimport com.pulumi.ovh.Ip.inputs.GetMitigationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var mitigationData = IpFunctions.getMitigation(GetMitigationArgs.builder()\n            .ip(\"XXXXXX\")\n            .ipOnMitigation(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  mitigationData:\n    fn::invoke:\n      function: ovh:Ip:getMitigation\n      arguments:\n        ip: XXXXXX\n        ipOnMitigation: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getMitigation.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The IP or the CIDR\n"
                    },
                    "ipOnMitigation": {
                        "type": "string",
                        "description": "IPv4 address\n"
                    }
                },
                "type": "object",
                "required": [
                    "ip",
                    "ipOnMitigation"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMitigation.\n",
                "properties": {
                    "auto": {
                        "type": "boolean",
                        "description": "Set on true if the IP is on auto-mitigation\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "The IP or the CIDR\n"
                    },
                    "ipOnMitigation": {
                        "type": "string",
                        "description": "IPv4 address\n* `permanent ` - Set on true if the IP is on permanent mitigation\n"
                    },
                    "permanent": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of the IP on mitigation\n"
                    }
                },
                "type": "object",
                "required": [
                    "auto",
                    "ip",
                    "ipOnMitigation",
                    "permanent",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:Ip/getService:getService": {
            "description": "Use this data source to retrieve information about an IP service.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myIp = ovh.Ip.getService({\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_ip = ovh.Ip.get_service(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myIp = Ovh.Ip.GetService.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ip.GetService(ctx, \u0026ip.GetServiceArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Ip.IpFunctions;\nimport com.pulumi.ovh.Ip.inputs.GetServiceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myIp = IpFunctions.getService(GetServiceArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myIp:\n    fn::invoke:\n      function: ovh:Ip:getService\n      arguments:\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean",
                        "description": "can be terminated\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "country\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Custom description on your ip\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "ip block\n"
                    },
                    "organisationId": {
                        "type": "string",
                        "description": "IP block organisation Id\n"
                    },
                    "routedTos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/getServiceRoutedTo:getServiceRoutedTo"
                        },
                        "description": "Routage information\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service where ip is routed to\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible values for ip type ( \"cdn\", \"cloud\", \"dedicated\", \"failover\", \"hosted_ssl\", \"housing\", \"loadBalancing\", \"mail\", \"overthebox\", \"pcc\", \"pci\", \"private\", \"vpn\", \"vps\", \"vrack\", \"xdsl\")\n"
                    }
                },
                "type": "object",
                "required": [
                    "canBeTerminated",
                    "country",
                    "description",
                    "ip",
                    "organisationId",
                    "routedTos",
                    "serviceName",
                    "type",
                    "id"
                ]
            }
        },
        "ovh:IpLoadBalancing/getIpLoadBalancing:getIpLoadBalancing": {
            "description": "Use this data source to retrieve information about an IP Load Balancing product\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lb = ovh.IpLoadBalancing.getIpLoadBalancing({\n    serviceName: \"XXXXXX\",\n    state: \"ok\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb = ovh.IpLoadBalancing.get_ip_load_balancing(service_name=\"XXXXXX\",\n    state=\"ok\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lb = Ovh.IpLoadBalancing.GetIpLoadBalancing.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        State = \"ok\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iploadbalancing.GetIpLoadBalancing(ctx, \u0026iploadbalancing.GetIpLoadBalancingArgs{\n\t\t\tServiceName: pulumi.StringRef(\"XXXXXX\"),\n\t\t\tState:       pulumi.StringRef(\"ok\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .state(\"ok\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  lb:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getIpLoadBalancing\n      arguments:\n        serviceName: XXXXXX\n        state: ok\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getIpLoadBalancing.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string",
                        "description": "Your IP load balancing\n"
                    },
                    "ipv4": {
                        "type": "string",
                        "description": "The IPV4 associated to your IP load balancing\n"
                    },
                    "ipv6": {
                        "type": "string",
                        "description": "The IPV6 associated to your IP load balancing\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "The offer of your IP load balancing\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "sslConfiguration": {
                        "type": "string",
                        "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and Java 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android 2.3, Java 7. Can take any of the following value: \"intermediate\", \"modern\"\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your IP. Can take any of the following value: \"blacklisted\", \"deleted\", \"free\", \"ok\", \"quarantined\", \"suspended\"\n"
                    },
                    "vrackEligibility": {
                        "type": "boolean",
                        "description": "Vrack eligibility. Takes a boolean value.\n"
                    },
                    "vrackName": {
                        "type": "string",
                        "description": "Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Location where your service is. This takes an array of values.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIpLoadBalancing.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string"
                    },
                    "ipv4": {
                        "type": "string"
                    },
                    "ipv6": {
                        "type": "string"
                    },
                    "metricsToken": {
                        "type": "string",
                        "description": "The metrics token associated with your IP load balancing This attribute is sensitive.\n",
                        "secret": true
                    },
                    "offer": {
                        "type": "string"
                    },
                    "orderableZones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/getIpLoadBalancingOrderableZone:getIpLoadBalancingOrderableZone"
                        },
                        "description": "Available additional zone for your Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sslConfiguration": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string",
                        "description": "The URN of the load balancer, to be used in IAM policies\n"
                    },
                    "vrackEligibility": {
                        "type": "boolean"
                    },
                    "vrackName": {
                        "type": "string"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "displayName",
                    "ipLoadbalancing",
                    "ipv4",
                    "ipv6",
                    "metricsToken",
                    "offer",
                    "orderableZones",
                    "serviceName",
                    "sslConfiguration",
                    "state",
                    "urn",
                    "vrackEligibility",
                    "vrackName",
                    "zones",
                    "id"
                ]
            }
        },
        "ovh:IpLoadBalancing/getVrackNetwork:getVrackNetwork": {
            "description": "Use this data source to get the details of Vrack network available for your IPLoadbalancer associated with your OVHcloud account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbNetwork = ovh.IpLoadBalancing.getVrackNetwork({\n    serviceName: \"XXXXXX\",\n    vrackNetworkId: \"yyy\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb_network = ovh.IpLoadBalancing.get_vrack_network(service_name=\"XXXXXX\",\n    vrack_network_id=\"yyy\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lbNetwork = Ovh.IpLoadBalancing.GetVrackNetwork.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        VrackNetworkId = \"yyy\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/iploadbalancing\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := iploadbalancing.GetVrackNetwork(ctx, \u0026iploadbalancing.GetVrackNetworkArgs{\n\t\t\tServiceName:    \"XXXXXX\",\n\t\t\tVrackNetworkId: \"yyy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;\nimport com.pulumi.ovh.IpLoadBalancing.inputs.GetVrackNetworkArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lbNetwork = IpLoadBalancingFunctions.getVrackNetwork(GetVrackNetworkArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .vrackNetworkId(\"yyy\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  lbNetwork:\n    fn::invoke:\n      function: ovh:IpLoadBalancing:getVrackNetwork\n      arguments:\n        serviceName: XXXXXX\n        vrackNetworkId: yyy\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVrackNetwork.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "vrackNetworkId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrackNetwork.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your vrack network\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "natIp": {
                        "type": "string",
                        "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "IP block of the private network in the vRack\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "displayName",
                    "natIp",
                    "serviceName",
                    "subnet",
                    "vlan",
                    "vrackNetworkId",
                    "id"
                ]
            }
        },
        "ovh:Me/getAPIOAuth2Client:getAPIOAuth2Client": {
            "description": "Use this data source to retrieve information about an existing OAuth2 service account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myOauth2Client = ovh.Me.getAPIOAuth2Client({\n    clientId: \"5f8969a993ec8b4b\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_oauth2_client = ovh.Me.get_apio_auth2_client(client_id=\"5f8969a993ec8b4b\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myOauth2Client = Ovh.Me.GetAPIOAuth2Client.Invoke(new()\n    {\n        ClientId = \"5f8969a993ec8b4b\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetAPIOAuth2Client(ctx, \u0026me.GetAPIOAuth2ClientArgs{\n\t\t\tClientId: \"5f8969a993ec8b4b\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetAPIOAuth2ClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myOauth2Client = MeFunctions.getAPIOAuth2Client(GetAPIOAuth2ClientArgs.builder()\n            .clientId(\"5f8969a993ec8b4b\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myOauth2Client:\n    fn::invoke:\n      function: ovh:Me:getAPIOAuth2Client\n      arguments:\n        clientId: 5f8969a993ec8b4b\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAPIOAuth2Client.\n",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "Client ID of an existing OAuth2 service account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clientId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAPIOAuth2Client.\n",
                "properties": {
                    "callbackUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of callback urls when configuring the `AUTHORIZATION_CODE` flow.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Client ID of the created service account.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "OAuth2 client description.\n"
                    },
                    "flow": {
                        "type": "string",
                        "description": "The OAuth2 flow to use. `AUTHORIZATION_CODE` or `CLIENT_CREDENTIALS` are supported at the moment.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "identity": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "OAuth2 client name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "callbackUrls",
                    "clientId",
                    "description",
                    "flow",
                    "identity",
                    "name",
                    "id"
                ]
            }
        },
        "ovh:Me/getAPIOAuth2Clients:getAPIOAuth2Clients": {
            "description": "Use this data source to retrieve information the list of existing OAuth2 service account IDs.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myOauth2Clients = ovh.Me.getAPIOAuth2Client({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_oauth2_clients = ovh.Me.get_apio_auth2_client()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myOauth2Clients = Ovh.Me.GetAPIOAuth2Client.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetAPIOAuth2Client(ctx, \u0026me.GetAPIOAuth2ClientArgs{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetAPIOAuth2ClientArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myOauth2Clients = MeFunctions.getAPIOAuth2Client();\n\n    }\n}\n```\n```yaml\nvariables:\n  myOauth2Clients:\n    fn::invoke:\n      function: ovh:Me:getAPIOAuth2Client\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getAPIOAuth2Clients.\n",
                "properties": {
                    "clientIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of all the existing client IDs.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clientIds",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityGroup:getIdentityGroup": {
            "description": "Use this data source to retrieve information about an identity group.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myGroup = ovh.Me.getIdentityGroup({\n    name: \"my_group_name\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_group = ovh.Me.get_identity_group(name=\"my_group_name\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myGroup = Ovh.Me.GetIdentityGroup.Invoke(new()\n    {\n        Name = \"my_group_name\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetIdentityGroup(ctx, \u0026me.GetIdentityGroupArgs{\n\t\t\tName: \"my_group_name\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetIdentityGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myGroup = MeFunctions.getIdentityGroup(GetIdentityGroupArgs.builder()\n            .name(\"my_group_name\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myGroup:\n    fn::invoke:\n      function: ovh:Me:getIdentityGroup\n      arguments:\n        name: my_group_name\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityGroup.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Group name.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityGroup.\n",
                "properties": {
                    "GroupURN": {
                        "type": "string",
                        "description": "Identity URN of the group.\n"
                    },
                    "creation": {
                        "type": "string",
                        "description": "Creation date of this group.\n"
                    },
                    "defaultGroup": {
                        "type": "boolean",
                        "description": "Is the group a default and immutable one.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Group description.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Date of the last update of this group.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "description": "Role associated with the group. Valid roles are ADMIN, REGULAR, UNPRIVILEGED, and NONE.\n"
                    }
                },
                "type": "object",
                "required": [
                    "creation",
                    "defaultGroup",
                    "description",
                    "lastUpdate",
                    "name",
                    "role",
                    "GroupURN",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityGroups:getIdentityGroups": {
            "description": "Use this data source to retrieve the list of the account's identity groups\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst groups = ovh.Me.getIdentityGroups({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ngroups = ovh.Me.get_identity_groups()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var groups = Ovh.Me.GetIdentityGroups.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetIdentityGroups(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var groups = MeFunctions.getIdentityGroups();\n\n    }\n}\n```\n```yaml\nvariables:\n  groups:\n    fn::invoke:\n      function: ovh:Me:getIdentityGroups\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getIdentityGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the group names of all the identity groups.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityUser:getIdentityUser": {
            "description": "Use this data source to retrieve information about an identity user.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myUser = ovh.Me.getIdentityUser({\n    user: \"my_user_login\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_user = ovh.Me.get_identity_user(user=\"my_user_login\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myUser = Ovh.Me.GetIdentityUser.Invoke(new()\n    {\n        User = \"my_user_login\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetIdentityUser(ctx, \u0026me.GetIdentityUserArgs{\n\t\t\tUser: \"my_user_login\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetIdentityUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myUser = MeFunctions.getIdentityUser(GetIdentityUserArgs.builder()\n            .user(\"my_user_login\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myUser:\n    fn::invoke:\n      function: ovh:Me:getIdentityUser\n      arguments:\n        user: my_user_login\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityUser.\n",
                "properties": {
                    "user": {
                        "type": "string",
                        "description": "User's login.\n"
                    }
                },
                "type": "object",
                "required": [
                    "user"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityUser.\n",
                "properties": {
                    "UserURN": {
                        "type": "string",
                        "description": "User's identity URN.\n"
                    },
                    "creation": {
                        "type": "string",
                        "description": "Creation date of this user.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User description.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email.\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "User's group.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update of this user.\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User's login suffix.\n"
                    },
                    "passwordLastUpdate": {
                        "type": "string",
                        "description": "When the user changed his password for the last time.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current user's status.\n"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creation",
                    "description",
                    "email",
                    "group",
                    "lastUpdate",
                    "login",
                    "passwordLastUpdate",
                    "status",
                    "UserURN",
                    "user",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityUsers:getIdentityUsers": {
            "description": "Use this data source to retrieve list of user logins of the account's identity users.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst users = ovh.Me.getIdentityUsers({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nusers = ovh.Me.get_identity_users()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var users = Ovh.Me.GetIdentityUsers.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetIdentityUsers(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var users = MeFunctions.getIdentityUsers();\n\n    }\n}\n```\n```yaml\nvariables:\n  users:\n    fn::invoke:\n      function: ovh:Me:getIdentityUsers\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getIdentityUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of the user's logins of all the identity users.\n"
                    }
                },
                "type": "object",
                "required": [
                    "users",
                    "id"
                ]
            }
        },
        "ovh:Me/getMe:getMe": {
            "description": "Use this data source to get information about the current OVHcloud account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myAccount = ovh.Me.getMe({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_account = ovh.Me.get_me()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAccount = Ovh.Me.GetMe.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = MeFunctions.getMe();\n\n    }\n}\n```\n```yaml\nvariables:\n  myAccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getMe.\n",
                "properties": {
                    "AccountURN": {
                        "type": "string",
                        "description": "The resource URN of the account, to be used when writing IAM policies\n"
                    },
                    "address": {
                        "type": "string",
                        "description": "Postal address of the account\n"
                    },
                    "area": {
                        "type": "string",
                        "description": "Area of the account\n"
                    },
                    "birthCity": {
                        "type": "string",
                        "description": "City of birth\n"
                    },
                    "birthDay": {
                        "type": "string",
                        "description": "Birth date\n"
                    },
                    "city": {
                        "type": "string",
                        "description": "City of the account\n"
                    },
                    "companyNationalIdentificationNumber": {
                        "type": "string",
                        "description": "This is the national identification number of the company that possess this account\n"
                    },
                    "corporationType": {
                        "type": "string",
                        "description": "Type of corporation\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "Country of the account\n"
                    },
                    "currencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Me/getMeCurrency:getMeCurrency"
                        }
                    },
                    "customerCode": {
                        "type": "string",
                        "description": "The customer code of this account (a numerical value used for identification when contacting support via phone call)\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email address\n"
                    },
                    "fax": {
                        "type": "string",
                        "description": "Fax number\n"
                    },
                    "firstname": {
                        "type": "string",
                        "description": "First name\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "italianSdi": {
                        "type": "string",
                        "description": "Italian SDI\n"
                    },
                    "language": {
                        "type": "string",
                        "description": "Preferred language for this account\n"
                    },
                    "legalform": {
                        "type": "string",
                        "description": "Legal form of the account\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the account holder\n"
                    },
                    "nationalIdentificationNumber": {
                        "type": "string",
                        "description": "National Identification Number of this account\n"
                    },
                    "nichandle": {
                        "type": "string",
                        "description": "Nic handle / customer identifier\n"
                    },
                    "organisation": {
                        "type": "string",
                        "description": "Name of the organisation for this account\n"
                    },
                    "ovhCompany": {
                        "type": "string",
                        "description": "OVHcloud subsidiary\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud subsidiary\n"
                    },
                    "phone": {
                        "type": "string",
                        "description": "Phone number\n"
                    },
                    "phoneCountry": {
                        "type": "string",
                        "description": "Country code of the phone number\n"
                    },
                    "sex": {
                        "type": "string",
                        "description": "Gender of the account holder\n"
                    },
                    "spareEmail": {
                        "type": "string",
                        "description": "Backup email address\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the postal address\n"
                    },
                    "vat": {
                        "type": "string",
                        "description": "VAT number\n"
                    },
                    "zip": {
                        "type": "string",
                        "description": "Zipcode of the address\n"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "area",
                    "birthCity",
                    "birthDay",
                    "city",
                    "companyNationalIdentificationNumber",
                    "corporationType",
                    "country",
                    "currencies",
                    "customerCode",
                    "email",
                    "fax",
                    "firstname",
                    "italianSdi",
                    "language",
                    "legalform",
                    "name",
                    "nationalIdentificationNumber",
                    "nichandle",
                    "organisation",
                    "ovhCompany",
                    "ovhSubsidiary",
                    "phone",
                    "phoneCountry",
                    "sex",
                    "spareEmail",
                    "state",
                    "AccountURN",
                    "vat",
                    "zip",
                    "id"
                ]
            }
        },
        "ovh:Me/getPaymentmeanBankAccount:getPaymentmeanBankAccount": {
            "description": "Use this data source to retrieve information about a bank account payment mean associated with an OVHcloud account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst ba = ovh.Me.getPaymentmeanBankAccount({\n    useDefault: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nba = ovh.Me.get_paymentmean_bank_account(use_default=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ba = Ovh.Me.GetPaymentmeanBankAccount.Invoke(new()\n    {\n        UseDefault = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetPaymentmeanBankAccount(ctx, \u0026me.GetPaymentmeanBankAccountArgs{\n\t\t\tUseDefault: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetPaymentmeanBankAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ba = MeFunctions.getPaymentmeanBankAccount(GetPaymentmeanBankAccountArgs.builder()\n            .useDefault(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  ba:\n    fn::invoke:\n      function: ovh:Me:getPaymentmeanBankAccount\n      arguments:\n        useDefault: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPaymentmeanBankAccount.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "description": "a regexp used to filter bank accounts on their `description` attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string",
                        "description": "Filter bank accounts on their `state` attribute. Can be \"blockedForIncidents\", \"valid\", \"pendingValidation\"\n"
                    },
                    "useDefault": {
                        "type": "boolean",
                        "description": "Retrieve bank account marked as default payment mean.\n",
                        "willReplaceOnChanges": true
                    },
                    "useOldest": {
                        "type": "boolean",
                        "description": "Retrieve oldest bank account. project.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPaymentmeanBankAccount.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "a boolean which tells if the retrieved bank account is marked as the default payment mean\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description attribute of the bank account\n"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useOldest": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:Me/getPaymentmeanCreditCard:getPaymentmeanCreditCard": {
            "description": "Use this data source to retrieve information about a credit card payment mean associated with an OVHcloud account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst cc = ovh.Me.getPaymentmeanCreditCard({\n    useDefault: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ncc = ovh.Me.get_paymentmean_credit_card(use_default=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cc = Ovh.Me.GetPaymentmeanCreditCard.Invoke(new()\n    {\n        UseDefault = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := me.GetPaymentmeanCreditCard(ctx, \u0026me.GetPaymentmeanCreditCardArgs{\n\t\t\tUseDefault: pulumi.BoolRef(true),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Me.inputs.GetPaymentmeanCreditCardArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var cc = MeFunctions.getPaymentmeanCreditCard(GetPaymentmeanCreditCardArgs.builder()\n            .useDefault(true)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  cc:\n    fn::invoke:\n      function: ovh:Me:getPaymentmeanCreditCard\n      arguments:\n        useDefault: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPaymentmeanCreditCard.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "description": "a regexp used to filter credit cards on their `description` attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Filter credit cards on their `state` attribute. Can be \"expired\", \"valid\", \"tooManyFailures\"\n"
                    },
                    "useDefault": {
                        "type": "boolean",
                        "description": "Retrieve credit card marked as default payment mean.\n",
                        "willReplaceOnChanges": true
                    },
                    "useLastToExpire": {
                        "type": "boolean",
                        "description": "Retrieve the credit card that will be the last to expire according to its expiration date.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPaymentmeanCreditCard.\n",
                "properties": {
                    "default": {
                        "type": "boolean",
                        "description": "a boolean which tells if the retrieved credit card is marked as the default payment mean\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "the description attribute of the credit card\n"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "the state attribute of the credit card\n"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useLastToExpire": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:OVHcloud/connect:Connect": {
            "description": "Use this data source to retrieve information about an Ovhcloud Connect product\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst occ = ovh.OVHcloud.Connect({\n    serviceName: \"XXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nocc = ovh.OVHcloud.connect(service_name=\"XXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var occ = Ovh.OVHcloud.Connect.Invoke(new()\n    {\n        ServiceName = \"XXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ovhcloud\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovhcloud.Connect(ctx, \u0026ovhcloud.ConnectArgs{\n\t\t\tServiceName: \"XXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OVHcloud.OVHcloudFunctions;\nimport com.pulumi.ovh.OVHcloud.inputs.ConnectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var occ = OVHcloudFunctions.Connect(ConnectArgs.builder()\n            .serviceName(\"XXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  occ:\n    fn::invoke:\n      function: ovh:OVHcloud:Connect\n      arguments:\n        serviceName: XXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking Connect.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The uuid of the Ovhcloud connect.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by Connect.\n",
                "properties": {
                    "bandwidth": {
                        "type": "string",
                        "description": "Service bandwidth\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Service description\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:OVHcloud/ConnectIam:ConnectIam",
                        "description": "IAM resource information\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "interfaceLists": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "List of interfaces linked to a service\n"
                    },
                    "pop": {
                        "type": "string",
                        "description": "Pop reference where the service is delivered\n"
                    },
                    "portQuantity": {
                        "type": "string",
                        "description": "Port quantity\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product name of the service\n"
                    },
                    "providerName": {
                        "type": "string",
                        "description": "Service provider\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Service status\n"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "uuid of the Ovhcloud Connect service\n"
                    },
                    "vrack": {
                        "type": "string",
                        "description": "vrack linked to the service\n"
                    }
                },
                "type": "object",
                "required": [
                    "bandwidth",
                    "description",
                    "iam",
                    "interfaceLists",
                    "pop",
                    "portQuantity",
                    "product",
                    "providerName",
                    "serviceName",
                    "status",
                    "uuid",
                    "vrack",
                    "id"
                ]
            }
        },
        "ovh:OVHcloud/connects:Connects": {
            "description": "Get the details of your Ovhcloud Connect products.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst occs = ovh.OVHcloud.Connect({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\noccs = ovh.OVHcloud.connect()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var occs = Ovh.OVHcloud.Connect.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ovhcloud\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovhcloud.Connect(ctx, \u0026ovhcloud.ConnectArgs{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OVHcloud.OVHcloudFunctions;\nimport com.pulumi.ovh.OVHcloud.inputs.ConnectArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var occs = OVHcloudFunctions.Connect();\n\n    }\n}\n```\n```yaml\nvariables:\n  occs:\n    fn::invoke:\n      function: ovh:OVHcloud:Connect\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by Connects.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "occs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:OVHcloud/ConnectsOcc:ConnectsOcc"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "occs",
                    "id"
                ]
            }
        },
        "ovh:Okms/getOkmsCredential:getOkmsCredential": {
            "description": "Use this data source to retrieve data associated with a KMS credential, such as the PEM encoded certificate.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Okms.OkmsFunctions;\nimport com.pulumi.ovh.Okms.inputs.GetOkmsResourceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kms = OkmsFunctions.getOkmsResource(GetOkmsResourceArgs.builder()\n            .id(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .okmsId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  kms:\n    fn::invoke:\n      function: ovh:Okms:getOkmsResource\n      arguments:\n        id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        okmsId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsCredential.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the credential\n"
                    },
                    "okmsId": {
                        "type": "string",
                        "description": "ID of the KMS\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "okmsId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsCredential.\n",
                "properties": {
                    "certificatePem": {
                        "type": "string",
                        "description": "(String) PEM encoded certificate of the credential\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "(String) Creation time of the credential\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "(String) Description of the credential\n"
                    },
                    "expiredAt": {
                        "type": "string",
                        "description": "(String) Expiration time of the credential\n"
                    },
                    "fromCsr": {
                        "type": "boolean",
                        "description": "(Boolean) Is the credential generated from CSR\n"
                    },
                    "id": {
                        "type": "string"
                    },
                    "identityUrns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(List of String) List of identity URNs associated with the credential\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "(String) Name of the credential\n"
                    },
                    "okmsId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "(String) Status of the credential\n"
                    }
                },
                "type": "object",
                "required": [
                    "certificatePem",
                    "createdAt",
                    "description",
                    "expiredAt",
                    "fromCsr",
                    "id",
                    "identityUrns",
                    "name",
                    "okmsId",
                    "status"
                ]
            }
        },
        "ovh:Okms/getOkmsResource:getOkmsResource": {
            "description": "Use this data source to retrieve information about a KMS associated with this account\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst kms = ovh.Okms.getOkmsResource({\n    id: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nkms = ovh.Okms.get_okms_resource(id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var kms = Ovh.Okms.GetOkmsResource.Invoke(new()\n    {\n        Id = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/okms\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okms.GetOkmsResource(ctx, \u0026okms.GetOkmsResourceArgs{\n\t\t\tId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Okms.OkmsFunctions;\nimport com.pulumi.ovh.Okms.inputs.GetOkmsResourceArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var kms = OkmsFunctions.getOkmsResource(GetOkmsResourceArgs.builder()\n            .id(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  kms:\n    fn::invoke:\n      function: ovh:Okms:getOkmsResource\n      arguments:\n        id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsResource.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Should be set to the ID of your KMS\n"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsResource.\n",
                "properties": {
                    "iam": {
                        "$ref": "#/types/ovh:Okms/getOkmsResourceIam:getOkmsResourceIam",
                        "description": "(Attributes) IAM resource metadata (see below for nested schema)\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "(String) Unique identifier of the resource\n"
                    },
                    "kmipEndpoint": {
                        "type": "string",
                        "description": "(String) KMS kmip API endpoint\n"
                    },
                    "publicCa": {
                        "type": "string",
                        "description": "(String) KMS public CA (Certificate Authority)\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "(String) Region\n"
                    },
                    "restEndpoint": {
                        "type": "string",
                        "description": "(String) KMS rest API endpoint\n"
                    },
                    "swaggerEndpoint": {
                        "type": "string",
                        "description": "(String) KMS rest API swagger UI\n"
                    }
                },
                "type": "object",
                "required": [
                    "iam",
                    "id",
                    "kmipEndpoint",
                    "publicCa",
                    "region",
                    "restEndpoint",
                    "swaggerEndpoint"
                ]
            }
        },
        "ovh:Okms/getOkmsServiceKey:getOkmsServiceKey": {
            "description": "Use this data source to retrieve information about a KMS service key.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst keyInfo = ovh.Okms.getOkmsServiceKey({\n    id: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    okmsId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nkey_info = ovh.Okms.get_okms_service_key(id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    okms_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var keyInfo = Ovh.Okms.GetOkmsServiceKey.Invoke(new()\n    {\n        Id = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        OkmsId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/okms\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okms.GetOkmsServiceKey(ctx, \u0026okms.GetOkmsServiceKeyArgs{\n\t\t\tId:     \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t\tOkmsId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Okms.OkmsFunctions;\nimport com.pulumi.ovh.Okms.inputs.GetOkmsServiceKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var keyInfo = OkmsFunctions.getOkmsServiceKey(GetOkmsServiceKeyArgs.builder()\n            .id(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .okmsId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  keyInfo:\n    fn::invoke:\n      function: ovh:Okms:getOkmsServiceKey\n      arguments:\n        id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        okmsId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsServiceKey.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the service key\n"
                    },
                    "okmsId": {
                        "type": "string",
                        "description": "ID of the KMS\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "okmsId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsServiceKey.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "curve": {
                        "type": "string"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/getOkmsServiceKeyIam:getOkmsServiceKeyIam"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "size": {
                        "type": "number"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "curve",
                    "iam",
                    "id",
                    "name",
                    "okmsId",
                    "operations",
                    "size",
                    "state",
                    "type"
                ]
            }
        },
        "ovh:Okms/getOkmsServiceKeyJwk:getOkmsServiceKeyJwk": {
            "description": "Use this data source to retrieve information about a KMS service key, in the JWK format.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst keyInfo = ovh.Okms.getOkmsServiceKey({\n    id: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    okmsId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nkey_info = ovh.Okms.get_okms_service_key(id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    okms_id=\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var keyInfo = Ovh.Okms.GetOkmsServiceKey.Invoke(new()\n    {\n        Id = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        OkmsId = \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/okms\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := okms.GetOkmsServiceKey(ctx, \u0026okms.GetOkmsServiceKeyArgs{\n\t\t\tId:     \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t\tOkmsId: \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Okms.OkmsFunctions;\nimport com.pulumi.ovh.Okms.inputs.GetOkmsServiceKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var keyInfo = OkmsFunctions.getOkmsServiceKey(GetOkmsServiceKeyArgs.builder()\n            .id(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .okmsId(\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  keyInfo:\n    fn::invoke:\n      function: ovh:Okms:getOkmsServiceKey\n      arguments:\n        id: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n        okmsId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsServiceKeyJwk.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the service key\n"
                    },
                    "okmsId": {
                        "type": "string",
                        "description": "ID of the KMS\n"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "okmsId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsServiceKeyJwk.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/getOkmsServiceKeyJwkIam:getOkmsServiceKeyJwkIam"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Okms/getOkmsServiceKeyJwkKey:getOkmsServiceKeyJwkKey"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "iam",
                    "id",
                    "keys",
                    "name",
                    "okmsId",
                    "size",
                    "state",
                    "type"
                ]
            }
        },
        "ovh:Okms/getOkmsServiceKeyPem:getOkmsServiceKeyPem": {
            "description": "Use this data source to retrieve information about a KMS service key, in the PEM format.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsServiceKeyPem.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "okmsId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsServiceKeyPem.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "curve": {
                        "type": "string"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/getOkmsServiceKeyPemIam:getOkmsServiceKeyPemIam"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keysPems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Okms/getOkmsServiceKeyPemKeysPem:getOkmsServiceKeyPemKeysPem"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "size": {
                        "type": "number"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "curve",
                    "iam",
                    "id",
                    "keysPems",
                    "name",
                    "okmsId",
                    "operations",
                    "size",
                    "state",
                    "type"
                ]
            }
        },
        "ovh:Order/getCart:getCart": {
            "description": "Use this data source to create a temporary order cart to retrieve information order cart products.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myAccount = ovh.Me.getMe({});\nconst myCart = myAccount.then(myAccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myAccount.ovhSubsidiary,\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_account = ovh.Me.get_me()\nmy_cart = ovh.Order.get_cart(ovh_subsidiary=my_account.ovh_subsidiary)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAccount = Ovh.Me.GetMe.Invoke();\n\n    var myCart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myAccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyAccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myAccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = MeFunctions.getMe();\n\n        final var myCart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myAccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myAccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  myCart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myAccount.ovhSubsidiary}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCart.\n",
                "properties": {
                    "assign": {
                        "type": "boolean",
                        "description": "Assign a shopping cart to a logged in client. Values can be `true` or `false`.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of your cart\n",
                        "willReplaceOnChanges": true
                    },
                    "expire": {
                        "type": "string",
                        "description": "Expiration time (format: 2006-01-02T15:04:05+00:00)\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVHcloud Subsidiary. Country of OVHcloud legal entity you'll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "ovhSubsidiary"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCart.\n",
                "properties": {
                    "assign": {
                        "type": "boolean"
                    },
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "description": {
                        "type": "string"
                    },
                    "expire": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "Items of your cart\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "description": "Indicates if the cart has already been validated\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "expire",
                    "items",
                    "ovhSubsidiary",
                    "readOnly",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProduct:getCartProduct": {
            "description": "Use this data source to retrieve information of order cart product products.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myAccount = ovh.Me.getMe({});\nconst myCart = myAccount.then(myAccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myAccount.ovhSubsidiary,\n}));\nconst plans = myCart.then(myCart =\u003e ovh.Order.getCartProduct({\n    cartId: myCart.id,\n    product: \"...\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_account = ovh.Me.get_me()\nmy_cart = ovh.Order.get_cart(ovh_subsidiary=my_account.ovh_subsidiary)\nplans = ovh.Order.get_cart_product(cart_id=my_cart.id,\n    product=\"...\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAccount = Ovh.Me.GetMe.Invoke();\n\n    var myCart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myAccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n    var plans = Ovh.Order.GetCartProduct.Invoke(new()\n    {\n        CartId = myCart.Apply(getCartResult =\u003e getCartResult.Id),\n        Product = \"...\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyAccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyCart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myAccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = order.GetCartProduct(ctx, \u0026order.GetCartProductArgs{\n\t\t\tCartId:  myCart.Id,\n\t\t\tProduct: \"...\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = MeFunctions.getMe();\n\n        final var myCart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myAccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var plans = OrderFunctions.getCartProduct(GetCartProductArgs.builder()\n            .cartId(myCart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .product(\"...\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myAccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  myCart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myAccount.ovhSubsidiary}\n  plans:\n    fn::invoke:\n      function: ovh:Order:getCartProduct\n      arguments:\n        cartId: ${myCart.id}\n        product: '...'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCartProduct.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProduct.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductResult:getCartProductResult"
                        },
                        "description": "products results\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "product",
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProductOptions:getCartProductOptions": {
            "description": "Use this data source to retrieve information of order cart product options.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myAccount = ovh.Me.getMe({});\nconst myCart = myAccount.then(myAccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myAccount.ovhSubsidiary,\n}));\nconst options = myCart.then(myCart =\u003e ovh.Order.getCartProductOptions({\n    cartId: myCart.id,\n    product: \"cloud\",\n    planCode: \"project\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_account = ovh.Me.get_me()\nmy_cart = ovh.Order.get_cart(ovh_subsidiary=my_account.ovh_subsidiary)\noptions = ovh.Order.get_cart_product_options(cart_id=my_cart.id,\n    product=\"cloud\",\n    plan_code=\"project\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAccount = Ovh.Me.GetMe.Invoke();\n\n    var myCart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myAccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n    var options = Ovh.Order.GetCartProductOptions.Invoke(new()\n    {\n        CartId = myCart.Apply(getCartResult =\u003e getCartResult.Id),\n        Product = \"cloud\",\n        PlanCode = \"project\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyAccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyCart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myAccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = order.GetCartProductOptions(ctx, \u0026order.GetCartProductOptionsArgs{\n\t\t\tCartId:   myCart.Id,\n\t\t\tProduct:  \"cloud\",\n\t\t\tPlanCode: \"project\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductOptionsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = MeFunctions.getMe();\n\n        final var myCart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myAccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var options = OrderFunctions.getCartProductOptions(GetCartProductOptionsArgs.builder()\n            .cartId(myCart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .product(\"cloud\")\n            .planCode(\"project\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myAccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  myCart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myAccount.ovhSubsidiary}\n  options:\n    fn::invoke:\n      function: ovh:Order:getCartProductOptions\n      arguments:\n        cartId: ${myCart.id}\n        product: cloud\n        planCode: project\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCartProductOptions.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "Catalog name\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProductOptions.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductOptionsResult:getCartProductOptionsResult"
                        },
                        "description": "products results\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "product",
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProductOptionsPlan:getCartProductOptionsPlan": {
            "description": "Use this data source to retrieve information of order cart product options plan.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myAccount = ovh.Me.getMe({});\nconst myCart = myAccount.then(myAccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myAccount.ovhSubsidiary,\n}));\nconst plan = myCart.then(myCart =\u003e ovh.Order.getCartProductOptionsPlan({\n    cartId: myCart.id,\n    priceCapacity: \"renew\",\n    product: \"cloud\",\n    planCode: \"project\",\n    optionsPlanCode: \"vrack\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_account = ovh.Me.get_me()\nmy_cart = ovh.Order.get_cart(ovh_subsidiary=my_account.ovh_subsidiary)\nplan = ovh.Order.get_cart_product_options_plan(cart_id=my_cart.id,\n    price_capacity=\"renew\",\n    product=\"cloud\",\n    plan_code=\"project\",\n    options_plan_code=\"vrack\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAccount = Ovh.Me.GetMe.Invoke();\n\n    var myCart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myAccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n    var plan = Ovh.Order.GetCartProductOptionsPlan.Invoke(new()\n    {\n        CartId = myCart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"cloud\",\n        PlanCode = \"project\",\n        OptionsPlanCode = \"vrack\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyAccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyCart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myAccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = order.GetCartProductOptionsPlan(ctx, \u0026order.GetCartProductOptionsPlanArgs{\n\t\t\tCartId:          myCart.Id,\n\t\t\tPriceCapacity:   \"renew\",\n\t\t\tProduct:         \"cloud\",\n\t\t\tPlanCode:        \"project\",\n\t\t\tOptionsPlanCode: \"vrack\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductOptionsPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = MeFunctions.getMe();\n\n        final var myCart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myAccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var plan = OrderFunctions.getCartProductOptionsPlan(GetCartProductOptionsPlanArgs.builder()\n            .cartId(myCart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"cloud\")\n            .planCode(\"project\")\n            .optionsPlanCode(\"vrack\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myAccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  myCart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myAccount.ovhSubsidiary}\n  plan:\n    fn::invoke:\n      function: ovh:Order:getCartProductOptionsPlan\n      arguments:\n        cartId: ${myCart.id}\n        priceCapacity: renew\n        product: cloud\n        planCode: project\n        optionsPlanCode: vrack\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCartProductOptionsPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "Catalog name\n"
                    },
                    "optionsPlanCode": {
                        "type": "string",
                        "description": "options plan code.\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string",
                        "description": "Capacity of the pricing (type of pricing)\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "optionsPlanCode",
                    "planCode",
                    "priceCapacity",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProductOptionsPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "exclusive": {
                        "type": "boolean",
                        "description": "Define if options of this family are exclusive with each other\n"
                    },
                    "family": {
                        "type": "string",
                        "description": "Option family\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "mandatory": {
                        "type": "boolean",
                        "description": "Define if an option of this family is mandatory\n"
                    },
                    "optionsPlanCode": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductOptionsPlanPrice:getCartProductOptionsPlanPrice"
                        },
                        "description": "Prices of the product offer\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string",
                        "description": "Name of the product\n"
                    },
                    "productType": {
                        "type": "string",
                        "description": "Product type\n"
                    },
                    "selectedPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductOptionsPlanSelectedPrice:getCartProductOptionsPlanSelectedPrice"
                        },
                        "description": "Selected Price according to capacity\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "exclusive",
                    "family",
                    "mandatory",
                    "optionsPlanCode",
                    "planCode",
                    "priceCapacity",
                    "prices",
                    "product",
                    "productName",
                    "productType",
                    "selectedPrices",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProductPlan:getCartProductPlan": {
            "description": "Use this data source to retrieve information of order cart product plan.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst myAccount = ovh.Me.getMe({});\nconst myCart = myAccount.then(myAccount =\u003e ovh.Order.getCart({\n    ovhSubsidiary: myAccount.ovhSubsidiary,\n}));\nconst plan = myCart.then(myCart =\u003e ovh.Order.getCartProductPlan({\n    cartId: myCart.id,\n    priceCapacity: \"renew\",\n    product: \"cloud\",\n    planCode: \"project\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nmy_account = ovh.Me.get_me()\nmy_cart = ovh.Order.get_cart(ovh_subsidiary=my_account.ovh_subsidiary)\nplan = ovh.Order.get_cart_product_plan(cart_id=my_cart.id,\n    price_capacity=\"renew\",\n    product=\"cloud\",\n    plan_code=\"project\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var myAccount = Ovh.Me.GetMe.Invoke();\n\n    var myCart = Ovh.Order.GetCart.Invoke(new()\n    {\n        OvhSubsidiary = myAccount.Apply(getMeResult =\u003e getMeResult.OvhSubsidiary),\n    });\n\n    var plan = Ovh.Order.GetCartProductPlan.Invoke(new()\n    {\n        CartId = myCart.Apply(getCartResult =\u003e getCartResult.Id),\n        PriceCapacity = \"renew\",\n        Product = \"cloud\",\n        PlanCode = \"project\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/me\"\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/order\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmyAccount, err := me.GetMe(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tmyCart, err := order.GetCart(ctx, \u0026order.GetCartArgs{\n\t\t\tOvhSubsidiary: myAccount.OvhSubsidiary,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = order.GetCartProductPlan(ctx, \u0026order.GetCartProductPlanArgs{\n\t\t\tCartId:        myCart.Id,\n\t\t\tPriceCapacity: \"renew\",\n\t\t\tProduct:       \"cloud\",\n\t\t\tPlanCode:      \"project\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Me.MeFunctions;\nimport com.pulumi.ovh.Order.OrderFunctions;\nimport com.pulumi.ovh.Order.inputs.GetCartArgs;\nimport com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var myAccount = MeFunctions.getMe();\n\n        final var myCart = OrderFunctions.getCart(GetCartArgs.builder()\n            .ovhSubsidiary(myAccount.applyValue(getMeResult -\u003e getMeResult.ovhSubsidiary()))\n            .build());\n\n        final var plan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()\n            .cartId(myCart.applyValue(getCartResult -\u003e getCartResult.id()))\n            .priceCapacity(\"renew\")\n            .product(\"cloud\")\n            .planCode(\"project\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  myAccount:\n    fn::invoke:\n      function: ovh:Me:getMe\n      arguments: {}\n  myCart:\n    fn::invoke:\n      function: ovh:Order:getCart\n      arguments:\n        ovhSubsidiary: ${myAccount.ovhSubsidiary}\n  plan:\n    fn::invoke:\n      function: ovh:Order:getCartProductPlan\n      arguments:\n        cartId: ${myCart.id}\n        priceCapacity: renew\n        product: cloud\n        planCode: project\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCartProductPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string",
                        "description": "Cart identifier\n"
                    },
                    "catalogName": {
                        "type": "string",
                        "description": "Catalog name\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string",
                        "description": "Capacity of the pricing (type of pricing)\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "Product\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "priceCapacity",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProductPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "planCode": {
                        "type": "string",
                        "description": "Product offer identifier\n"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductPlanPrice:getCartProductPlanPrice"
                        },
                        "description": "Prices of the product offer\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string",
                        "description": "Name of the product\n"
                    },
                    "productType": {
                        "type": "string",
                        "description": "Product type\n"
                    },
                    "selectedPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductPlanSelectedPrice:getCartProductPlanSelectedPrice"
                        },
                        "description": "Selected Price according to capacity\n"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "priceCapacity",
                    "prices",
                    "product",
                    "productName",
                    "productType",
                    "selectedPrices",
                    "id"
                ]
            }
        },
        "ovh:VMware/getCloudDirectorBackup:getCloudDirectorBackup": {
            "description": "Get information about a VMware Cloud Director Backup service\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst backup = ovh.VMware.getCloudDirectorBackup({\n    backupId: \"\u003cVCD backup ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nbackup = ovh.VMware.get_cloud_director_backup(backup_id=\"\u003cVCD backup ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var backup = Ovh.VMware.GetCloudDirectorBackup.Invoke(new()\n    {\n        BackupId = \"\u003cVCD backup ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vmware\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vmware.GetCloudDirectorBackup(ctx, \u0026vmware.GetCloudDirectorBackupArgs{\n\t\t\tBackupId: \"\u003cVCD backup ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.VMware.VMwareFunctions;\nimport com.pulumi.ovh.VMware.inputs.GetCloudDirectorBackupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var backup = VMwareFunctions.getCloudDirectorBackup(GetCloudDirectorBackupArgs.builder()\n            .backupId(\"\u003cVCD backup ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  backup:\n    fn::invoke:\n      function: ovh:VMware:getCloudDirectorBackup\n      arguments:\n        backupId: \u003cVCD backup ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudDirectorBackup.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "description": "Backup ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "backupId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudDirectorBackup.\n",
                "properties": {
                    "backupId": {
                        "type": "string",
                        "description": "Backup ID\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Datetime when backup was enabled\n"
                    },
                    "currentState": {
                        "$ref": "#/types/ovh:VMware/getCloudDirectorBackupCurrentState:getCloudDirectorBackupCurrentState",
                        "description": "VMware Cloud Director Backup service current state\n"
                    },
                    "currentTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:VMware/getCloudDirectorBackupCurrentTask:getCloudDirectorBackupCurrentTask"
                        },
                        "description": "Asynchronous operations ongoing on the VMware Cloud Director organization backup service\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:VMware/getCloudDirectorBackupIam:getCloudDirectorBackupIam",
                        "description": "IAM resource metadata\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier of the VMware Cloud Director backup\n"
                    },
                    "resourceStatus": {
                        "type": "string",
                        "description": "Reflects the readiness of the VMware Cloud Director organization backup service\n"
                    },
                    "targetSpec": {
                        "$ref": "#/types/ovh:VMware/getCloudDirectorBackupTargetSpec:getCloudDirectorBackupTargetSpec",
                        "description": "VMware Cloud Director Backup target spec\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Datetime when backup is modified\n"
                    }
                },
                "type": "object",
                "required": [
                    "backupId",
                    "createdAt",
                    "currentState",
                    "currentTasks",
                    "iam",
                    "id",
                    "resourceStatus",
                    "targetSpec",
                    "updatedAt"
                ]
            }
        },
        "ovh:VMware/getCloudDirectorOrganization:getCloudDirectorOrganization": {
            "description": "Get VMware Cloud Director organization details\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst organization = ovh.VMware.getCloudDirectorOrganization({\n    organizationId: \"\u003cVCD organization ID\u003e\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\norganization = ovh.VMware.get_cloud_director_organization(organization_id=\"\u003cVCD organization ID\u003e\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var organization = Ovh.VMware.GetCloudDirectorOrganization.Invoke(new()\n    {\n        OrganizationId = \"\u003cVCD organization ID\u003e\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vmware\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vmware.GetCloudDirectorOrganization(ctx, \u0026vmware.GetCloudDirectorOrganizationArgs{\n\t\t\tOrganizationId: \"\u003cVCD organization ID\u003e\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.VMware.VMwareFunctions;\nimport com.pulumi.ovh.VMware.inputs.GetCloudDirectorOrganizationArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var organization = VMwareFunctions.getCloudDirectorOrganization(GetCloudDirectorOrganizationArgs.builder()\n            .organizationId(\"\u003cVCD organization ID\u003e\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  organization:\n    fn::invoke:\n      function: ovh:VMware:getCloudDirectorOrganization\n      arguments:\n        organizationId: \u003cVCD organization ID\u003e\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getCloudDirectorOrganization.\n",
                "properties": {
                    "organizationId": {
                        "type": "string",
                        "description": "Organization ID\n"
                    }
                },
                "type": "object",
                "required": [
                    "organizationId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudDirectorOrganization.\n",
                "properties": {
                    "currentState": {
                        "$ref": "#/types/ovh:VMware/getCloudDirectorOrganizationCurrentState:getCloudDirectorOrganizationCurrentState",
                        "description": "Current state of VMware Cloud Director organization service\n"
                    },
                    "currentTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:VMware/getCloudDirectorOrganizationCurrentTask:getCloudDirectorOrganizationCurrentTask"
                        },
                        "description": "Asynchronous operations ongoing on the VMware Cloud Director organization\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:VMware/getCloudDirectorOrganizationIam:getCloudDirectorOrganizationIam",
                        "description": "IAM resource metadata\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "Unique identifier\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "Organization ID\n"
                    },
                    "resourceStatus": {
                        "type": "string",
                        "description": "Reflects the readiness of the VMware Cloud Director organization.\n"
                    },
                    "targetSpec": {
                        "$ref": "#/types/ovh:VMware/getCloudDirectorOrganizationTargetSpec:getCloudDirectorOrganizationTargetSpec",
                        "description": "Target specification of VMware Cloud Director organization service\n"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "currentState",
                    "currentTasks",
                    "iam",
                    "id",
                    "organizationId",
                    "resourceStatus",
                    "targetSpec",
                    "updatedAt"
                ]
            }
        },
        "ovh:Vps/getVps:getVps": {
            "description": "Use this data source to retrieve information about a vps associated with your OVHcloud Account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = ovh.Vps.getVps({\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nserver = ovh.Vps.get_vps(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var server = Ovh.Vps.GetVps.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vps\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vps.GetVps(ctx, \u0026vps.GetVpsArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vps.VpsFunctions;\nimport com.pulumi.ovh.Vps.inputs.GetVpsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var server = VpsFunctions.getVps(GetVpsArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  server:\n    fn::invoke:\n      function: ovh:Vps:getVps\n      arguments:\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVps.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVps.\n",
                "properties": {
                    "VpsURN": {
                        "type": "string",
                        "description": "The URN of the vps\n"
                    },
                    "cluster": {
                        "type": "string",
                        "description": "The OVHcloud cluster the vps is in\n"
                    },
                    "datacenter": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The datacenter in which the vps is located\n"
                    },
                    "displayname": {
                        "type": "string",
                        "description": "The displayed name in the OVHcloud web admin\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of IPs addresses attached to the vps\n"
                    },
                    "keymap": {
                        "type": "string",
                        "description": "The keymap for the ip kvm, valid values \"\", \"fr\", \"us\"\n"
                    },
                    "memory": {
                        "type": "integer",
                        "description": "The amount of memory in MB of the vps.\n"
                    },
                    "model": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A dict describing the type of vps.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "netbootmode": {
                        "type": "string",
                        "description": "The source of the boot kernel\n"
                    },
                    "offertype": {
                        "type": "string",
                        "description": "The type of offer (ssd, cloud, classic)\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "slamonitoring": {
                        "type": "boolean",
                        "description": "A boolean to indicate if OVHcloud SLA monitoring is active.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the vps\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of server\n"
                    },
                    "vcore": {
                        "type": "integer",
                        "description": "The number of vcore of the vps\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "The OVHcloud zone where the vps is\n"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "datacenter",
                    "displayname",
                    "ips",
                    "keymap",
                    "memory",
                    "model",
                    "name",
                    "netbootmode",
                    "offertype",
                    "serviceName",
                    "slamonitoring",
                    "state",
                    "type",
                    "VpsURN",
                    "vcore",
                    "zone",
                    "id"
                ]
            }
        },
        "ovh:Vps/getVpss:getVpss": {
            "description": "Use this data source to get the list of VPS associated with your OVH Account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst servers = ovh.Vps.getVpss({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nservers = ovh.Vps.get_vpss()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var servers = Ovh.Vps.GetVpss.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vps\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vps.GetVpss(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vps.VpsFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var servers = VpsFunctions.getVpss();\n\n    }\n}\n```\n```yaml\nvariables:\n  servers:\n    fn::invoke:\n      function: ovh:Vps:getVpss\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getVpss.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of VPS IDs associated with your OVH Account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Vrack/getVracks:getVracks": {
            "description": "Use this data source to get the list of Vrack IDs available for your OVHcloud account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst vracks = ovh.Vrack.getVracks({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nvracks = ovh.Vrack.get_vracks()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var vracks = Ovh.Vrack.GetVracks.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vrack\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := vrack.GetVracks(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.Vrack.VrackFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var vracks = VrackFunctions.getVracks();\n\n    }\n}\n```\n```yaml\nvariables:\n  vracks:\n    fn::invoke:\n      function: ovh:Vrack:getVracks\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getVracks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of vrack service name available for your OVHcloud account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getInstallationTemplate:getInstallationTemplate": {
            "description": "Use this data source to retrieve information about a specific OVH dedicated server installation template.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst ovhTemplate = ovh.getInstallationTemplate({\n    templateName: \"debian12_64\",\n});\nexport const template = ovhTemplate;\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\novh_template = ovh.get_installation_template(template_name=\"debian12_64\")\npulumi.export(\"template\", ovh_template)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var ovhTemplate = Ovh.GetInstallationTemplate.Invoke(new()\n    {\n        TemplateName = \"debian12_64\",\n    });\n\n    return new Dictionary\u003cstring, object?\u003e\n    {\n        [\"template\"] = ovhTemplate,\n    };\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tovhTemplate, err := ovh.GetInstallationTemplate(ctx, \u0026ovh.GetInstallationTemplateArgs{\n\t\t\tTemplateName: \"debian12_64\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"template\", ovhTemplate)\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetInstallationTemplateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var ovhTemplate = OvhFunctions.getInstallationTemplate(GetInstallationTemplateArgs.builder()\n            .templateName(\"debian12_64\")\n            .build());\n\n        ctx.export(\"template\", ovhTemplate.applyValue(getInstallationTemplateResult -\u003e getInstallationTemplateResult));\n    }\n}\n```\n```yaml\nvariables:\n  ovhTemplate:\n    fn::invoke:\n      function: ovh:getInstallationTemplate\n      arguments:\n        templateName: debian12_64\noutputs:\n  template: ${ovhTemplate}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getInstallationTemplate.\n",
                "properties": {
                    "templateName": {
                        "type": "string",
                        "description": "The name of the template.\n"
                    }
                },
                "type": "object",
                "required": [
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstallationTemplate.\n",
                "properties": {
                    "bitFormat": {
                        "type": "integer",
                        "description": "Template bit format (32 or 64).\n"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category of this template (informative only).\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Information about this template.\n"
                    },
                    "distribution": {
                        "type": "string",
                        "description": "Distribution this template is based on.\n"
                    },
                    "endOfInstall": {
                        "type": "string",
                        "description": "End of install date of the template.\n"
                    },
                    "family": {
                        "type": "string",
                        "description": "Template family type.\n"
                    },
                    "filesystems": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Filesystems available.\n"
                    },
                    "hardRaidConfiguration": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "inputs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getInstallationTemplateInput:getInstallationTemplateInput"
                        },
                        "description": "Represents the questions of the expected answers in the userMetadata field.\n"
                    },
                    "licenses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getInstallationTemplateLicense:getInstallationTemplateLicense"
                        },
                        "description": "License available for this template.\n"
                    },
                    "lvmReady": {
                        "type": "boolean",
                        "description": "Whether this template supports LVM.\n"
                    },
                    "noPartitioning": {
                        "type": "boolean",
                        "description": "Partitioning customization is not available for this OS template.\n"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getInstallationTemplateProject:getInstallationTemplateProject"
                        },
                        "description": "Distribution project details.\n"
                    },
                    "softRaidOnlyMirroring": {
                        "type": "boolean",
                        "description": "Template supports RAID0 and RAID1 on 2 disks.\n"
                    },
                    "subfamily": {
                        "type": "string",
                        "description": "Subfamily of the template.\n"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bitFormat",
                    "category",
                    "description",
                    "distribution",
                    "endOfInstall",
                    "family",
                    "filesystems",
                    "hardRaidConfiguration",
                    "inputs",
                    "licenses",
                    "lvmReady",
                    "noPartitioning",
                    "projects",
                    "softRaidOnlyMirroring",
                    "subfamily",
                    "templateName",
                    "id"
                ]
            }
        },
        "ovh:index/getInstallationTemplates:getInstallationTemplates": {
            "description": "Use this data source to get the list of installation templates available for dedicated servers.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst templates = ovh.getInstallationTemplates({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\ntemplates = ovh.get_installation_templates()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var templates = Ovh.GetInstallationTemplates.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetInstallationTemplates(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var templates = OvhFunctions.getInstallationTemplates();\n\n    }\n}\n```\n```yaml\nvariables:\n  templates:\n    fn::invoke:\n      function: ovh:getInstallationTemplates\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getInstallationTemplates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of installation templates IDs available for dedicated servers.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getServer:getServer": {
            "description": "Use this data source to retrieve information about a dedicated server associated with your OVHcloud Account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst server = ovh.getServer({\n    serviceName: \"XXXXXX\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nserver = ovh.get_server(service_name=\"XXXXXX\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var server = Ovh.GetServer.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetServer(ctx, \u0026ovh.GetServerArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetServerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var server = OvhFunctions.getServer(GetServerArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  server:\n    fn::invoke:\n      function: ovh:getServer\n      arguments:\n        serviceName: XXXXXX\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getServer.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The service_name of your dedicated server.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServer.\n",
                "properties": {
                    "ServerURN": {
                        "type": "string",
                        "description": "URN of the dedicated server instance\n"
                    },
                    "availabilityZone": {
                        "type": "string",
                        "description": "Dedicated AZ localisation\n"
                    },
                    "bootId": {
                        "type": "integer",
                        "description": "Boot id of the server\n"
                    },
                    "bootScript": {
                        "type": "string",
                        "description": "Boot script of the server\n"
                    },
                    "commercialRange": {
                        "type": "string",
                        "description": "Dedicated server commercial range\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "Dedicated datacenter localisation (bhs1,bhs2,...)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Dedicated server display name\n"
                    },
                    "efiBootloaderPath": {
                        "type": "string",
                        "description": "Path of the EFI bootloader of the dedicated server\n"
                    },
                    "enabledPublicVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled public VNI uuids\n"
                    },
                    "enabledVrackAggregationVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled vrack_aggregation VNI uuids\n"
                    },
                    "enabledVrackVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of enabled vrack VNI uuids\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Dedicated server ip (IPv4)\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Dedicated server ip blocks\n"
                    },
                    "linkSpeed": {
                        "type": "integer",
                        "description": "Link speed of the server\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "User defined VirtualNetworkInterface name\n"
                    },
                    "newUpgradeSystem": {
                        "type": "boolean"
                    },
                    "noIntervention": {
                        "type": "boolean",
                        "description": "Prevent datacenter intervention\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "Operating system\n"
                    },
                    "powerState": {
                        "type": "string",
                        "description": "Power state of the server (poweroff, poweron)\n"
                    },
                    "professionalUse": {
                        "type": "boolean",
                        "description": "Does this server have professional use option\n"
                    },
                    "rack": {
                        "type": "string",
                        "description": "Rack id of the server\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Dedicated region localisation\n"
                    },
                    "rescueMail": {
                        "type": "string",
                        "description": "Rescue mail of the server\n"
                    },
                    "rescueSshKey": {
                        "type": "string",
                        "description": "Public SSH Key used in the rescue mode\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "Dedicated server reverse\n"
                    },
                    "rootDevice": {
                        "type": "string",
                        "description": "Root device of the server\n"
                    },
                    "serverId": {
                        "type": "integer",
                        "description": "Server id\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "Error, hacked, hackedBlocked, ok\n"
                    },
                    "supportLevel": {
                        "type": "string",
                        "description": "Dedicated server support level (critical, fastpath, gs, pro)\n"
                    },
                    "vnis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getServerVni:getServerVni"
                        },
                        "description": "The list of Virtualnetworkinterface associated with this server\n"
                    }
                },
                "type": "object",
                "required": [
                    "availabilityZone",
                    "bootId",
                    "bootScript",
                    "commercialRange",
                    "datacenter",
                    "displayName",
                    "efiBootloaderPath",
                    "enabledPublicVnis",
                    "enabledVrackAggregationVnis",
                    "enabledVrackVnis",
                    "ip",
                    "ips",
                    "linkSpeed",
                    "monitoring",
                    "name",
                    "newUpgradeSystem",
                    "noIntervention",
                    "os",
                    "powerState",
                    "professionalUse",
                    "rack",
                    "region",
                    "rescueMail",
                    "rescueSshKey",
                    "reverse",
                    "rootDevice",
                    "serverId",
                    "serviceName",
                    "state",
                    "supportLevel",
                    "ServerURN",
                    "vnis",
                    "id"
                ]
            }
        },
        "ovh:index/getServers:getServers": {
            "description": "Use this data source to get the list of dedicated servers associated with your OVHcloud Account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst servers = ovh.getServers({});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nservers = ovh.get_servers()\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var servers = Ovh.GetServers.Invoke();\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetServers(ctx, map[string]interface{}{}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var servers = OvhFunctions.getServers();\n\n    }\n}\n```\n```yaml\nvariables:\n  servers:\n    fn::invoke:\n      function: ovh:getServers\n      arguments: {}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "outputs": {
                "description": "A collection of values returned by getServers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of dedicated servers IDs associated with your OVHcloud Account.\n"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getVrackNetworks:getVrackNetworks": {
            "description": "Use this data source to get the list of Vrack network ids available for your IPLoadbalancer associated with your OVHcloud account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as ovh from \"@pulumi/ovh\";\n\nconst lbNetworks = ovh.getVrackNetworks({\n    serviceName: \"XXXXXX\",\n    subnet: \"10.0.0.0/24\",\n});\n```\n```python\nimport pulumi\nimport pulumi_ovh as ovh\n\nlb_networks = ovh.get_vrack_networks(service_name=\"XXXXXX\",\n    subnet=\"10.0.0.0/24\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Ovh = Pulumi.Ovh;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var lbNetworks = Ovh.GetVrackNetworks.Invoke(new()\n    {\n        ServiceName = \"XXXXXX\",\n        Subnet = \"10.0.0.0/24\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ovh.GetVrackNetworks(ctx, \u0026ovh.GetVrackNetworksArgs{\n\t\t\tServiceName: \"XXXXXX\",\n\t\t\tSubnet:      pulumi.StringRef(\"10.0.0.0/24\"),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.ovh.OvhFunctions;\nimport com.pulumi.ovh.inputs.GetVrackNetworksArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        final var lbNetworks = OvhFunctions.getVrackNetworks(GetVrackNetworksArgs.builder()\n            .serviceName(\"XXXXXX\")\n            .subnet(\"10.0.0.0/24\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  lbNetworks:\n    fn::invoke:\n      function: ovh:getVrackNetworks\n      arguments:\n        serviceName: XXXXXX\n        subnet: 10.0.0.0/24\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVrackNetworks.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "Filters networks on the subnet.\n"
                    },
                    "vlanId": {
                        "type": "integer",
                        "description": "Filters networks on the vlan id.\n"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrackNetworks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "The list of vrack network ids.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        }
    }
}