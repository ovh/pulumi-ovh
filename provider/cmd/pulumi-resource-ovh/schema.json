{
    "name": "ovh",
    "displayName": "OVHCloud",
    "description": "A Pulumi package for creating and managing OVH resources.",
    "keywords": [
        "pulumi",
        "ovh",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`ovh` Terraform Provider](https://github.com/ovh/terraform-provider-ovh).",
    "repository": "https://github.com/ovh/pulumi-ovh",
    "pluginDownloadURL": "github://api.github.com/ovh/pulumi-ovh",
    "publisher": "OVHcloud",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Pulumi"
        },
        "go": {
            "importBasePath": "github.com/ovh/pulumi-ovh/sdk/v2/go/ovh",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "java": {
            "basePackage": "com.ovhcloud.pulumi",
            "buildFiles": "",
            "gradleNexusPublishPluginVersion": "",
            "gradleTest": ""
        },
        "nodejs": {
            "packageName": "@ovhcloud/pulumi-ovh",
            "packageDescription": "A Pulumi package for creating and managing OVH resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ovh/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ovh` repo](https://github.com/ovh/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ovh` repo](https://github.com/ovh/terraform-provider-ovh/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "pulumi_ovh",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ovh/terraform-provider-ovh)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-ovh` repo](https://github.com/ovh/pulumi-ovh/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-ovh` repo](https://github.com/ovh/terraform-provider-ovh/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "accessToken": {
                "type": "string",
                "description": "The OVH API Access Token\n"
            },
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_KEY"
                    ]
                }
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_SECRET"
                    ]
                },
                "secret": true
            },
            "clientId": {
                "type": "string",
                "description": "OAuth 2.0 application's ID\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "OAuth 2.0 application's secret\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer Key\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_CONSUMER_KEY"
                    ]
                }
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\")\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_ENDPOINT"
                    ]
                }
            }
        }
    },
    "types": {
        "ovh:Cloud/getProjectIam:getProjectIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Cloud/getProjectsProject:getProjectsProject": {
            "properties": {
                "access": {
                    "type": "string",
                    "description": "Project access\n"
                },
                "creationDate": {
                    "type": "string",
                    "description": "Project creation date\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of your project\n"
                },
                "expiration": {
                    "type": "string",
                    "description": "Expiration date of your project. After this date, your project will be deleted\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Cloud/getProjectsProjectIam:getProjectsProjectIam",
                    "description": "IAM resource metadata\n"
                },
                "manualQuota": {
                    "type": "boolean",
                    "description": "Manual quota prevent automatic quota upgrade\n"
                },
                "orderId": {
                    "type": "number",
                    "description": "Project order id\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Order plan code\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project id\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "Project name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n"
                },
                "unleash": {
                    "type": "boolean",
                    "description": "Project unleashed\n"
                }
            },
            "type": "object",
            "required": [
                "access",
                "creationDate",
                "description",
                "expiration",
                "iam",
                "manualQuota",
                "orderId",
                "planCode",
                "projectId",
                "projectName",
                "serviceName",
                "status",
                "unleash"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Cloud/getProjectsProjectIam:getProjectsProjectIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/AlertingFormattedMonthlyThreshold:AlertingFormattedMonthlyThreshold": {
            "properties": {
                "currencyCode": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "currencyCode",
                        "text",
                        "value"
                    ]
                }
            }
        },
        "ovh:CloudProject/ContainerRegistryPlan:ContainerRegistryPlan": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Plan code from catalog\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlanFeature:ContainerRegistryPlanFeature"
                    },
                    "description": "Features of the plan\n"
                },
                "id": {
                    "type": "string",
                    "description": "Plan ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Plan name\n"
                },
                "registryLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlanRegistryLimit:ContainerRegistryPlanRegistryLimit"
                    },
                    "description": "Container registry limits\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Plan last update date\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "code",
                        "createdAt",
                        "features",
                        "id",
                        "name",
                        "registryLimits",
                        "updatedAt"
                    ]
                }
            }
        },
        "ovh:CloudProject/ContainerRegistryPlanFeature:ContainerRegistryPlanFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "vulnerability"
                    ]
                }
            }
        },
        "ovh:CloudProject/ContainerRegistryPlanRegistryLimit:ContainerRegistryPlanRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n"
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "imageStorage",
                        "parallelRequest"
                    ]
                }
            }
        },
        "ovh:CloudProject/DatabaseEndpoint:DatabaseEndpoint": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Type of component the URI relates to\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the cluster\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path of the endpoint\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Scheme used to generate the URI\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Defines whether the endpoint uses SSL\n"
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL mode used to connect to the service if the SSL is enabled\n"
                },
                "uri": {
                    "type": "string",
                    "description": "URI of the endpoint\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "component",
                        "domain",
                        "path",
                        "port",
                        "scheme",
                        "ssl",
                        "sslMode",
                        "uri"
                    ]
                }
            }
        },
        "ovh:CloudProject/DatabaseIpRestriction:DatabaseIpRestriction": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the IP restriction\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/DatabaseNode:DatabaseNode": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Private network ID in which the node is. It's the regional openstackId of the private network.\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Region of the node\n",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "description": "Private subnet ID in which the node is\n"
                }
            },
            "type": "object",
            "required": [
                "region"
            ]
        },
        "ovh:CloudProject/GatewayExternalInformation:GatewayExternalInformation": {
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/GatewayExternalInformationIp:GatewayExternalInformationIp"
                    },
                    "description": "List of external ips of the gateway\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "External network ID of the gateway\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ips",
                        "networkId"
                    ]
                }
            }
        },
        "ovh:CloudProject/GatewayExternalInformationIp:GatewayExternalInformationIp": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "External IP of the gateway\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Subnet ID of the ip\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ip",
                        "subnetId"
                    ]
                }
            }
        },
        "ovh:CloudProject/GatewayInterface:GatewayInterface": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the interface\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP of the interface\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "Network ID of the interface\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Subnet ID of the interface\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "ip",
                        "networkId",
                        "subnetId"
                    ]
                }
            }
        },
        "ovh:CloudProject/InstanceAddress:InstanceAddress": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "IP address\n"
                },
                "version": {
                    "type": "integer",
                    "description": "IP version\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ip",
                        "version"
                    ]
                }
            }
        },
        "ovh:CloudProject/InstanceAttachedVolume:InstanceAttachedVolume": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Volume id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id"
                    ]
                }
            }
        },
        "ovh:CloudProject/InstanceAutoBackup:InstanceAutoBackup": {
            "properties": {
                "cron": {
                    "type": "string",
                    "description": "Unix cron pattern\n",
                    "willReplaceOnChanges": true
                },
                "rotation": {
                    "type": "integer",
                    "description": "Number of backup to keep\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "cron",
                "rotation"
            ]
        },
        "ovh:CloudProject/InstanceBootFrom:InstanceBootFrom": {
            "properties": {
                "imageId": {
                    "type": "string",
                    "description": "Instance image id\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "Instance volume id\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/InstanceFlavor:InstanceFlavor": {
            "properties": {
                "flavorId": {
                    "type": "string",
                    "description": "Flavor id\n"
                }
            },
            "type": "object",
            "required": [
                "flavorId"
            ]
        },
        "ovh:CloudProject/InstanceGroup:InstanceGroup": {
            "properties": {
                "groupId": {
                    "type": "string",
                    "description": "Group id\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/InstanceNetwork:InstanceNetwork": {
            "properties": {
                "public": {
                    "type": "boolean",
                    "description": "Set the new instance as public\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/InstanceSshKey:InstanceSshKey": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "SSH Key pair name\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "ovh:CloudProject/InstanceSshKeyCreate:InstanceSshKeyCreate": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "SSH Key pair name\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "SSH Public Key\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "publicKey"
            ]
        },
        "ovh:CloudProject/KubeCustomization:KubeCustomization": {
            "properties": {
                "apiservers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver"
                    },
                    "deprecationMessage": "Use customization_apiserver instead"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "apiservers"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver": {
            "properties": {
                "admissionplugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserverAdmissionplugin:KubeCustomizationApiserverAdmissionplugin"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "admissionplugins"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeCustomizationApiserverAdmissionplugin:KubeCustomizationApiserverAdmissionplugin": {
            "properties": {
                "disableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "disableds",
                        "enableds"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeCustomizationKubeProxy:KubeCustomizationKubeProxy": {
            "properties": {
                "iptables": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxyIptables:KubeCustomizationKubeProxyIptables"
                },
                "ipvs": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxyIpvs:KubeCustomizationKubeProxyIpvs"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/KubeCustomizationKubeProxyIptables:KubeCustomizationKubeProxyIptables": {
            "properties": {
                "minSyncPeriod": {
                    "type": "string"
                },
                "syncPeriod": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/KubeCustomizationKubeProxyIpvs:KubeCustomizationKubeProxyIpvs": {
            "properties": {
                "minSyncPeriod": {
                    "type": "string"
                },
                "scheduler": {
                    "type": "string"
                },
                "syncPeriod": {
                    "type": "string"
                },
                "tcpFinTimeout": {
                    "type": "string"
                },
                "tcpTimeout": {
                    "type": "string"
                },
                "udpTimeout": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/KubeKubeconfigAttribute:KubeKubeconfigAttribute": {
            "properties": {
                "clientCertificate": {
                    "type": "string",
                    "secret": true
                },
                "clientKey": {
                    "type": "string",
                    "secret": true
                },
                "clusterCaCertificate": {
                    "type": "string",
                    "secret": true
                },
                "host": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "clientCertificate",
                        "clientKey",
                        "clusterCaCertificate",
                        "host"
                    ]
                }
            }
        },
        "ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate": {
            "properties": {
                "metadata": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplateMetadata:KubeNodePoolTemplateMetadata",
                    "description": "metadata\n"
                },
                "spec": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplateSpec:KubeNodePoolTemplateSpec",
                    "description": "spec\n"
                }
            },
            "type": "object",
            "required": [
                "metadata",
                "spec"
            ]
        },
        "ovh:CloudProject/KubeNodePoolTemplateMetadata:KubeNodePoolTemplateMetadata": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "annotations\n"
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "finalizers\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "labels\n"
                }
            },
            "type": "object",
            "required": [
                "annotations",
                "finalizers",
                "labels"
            ]
        },
        "ovh:CloudProject/KubeNodePoolTemplateSpec:KubeNodePoolTemplateSpec": {
            "properties": {
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "taints\n"
                },
                "unschedulable": {
                    "type": "boolean",
                    "description": "unschedulable\n"
                }
            },
            "type": "object",
            "required": [
                "taints",
                "unschedulable"
            ]
        },
        "ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration": {
            "properties": {
                "defaultVrackGateway": {
                    "type": "string",
                    "description": "If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.\n"
                },
                "privateNetworkRoutingAsDefault": {
                    "type": "boolean",
                    "description": "Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.\n"
                }
            },
            "type": "object",
            "required": [
                "defaultVrackGateway",
                "privateNetworkRoutingAsDefault"
            ]
        },
        "ovh:CloudProject/LoadbalancerFloatingIp:LoadbalancerFloatingIp": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the resource\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP Address of the resource\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "ip"
                    ]
                }
            }
        },
        "ovh:CloudProject/LoadbalancerListener:LoadbalancerListener": {
            "properties": {
                "allowedCidrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The allowed CIDRs\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the listener\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the listener\n"
                },
                "pool": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerListenerPool:LoadbalancerListenerPool",
                    "description": "Listener pool\n"
                },
                "port": {
                    "type": "number",
                    "description": "Listener port\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol for the listener\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "Secret ID to get certificate for SSL listener creation\n"
                },
                "timeoutClientData": {
                    "type": "number",
                    "description": "Timeout client data of the listener\n"
                },
                "timeoutMemberData": {
                    "type": "number",
                    "description": "Timeout member data of the listener\n"
                },
                "tlsVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "TLS versions of the listener\n"
                }
            },
            "type": "object",
            "required": [
                "port",
                "protocol"
            ]
        },
        "ovh:CloudProject/LoadbalancerListenerPool:LoadbalancerListenerPool": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Pool algorithm to split traffic between members\n"
                },
                "healthMonitor": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerListenerPoolHealthMonitor:LoadbalancerListenerPoolHealthMonitor",
                    "description": "Pool health monitor\n"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/LoadbalancerListenerPoolMember:LoadbalancerListenerPoolMember"
                    },
                    "description": "Pool members\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the pool\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol for the pool\n"
                },
                "sessionPersistence": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerListenerPoolSessionPersistence:LoadbalancerListenerPoolSessionPersistence",
                    "description": "Pool session persistence\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "members",
                        "name"
                    ]
                }
            }
        },
        "ovh:CloudProject/LoadbalancerListenerPoolHealthMonitor:LoadbalancerListenerPoolHealthMonitor": {
            "properties": {
                "delay": {
                    "type": "number",
                    "description": "Duration between sending probes to members, in seconds\n"
                },
                "httpConfiguration": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerListenerPoolHealthMonitorHttpConfiguration:LoadbalancerListenerPoolHealthMonitorHttpConfiguration",
                    "description": "Monitor HTTP configuration\n"
                },
                "maxRetries": {
                    "type": "number",
                    "description": "Number of successful checks before changing the operating status of the member to ONLINE\n"
                },
                "maxRetriesDown": {
                    "type": "number",
                    "description": "Number of allowed check failures before changing the operating status of the member to ERROR\n"
                },
                "monitorType": {
                    "type": "string",
                    "description": "Type of the monitor\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the resource\n"
                },
                "operatingStatus": {
                    "type": "string",
                    "description": "The operating status of the resource\n"
                },
                "provisioningStatus": {
                    "type": "string",
                    "description": "The provisioning status of the resource\n"
                },
                "timeout": {
                    "type": "number",
                    "description": "Maximum time, in seconds, that a monitor waits to connect before it times out. This value must be less than the delay value\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "httpConfiguration",
                        "maxRetriesDown",
                        "operatingStatus",
                        "provisioningStatus"
                    ]
                }
            }
        },
        "ovh:CloudProject/LoadbalancerListenerPoolHealthMonitorHttpConfiguration:LoadbalancerListenerPoolHealthMonitorHttpConfiguration": {
            "properties": {
                "domainName": {
                    "type": "string",
                    "description": "Domain name, which be injected into the HTTP Host Header to the backend server for HTTP health check\n"
                },
                "expectedCodes": {
                    "type": "string",
                    "description": "Status codes expected in response from the member to declare it healthy; The list of HTTP status codes expected in response from the member to declare it healthy. Specify one of the following values: * A single value, such as 200; * A list, such as 200, 202; * A range, such as 200-204\n"
                },
                "httpMethod": {
                    "type": "string",
                    "description": "HTTP method that the health monitor uses for requests\n"
                },
                "httpVersion": {
                    "type": "string",
                    "description": "HTTP version that the health monitor uses for requests\n"
                },
                "urlPath": {
                    "type": "string",
                    "description": "HTTP URL path of the request sent by the monitor to test the health of a backend member\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "domainName",
                        "expectedCodes",
                        "httpVersion",
                        "urlPath"
                    ]
                }
            }
        },
        "ovh:CloudProject/LoadbalancerListenerPoolMember:LoadbalancerListenerPoolMember": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IP address of the resource\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the member\n"
                },
                "protocolPort": {
                    "type": "number",
                    "description": "Protocol port number for the resource\n"
                },
                "weight": {
                    "type": "number",
                    "description": "Weight of a member determines the portion of requests or connections it services compared to the other members of the pool. Between 1 and 256.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "weight"
                    ]
                }
            }
        },
        "ovh:CloudProject/LoadbalancerListenerPoolSessionPersistence:LoadbalancerListenerPoolSessionPersistence": {
            "properties": {
                "cookieName": {
                    "type": "string",
                    "description": "Cookie name, only applicable to session persistence through cookie\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of session persistence\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cookieName",
                        "type"
                    ]
                }
            }
        },
        "ovh:CloudProject/LoadbalancerNetwork:LoadbalancerNetwork": {
            "properties": {
                "private": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerNetworkPrivate:LoadbalancerNetworkPrivate",
                    "description": "Information to private network\n"
                }
            },
            "type": "object",
            "required": [
                "private"
            ]
        },
        "ovh:CloudProject/LoadbalancerNetworkPrivate:LoadbalancerNetworkPrivate": {
            "properties": {
                "floatingIp": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerNetworkPrivateFloatingIp:LoadbalancerNetworkPrivateFloatingIp",
                    "description": "Floating IP to associate\n"
                },
                "floatingIpCreate": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerNetworkPrivateFloatingIpCreate:LoadbalancerNetworkPrivateFloatingIpCreate",
                    "description": "Floating IP to create\n"
                },
                "gateway": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerNetworkPrivateGateway:LoadbalancerNetworkPrivateGateway",
                    "description": "Gateway to associate\n"
                },
                "gatewayCreate": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerNetworkPrivateGatewayCreate:LoadbalancerNetworkPrivateGatewayCreate",
                    "description": "Gateway to create\n"
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerNetworkPrivateNetwork:LoadbalancerNetworkPrivateNetwork",
                    "description": "Network to associate\n"
                }
            },
            "type": "object",
            "required": [
                "network"
            ]
        },
        "ovh:CloudProject/LoadbalancerNetworkPrivateFloatingIp:LoadbalancerNetworkPrivateFloatingIp": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the floatingIp\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadbalancerNetworkPrivateFloatingIpCreate:LoadbalancerNetworkPrivateFloatingIpCreate": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description for the floatingIp\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadbalancerNetworkPrivateGateway:LoadbalancerNetworkPrivateGateway": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the gateway\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadbalancerNetworkPrivateGatewayCreate:LoadbalancerNetworkPrivateGatewayCreate": {
            "properties": {
                "model": {
                    "type": "string",
                    "description": "Model of the gateway\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the gateway\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/LoadbalancerNetworkPrivateNetwork:LoadbalancerNetworkPrivateNetwork": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Private network ID\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Subnet ID\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "subnetId"
            ]
        },
        "ovh:CloudProject/NetworkPrivateRegionsAttribute:NetworkPrivateRegionsAttribute": {
            "properties": {
                "openstackid": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "openstackid",
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/NetworkPrivateRegionsStatus:NetworkPrivateRegionsStatus": {
            "properties": {
                "region": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "region",
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/NetworkPrivateSubnetIpPool:NetworkPrivateSubnetIpPool": {
            "properties": {
                "dhcp": {
                    "type": "boolean"
                },
                "end": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dhcp",
                        "end",
                        "network",
                        "region",
                        "start"
                    ]
                }
            }
        },
        "ovh:CloudProject/NetworkPrivateSubnetV2AllocationPool:NetworkPrivateSubnetV2AllocationPool": {
            "properties": {
                "end": {
                    "type": "string"
                },
                "start": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "end",
                "start"
            ]
        },
        "ovh:CloudProject/NetworkPrivateSubnetV2HostRoute:NetworkPrivateSubnetV2HostRoute": {
            "properties": {
                "destination": {
                    "type": "string"
                },
                "nexthop": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "destination",
                "nexthop"
            ]
        },
        "ovh:CloudProject/ProjectOrder:ProjectOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectOrderDetail:ProjectOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:CloudProject/ProjectOrderDetail:ProjectOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:CloudProject/ProjectPlan:ProjectPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanConfiguration:ProjectPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:CloudProject/ProjectPlanConfiguration:ProjectPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:CloudProject/ProjectPlanOption:ProjectPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanOptionConfiguration:ProjectPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:CloudProject/ProjectPlanOptionConfiguration:ProjectPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:CloudProject/RancherCurrentState:RancherCurrentState": {
            "properties": {
                "bootstrapPassword": {
                    "type": "string",
                    "description": "Bootstrap password of the managed Rancher service, returned only on creation\n",
                    "secret": true
                },
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RancherCurrentStateIpRestriction:RancherCurrentStateIpRestriction"
                    },
                    "description": "List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the managed Rancher service\n"
                },
                "networking": {
                    "$ref": "#/types/ovh:CloudProject/RancherCurrentStateNetworking:RancherCurrentStateNetworking",
                    "description": "Networking properties of a managed Rancher service\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the managed Rancher service\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the managed Rancher service\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the managed Rancher service\n"
                },
                "usage": {
                    "$ref": "#/types/ovh:CloudProject/RancherCurrentStateUsage:RancherCurrentStateUsage",
                    "description": "Latest metrics regarding the usage of the managed Rancher service\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the managed Rancher service\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "bootstrapPassword",
                        "ipRestrictions",
                        "name",
                        "networking",
                        "plan",
                        "region",
                        "url",
                        "usage",
                        "version"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherCurrentStateIpRestriction:RancherCurrentStateIpRestriction": {
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the allowed CIDR block\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidrBlock",
                        "description"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherCurrentStateNetworking:RancherCurrentStateNetworking": {
            "properties": {
                "egressCidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the CIDR ranges for egress IP addresses used by Rancher. Ensure these ranges are allowed in any IP restrictions for services that Rancher will access.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "egressCidrBlocks"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherCurrentStateUsage:RancherCurrentStateUsage": {
            "properties": {
                "datetime": {
                    "type": "string",
                    "description": "Date of the sample\n"
                },
                "orchestratedVcpus": {
                    "type": "number",
                    "description": "Total number of vCPUs orchestrated by the managed Rancher service through the downstream clusters\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "datetime",
                        "orchestratedVcpus"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherCurrentTask:RancherCurrentTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the current task\n"
                },
                "link": {
                    "type": "string",
                    "description": "Link to the task details\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current global status of the current task\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the current task\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "link",
                        "status",
                        "type"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherTargetSpec:RancherTargetSpec": {
            "properties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RancherTargetSpecIpRestriction:RancherTargetSpecIpRestriction"
                    },
                    "description": "List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the managed Rancher service\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the managed Rancher service. Available plans for an existing managed Rancher can be retrieved using GET /rancher/rancherID/capabilities/plan\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the managed Rancher service. Available versions for an existing managed Rancher can be retrieved using GET /rancher/rancherID/capabilities/version. Default is the latest version.\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "plan"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipRestrictions",
                        "name",
                        "plan",
                        "version"
                    ]
                }
            }
        },
        "ovh:CloudProject/RancherTargetSpecIpRestriction:RancherTargetSpecIpRestriction": {
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the allowed CIDR block\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "cidrBlock",
                        "description"
                    ]
                }
            }
        },
        "ovh:CloudProject/RegionNetworkSubnet:RegionNetworkSubnet": {
            "properties": {
                "allocationPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnetAllocationPool:RegionNetworkSubnetAllocationPool"
                    },
                    "description": "List of ip pools allocated in subnet\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "Subnet range in CIDR notation\n"
                },
                "dnsNameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "DNS nameservers\n"
                },
                "enableDhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP for the subnet\n"
                },
                "enableGatewayIp": {
                    "type": "boolean",
                    "description": "Set a gateway ip for the subnet\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway IP\n"
                },
                "hostRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnetHostRoute:RegionNetworkSubnetHostRoute"
                    },
                    "description": "Host routes\n"
                },
                "ipVersion": {
                    "type": "number",
                    "description": "IP version\n"
                },
                "name": {
                    "type": "string",
                    "description": "Subnet name\n"
                },
                "useDefaultPublicDnsresolver": {
                    "type": "boolean",
                    "description": "Use default DNS\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "enableDhcp",
                "enableGatewayIp",
                "ipVersion"
            ]
        },
        "ovh:CloudProject/RegionNetworkSubnetAllocationPool:RegionNetworkSubnetAllocationPool": {
            "properties": {
                "end": {
                    "type": "string",
                    "description": "Last IP for the pool (eg: 192.168.1.24)\n"
                },
                "start": {
                    "type": "string",
                    "description": "First IP for the pool (eg: 192.168.1.12)\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/RegionNetworkSubnetHostRoute:RegionNetworkSubnetHostRoute": {
            "properties": {
                "destination": {
                    "type": "string",
                    "description": "Host route destination (eg: 192.168.1.0/24)\n"
                },
                "nextHop": {
                    "type": "string",
                    "description": "Host route next hop (eg: 192.168.1.254)\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/StorageEncryption:StorageEncryption": {
            "properties": {
                "sseAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "sseAlgorithm"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageObject:StorageObject": {
            "properties": {
                "etag": {
                    "type": "string",
                    "description": "ETag\n"
                },
                "isDeleteMarker": {
                    "type": "boolean",
                    "description": "Whether this object is a delete marker\n"
                },
                "isLatest": {
                    "type": "boolean",
                    "description": "Whether this is the latest version of the object\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "Last modification date\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size (bytes)\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Storage class\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the object\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "etag",
                        "isDeleteMarker",
                        "isLatest",
                        "key",
                        "lastModified",
                        "size",
                        "storageClass",
                        "versionId"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplication:StorageReplication": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/StorageReplicationRule:StorageReplicationRule"
                    },
                    "description": "Replication rules\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "rules"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplicationRule:StorageReplicationRule": {
            "properties": {
                "deleteMarkerReplication": {
                    "type": "string",
                    "description": "Delete marker replication\n"
                },
                "destination": {
                    "$ref": "#/types/ovh:CloudProject/StorageReplicationRuleDestination:StorageReplicationRuleDestination",
                    "description": "Rule destination configuration\n"
                },
                "filter": {
                    "$ref": "#/types/ovh:CloudProject/StorageReplicationRuleFilter:StorageReplicationRuleFilter",
                    "description": "Rule filters\n"
                },
                "id": {
                    "type": "string",
                    "description": "Rule ID\n"
                },
                "priority": {
                    "type": "number",
                    "description": "Rule priority\n"
                },
                "status": {
                    "type": "string",
                    "description": "Rule status\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "deleteMarkerReplication",
                        "destination",
                        "filter",
                        "id",
                        "priority",
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplicationRuleDestination:StorageReplicationRuleDestination": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Destination bucket name\n"
                },
                "region": {
                    "type": "string",
                    "description": "Destination region\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Destination storage class\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "region",
                        "storageClass"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplicationRuleFilter:StorageReplicationRuleFilter": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "Prefix filter\n"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/StorageReplicationRuleFilterTag:StorageReplicationRuleFilterTag"
                    },
                    "description": "Tags filter\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "prefix",
                        "tags"
                    ]
                }
            }
        },
        "ovh:CloudProject/StorageReplicationRuleFilterTag:StorageReplicationRuleFilterTag": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Tag key\n"
                },
                "value": {
                    "type": "string",
                    "description": "Tag value\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ]
        },
        "ovh:CloudProject/StorageVersioning:StorageVersioning": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Versioning status\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "status"
                    ]
                }
            }
        },
        "ovh:CloudProject/UserRole:UserRole": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "id",
                        "name",
                        "permissions"
                    ]
                }
            }
        },
        "ovh:CloudProject/VolumeSubOperation:VolumeSubOperation": {
            "properties": {
                "resourceId": {
                    "type": "string",
                    "description": "Affected resource of the sub-operation\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "The started date of the sub-operation\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "resourceId",
                        "resourceType"
                    ]
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerFilterFeature:getCapabilitiesContainerFilterFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n"
                }
            },
            "type": "object",
            "required": [
                "vulnerability"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerFilterRegistryLimit:getCapabilitiesContainerFilterRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n"
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n"
                }
            },
            "type": "object",
            "required": [
                "imageStorage",
                "parallelRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResult:getCapabilitiesContainerRegistryResult": {
            "properties": {
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResultPlan:getCapabilitiesContainerRegistryResultPlan"
                    },
                    "description": "Available plans in the region\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "The region name\n"
                }
            },
            "type": "object",
            "required": [
                "plans",
                "regionName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResultPlan:getCapabilitiesContainerRegistryResultPlan": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Plan code from catalog\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Plan creation date\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanFeature:getCapabilitiesContainerRegistryResultPlanFeature"
                    },
                    "description": "Features of the plan\n"
                },
                "id": {
                    "type": "string",
                    "description": "Plan ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Plan name\n"
                },
                "registryLimits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanRegistryLimit:getCapabilitiesContainerRegistryResultPlanRegistryLimit"
                    },
                    "description": "Container registry limits\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Plan last update date\n"
                }
            },
            "type": "object",
            "required": [
                "code",
                "createdAt",
                "features",
                "id",
                "name",
                "registryLimits",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanFeature:getCapabilitiesContainerRegistryResultPlanFeature": {
            "properties": {
                "vulnerability": {
                    "type": "boolean",
                    "description": "Vulnerability scanning\n"
                }
            },
            "type": "object",
            "required": [
                "vulnerability"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistryResultPlanRegistryLimit:getCapabilitiesContainerRegistryResultPlanRegistryLimit": {
            "properties": {
                "imageStorage": {
                    "type": "integer",
                    "description": "Docker image storage limits in bytes\n"
                },
                "parallelRequest": {
                    "type": "integer",
                    "description": "Parallel requests on Docker image API (/v2 Docker registry API)\n"
                }
            },
            "type": "object",
            "required": [
                "imageStorage",
                "parallelRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getContainerRegistriesResult:getContainerRegistriesResult": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Registry creation date\n"
                },
                "id": {
                    "type": "string",
                    "description": "Registry ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID of your registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Current size of the registry (bytes)\n"
                },
                "status": {
                    "type": "string",
                    "description": "Registry status\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n"
                },
                "url": {
                    "type": "string",
                    "description": "Access url of the registry\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of your registry\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "name",
                "projectId",
                "region",
                "size",
                "status",
                "updatedAt",
                "url",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getContainerRegistryUsersResult:getContainerRegistryUsersResult": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User email\n"
                },
                "id": {
                    "type": "string",
                    "description": "User ID\n"
                },
                "user": {
                    "type": "string",
                    "description": "User name\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "id",
                "user"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFlavorsFlavor:getFlavorsFlavor": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "Available in stock\n"
                },
                "capabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getFlavorsFlavorCapability:getFlavorsFlavorCapability"
                    },
                    "description": "Capabilities of the flavor\n"
                },
                "disk": {
                    "type": "number",
                    "description": "Number of disks\n"
                },
                "id": {
                    "type": "string",
                    "description": "Flavor id\n"
                },
                "inboundBandwidth": {
                    "type": "number",
                    "description": "Max capacity of inbound traffic in Mbit/s\n"
                },
                "name": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "osType": {
                    "type": "string",
                    "description": "OS to install on\n"
                },
                "outboundBandwidth": {
                    "type": "number",
                    "description": "Max capacity of outbound traffic in Mbit/s\n"
                },
                "planCodes": {
                    "$ref": "#/types/ovh:CloudProject/getFlavorsFlavorPlanCodes:getFlavorsFlavorPlanCodes",
                    "description": "Plan codes to order instances\n"
                },
                "quota": {
                    "type": "number",
                    "description": "Number instance you can spawn with your actual quota\n"
                },
                "ram": {
                    "type": "number",
                    "description": "Ram quantity (Gio)\n"
                },
                "region": {
                    "type": "string",
                    "description": "Flavor region\n"
                },
                "type": {
                    "type": "string",
                    "description": "Flavor type\n"
                },
                "vcpus": {
                    "type": "number",
                    "description": "Number of VCPUs\n"
                }
            },
            "type": "object",
            "required": [
                "available",
                "capabilities",
                "disk",
                "id",
                "inboundBandwidth",
                "name",
                "osType",
                "outboundBandwidth",
                "planCodes",
                "quota",
                "ram",
                "region",
                "type",
                "vcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFlavorsFlavorCapability:getFlavorsFlavorCapability": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Is the capability enabled\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the capability\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFlavorsFlavorPlanCodes:getFlavorsFlavorPlanCodes": {
            "properties": {
                "hourly": {
                    "type": "string",
                    "description": "Plan code to order hourly instance\n"
                },
                "monthly": {
                    "type": "string",
                    "description": "Plan code to order monthly instance\n"
                }
            },
            "type": "object",
            "required": [
                "hourly",
                "monthly"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFloatingIPsCloudProjectFloatingip:getFloatingIPsCloudProjectFloatingip": {
            "properties": {
                "associatedEntity": {
                    "$ref": "#/types/ovh:CloudProject/getFloatingIPsCloudProjectFloatingipAssociatedEntity:getFloatingIPsCloudProjectFloatingipAssociatedEntity",
                    "description": "Associated entity with the floating ip\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the floating ip\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Value of the floating ip\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "ID of the network\n"
                },
                "region": {
                    "type": "string",
                    "description": "Floating ip region\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the floating ip\n"
                }
            },
            "type": "object",
            "required": [
                "associatedEntity",
                "id",
                "ip",
                "networkId",
                "region",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getFloatingIPsCloudProjectFloatingipAssociatedEntity:getFloatingIPsCloudProjectFloatingipAssociatedEntity": {
            "properties": {
                "gatewayId": {
                    "type": "string",
                    "description": "ID of the gateway\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the port\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP of the port\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the port\n"
                }
            },
            "type": "object",
            "required": [
                "gatewayId",
                "id",
                "ip",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstanceAddress:getInstanceAddress": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "IP address\n"
                },
                "version": {
                    "type": "integer",
                    "description": "IP version\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstanceAttachedVolume:getInstanceAttachedVolume": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Volume id\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstancesInstance:getInstancesInstance": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getInstancesInstanceAddress:getInstancesInstanceAddress"
                    },
                    "description": "Instance IP addresses\n"
                },
                "attachedVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getInstancesInstanceAttachedVolume:getInstancesInstanceAttachedVolume"
                    },
                    "description": "Volumes attached to the instance\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "Availability Zone\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Flavor id\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Instance id\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Image id\n"
                },
                "name": {
                    "type": "string",
                    "description": "Instance name\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "SSH Key pair name\n"
                },
                "taskState": {
                    "type": "string",
                    "description": "Instance task state\n"
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "attachedVolumes",
                "availabilityZone",
                "flavorId",
                "flavorName",
                "id",
                "imageId",
                "name",
                "sshKey",
                "taskState"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstancesInstanceAddress:getInstancesInstanceAddress": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "IP address\n"
                },
                "version": {
                    "type": "integer",
                    "description": "IP version\n"
                }
            },
            "type": "object",
            "required": [
                "ip",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getInstancesInstanceAttachedVolume:getInstancesInstanceAttachedVolume": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Volume id\n"
                }
            },
            "type": "object",
            "required": [
                "id"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomization:getKubeCustomization": {
            "properties": {
                "apiservers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver"
                    },
                    "deprecationMessage": "Use customization_apiserver instead"
                }
            },
            "type": "object",
            "required": [
                "apiservers"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver": {
            "properties": {
                "admissionplugins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserverAdmissionplugin:getKubeCustomizationApiserverAdmissionplugin"
                    }
                }
            },
            "type": "object",
            "required": [
                "admissionplugins"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomizationApiserverAdmissionplugin:getKubeCustomizationApiserverAdmissionplugin": {
            "properties": {
                "disableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enableds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "disableds",
                "enableds"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeCustomizationKubeProxy:getKubeCustomizationKubeProxy": {
            "properties": {
                "iptables": {
                    "$ref": "#/types/ovh:CloudProject/getKubeCustomizationKubeProxyIptables:getKubeCustomizationKubeProxyIptables"
                },
                "ipvs": {
                    "$ref": "#/types/ovh:CloudProject/getKubeCustomizationKubeProxyIpvs:getKubeCustomizationKubeProxyIpvs"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeCustomizationKubeProxyIptables:getKubeCustomizationKubeProxyIptables": {
            "properties": {
                "minSyncPeriod": {
                    "type": "string"
                },
                "syncPeriod": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeCustomizationKubeProxyIpvs:getKubeCustomizationKubeProxyIpvs": {
            "properties": {
                "minSyncPeriod": {
                    "type": "string"
                },
                "scheduler": {
                    "type": "string"
                },
                "syncPeriod": {
                    "type": "string"
                },
                "tcpFinTimeout": {
                    "type": "string"
                },
                "tcpTimeout": {
                    "type": "string"
                },
                "udpTimeout": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodePoolNodesNode:getKubeNodePoolNodesNode": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Creation date\n"
                },
                "deployedAt": {
                    "type": "string",
                    "description": "Node deployment date\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Node ID\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Public Cloud instance ID\n"
                },
                "isUpToDate": {
                    "type": "boolean",
                    "description": "True if the node is up to date\n"
                },
                "name": {
                    "type": "string",
                    "description": "Node name\n"
                },
                "nodePoolId": {
                    "type": "string",
                    "description": "NodePool parent ID\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date\n"
                },
                "version": {
                    "type": "string",
                    "description": "Node version\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "deployedAt",
                "flavor",
                "id",
                "instanceId",
                "isUpToDate",
                "name",
                "nodePoolId",
                "projectId",
                "status",
                "updatedAt",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getKubeNodePoolTemplate:getKubeNodePoolTemplate": {
            "properties": {
                "metadata": {
                    "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplateMetadata:getKubeNodePoolTemplateMetadata",
                    "description": "metadata\n"
                },
                "spec": {
                    "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplateSpec:getKubeNodePoolTemplateSpec",
                    "description": "spec\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodePoolTemplateMetadata:getKubeNodePoolTemplateMetadata": {
            "properties": {
                "annotations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "annotations\n"
                },
                "finalizers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "finalizers\n"
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "labels\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodePoolTemplateSpec:getKubeNodePoolTemplateSpec": {
            "properties": {
                "taints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "taints\n"
                },
                "unschedulable": {
                    "type": "boolean",
                    "description": "unschedulable\n"
                }
            },
            "type": "object"
        },
        "ovh:CloudProject/getKubeNodesNode:getKubeNodesNode": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Creation date\n"
                },
                "deployedAt": {
                    "type": "string",
                    "description": "Node deployment date\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Node ID\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Public Cloud instance ID\n"
                },
                "isUpToDate": {
                    "type": "boolean",
                    "description": "True if the node is up to date\n"
                },
                "name": {
                    "type": "string",
                    "description": "Node name\n"
                },
                "nodePoolId": {
                    "type": "string",
                    "description": "NodePool parent ID\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date\n"
                },
                "version": {
                    "type": "string",
                    "description": "Node version\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "deployedAt",
                "flavor",
                "id",
                "instanceId",
                "isUpToDate",
                "name",
                "nodePoolId",
                "projectId",
                "status",
                "updatedAt",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getLoadBalancerFlavorsFlavor:getLoadBalancerFlavorsFlavor": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Flavor id\n"
                },
                "name": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region name\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getLoadBalancerFloatingIp:getLoadBalancerFloatingIp": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the floating IP\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP Address of the floating IP\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getLoadBalancersLoadbalancer:getLoadBalancersLoadbalancer": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The UTC date and timestamp when the loadbalancer was created\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "ID of the flavor\n"
                },
                "floatingIp": {
                    "$ref": "#/types/ovh:CloudProject/getLoadBalancersLoadbalancerFloatingIp:getLoadBalancersLoadbalancerFloatingIp",
                    "description": "Information about floating IP\n"
                },
                "id": {
                    "type": "string",
                    "description": "ID of the loadbalancer\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the loadbalancer\n"
                },
                "operatingStatus": {
                    "type": "string",
                    "description": "Operating status of the loadbalancer\n"
                },
                "provisioningStatus": {
                    "type": "string",
                    "description": "Provisioning status of the loadbalancer\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the loadbalancer\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "UTC date and timestamp when the loadbalancer was updated\n"
                },
                "vipAddress": {
                    "type": "string",
                    "description": "IP address of the Virtual IP\n"
                },
                "vipNetworkId": {
                    "type": "string",
                    "description": "Openstack ID of the network for the Virtual IP\n"
                },
                "vipSubnetId": {
                    "type": "string",
                    "description": "ID of the subnet for the Virtual IP\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "flavorId",
                "floatingIp",
                "id",
                "name",
                "operatingStatus",
                "provisioningStatus",
                "region",
                "updatedAt",
                "vipAddress",
                "vipNetworkId",
                "vipSubnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getLoadBalancersLoadbalancerFloatingIp:getLoadBalancersLoadbalancerFloatingIp": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "ID of the floating IP\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP Address of the floating IP\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivateRegion:getNetworkPrivateRegion": {
            "properties": {
                "openstackId": {
                    "type": "string",
                    "description": "Network id on openstack region\n"
                },
                "region": {
                    "type": "string",
                    "description": "Network region\n"
                },
                "status": {
                    "type": "string",
                    "description": "Network region status\n"
                }
            },
            "type": "object",
            "required": [
                "openstackId",
                "region",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivateSubnetsSubnet:getNetworkPrivateSubnetsSubnet": {
            "properties": {
                "cidr": {
                    "type": "string",
                    "description": "Subnet CIDR\n"
                },
                "dhcpEnabled": {
                    "type": "boolean",
                    "description": "Is DHCP enabled for the subnet\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway IP in the subnet\n"
                },
                "id": {
                    "type": "string",
                    "description": "Subnet id\n"
                },
                "ipPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getNetworkPrivateSubnetsSubnetIpPool:getNetworkPrivateSubnetsSubnetIpPool"
                    },
                    "description": "List of ip pools allocated in subnet\n"
                }
            },
            "type": "object",
            "required": [
                "cidr",
                "dhcpEnabled",
                "gatewayIp",
                "id",
                "ipPools"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivateSubnetsSubnetIpPool:getNetworkPrivateSubnetsSubnetIpPool": {
            "properties": {
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP\n"
                },
                "end": {
                    "type": "string",
                    "description": "Last IP for this region (eg: 192.168.1.24)\n"
                },
                "network": {
                    "type": "string",
                    "description": "Global network with cidr (eg: 192.168.1.0/24)\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the subnet\n"
                },
                "start": {
                    "type": "string",
                    "description": "First IP for this region (eg: 192.168.1.12)\n"
                }
            },
            "type": "object",
            "required": [
                "dhcp",
                "end",
                "network",
                "region",
                "start"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivatesNetwork:getNetworkPrivatesNetwork": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Network id\n"
                },
                "name": {
                    "type": "string",
                    "description": "Network name\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getNetworkPrivatesNetworkRegion:getNetworkPrivatesNetworkRegion"
                    },
                    "description": "Details about private network in region\n"
                },
                "status": {
                    "type": "string",
                    "description": "Network status\n"
                },
                "type": {
                    "type": "string",
                    "description": "Network type\n"
                },
                "vlanId": {
                    "type": "number",
                    "description": "Network VLAN id\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "regions",
                "status",
                "type",
                "vlanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getNetworkPrivatesNetworkRegion:getNetworkPrivatesNetworkRegion": {
            "properties": {
                "openstackId": {
                    "type": "string",
                    "description": "Network id on openstack region\n"
                },
                "region": {
                    "type": "string",
                    "description": "Network region\n"
                },
                "status": {
                    "type": "string",
                    "description": "Network region status\n"
                }
            },
            "type": "object",
            "required": [
                "openstackId",
                "region",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getOpenSearchUserAcl:getOpenSearchUserAcl": {
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the ACL\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission of the ACL\n"
                }
            },
            "type": "object",
            "required": [
                "pattern",
                "permission"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getPrometheusTarget:getPrometheusTarget": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Host of the endpoint\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint\n"
                }
            },
            "type": "object",
            "required": [
                "host",
                "port"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentState:getRancherCurrentState": {
            "properties": {
                "bootstrapPassword": {
                    "type": "string",
                    "description": "Bootstrap password of the managed Rancher service, returned only on creation\n",
                    "secret": true
                },
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getRancherCurrentStateIpRestriction:getRancherCurrentStateIpRestriction"
                    },
                    "description": "List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the managed Rancher service\n"
                },
                "networking": {
                    "$ref": "#/types/ovh:CloudProject/getRancherCurrentStateNetworking:getRancherCurrentStateNetworking",
                    "description": "Networking properties of a managed Rancher service\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the managed Rancher service\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the managed Rancher service\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the managed Rancher service\n"
                },
                "usage": {
                    "$ref": "#/types/ovh:CloudProject/getRancherCurrentStateUsage:getRancherCurrentStateUsage",
                    "description": "Latest metrics regarding the usage of the managed Rancher service\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the managed Rancher service\n"
                }
            },
            "type": "object",
            "required": [
                "bootstrapPassword",
                "ipRestrictions",
                "name",
                "networking",
                "plan",
                "region",
                "url",
                "usage",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentStateIpRestriction:getRancherCurrentStateIpRestriction": {
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the allowed CIDR block\n"
                }
            },
            "type": "object",
            "required": [
                "cidrBlock",
                "description"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentStateNetworking:getRancherCurrentStateNetworking": {
            "properties": {
                "egressCidrBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the CIDR ranges for egress IP addresses used by Rancher. Ensure these ranges are allowed in any IP restrictions for services that Rancher will access.\n"
                }
            },
            "type": "object",
            "required": [
                "egressCidrBlocks"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentStateUsage:getRancherCurrentStateUsage": {
            "properties": {
                "datetime": {
                    "type": "string",
                    "description": "Date of the sample\n"
                },
                "orchestratedVcpus": {
                    "type": "number",
                    "description": "Total number of vCPUs orchestrated by the managed Rancher service through the downstream clusters\n"
                }
            },
            "type": "object",
            "required": [
                "datetime",
                "orchestratedVcpus"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherCurrentTask:getRancherCurrentTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the current task\n"
                },
                "link": {
                    "type": "string",
                    "description": "Link to the task details\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current global status of the current task\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the current task\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "link",
                "status",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherPlanPlan:getRancherPlanPlan": {
            "properties": {
                "cause": {
                    "type": "string",
                    "description": "Cause for an unavailability\n"
                },
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the unavailability cause\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the plan\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the plan\n"
                }
            },
            "type": "object",
            "required": [
                "cause",
                "message",
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherTargetSpec:getRancherTargetSpec": {
            "properties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getRancherTargetSpecIpRestriction:getRancherTargetSpecIpRestriction"
                    },
                    "description": "List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the managed Rancher service\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the managed Rancher service. Available plans for an existing managed Rancher can be retrieved using GET /rancher/rancherID/capabilities/plan\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the managed Rancher service. Available versions for an existing managed Rancher can be retrieved using GET /rancher/rancherID/capabilities/version\n"
                }
            },
            "type": "object",
            "required": [
                "ipRestrictions",
                "name",
                "plan",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherTargetSpecIpRestriction:getRancherTargetSpecIpRestriction": {
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the allowed CIDR block\n"
                }
            },
            "type": "object",
            "required": [
                "cidrBlock",
                "description"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRancherVersionVersion:getRancherVersionVersion": {
            "properties": {
                "cause": {
                    "type": "string",
                    "description": "Cause for an unavailability\n"
                },
                "changelogUrl": {
                    "type": "string",
                    "description": "Changelog URL of the version\n"
                },
                "message": {
                    "type": "string",
                    "description": "Human-readable description of the unavailability cause\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the version\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the version\n"
                }
            },
            "type": "object",
            "required": [
                "cause",
                "changelogUrl",
                "message",
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getRegionService:getRegionService": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageEncryption:getStorageEncryption": {
            "properties": {
                "sseAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm\n"
                }
            },
            "type": "object",
            "required": [
                "sseAlgorithm"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageObject:getStorageObject": {
            "properties": {
                "etag": {
                    "type": "string",
                    "description": "ETag\n"
                },
                "isDeleteMarker": {
                    "type": "boolean",
                    "description": "Whether this object is a delete marker\n"
                },
                "isLatest": {
                    "type": "boolean",
                    "description": "Whether this is the latest version of the object\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "Last modification date\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size (bytes)\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Storage class\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the object\n"
                }
            },
            "type": "object",
            "required": [
                "etag",
                "isDeleteMarker",
                "isLatest",
                "key",
                "lastModified",
                "size",
                "storageClass",
                "versionId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageReplication:getStorageReplication": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getStorageReplicationRule:getStorageReplicationRule"
                    },
                    "description": "Replication rules\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageReplicationRule:getStorageReplicationRule": {
            "properties": {
                "deleteMarkerReplication": {
                    "type": "string",
                    "description": "Delete marker replication\n"
                },
                "destination": {
                    "$ref": "#/types/ovh:CloudProject/getStorageReplicationRuleDestination:getStorageReplicationRuleDestination",
                    "description": "Rule destination configuration\n"
                },
                "filter": {
                    "$ref": "#/types/ovh:CloudProject/getStorageReplicationRuleFilter:getStorageReplicationRuleFilter",
                    "description": "Rule filters\n"
                },
                "id": {
                    "type": "string",
                    "description": "Rule ID\n"
                },
                "priority": {
                    "type": "number",
                    "description": "Rule priority\n"
                },
                "status": {
                    "type": "string",
                    "description": "Rule status\n"
                }
            },
            "type": "object",
            "required": [
                "deleteMarkerReplication",
                "destination",
                "filter",
                "id",
                "priority",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageReplicationRuleDestination:getStorageReplicationRuleDestination": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Destination bucket name\n"
                },
                "region": {
                    "type": "string",
                    "description": "Destination region, can be null if destination bucket has been deleted\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Destination storage class\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "region",
                "storageClass"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageReplicationRuleFilter:getStorageReplicationRuleFilter": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "Prefix filter\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags filter\n"
                }
            },
            "type": "object",
            "required": [
                "prefix",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStorageVersioning:getStorageVersioning": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Versioning status\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainer:getStoragesContainer": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and timestamp when the resource was created\n"
                },
                "encryption": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerEncryption:getStoragesContainerEncryption",
                    "description": "Encryption configuration\n"
                },
                "name": {
                    "type": "string",
                    "description": "Container name\n"
                },
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getStoragesContainerObject:getStoragesContainerObject"
                    },
                    "description": "Container objects\n"
                },
                "objectsCount": {
                    "type": "number",
                    "description": "Container total objects count\n"
                },
                "objectsSize": {
                    "type": "number",
                    "description": "Container total objects size (bytes)\n"
                },
                "ownerId": {
                    "type": "number",
                    "description": "Container owner user ID\n"
                },
                "region": {
                    "type": "string",
                    "description": "Container region\n"
                },
                "replication": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerReplication:getStoragesContainerReplication",
                    "description": "Replication configuration\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Container tags\n"
                },
                "versioning": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerVersioning:getStoragesContainerVersioning",
                    "description": "Versioning configuration\n"
                },
                "virtualHost": {
                    "type": "string",
                    "description": "Container virtual host\n"
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "encryption",
                "name",
                "objects",
                "objectsCount",
                "objectsSize",
                "ownerId",
                "region",
                "replication",
                "tags",
                "versioning",
                "virtualHost"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerEncryption:getStoragesContainerEncryption": {
            "properties": {
                "sseAlgorithm": {
                    "type": "string",
                    "description": "Encryption algorithm\n"
                }
            },
            "type": "object",
            "required": [
                "sseAlgorithm"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerObject:getStoragesContainerObject": {
            "properties": {
                "etag": {
                    "type": "string",
                    "description": "ETag\n"
                },
                "isDeleteMarker": {
                    "type": "boolean",
                    "description": "Whether this object is a delete marker\n"
                },
                "isLatest": {
                    "type": "boolean",
                    "description": "Whether this is the latest version of the object\n"
                },
                "key": {
                    "type": "string",
                    "description": "Key\n"
                },
                "lastModified": {
                    "type": "string",
                    "description": "Last modification date\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size (bytes)\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Storage class\n"
                },
                "versionId": {
                    "type": "string",
                    "description": "Version ID of the object\n"
                }
            },
            "type": "object",
            "required": [
                "etag",
                "isDeleteMarker",
                "isLatest",
                "key",
                "lastModified",
                "size",
                "storageClass",
                "versionId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerReplication:getStoragesContainerReplication": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getStoragesContainerReplicationRule:getStoragesContainerReplicationRule"
                    },
                    "description": "Replication rules\n"
                }
            },
            "type": "object",
            "required": [
                "rules"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerReplicationRule:getStoragesContainerReplicationRule": {
            "properties": {
                "deleteMarkerReplication": {
                    "type": "string",
                    "description": "Delete marker replication\n"
                },
                "destination": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerReplicationRuleDestination:getStoragesContainerReplicationRuleDestination",
                    "description": "Rule destination configuration\n"
                },
                "filter": {
                    "$ref": "#/types/ovh:CloudProject/getStoragesContainerReplicationRuleFilter:getStoragesContainerReplicationRuleFilter",
                    "description": "Rule filters\n"
                },
                "id": {
                    "type": "string",
                    "description": "Rule ID\n"
                },
                "priority": {
                    "type": "number",
                    "description": "Rule priority\n"
                },
                "status": {
                    "type": "string",
                    "description": "Rule status\n"
                }
            },
            "type": "object",
            "required": [
                "deleteMarkerReplication",
                "destination",
                "filter",
                "id",
                "priority",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerReplicationRuleDestination:getStoragesContainerReplicationRuleDestination": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Destination bucket name\n"
                },
                "region": {
                    "type": "string",
                    "description": "Destination region, can be null if destination bucket has been deleted\n"
                },
                "storageClass": {
                    "type": "string",
                    "description": "Destination storage class\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "region",
                "storageClass"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerReplicationRuleFilter:getStoragesContainerReplicationRuleFilter": {
            "properties": {
                "prefix": {
                    "type": "string",
                    "description": "Prefix filter\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Tags filter\n"
                }
            },
            "type": "object",
            "required": [
                "prefix",
                "tags"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getStoragesContainerVersioning:getStoragesContainerVersioning": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "Versioning status\n"
                }
            },
            "type": "object",
            "required": [
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getUserRole:getUserRole": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "permissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getUsersUser:getUsersUser": {
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/getUsersUserRole:getUsersUserRole"
                    }
                },
                "status": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "creationDate",
                "description",
                "roles",
                "status",
                "userId",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getUsersUserRole:getUsersUserRole": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permissions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "permissions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProject/getVolumesVolume:getVolumesVolume": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Volume ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Volume name\n"
                },
                "size": {
                    "type": "number",
                    "description": "Volume size\n"
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "size"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl": {
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "Pattern of the ACL\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission of the ACL\n"
                }
            },
            "type": "object",
            "required": [
                "pattern",
                "permission"
            ]
        },
        "ovh:CloudProjectDatabase/PrometheusTarget:PrometheusTarget": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Host of the endpoint\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "host",
                        "port"
                    ]
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesEngine:getCapabilitiesEngine": {
            "properties": {
                "defaultVersion": {
                    "type": "string",
                    "description": "Default version used for the engine\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the engine\n"
                },
                "name": {
                    "type": "string",
                    "description": "Engine name\n"
                },
                "sslModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "SSL modes for this engine\n"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Versions available for this engine\n"
                }
            },
            "type": "object",
            "required": [
                "defaultVersion",
                "description",
                "name",
                "sslModes",
                "versions"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesFlavor:getCapabilitiesFlavor": {
            "properties": {
                "core": {
                    "type": "integer",
                    "description": "Flavor core number\n"
                },
                "memory": {
                    "type": "integer",
                    "description": "Flavor ram size in GB\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the flavor\n"
                },
                "storage": {
                    "type": "integer",
                    "description": "Flavor disk size in GB\n"
                }
            },
            "type": "object",
            "required": [
                "core",
                "memory",
                "name",
                "storage"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesOption:getCapabilitiesOption": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the option\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the option\n"
                }
            },
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getCapabilitiesPlan:getCapabilitiesPlan": {
            "properties": {
                "backupRetention": {
                    "type": "string",
                    "description": "Automatic backup retention duration\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the plan\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the plan\n"
                }
            },
            "type": "object",
            "required": [
                "backupRetention",
                "description",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseEndpoint:getDatabaseEndpoint": {
            "properties": {
                "component": {
                    "type": "string",
                    "description": "Type of component the URI relates to\n"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain of the cluster\n"
                },
                "path": {
                    "type": "string",
                    "description": "Path of the endpoint\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Connection port for the endpoint\n"
                },
                "scheme": {
                    "type": "string",
                    "description": "Scheme used to generate the URI\n"
                },
                "ssl": {
                    "type": "boolean",
                    "description": "Defines whether the endpoint uses SSL\n"
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL mode used to connect to the service if the SSL is enabled\n"
                },
                "uri": {
                    "type": "string",
                    "description": "URI of the endpoint\n"
                }
            },
            "type": "object",
            "required": [
                "component",
                "domain",
                "path",
                "port",
                "scheme",
                "ssl",
                "sslMode",
                "uri"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseIpRestriction:getDatabaseIpRestriction": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the IP restriction\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "ip",
                "status"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseNode:getDatabaseNode": {
            "properties": {
                "networkId": {
                    "type": "string",
                    "description": "Private network ID in which the node is\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the node\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Private subnet ID in which the node is\n"
                }
            },
            "type": "object",
            "required": [
                "networkId",
                "region",
                "subnetId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration": {
            "properties": {
                "flowgger": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfigurationFlowgger:LogsInputConfigurationFlowgger",
                    "description": "Flowgger configuration\n"
                },
                "logstash": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfigurationLogstash:LogsInputConfigurationLogstash",
                    "description": "Logstash configuration\n"
                }
            },
            "type": "object"
        },
        "ovh:Dbaas/LogsInputConfigurationFlowgger:LogsInputConfigurationFlowgger": {
            "properties": {
                "logFormat": {
                    "type": "string",
                    "description": "Type of format to decode\n"
                },
                "logFraming": {
                    "type": "string",
                    "description": "Indicates how messages are delimited\n"
                }
            },
            "type": "object",
            "required": [
                "logFormat",
                "logFraming"
            ]
        },
        "ovh:Dbaas/LogsInputConfigurationLogstash:LogsInputConfigurationLogstash": {
            "properties": {
                "filterSection": {
                    "type": "string",
                    "description": "The filter section of logstash.conf\n"
                },
                "inputSection": {
                    "type": "string",
                    "description": "The filter section of logstash.conf\n"
                },
                "patternSection": {
                    "type": "string",
                    "description": "The list of customs Grok patterns\n"
                }
            },
            "type": "object",
            "required": [
                "inputSection"
            ]
        },
        "ovh:Dedicated/ServerCustomizations:ServerCustomizations": {
            "properties": {
                "configDriveUserData": {
                    "type": "string",
                    "description": "Config Drive UserData\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "Path of the EFI bootloader from the OS installed on the server\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Custom hostname\n"
                },
                "httpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Image HTTP Headers\n"
                },
                "imageCheckSum": {
                    "type": "string",
                    "description": "Image checksum\n"
                },
                "imageCheckSumType": {
                    "type": "string",
                    "description": "Checksum type\n"
                },
                "imageType": {
                    "type": "string",
                    "description": "Image Type\n"
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Image URL\n"
                },
                "language": {
                    "type": "string",
                    "description": "Display Language\n"
                },
                "postInstallationScript": {
                    "type": "string",
                    "description": "Post-Installation Script\n"
                },
                "postInstallationScriptExtension": {
                    "type": "string",
                    "description": "Post-Installation Script File Extension\n"
                },
                "sshKey": {
                    "type": "string",
                    "description": "SSH Public Key\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerIam:ServerIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface": {
            "properties": {
                "macs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Interface Mac address\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Interface type\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "macs",
                "type"
            ]
        },
        "ovh:Dedicated/ServerOrder:ServerOrder": {
            "properties": {
                "date": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerOrderDetail:ServerOrderDetail"
                    }
                },
                "expirationDate": {
                    "type": "string"
                },
                "orderId": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Dedicated/ServerOrderDetail:ServerOrderDetail": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "detailType": {
                    "type": "string",
                    "description": "Product type of item in order\n"
                },
                "domain": {
                    "type": "string"
                },
                "orderDetailId": {
                    "type": "number"
                },
                "quantity": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "detailType",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Dedicated/ServerPlan:ServerPlan": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlanConfiguration:ServerPlanConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product\n"
                },
                "itemId": {
                    "type": "number",
                    "description": "Cart item to be linked\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "configurations",
                        "duration",
                        "planCode",
                        "pricingMode"
                    ]
                }
            }
        },
        "ovh:Dedicated/ServerPlanConfiguration:ServerPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Dedicated/ServerPlanOption:ServerPlanOption": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlanOptionConfiguration:ServerPlanOptionConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode",
                "quantity"
            ]
        },
        "ovh:Dedicated/ServerPlanOptionConfiguration:ServerPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Dedicated/ServerReinstallTaskCustomizations:ServerReinstallTaskCustomizations": {
            "properties": {
                "configDriveUserData": {
                    "type": "string",
                    "description": "Config Drive UserData\n",
                    "willReplaceOnChanges": true
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "EFI bootloader path\n",
                    "willReplaceOnChanges": true
                },
                "hostname": {
                    "type": "string",
                    "description": "Custom hostname\n",
                    "willReplaceOnChanges": true
                },
                "httpHeaders": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Image HTTP Headers\n",
                    "willReplaceOnChanges": true
                },
                "imageCheckSum": {
                    "type": "string",
                    "description": "Image checksum\n",
                    "willReplaceOnChanges": true
                },
                "imageCheckSumType": {
                    "type": "string",
                    "description": "Checksum type\n",
                    "willReplaceOnChanges": true
                },
                "imageType": {
                    "type": "string",
                    "description": "Image Type\n",
                    "willReplaceOnChanges": true
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Image URL\n",
                    "willReplaceOnChanges": true
                },
                "language": {
                    "type": "string",
                    "description": "Display Language\n",
                    "willReplaceOnChanges": true
                },
                "postInstallationScript": {
                    "type": "string",
                    "description": "Post-Installation Script\n",
                    "willReplaceOnChanges": true
                },
                "postInstallationScriptExtension": {
                    "type": "string",
                    "description": "Post-Installation Script File Extension\n",
                    "willReplaceOnChanges": true
                },
                "sshKey": {
                    "type": "string",
                    "description": "SSH Public Key\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStorage:ServerReinstallTaskStorage": {
            "properties": {
                "diskGroupId": {
                    "type": "integer",
                    "description": "Disk group id (default is 0, meaning automatic)\n",
                    "willReplaceOnChanges": true
                },
                "hardwareRaids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStorageHardwareRaid:ServerReinstallTaskStorageHardwareRaid"
                    },
                    "description": "Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode)\n",
                    "willReplaceOnChanges": true
                },
                "partitionings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioning:ServerReinstallTaskStoragePartitioning"
                    },
                    "description": "Partitioning configuration\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStorageHardwareRaid:ServerReinstallTaskStorageHardwareRaid": {
            "properties": {
                "arrays": {
                    "type": "integer",
                    "description": "Number of arrays (default is 1)\n",
                    "willReplaceOnChanges": true
                },
                "disks": {
                    "type": "integer",
                    "description": "Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)\n",
                    "willReplaceOnChanges": true
                },
                "raidLevel": {
                    "type": "integer",
                    "description": "Hardware raid type (default is 1)\n",
                    "willReplaceOnChanges": true
                },
                "spares": {
                    "type": "integer",
                    "description": "Number of disks in the disk group involved in the spare (default is 0)\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioning:ServerReinstallTaskStoragePartitioning": {
            "properties": {
                "disks": {
                    "type": "integer",
                    "description": "Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)\n",
                    "willReplaceOnChanges": true
                },
                "layouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayout:ServerReinstallTaskStoragePartitioningLayout"
                    },
                    "description": "Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme)\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "Partitioning scheme name\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayout:ServerReinstallTaskStoragePartitioningLayout": {
            "properties": {
                "extras": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtra:ServerReinstallTaskStoragePartitioningLayoutExtra"
                    },
                    "description": "Partition extras parameters\n",
                    "willReplaceOnChanges": true
                },
                "fileSystem": {
                    "type": "string",
                    "description": "File system type\n",
                    "willReplaceOnChanges": true
                },
                "mountPoint": {
                    "type": "string",
                    "description": "Mount point\n",
                    "willReplaceOnChanges": true
                },
                "raidLevel": {
                    "type": "integer",
                    "description": "Software raid type (default is 1)\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "Partition size in MiB (default value is 0)\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "fileSystem",
                "mountPoint"
            ]
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtra:ServerReinstallTaskStoragePartitioningLayoutExtra": {
            "properties": {
                "lvs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtraLv:ServerReinstallTaskStoragePartitioningLayoutExtraLv"
                    },
                    "description": "LVM-specific parameters\n",
                    "willReplaceOnChanges": true
                },
                "zps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtraZp:ServerReinstallTaskStoragePartitioningLayoutExtraZp"
                    },
                    "description": "ZFS-specific parameters\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtraLv:ServerReinstallTaskStoragePartitioningLayoutExtraLv": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Logical volume name\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerReinstallTaskStoragePartitioningLayoutExtraZp:ServerReinstallTaskStoragePartitioningLayoutExtraZp": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "zpool name (generated automatically if not specified)\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStorage:ServerStorage": {
            "properties": {
                "diskGroupId": {
                    "type": "number",
                    "description": "Disk group id (default is 0, meaning automatic)\n"
                },
                "hardwareRaids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerStorageHardwareRaid:ServerStorageHardwareRaid"
                    },
                    "description": "Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode)\n"
                },
                "partitioning": {
                    "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioning:ServerStoragePartitioning",
                    "description": "Partitioning configuration\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStorageHardwareRaid:ServerStorageHardwareRaid": {
            "properties": {
                "arrays": {
                    "type": "number",
                    "description": "Number of arrays (default is 1)\n"
                },
                "disks": {
                    "type": "number",
                    "description": "Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)\n"
                },
                "raidLevel": {
                    "type": "number",
                    "description": "Hardware raid type (default is 1)\n"
                },
                "spares": {
                    "type": "number",
                    "description": "Number of disks in the disk group involved in the spare (default is 0)\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStoragePartitioning:ServerStoragePartitioning": {
            "properties": {
                "disks": {
                    "type": "number",
                    "description": "Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)\n"
                },
                "layouts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioningLayout:ServerStoragePartitioningLayout"
                    },
                    "description": "Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme)\n"
                },
                "schemeName": {
                    "type": "string",
                    "description": "Partitioning scheme (if applicable with selected operating system)\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStoragePartitioningLayout:ServerStoragePartitioningLayout": {
            "properties": {
                "extras": {
                    "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioningLayoutExtras:ServerStoragePartitioningLayoutExtras",
                    "description": "Partition extras parameters\n"
                },
                "fileSystem": {
                    "type": "string",
                    "description": "File system type\n"
                },
                "mountPoint": {
                    "type": "string",
                    "description": "Mount point\n"
                },
                "raidLevel": {
                    "type": "number",
                    "description": "Software raid type (default is 1)\n"
                },
                "size": {
                    "type": "number",
                    "description": "Partition size in MiB (default value is 0 which means to fill the disk with that partition)\n"
                }
            },
            "type": "object",
            "required": [
                "fileSystem",
                "mountPoint"
            ]
        },
        "ovh:Dedicated/ServerStoragePartitioningLayoutExtras:ServerStoragePartitioningLayoutExtras": {
            "properties": {
                "lv": {
                    "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioningLayoutExtrasLv:ServerStoragePartitioningLayoutExtrasLv",
                    "description": "LVM-specific parameters\n"
                },
                "zp": {
                    "$ref": "#/types/ovh:Dedicated/ServerStoragePartitioningLayoutExtrasZp:ServerStoragePartitioningLayoutExtrasZp",
                    "description": "ZFS-specific parameters\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStoragePartitioningLayoutExtrasLv:ServerStoragePartitioningLayoutExtrasLv": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Logical volume name\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/ServerStoragePartitioningLayoutExtrasZp:ServerStoragePartitioningLayoutExtrasZp": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "zpool name (generated automatically if not specified, note that multiple ZFS partitions with same zpool names will be configured as multiple datasets belonging to the same zpool if compatible)\n"
                }
            },
            "type": "object"
        },
        "ovh:Dedicated/getServerSpecificationsHardwareDefaultHardwareRaidSize:getServerSpecificationsHardwareDefaultHardwareRaidSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareDiskGroup:getServerSpecificationsHardwareDiskGroup": {
            "properties": {
                "defaultHardwareRaidSize": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize:getServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize",
                    "description": "default hardware raid size for this disk group\n"
                },
                "defaultHardwareRaidType": {
                    "type": "string",
                    "description": "default hardware raid type for this disk group\n"
                },
                "description": {
                    "type": "string",
                    "description": "human readable description of this disk group\n"
                },
                "diskGroupId": {
                    "type": "number",
                    "description": "identifier of this disk group\n"
                },
                "diskSize": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareDiskGroupDiskSize:getServerSpecificationsHardwareDiskGroupDiskSize",
                    "description": "disk capacity\n"
                },
                "diskType": {
                    "type": "string",
                    "description": "type of the disk (SSD, SATA, SAS, ...)\n"
                },
                "numberOfDisks": {
                    "type": "number",
                    "description": "number of disks in this group\n"
                },
                "raidController": {
                    "type": "string",
                    "description": "raid controller, if any, managing this group of disks\n"
                }
            },
            "type": "object",
            "required": [
                "defaultHardwareRaidSize",
                "defaultHardwareRaidType",
                "description",
                "diskGroupId",
                "diskSize",
                "diskType",
                "numberOfDisks",
                "raidController"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize:getServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareDiskGroupDiskSize:getServerSpecificationsHardwareDiskGroupDiskSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareExpansionCard:getServerSpecificationsHardwareExpansionCard": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "expansion card description\n"
                },
                "type": {
                    "type": "string",
                    "description": "Expansion card type enum\n"
                }
            },
            "type": "object",
            "required": [
                "description",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareMemorySize:getServerSpecificationsHardwareMemorySize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardwareUsbKey:getServerSpecificationsHardwareUsbKey": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkBandwidth:getServerSpecificationsNetworkBandwidth": {
            "properties": {
                "internetToOvh": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkBandwidthInternetToOvh:getServerSpecificationsNetworkBandwidthInternetToOvh",
                    "description": "bandwidth limitation Internet to OVH\n"
                },
                "ovhToInternet": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkBandwidthOvhToInternet:getServerSpecificationsNetworkBandwidthOvhToInternet",
                    "description": "bandwidth limitation OVH to Internet\n"
                },
                "ovhToOvh": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkBandwidthOvhToOvh:getServerSpecificationsNetworkBandwidthOvhToOvh",
                    "description": "bandwidth limitation OVH to OVH\n"
                },
                "type": {
                    "type": "string",
                    "description": "bandwidth offer type\n"
                }
            },
            "type": "object",
            "required": [
                "internetToOvh",
                "ovhToInternet",
                "ovhToOvh",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkBandwidthInternetToOvh:getServerSpecificationsNetworkBandwidthInternetToOvh": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkBandwidthOvhToInternet:getServerSpecificationsNetworkBandwidthOvhToInternet": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkBandwidthOvhToOvh:getServerSpecificationsNetworkBandwidthOvhToOvh": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkConnectionVal:getServerSpecificationsNetworkConnectionVal": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkOla:getServerSpecificationsNetworkOla": {
            "properties": {
                "available": {
                    "type": "boolean",
                    "description": "Is the OLA feature available\n"
                },
                "availableModes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkOlaAvailableMode:getServerSpecificationsNetworkOlaAvailableMode"
                    },
                    "description": "What modes are supported\n"
                },
                "supportedModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "(DEPRECATED) What modes are supported\n"
                }
            },
            "type": "object",
            "required": [
                "available",
                "availableModes",
                "supportedModes"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkOlaAvailableMode:getServerSpecificationsNetworkOlaAvailableMode": {
            "properties": {
                "default": {
                    "type": "boolean",
                    "description": "Is it the default configuration of the server\n"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkOlaAvailableModeInterface:getServerSpecificationsNetworkOlaAvailableModeInterface"
                    },
                    "description": "Interface layout\n"
                },
                "name": {
                    "type": "string",
                    "description": "Mode name\n"
                }
            },
            "type": "object",
            "required": [
                "default",
                "interfaces",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkOlaAvailableModeInterface:getServerSpecificationsNetworkOlaAvailableModeInterface": {
            "properties": {
                "aggregation": {
                    "type": "boolean",
                    "description": "Interface aggregation status\n"
                },
                "count": {
                    "type": "number",
                    "description": "Interface count\n"
                },
                "type": {
                    "type": "string",
                    "description": "An enum describing OVH Link Aggregation interface types\n"
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "count",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkRouting:getServerSpecificationsNetworkRouting": {
            "properties": {
                "ipv4": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkRoutingIpv4:getServerSpecificationsNetworkRoutingIpv4",
                    "description": "Ipv4 routing details\n"
                },
                "ipv6": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkRoutingIpv6:getServerSpecificationsNetworkRoutingIpv6",
                    "description": "Ipv6 routing details\n"
                }
            },
            "type": "object",
            "required": [
                "ipv4",
                "ipv6"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkRoutingIpv4:getServerSpecificationsNetworkRoutingIpv4": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "Server gateway\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Server main IP\n"
                },
                "network": {
                    "type": "string",
                    "description": "Server network\n"
                }
            },
            "type": "object",
            "required": [
                "gateway",
                "ip",
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkRoutingIpv6:getServerSpecificationsNetworkRoutingIpv6": {
            "properties": {
                "gateway": {
                    "type": "string",
                    "description": "Server gateway\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Server main IP\n"
                },
                "network": {
                    "type": "string",
                    "description": "Server network\n"
                }
            },
            "type": "object",
            "required": [
                "gateway",
                "ip",
                "network"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkSwitching:getServerSpecificationsNetworkSwitching": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Switch name\n"
                }
            },
            "type": "object",
            "required": [
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTraffic:getServerSpecificationsNetworkTraffic": {
            "properties": {
                "inputQuotaSize": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTrafficInputQuotaSize:getServerSpecificationsNetworkTrafficInputQuotaSize",
                    "description": "Monthly input traffic quota allowed\n"
                },
                "inputQuotaUsed": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTrafficInputQuotaUsed:getServerSpecificationsNetworkTrafficInputQuotaUsed",
                    "description": "Monthly input traffic consumed this month\n"
                },
                "isThrottled": {
                    "type": "boolean",
                    "description": "Is bandwidth throttleted for being over quota\n"
                },
                "outputQuotaSize": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTrafficOutputQuotaSize:getServerSpecificationsNetworkTrafficOutputQuotaSize",
                    "description": "Monthly output traffic quota allowed\n"
                },
                "outputQuotaUsed": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTrafficOutputQuotaUsed:getServerSpecificationsNetworkTrafficOutputQuotaUsed",
                    "description": "Monthly output traffic consumed this month\n"
                },
                "resetQuotaDate": {
                    "type": "string",
                    "description": "Next reset quota date for traffic counter\n"
                }
            },
            "type": "object",
            "required": [
                "inputQuotaSize",
                "inputQuotaUsed",
                "isThrottled",
                "outputQuotaSize",
                "outputQuotaUsed",
                "resetQuotaDate"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTrafficInputQuotaSize:getServerSpecificationsNetworkTrafficInputQuotaSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTrafficInputQuotaUsed:getServerSpecificationsNetworkTrafficInputQuotaUsed": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTrafficOutputQuotaSize:getServerSpecificationsNetworkTrafficOutputQuotaSize": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkTrafficOutputQuotaUsed:getServerSpecificationsNetworkTrafficOutputQuotaUsed": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkVmac:getServerSpecificationsNetworkVmac": {
            "properties": {
                "supported": {
                    "type": "boolean",
                    "description": "Server is compatible vmac or not\n"
                }
            },
            "type": "object",
            "required": [
                "supported"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkVrack:getServerSpecificationsNetworkVrack": {
            "properties": {
                "bandwidth": {
                    "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkVrackBandwidth:getServerSpecificationsNetworkVrackBandwidth",
                    "description": "vrack bandwidth limitation\n"
                },
                "type": {
                    "type": "string",
                    "description": "bandwidth offer type\n"
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetworkVrackBandwidth:getServerSpecificationsNetworkVrackBandwidth": {
            "properties": {
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Domain/DsRecordsDsRecord:DsRecordsDsRecord": {
            "properties": {
                "algorithm": {
                    "type": "string",
                    "description": "Algorithm name of the DNSSEC key\n"
                },
                "flags": {
                    "type": "string",
                    "description": "Flag name of the DNSSEC key\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "Public key\n"
                },
                "tag": {
                    "type": "integer",
                    "description": "Tag of the DNSSEC key\n"
                }
            },
            "type": "object",
            "required": [
                "algorithm",
                "flags",
                "publicKey",
                "tag"
            ]
        },
        "ovh:Domain/NameCurrentState:NameCurrentState": {
            "properties": {
                "additionalStates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Domain additional states\n"
                },
                "dnsConfiguration": {
                    "$ref": "#/types/ovh:Domain/NameCurrentStateDnsConfiguration:NameCurrentStateDnsConfiguration",
                    "description": "The domain DNS configuration\n"
                },
                "extension": {
                    "type": "string",
                    "description": "Extension of the domain name\n"
                },
                "mainState": {
                    "type": "string",
                    "description": "Domain main state\n"
                },
                "name": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "protectionState": {
                    "type": "string",
                    "description": "Domain protection state\n"
                },
                "suspensionState": {
                    "type": "string",
                    "description": "Domain suspension state\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "additionalStates",
                        "dnsConfiguration",
                        "extension",
                        "mainState",
                        "name",
                        "protectionState",
                        "suspensionState"
                    ]
                }
            }
        },
        "ovh:Domain/NameCurrentStateDnsConfiguration:NameCurrentStateDnsConfiguration": {
            "properties": {
                "configurationType": {
                    "type": "string",
                    "description": "The type of DNS configuration of the domain\n"
                },
                "glueRecordIpv6supported": {
                    "type": "boolean",
                    "description": "Whether the registry supports IPv6 or not\n"
                },
                "hostSupported": {
                    "type": "boolean",
                    "description": "Whether the registry accepts hosts or not\n"
                },
                "maxDns": {
                    "type": "number",
                    "description": "The maximum number of name servers allowed by the registry\n"
                },
                "minDns": {
                    "type": "number",
                    "description": "The minimum number of name servers allowed by the registry\n"
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameCurrentStateDnsConfigurationNameServer:NameCurrentStateDnsConfigurationNameServer"
                    },
                    "description": "The name servers used by the domain name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "configurationType",
                        "glueRecordIpv6supported",
                        "hostSupported",
                        "maxDns",
                        "minDns",
                        "nameServers"
                    ]
                }
            }
        },
        "ovh:Domain/NameCurrentStateDnsConfigurationNameServer:NameCurrentStateDnsConfigurationNameServer": {
            "properties": {
                "ipv4": {
                    "type": "string",
                    "description": "The IPv4 associated to the name server\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "The IPv6 associated to the name server\n"
                },
                "nameServer": {
                    "type": "string",
                    "description": "The host name\n"
                },
                "nameServerType": {
                    "type": "string",
                    "description": "The type of name server\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipv4",
                        "ipv6",
                        "nameServer",
                        "nameServerType"
                    ]
                }
            }
        },
        "ovh:Domain/NameCurrentTask:NameCurrentTask": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Identifier of the current task\n"
                },
                "link": {
                    "type": "string",
                    "description": "Link to the task details\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current global status of the current task\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the current task\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "link",
                        "status",
                        "type"
                    ]
                }
            }
        },
        "ovh:Domain/NameIam:NameIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Domain/NameOrder:NameOrder": {
            "properties": {
                "date": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameOrderDetail:NameOrderDetail"
                    }
                },
                "expirationDate": {
                    "type": "string"
                },
                "orderId": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Domain/NameOrderDetail:NameOrderDetail": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "detailType": {
                    "type": "string",
                    "description": "Product type of item in order\n"
                },
                "domain": {
                    "type": "string"
                },
                "orderDetailId": {
                    "type": "number"
                },
                "quantity": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "detailType",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Domain/NamePlan:NamePlan": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlanConfiguration:NamePlanConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product\n"
                },
                "itemId": {
                    "type": "number",
                    "description": "Cart item to be linked\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "configurations",
                        "duration",
                        "planCode",
                        "pricingMode"
                    ]
                }
            }
        },
        "ovh:Domain/NamePlanConfiguration:NamePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Domain/NamePlanOption:NamePlanOption": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlanOptionConfiguration:NamePlanOptionConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode",
                "quantity"
            ]
        },
        "ovh:Domain/NamePlanOptionConfiguration:NamePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Domain/NameServersServer:NameServersServer": {
            "properties": {
                "host": {
                    "type": "string",
                    "description": "DNS name server hostname\n"
                },
                "ip": {
                    "type": "string",
                    "description": "DNS name server IP address\n"
                }
            },
            "type": "object",
            "required": [
                "host"
            ]
        },
        "ovh:Domain/NameTargetSpec:NameTargetSpec": {
            "properties": {
                "dnsConfiguration": {
                    "$ref": "#/types/ovh:Domain/NameTargetSpecDnsConfiguration:NameTargetSpecDnsConfiguration",
                    "description": "The domain DNS configuration\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "dnsConfiguration"
                    ]
                }
            }
        },
        "ovh:Domain/NameTargetSpecDnsConfiguration:NameTargetSpecDnsConfiguration": {
            "properties": {
                "nameServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameTargetSpecDnsConfigurationNameServer:NameTargetSpecDnsConfigurationNameServer"
                    },
                    "description": "The name servers to update\n"
                }
            },
            "type": "object"
        },
        "ovh:Domain/NameTargetSpecDnsConfigurationNameServer:NameTargetSpecDnsConfigurationNameServer": {
            "properties": {
                "ipv4": {
                    "type": "string",
                    "description": "The IPv4 associated to the name server\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "The IPv6 associated to the name server\n"
                },
                "nameServer": {
                    "type": "string",
                    "description": "The host name\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ipv4",
                        "ipv6",
                        "nameServer"
                    ]
                }
            }
        },
        "ovh:Domain/ZoneOrder:ZoneOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZoneOrderDetail:ZoneOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Domain/ZoneOrderDetail:ZoneOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Domain/ZonePlan:ZonePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanConfiguration:ZonePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Domain/ZonePlanConfiguration:ZonePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Domain/ZonePlanOption:ZonePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanOptionConfiguration:ZonePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Domain/ZonePlanOptionConfiguration:ZonePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrderDetail:PrivateDatabaseOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Hosting/PrivateDatabaseOrderDetail:PrivateDatabaseOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanConfiguration:PrivateDatabasePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Hosting/PrivateDatabasePlanConfiguration:PrivateDatabasePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOptionConfiguration:PrivateDatabasePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Hosting/PrivateDatabasePlanOptionConfiguration:PrivateDatabasePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Hosting/getPrivateDatabaseDbUser:getPrivateDatabaseDbUser": {
            "properties": {
                "grantType": {
                    "type": "string",
                    "description": "User's rights on this database\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User's name granted on this database\n"
                }
            },
            "type": "object",
            "required": [
                "grantType",
                "userName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Hosting/getPrivateDatabaseUserDatabase:getPrivateDatabaseUserDatabase": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database's name linked to this user\n"
                },
                "grantType": {
                    "type": "string",
                    "description": "Grant of this user for this database\n"
                }
            },
            "type": "object",
            "required": [
                "databaseName",
                "grantType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Iam/getReferenceActionsAction:getReferenceActionsAction": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "action",
                "categories",
                "description",
                "resourceType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Ip/IpServiceOrder:IpServiceOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceOrderDetail:IpServiceOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Ip/IpServiceOrderDetail:IpServiceOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Ip/IpServicePlan:IpServicePlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanConfiguration:IpServicePlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Ip/IpServicePlanConfiguration:IpServicePlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Ip/IpServicePlanOption:IpServicePlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanOptionConfiguration:IpServicePlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Ip/IpServicePlanOptionConfiguration:IpServicePlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Ip/IpServiceRoutedTo:IpServiceRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Service where ip is routed to\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "serviceName"
                    ]
                }
            }
        },
        "ovh:Ip/MoveRoutedTo:MoveRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Service where ip is routed to\n"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ]
        },
        "ovh:Ip/getServiceRoutedTo:getServiceRoutedTo": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "Service where ip is routed to\n"
                }
            },
            "type": "object",
            "required": [
                "serviceName"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "integer"
                },
                "match": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "pattern": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match",
                        "method",
                        "pattern",
                        "port",
                        "type",
                        "url"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction": {
            "properties": {
                "status": {
                    "type": "integer",
                    "description": "HTTP status code for \"redirect\" and \"reject\" actions\n"
                },
                "target": {
                    "type": "string",
                    "description": "Farm ID for \"farm\" action type or URL template for \"redirect\" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target\n"
                },
                "type": {
                    "type": "string",
                    "description": "Action to trigger if all the rules of this route matches\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:IpLoadBalancing/HttpRouteRule:HttpRouteRule": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/route/availableRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/availableRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Id of your rule\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "field",
                        "match",
                        "negate",
                        "pattern",
                        "ruleId",
                        "subField"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrderDetail:LoadBalancerOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerOrderDetail:LoadBalancerOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerOrderableZone:LoadBalancerOrderableZone": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The zone three letter code\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "The billing planCode for this zone\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "name",
                        "planCode"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanConfiguration:LoadBalancerPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:IpLoadBalancing/LoadBalancerPlanConfiguration:LoadBalancerPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOptionConfiguration:LoadBalancerPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:IpLoadBalancing/LoadBalancerPlanOptionConfiguration:LoadBalancerPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe": {
            "properties": {
                "forceSsl": {
                    "type": "boolean"
                },
                "interval": {
                    "type": "integer"
                },
                "match": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "pattern": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "match",
                        "type"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction": {
            "properties": {
                "target": {
                    "type": "string",
                    "description": "Farm ID for \"farm\" action type, empty for others\n"
                },
                "type": {
                    "type": "string",
                    "description": "Action to trigger if all the rules of this route matches\n"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "ovh:IpLoadBalancing/TcpRouteRule:TcpRouteRule": {
            "properties": {
                "field": {
                    "type": "string",
                    "description": "Name of the field to match like \"protocol\" or \"host\". See \"/ipLoadbalancing/{serviceName}/route/availableRules\" for a list of available rules\n"
                },
                "match": {
                    "type": "string",
                    "description": "Matching operator. Not all operators are available for all fields. See \"/availableRules\"\n"
                },
                "negate": {
                    "type": "boolean",
                    "description": "Invert the matching operator effect\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Value to match against this match. Interpretation if this field depends on the match and field\n"
                },
                "ruleId": {
                    "type": "integer",
                    "description": "Id of your rule\n"
                },
                "subField": {
                    "type": "string",
                    "description": "Name of sub-field, if applicable. This may be a Cookie or Header name for instance\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "field",
                        "match",
                        "negate",
                        "pattern",
                        "ruleId",
                        "subField"
                    ]
                }
            }
        },
        "ovh:IpLoadBalancing/getIpLoadBalancingOrderableZone:getIpLoadBalancingOrderableZone": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "planCode": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name",
                "planCode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Me/getMeCurrency:getMeCurrency": {
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "symbol": {
                    "type": "string",
                    "description": "Currency symbol\n"
                }
            },
            "type": "object",
            "required": [
                "code",
                "symbol"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/OkmsIam:OkmsIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Okms/ServiceKeyJWKIam:ServiceKeyJWKIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Okms/ServiceKeyJWKKey:ServiceKeyJWKKey": {
            "properties": {
                "alg": {
                    "type": "string",
                    "description": "The algorithm intended to be used with the key\n"
                },
                "crv": {
                    "type": "string",
                    "description": "The cryptographic curve used with the key\n"
                },
                "d": {
                    "type": "string",
                    "description": "The RSA or EC private exponent\n",
                    "secret": true
                },
                "dp": {
                    "type": "string",
                    "description": "The RSA private key's first factor CRT exponent\n",
                    "secret": true
                },
                "dq": {
                    "type": "string",
                    "description": "The RSA private key's second factor CRT exponent\n",
                    "secret": true
                },
                "e": {
                    "type": "string",
                    "description": "The exponent value for the RSA public key\n"
                },
                "k": {
                    "type": "string",
                    "description": "The value of the symmetric (or other single-valued) key\n",
                    "secret": true
                },
                "keyOps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operation for which the key is intended to be used\n"
                },
                "kid": {
                    "type": "string",
                    "description": "key ID parameter used to match a specific key\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC\n"
                },
                "n": {
                    "type": "string",
                    "description": "The modulus value for the RSA public key\n"
                },
                "p": {
                    "type": "string",
                    "description": "The first prime factor of the RSA private key\n",
                    "secret": true
                },
                "q": {
                    "type": "string",
                    "description": "The second prime factor of the RSA private key\n",
                    "secret": true
                },
                "qi": {
                    "type": "string",
                    "description": "The CRT coefficient of the second factor of the RSA private key\n",
                    "secret": true
                },
                "use": {
                    "type": "string",
                    "description": "The intended use of the public key\n"
                },
                "x": {
                    "type": "string",
                    "description": "The x coordinate for the Elliptic Curve point\n"
                },
                "y": {
                    "type": "string",
                    "description": "The y coordinate for the Elliptic Curve point\n"
                }
            },
            "type": "object",
            "required": [
                "keyOps",
                "kty"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "keyOps",
                        "kid",
                        "kty"
                    ]
                }
            }
        },
        "ovh:Okms/getOkmsResourceIam:getOkmsResourceIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyIam:getOkmsServiceKeyIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyJwkIam:getOkmsServiceKeyJwkIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyJwkKey:getOkmsServiceKeyJwkKey": {
            "properties": {
                "alg": {
                    "type": "string",
                    "description": "The algorithm intended to be used with the key\n"
                },
                "crv": {
                    "type": "string",
                    "description": "The cryptographic curve used with the key\n"
                },
                "e": {
                    "type": "string",
                    "description": "The exponent value for the RSA public key\n"
                },
                "keyOps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operation for which the key is intended to be used\n"
                },
                "kid": {
                    "type": "string",
                    "description": "key ID parameter used to match a specific key\n"
                },
                "kty": {
                    "type": "string",
                    "description": "Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC\n"
                },
                "n": {
                    "type": "string",
                    "description": "The modulus value for the RSA public key\n"
                },
                "use": {
                    "type": "string",
                    "description": "The intended use of the public key\n"
                },
                "x": {
                    "type": "string",
                    "description": "The x coordinate for the Elliptic Curve point\n"
                },
                "y": {
                    "type": "string",
                    "description": "The y coordinate for the Elliptic Curve point\n"
                }
            },
            "type": "object",
            "required": [
                "alg",
                "crv",
                "e",
                "keyOps",
                "kid",
                "kty",
                "n",
                "use",
                "x",
                "y"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyPemIam:getOkmsServiceKeyPemIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOkmsServiceKeyPemKeysPem:getOkmsServiceKeyPemKeysPem": {
            "properties": {
                "pem": {
                    "type": "string",
                    "description": "The key in base64 encoded PEM format\n"
                }
            },
            "type": "object",
            "required": [
                "pem"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOvhCloudConnectIam:getOvhCloudConnectIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOvhCloudConnectsOcc:getOvhCloudConnectsOcc": {
            "properties": {
                "bandwidth": {
                    "type": "string",
                    "description": "Service bandwidth\n"
                },
                "description": {
                    "type": "string",
                    "description": "Service description\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Okms/getOvhCloudConnectsOccIam:getOvhCloudConnectsOccIam",
                    "description": "IAM resource metadata\n"
                },
                "interfaceLists": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "List of interfaces linked to a service\n"
                },
                "pop": {
                    "type": "string",
                    "description": "Pop reference where the service is delivered\n"
                },
                "portQuantity": {
                    "type": "string",
                    "description": "Port quantity\n"
                },
                "product": {
                    "type": "string",
                    "description": "Product name of the service\n"
                },
                "providerName": {
                    "type": "string",
                    "description": "Service provider\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "status": {
                    "type": "string",
                    "description": "Service status\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "Service UUID\n"
                },
                "vrack": {
                    "type": "string",
                    "description": "vrack linked to the service\n"
                }
            },
            "type": "object",
            "required": [
                "bandwidth",
                "description",
                "iam",
                "interfaceLists",
                "pop",
                "portQuantity",
                "product",
                "providerName",
                "serviceName",
                "status",
                "uuid",
                "vrack"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Okms/getOvhCloudConnectsOccIam:getOvhCloudConnectsOccIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "id",
                "tags",
                "urn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanPrice:getCartProductOptionsPlanPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsPlanPricePrice:getCartProductOptionsPlanPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanPricePrice:getCartProductOptionsPlanPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanSelectedPrice:getCartProductOptionsPlanSelectedPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsPlanSelectedPricePrice:getCartProductOptionsPlanSelectedPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsPlanSelectedPricePrice:getCartProductOptionsPlanSelectedPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsResult:getCartProductOptionsResult": {
            "properties": {
                "exclusive": {
                    "type": "boolean",
                    "description": "Define if options of this family are exclusive with each other\n"
                },
                "family": {
                    "type": "string",
                    "description": "Option family\n"
                },
                "mandatory": {
                    "type": "boolean",
                    "description": "Define if an option of this family is mandatory\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Product offer identifier\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsResultPrice:getCartProductOptionsResultPrice"
                    },
                    "description": "Prices of the product offer\n"
                },
                "productName": {
                    "type": "string",
                    "description": "Name of the product\n"
                },
                "productType": {
                    "type": "string",
                    "description": "Product type\n"
                }
            },
            "type": "object",
            "required": [
                "exclusive",
                "family",
                "mandatory",
                "planCode",
                "prices",
                "productName",
                "productType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsResultPrice:getCartProductOptionsResultPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductOptionsResultPricePrice:getCartProductOptionsResultPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductOptionsResultPricePrice:getCartProductOptionsResultPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanPrice:getCartProductPlanPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductPlanPricePrice:getCartProductPlanPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanPricePrice:getCartProductPlanPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanSelectedPrice:getCartProductPlanSelectedPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductPlanSelectedPricePrice:getCartProductPlanSelectedPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductPlanSelectedPricePrice:getCartProductPlanSelectedPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductResult:getCartProductResult": {
            "properties": {
                "planCode": {
                    "type": "string",
                    "description": "Product offer identifier\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductResultPrice:getCartProductResultPrice"
                    },
                    "description": "Prices of the product offer\n"
                },
                "productName": {
                    "type": "string",
                    "description": "Name of the product\n"
                },
                "productType": {
                    "type": "string",
                    "description": "Product type\n"
                }
            },
            "type": "object",
            "required": [
                "planCode",
                "prices",
                "productName",
                "productType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductResultPrice:getCartProductResultPrice": {
            "properties": {
                "capacities": {
                    "type": "array",
                    "items": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Capacities of the pricing (type of pricing)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the pricing\n"
                },
                "duration": {
                    "type": "string",
                    "description": "Duration for ordering the product\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Interval of renewal\n"
                },
                "maximumQuantity": {
                    "type": "integer",
                    "description": "Maximum quantity that can be ordered\n"
                },
                "maximumRepeat": {
                    "type": "integer",
                    "description": "Maximum repeat for renewal\n"
                },
                "minimumQuantity": {
                    "type": "integer",
                    "description": "Minimum quantity that can be ordered\n"
                },
                "minimumRepeat": {
                    "type": "integer",
                    "description": "Minimum repeat for renewal\n"
                },
                "priceInUcents": {
                    "type": "integer",
                    "description": "Price of the product in micro-centims\n"
                },
                "prices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Order/getCartProductResultPricePrice:getCartProductResultPricePrice"
                    },
                    "description": "Price of the product (Price with its currency and textual representation)\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                },
                "pricingType": {
                    "type": "string",
                    "description": "Pricing type\n"
                }
            },
            "type": "object",
            "required": [
                "capacities",
                "description",
                "duration",
                "interval",
                "maximumQuantity",
                "maximumRepeat",
                "minimumQuantity",
                "minimumRepeat",
                "prices",
                "priceInUcents",
                "pricingMode",
                "pricingType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Order/getCartProductResultPricePrice:getCartProductResultPricePrice": {
            "properties": {
                "currencyCode": {
                    "type": "string",
                    "description": "Currency code\n"
                },
                "text": {
                    "type": "string",
                    "description": "Textual representation\n"
                },
                "value": {
                    "type": "number",
                    "description": "The effective price\n"
                }
            },
            "type": "object",
            "required": [
                "currencyCode",
                "text",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:Vps/VpsIam:VpsIam": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Resource display name\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the resource\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Resource tags. Tags that were internally computed are prefixed with ovh:\n"
                },
                "urn": {
                    "type": "string",
                    "description": "Unique resource name used in policies\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "id",
                        "tags",
                        "urn"
                    ]
                }
            }
        },
        "ovh:Vps/VpsModel:VpsModel": {
            "properties": {
                "availableOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "datacenters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disk": {
                    "type": "number"
                },
                "maximumAdditionnalIp": {
                    "type": "number"
                },
                "memory": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "offer": {
                    "type": "string"
                },
                "vcore": {
                    "type": "number"
                },
                "version": {
                    "type": "string",
                    "description": "All versions that VPS can have\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "availableOptions",
                        "datacenters",
                        "disk",
                        "maximumAdditionnalIp",
                        "memory",
                        "name",
                        "offer",
                        "vcore",
                        "version"
                    ]
                }
            }
        },
        "ovh:Vps/VpsOrder:VpsOrder": {
            "properties": {
                "date": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsOrderDetail:VpsOrderDetail"
                    }
                },
                "expirationDate": {
                    "type": "string"
                },
                "orderId": {
                    "type": "number"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Vps/VpsOrderDetail:VpsOrderDetail": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "detailType": {
                    "type": "string",
                    "description": "Product type of item in order\n"
                },
                "domain": {
                    "type": "string"
                },
                "orderDetailId": {
                    "type": "number"
                },
                "quantity": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "detailType",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Vps/VpsPlan:VpsPlan": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlanConfiguration:VpsPlanConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product\n"
                },
                "itemId": {
                    "type": "number",
                    "description": "Cart item to be linked\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "configurations",
                        "duration",
                        "planCode",
                        "pricingMode"
                    ]
                }
            }
        },
        "ovh:Vps/VpsPlanConfiguration:VpsPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Vps/VpsPlanOption:VpsPlanOption": {
            "properties": {
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlanOptionConfiguration:VpsPlanOptionConfiguration"
                    }
                },
                "duration": {
                    "type": "string",
                    "description": "Duration selected for the purchase of the product\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Identifier of the option offer\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing mode selected for the purchase of the product\n"
                },
                "quantity": {
                    "type": "number",
                    "description": "Quantity of product desired\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode",
                "quantity"
            ]
        },
        "ovh:Vps/VpsPlanOptionConfiguration:VpsPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Label for your configuration item\n"
                },
                "value": {
                    "type": "string",
                    "description": "Value or resource URL on API.OVH.COM of your configuration item\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Vrack/VrackOrder:VrackOrder": {
            "properties": {
                "date": {
                    "type": "string",
                    "description": "date\n"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackOrderDetail:VrackOrderDetail"
                    },
                    "description": "Information about a Bill entry\n"
                },
                "expirationDate": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderId": {
                    "type": "integer",
                    "description": "order id\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "date",
                        "details",
                        "expirationDate",
                        "orderId"
                    ]
                }
            }
        },
        "ovh:Vrack/VrackOrderDetail:VrackOrderDetail": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "description\n"
                },
                "domain": {
                    "type": "string",
                    "description": "expiration date\n"
                },
                "orderDetailId": {
                    "type": "integer",
                    "description": "order detail id\n"
                },
                "quantity": {
                    "type": "string",
                    "description": "quantity\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "description",
                        "domain",
                        "orderDetailId",
                        "quantity"
                    ]
                }
            }
        },
        "ovh:Vrack/VrackPlan:VrackPlan": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanConfiguration:VrackPlanConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Vrack/VrackPlanConfiguration:VrackPlanConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:Vrack/VrackPlanOption:VrackPlanOption": {
            "properties": {
                "catalogName": {
                    "type": "string",
                    "description": "Catalog name\n"
                },
                "configurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanOptionConfiguration:VrackPlanOptionConfiguration"
                    },
                    "description": "Representation of a configuration item for personalizing product\n"
                },
                "duration": {
                    "type": "string",
                    "description": "duration\n"
                },
                "planCode": {
                    "type": "string",
                    "description": "Plan code\n"
                },
                "pricingMode": {
                    "type": "string",
                    "description": "Pricing model identifier\n"
                }
            },
            "type": "object",
            "required": [
                "duration",
                "planCode",
                "pricingMode"
            ]
        },
        "ovh:Vrack/VrackPlanOptionConfiguration:VrackPlanOptionConfiguration": {
            "properties": {
                "label": {
                    "type": "string",
                    "description": "Identifier of the resource\n"
                },
                "value": {
                    "type": "string",
                    "description": "Path to the resource in API.OVH.COM\n"
                }
            },
            "type": "object",
            "required": [
                "label",
                "value"
            ]
        },
        "ovh:index/getInstallationTemplateInput:getInstallationTemplateInput": {
            "properties": {
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mandatory": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "default",
                "description",
                "enums",
                "mandatory",
                "name",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateLicense:getInstallationTemplateLicense": {
            "properties": {
                "os": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getInstallationTemplateLicenseO:getInstallationTemplateLicenseO"
                    }
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getInstallationTemplateLicenseUsage:getInstallationTemplateLicenseUsage"
                    }
                }
            },
            "type": "object",
            "required": [
                "os",
                "usages"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateLicenseO:getInstallationTemplateLicenseO": {
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "names",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateLicenseUsage:getInstallationTemplateLicenseUsage": {
            "properties": {
                "names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "names",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateProject:getInstallationTemplateProject": {
            "properties": {
                "os": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getInstallationTemplateProjectO:getInstallationTemplateProjectO"
                    },
                    "description": "OS template project OS details\n"
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:index/getInstallationTemplateProjectUsage:getInstallationTemplateProjectUsage"
                    }
                }
            },
            "type": "object",
            "required": [
                "os",
                "usages"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateProjectO:getInstallationTemplateProjectO": {
            "properties": {
                "governances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "OS template project item governance\n"
                },
                "name": {
                    "type": "string",
                    "description": "OS template project item name\n"
                },
                "releaseNotes": {
                    "type": "string",
                    "description": "OS template project item release notes\n"
                },
                "url": {
                    "type": "string",
                    "description": "OS template project item url\n"
                },
                "version": {
                    "type": "string",
                    "description": "OS template project item version\n"
                }
            },
            "type": "object",
            "required": [
                "governances",
                "name",
                "releaseNotes",
                "url",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getInstallationTemplateProjectUsage:getInstallationTemplateProjectUsage": {
            "properties": {
                "governances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "OS template project item governance\n"
                },
                "name": {
                    "type": "string",
                    "description": "OS template project item name\n"
                },
                "releaseNotes": {
                    "type": "string",
                    "description": "OS template project item release notes\n"
                },
                "url": {
                    "type": "string",
                    "description": "OS template project item url\n"
                },
                "version": {
                    "type": "string",
                    "description": "OS template project item version\n"
                }
            },
            "type": "object",
            "required": [
                "governances",
                "name",
                "releaseNotes",
                "url",
                "version"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "ovh:index/getServerVni:getServerVni": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "VirtualNetworkInterface activation state\n"
                },
                "mode": {
                    "type": "string",
                    "description": "VirtualNetworkInterface mode (public,vrack,vrack_aggregation)\n"
                },
                "name": {
                    "type": "string",
                    "description": "User defined VirtualNetworkInterface name\n"
                },
                "nics": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "NetworkInterfaceControllers bound to this VirtualNetworkInterface\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "Server name\n"
                },
                "uuid": {
                    "type": "string",
                    "description": "VirtualNetworkInterface unique id\n"
                },
                "vrack": {
                    "type": "string",
                    "description": "vRack name\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "mode",
                "name",
                "nics",
                "serverName",
                "uuid",
                "vrack"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the ovh package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessToken": {
                "type": "string",
                "description": "The OVH API Access Token\n"
            },
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key\n"
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret\n",
                "secret": true
            },
            "clientId": {
                "type": "string",
                "description": "OAuth 2.0 application's ID\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "OAuth 2.0 application's secret\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer Key\n"
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\")\n"
            }
        },
        "inputProperties": {
            "accessToken": {
                "type": "string",
                "description": "The OVH API Access Token\n"
            },
            "applicationKey": {
                "type": "string",
                "description": "The OVH API Application Key\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_KEY"
                    ]
                }
            },
            "applicationSecret": {
                "type": "string",
                "description": "The OVH API Application Secret\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_APPLICATION_SECRET"
                    ]
                },
                "secret": true
            },
            "clientId": {
                "type": "string",
                "description": "OAuth 2.0 application's ID\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "OAuth 2.0 application's secret\n"
            },
            "consumerKey": {
                "type": "string",
                "description": "The OVH API Consumer Key\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_CONSUMER_KEY"
                    ]
                }
            },
            "endpoint": {
                "type": "string",
                "description": "The OVH API endpoint to target (ex: \"ovh-eu\")\n",
                "defaultInfo": {
                    "environment": [
                        "OVH_ENDPOINT"
                    ]
                }
            }
        }
    },
    "resources": {
        "ovh:CloudProject/alerting:Alerting": {
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "Alerting creation date\n"
                },
                "delay": {
                    "type": "number",
                    "description": "Possible values for delay between two alerts in seconds\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email to contact\n"
                },
                "formattedMonthlyThreshold": {
                    "$ref": "#/types/ovh:CloudProject/AlertingFormattedMonthlyThreshold:AlertingFormattedMonthlyThreshold",
                    "description": "Formatted monthly threshold for this alerting\n"
                },
                "monthlyThreshold": {
                    "type": "number",
                    "description": "Monthly threshold for this alerting in currency\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The project id\n"
                }
            },
            "required": [
                "creationDate",
                "delay",
                "email",
                "formattedMonthlyThreshold",
                "monthlyThreshold",
                "serviceName"
            ],
            "inputProperties": {
                "delay": {
                    "type": "number",
                    "description": "Possible values for delay between two alerts in seconds\n"
                },
                "email": {
                    "type": "string",
                    "description": "Email to contact\n"
                },
                "monthlyThreshold": {
                    "type": "number",
                    "description": "Monthly threshold for this alerting in currency\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The project id\n"
                }
            },
            "requiredInputs": [
                "delay",
                "email",
                "monthlyThreshold",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Alerting resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Alerting creation date\n"
                    },
                    "delay": {
                        "type": "number",
                        "description": "Possible values for delay between two alerts in seconds\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Email to contact\n"
                    },
                    "formattedMonthlyThreshold": {
                        "$ref": "#/types/ovh:CloudProject/AlertingFormattedMonthlyThreshold:AlertingFormattedMonthlyThreshold",
                        "description": "Formatted monthly threshold for this alerting\n"
                    },
                    "monthlyThreshold": {
                        "type": "number",
                        "description": "Monthly threshold for this alerting in currency\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The project id\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistry:ContainerRegistry": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Registry creation date\n"
                },
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "planId": {
                    "type": "string",
                    "description": "Plan ID of the registry.\n"
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlan:ContainerRegistryPlan"
                    },
                    "description": "Plan of the registry\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID of your registry\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry.\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "description": "Current size of the registry (bytes)\n"
                },
                "status": {
                    "type": "string",
                    "description": "Registry status\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Registry last update date\n"
                },
                "url": {
                    "type": "string",
                    "description": "Access url of the registry\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of your registry\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "plans",
                "planId",
                "projectId",
                "region",
                "serviceName",
                "size",
                "status",
                "updatedAt",
                "url",
                "version"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "planId": {
                    "type": "string",
                    "description": "Plan ID of the registry.\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the registry.\n"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistry resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Registry creation date\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Registry name\n"
                    },
                    "planId": {
                        "type": "string",
                        "description": "Plan ID of the registry.\n"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/ContainerRegistryPlan:ContainerRegistryPlan"
                        },
                        "description": "Plan of the registry\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID of your registry\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the registry.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "description": "Current size of the registry (bytes)\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Registry status\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Registry last update date\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Access url of the registry\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of your registry\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistryIPRestrictionsManagement:ContainerRegistryIPRestrictionsManagement": {
            "properties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "List your IP restrictions applied on artifact manager component\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "RegistryID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                }
            },
            "required": [
                "ipRestrictions",
                "registryId",
                "serviceName"
            ],
            "inputProperties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "List your IP restrictions applied on artifact manager component\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "RegistryID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ipRestrictions",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryIPRestrictionsManagement resources.\n",
                "properties": {
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "description": "List your IP restrictions applied on artifact manager component\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "RegistryID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistryIPRestrictionsRegistry:ContainerRegistryIPRestrictionsRegistry": {
            "properties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "List your IP restrictions applied on artifact manager component\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "RegistryID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                }
            },
            "required": [
                "ipRestrictions",
                "registryId",
                "serviceName"
            ],
            "inputProperties": {
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "List your IP restrictions applied on artifact manager component\n"
                },
                "registryId": {
                    "type": "string",
                    "description": "RegistryID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ipRestrictions",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryIPRestrictionsRegistry resources.\n",
                "properties": {
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "description": "List your IP restrictions applied on artifact manager component\n"
                    },
                    "registryId": {
                        "type": "string",
                        "description": "RegistryID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistryOIDC:ContainerRegistryOIDC": {
            "properties": {
                "deleteUsers": {
                    "type": "boolean"
                },
                "oidcAdminGroup": {
                    "type": "string"
                },
                "oidcAutoOnboard": {
                    "type": "boolean"
                },
                "oidcClientId": {
                    "type": "string"
                },
                "oidcClientSecret": {
                    "type": "string",
                    "secret": true
                },
                "oidcEndpoint": {
                    "type": "string"
                },
                "oidcGroupsClaim": {
                    "type": "string"
                },
                "oidcName": {
                    "type": "string"
                },
                "oidcScope": {
                    "type": "string"
                },
                "oidcUserClaim": {
                    "type": "string"
                },
                "oidcVerifyCert": {
                    "type": "boolean"
                },
                "registryId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "oidcClientId",
                "oidcClientSecret",
                "oidcEndpoint",
                "oidcName",
                "oidcScope",
                "registryId",
                "serviceName"
            ],
            "inputProperties": {
                "deleteUsers": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "oidcAdminGroup": {
                    "type": "string"
                },
                "oidcAutoOnboard": {
                    "type": "boolean"
                },
                "oidcClientId": {
                    "type": "string"
                },
                "oidcClientSecret": {
                    "type": "string",
                    "secret": true
                },
                "oidcEndpoint": {
                    "type": "string"
                },
                "oidcGroupsClaim": {
                    "type": "string"
                },
                "oidcName": {
                    "type": "string"
                },
                "oidcScope": {
                    "type": "string"
                },
                "oidcUserClaim": {
                    "type": "string"
                },
                "oidcVerifyCert": {
                    "type": "boolean"
                },
                "registryId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "oidcClientId",
                "oidcClientSecret",
                "oidcEndpoint",
                "oidcName",
                "oidcScope",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryOIDC resources.\n",
                "properties": {
                    "deleteUsers": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "oidcAdminGroup": {
                        "type": "string"
                    },
                    "oidcAutoOnboard": {
                        "type": "boolean"
                    },
                    "oidcClientId": {
                        "type": "string"
                    },
                    "oidcClientSecret": {
                        "type": "string",
                        "secret": true
                    },
                    "oidcEndpoint": {
                        "type": "string"
                    },
                    "oidcGroupsClaim": {
                        "type": "string"
                    },
                    "oidcName": {
                        "type": "string"
                    },
                    "oidcScope": {
                        "type": "string"
                    },
                    "oidcUserClaim": {
                        "type": "string"
                    },
                    "oidcVerifyCert": {
                        "type": "boolean"
                    },
                    "registryId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/containerRegistryUser:ContainerRegistryUser": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "User email.\n"
                },
                "login": {
                    "type": "string",
                    "description": "Registry name\n"
                },
                "password": {
                    "type": "string",
                    "description": "User password\n",
                    "secret": true
                },
                "registryId": {
                    "type": "string",
                    "description": "RegistryID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "user": {
                    "type": "string",
                    "description": "User name\n"
                }
            },
            "required": [
                "email",
                "login",
                "password",
                "registryId",
                "serviceName",
                "user"
            ],
            "inputProperties": {
                "email": {
                    "type": "string",
                    "description": "User email.\n",
                    "willReplaceOnChanges": true
                },
                "login": {
                    "type": "string",
                    "description": "Registry name\n",
                    "willReplaceOnChanges": true
                },
                "registryId": {
                    "type": "string",
                    "description": "RegistryID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "email",
                "login",
                "registryId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ContainerRegistryUser resources.\n",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User email.\n",
                        "willReplaceOnChanges": true
                    },
                    "login": {
                        "type": "string",
                        "description": "Registry name\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "User password\n",
                        "secret": true
                    },
                    "registryId": {
                        "type": "string",
                        "description": "RegistryID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n",
                        "willReplaceOnChanges": true
                    },
                    "user": {
                        "type": "string",
                        "description": "User name\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/database:Database": {
            "properties": {
                "advancedConfiguration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Advanced configuration key / value\n"
                },
                "backupRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of region where backups are pushed. Not more than 1 regions for MongoDB. Not more than 2 regions for the other\nengines with one being the same as the nodes[].region field\n"
                },
                "backupTime": {
                    "type": "string",
                    "description": "Time on which backups start every day\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the cluster\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the cluster\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "Disk size attributes of the cluster\n"
                },
                "diskType": {
                    "type": "string",
                    "description": "Disk type attributes of the cluster\n"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseEndpoint:DatabaseEndpoint"
                    },
                    "description": "List of all endpoints of the service\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "The node flavor used for this cluster\n"
                },
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseIpRestriction:DatabaseIpRestriction"
                    },
                    "description": "IP Blocks authorized to access to the cluster\n"
                },
                "kafkaRestApi": {
                    "type": "boolean",
                    "description": "Defines whether the REST API is enabled on a Kafka cluster\n"
                },
                "kafkaSchemaRegistry": {
                    "type": "boolean",
                    "description": "Defines whether the schema registry is enabled on a Kafka cluster\n"
                },
                "maintenanceTime": {
                    "type": "string",
                    "description": "Time on which maintenances can start every day\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Type of network of the cluster\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseNode:DatabaseNode"
                    },
                    "description": "List of nodes composing the service\n"
                },
                "opensearchAclsEnabled": {
                    "type": "boolean",
                    "description": "Defines whether the ACLs are enabled on an Opensearch cluster\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the cluster\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the cluster\n"
                },
                "version": {
                    "type": "string",
                    "description": "Version of the engine deployed on the cluster\n"
                }
            },
            "required": [
                "advancedConfiguration",
                "backupRegions",
                "backupTime",
                "createdAt",
                "diskSize",
                "diskType",
                "endpoints",
                "engine",
                "flavor",
                "maintenanceTime",
                "networkType",
                "nodes",
                "plan",
                "serviceName",
                "status",
                "version"
            ],
            "inputProperties": {
                "advancedConfiguration": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Advanced configuration key / value\n"
                },
                "backupRegions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of region where backups are pushed. Not more than 1 regions for MongoDB. Not more than 2 regions for the other\nengines with one being the same as the nodes[].region field\n"
                },
                "backupTime": {
                    "type": "string",
                    "description": "Time on which backups start every day\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the cluster\n"
                },
                "diskSize": {
                    "type": "integer",
                    "description": "Disk size attributes of the cluster\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "type": "string",
                    "description": "The node flavor used for this cluster\n"
                },
                "ipRestrictions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseIpRestriction:DatabaseIpRestriction"
                    },
                    "description": "IP Blocks authorized to access to the cluster\n"
                },
                "kafkaRestApi": {
                    "type": "boolean",
                    "description": "Defines whether the REST API is enabled on a Kafka cluster\n"
                },
                "kafkaSchemaRegistry": {
                    "type": "boolean",
                    "description": "Defines whether the schema registry is enabled on a Kafka cluster\n"
                },
                "maintenanceTime": {
                    "type": "string",
                    "description": "Time on which maintenances can start every day\n"
                },
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/DatabaseNode:DatabaseNode"
                    },
                    "description": "List of nodes composing the service\n"
                },
                "opensearchAclsEnabled": {
                    "type": "boolean",
                    "description": "Defines whether the ACLs are enabled on an Opensearch cluster\n"
                },
                "plan": {
                    "type": "string",
                    "description": "Plan of the cluster\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "version": {
                    "type": "string",
                    "description": "Version of the engine deployed on the cluster\n"
                }
            },
            "requiredInputs": [
                "engine",
                "flavor",
                "nodes",
                "plan",
                "serviceName",
                "version"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Database resources.\n",
                "properties": {
                    "advancedConfiguration": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Advanced configuration key / value\n"
                    },
                    "backupRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of region where backups are pushed. Not more than 1 regions for MongoDB. Not more than 2 regions for the other\nengines with one being the same as the nodes[].region field\n"
                    },
                    "backupTime": {
                        "type": "string",
                        "description": "Time on which backups start every day\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the cluster\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the cluster\n"
                    },
                    "diskSize": {
                        "type": "integer",
                        "description": "Disk size attributes of the cluster\n"
                    },
                    "diskType": {
                        "type": "string",
                        "description": "Disk type attributes of the cluster\n"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/DatabaseEndpoint:DatabaseEndpoint"
                        },
                        "description": "List of all endpoints of the service\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "Name of the engine of the service\n",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "type": "string",
                        "description": "The node flavor used for this cluster\n"
                    },
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/DatabaseIpRestriction:DatabaseIpRestriction"
                        },
                        "description": "IP Blocks authorized to access to the cluster\n"
                    },
                    "kafkaRestApi": {
                        "type": "boolean",
                        "description": "Defines whether the REST API is enabled on a Kafka cluster\n"
                    },
                    "kafkaSchemaRegistry": {
                        "type": "boolean",
                        "description": "Defines whether the schema registry is enabled on a Kafka cluster\n"
                    },
                    "maintenanceTime": {
                        "type": "string",
                        "description": "Time on which maintenances can start every day\n"
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Type of network of the cluster\n"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/DatabaseNode:DatabaseNode"
                        },
                        "description": "List of nodes composing the service\n"
                    },
                    "opensearchAclsEnabled": {
                        "type": "boolean",
                        "description": "Defines whether the ACLs are enabled on an Opensearch cluster\n"
                    },
                    "plan": {
                        "type": "string",
                        "description": "Plan of the cluster\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the cluster\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the engine deployed on the cluster\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/failoverIpAttach:FailoverIpAttach": {
            "properties": {
                "block": {
                    "type": "string",
                    "description": "IP block\n"
                },
                "continentCode": {
                    "type": "string",
                    "description": "Ip continent\n"
                },
                "geoLoc": {
                    "type": "string",
                    "description": "Ip location\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Ip\n"
                },
                "progress": {
                    "type": "integer",
                    "description": "Current operation progress in percent\n"
                },
                "routedTo": {
                    "type": "string",
                    "description": "Instance where ip is routed to\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "status": {
                    "type": "string",
                    "description": "Ip status\n"
                },
                "subType": {
                    "type": "string",
                    "description": "IP sub type\n"
                }
            },
            "required": [
                "block",
                "continentCode",
                "geoLoc",
                "ip",
                "progress",
                "routedTo",
                "serviceName",
                "status",
                "subType"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "IP block\n"
                },
                "continentCode": {
                    "type": "string",
                    "description": "Ip continent\n"
                },
                "geoLoc": {
                    "type": "string",
                    "description": "Ip location\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Ip\n"
                },
                "routedTo": {
                    "type": "string",
                    "description": "Instance where ip is routed to\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FailoverIpAttach resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "IP block\n"
                    },
                    "continentCode": {
                        "type": "string",
                        "description": "Ip continent\n"
                    },
                    "geoLoc": {
                        "type": "string",
                        "description": "Ip location\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Ip\n"
                    },
                    "progress": {
                        "type": "integer",
                        "description": "Current operation progress in percent\n"
                    },
                    "routedTo": {
                        "type": "string",
                        "description": "Instance where ip is routed to\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Ip status\n"
                    },
                    "subType": {
                        "type": "string",
                        "description": "IP sub type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/gateway:Gateway": {
            "properties": {
                "externalInformations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/GatewayExternalInformation:GatewayExternalInformation"
                    },
                    "description": "External information of the gateway\n"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/GatewayInterface:GatewayInterface"
                    },
                    "description": "Interfaces list of the gateway\n"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n"
                },
                "status": {
                    "type": "string"
                },
                "subnetId": {
                    "type": "string"
                }
            },
            "required": [
                "externalInformations",
                "interfaces",
                "model",
                "name",
                "networkId",
                "region",
                "serviceName",
                "status",
                "subnetId"
            ],
            "inputProperties": {
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n",
                    "willReplaceOnChanges": true
                },
                "subnetId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "model",
                "networkId",
                "region",
                "serviceName",
                "subnetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Gateway resources.\n",
                "properties": {
                    "externalInformations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/GatewayExternalInformation:GatewayExternalInformation"
                        },
                        "description": "External information of the gateway\n"
                    },
                    "interfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/GatewayInterface:GatewayInterface"
                        },
                        "description": "Interfaces list of the gateway\n"
                    },
                    "model": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the id of the cloud project.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/gatewayInterface:GatewayInterface": {
            "properties": {
                "interfaceId": {
                    "type": "string",
                    "description": "Interface ID\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP of the interface\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "Network ID of the interface\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Subnet id to add\n"
                }
            },
            "required": [
                "interfaceId",
                "ip",
                "networkId",
                "region",
                "serviceName",
                "subnetId"
            ],
            "inputProperties": {
                "interfaceId": {
                    "type": "string",
                    "description": "Interface ID\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "subnetId": {
                    "type": "string",
                    "description": "Subnet id to add\n"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName",
                "subnetId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering GatewayInterface resources.\n",
                "properties": {
                    "interfaceId": {
                        "type": "string",
                        "description": "Interface ID\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "IP of the interface\n"
                    },
                    "networkId": {
                        "type": "string",
                        "description": "Network ID of the interface\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "subnetId": {
                        "type": "string",
                        "description": "Subnet id to add\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/instance:Instance": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/InstanceAddress:InstanceAddress"
                    },
                    "description": "Instance IP addresses\n"
                },
                "attachedVolumes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/InstanceAttachedVolume:InstanceAttachedVolume"
                    },
                    "description": "Volumes attached to the instance\n"
                },
                "autoBackup": {
                    "$ref": "#/types/ovh:CloudProject/InstanceAutoBackup:InstanceAutoBackup",
                    "description": "Create an autobackup workflow after instance start up\n"
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone where the instance will be created\n"
                },
                "billingPeriod": {
                    "type": "string",
                    "description": "Billing period - hourly | monthly\n"
                },
                "bootFrom": {
                    "$ref": "#/types/ovh:CloudProject/InstanceBootFrom:InstanceBootFrom",
                    "description": "Boot the instance from an image or a volume\n"
                },
                "bulk": {
                    "type": "integer",
                    "description": "Create multiple instances\n"
                },
                "flavor": {
                    "$ref": "#/types/ovh:CloudProject/InstanceFlavor:InstanceFlavor",
                    "description": "Flavor information\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Flavor id\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "group": {
                    "$ref": "#/types/ovh:CloudProject/InstanceGroup:InstanceGroup",
                    "description": "Start instance in group\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Image id\n"
                },
                "name": {
                    "type": "string",
                    "description": "Instance name\n"
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/InstanceNetwork:InstanceNetwork",
                    "description": "Create network interfaces\n"
                },
                "region": {
                    "type": "string",
                    "description": "Instance region\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project\n"
                },
                "sshKey": {
                    "$ref": "#/types/ovh:CloudProject/InstanceSshKey:InstanceSshKey",
                    "description": "Existing SSH Key pair\n"
                },
                "sshKeyCreate": {
                    "$ref": "#/types/ovh:CloudProject/InstanceSshKeyCreate:InstanceSshKeyCreate",
                    "description": "Add existing SSH Key pair into your Public Cloud project and link it to the instance\n"
                },
                "taskState": {
                    "type": "string",
                    "description": "Instance task state\n"
                },
                "userData": {
                    "type": "string",
                    "description": "Configuration information or scripts to use upon launch\n"
                }
            },
            "required": [
                "addresses",
                "attachedVolumes",
                "availabilityZone",
                "billingPeriod",
                "bootFrom",
                "flavor",
                "flavorId",
                "flavorName",
                "imageId",
                "name",
                "network",
                "region",
                "serviceName",
                "taskState"
            ],
            "inputProperties": {
                "autoBackup": {
                    "$ref": "#/types/ovh:CloudProject/InstanceAutoBackup:InstanceAutoBackup",
                    "description": "Create an autobackup workflow after instance start up\n",
                    "willReplaceOnChanges": true
                },
                "availabilityZone": {
                    "type": "string",
                    "description": "The availability zone where the instance will be created\n",
                    "willReplaceOnChanges": true
                },
                "billingPeriod": {
                    "type": "string",
                    "description": "Billing period - hourly | monthly\n",
                    "willReplaceOnChanges": true
                },
                "bootFrom": {
                    "$ref": "#/types/ovh:CloudProject/InstanceBootFrom:InstanceBootFrom",
                    "description": "Boot the instance from an image or a volume\n",
                    "willReplaceOnChanges": true
                },
                "bulk": {
                    "type": "integer",
                    "description": "Create multiple instances\n",
                    "willReplaceOnChanges": true
                },
                "flavor": {
                    "$ref": "#/types/ovh:CloudProject/InstanceFlavor:InstanceFlavor",
                    "description": "Flavor information\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "$ref": "#/types/ovh:CloudProject/InstanceGroup:InstanceGroup",
                    "description": "Start instance in group\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Instance name\n",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/InstanceNetwork:InstanceNetwork",
                    "description": "Create network interfaces\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Instance region\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project\n",
                    "willReplaceOnChanges": true
                },
                "sshKey": {
                    "$ref": "#/types/ovh:CloudProject/InstanceSshKey:InstanceSshKey",
                    "description": "Existing SSH Key pair\n",
                    "willReplaceOnChanges": true
                },
                "sshKeyCreate": {
                    "$ref": "#/types/ovh:CloudProject/InstanceSshKeyCreate:InstanceSshKeyCreate",
                    "description": "Add existing SSH Key pair into your Public Cloud project and link it to the instance\n",
                    "willReplaceOnChanges": true
                },
                "userData": {
                    "type": "string",
                    "description": "Configuration information or scripts to use upon launch\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "billingPeriod",
                "bootFrom",
                "flavor",
                "network",
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Instance resources.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/InstanceAddress:InstanceAddress"
                        },
                        "description": "Instance IP addresses\n"
                    },
                    "attachedVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/InstanceAttachedVolume:InstanceAttachedVolume"
                        },
                        "description": "Volumes attached to the instance\n"
                    },
                    "autoBackup": {
                        "$ref": "#/types/ovh:CloudProject/InstanceAutoBackup:InstanceAutoBackup",
                        "description": "Create an autobackup workflow after instance start up\n",
                        "willReplaceOnChanges": true
                    },
                    "availabilityZone": {
                        "type": "string",
                        "description": "The availability zone where the instance will be created\n",
                        "willReplaceOnChanges": true
                    },
                    "billingPeriod": {
                        "type": "string",
                        "description": "Billing period - hourly | monthly\n",
                        "willReplaceOnChanges": true
                    },
                    "bootFrom": {
                        "$ref": "#/types/ovh:CloudProject/InstanceBootFrom:InstanceBootFrom",
                        "description": "Boot the instance from an image or a volume\n",
                        "willReplaceOnChanges": true
                    },
                    "bulk": {
                        "type": "integer",
                        "description": "Create multiple instances\n",
                        "willReplaceOnChanges": true
                    },
                    "flavor": {
                        "$ref": "#/types/ovh:CloudProject/InstanceFlavor:InstanceFlavor",
                        "description": "Flavor information\n",
                        "willReplaceOnChanges": true
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Flavor id\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "group": {
                        "$ref": "#/types/ovh:CloudProject/InstanceGroup:InstanceGroup",
                        "description": "Start instance in group\n",
                        "willReplaceOnChanges": true
                    },
                    "imageId": {
                        "type": "string",
                        "description": "Image id\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Instance name\n",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "$ref": "#/types/ovh:CloudProject/InstanceNetwork:InstanceNetwork",
                        "description": "Create network interfaces\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "Instance region\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the id of the cloud project\n",
                        "willReplaceOnChanges": true
                    },
                    "sshKey": {
                        "$ref": "#/types/ovh:CloudProject/InstanceSshKey:InstanceSshKey",
                        "description": "Existing SSH Key pair\n",
                        "willReplaceOnChanges": true
                    },
                    "sshKeyCreate": {
                        "$ref": "#/types/ovh:CloudProject/InstanceSshKeyCreate:InstanceSshKeyCreate",
                        "description": "Add existing SSH Key pair into your Public Cloud project and link it to the instance\n",
                        "willReplaceOnChanges": true
                    },
                    "taskState": {
                        "type": "string",
                        "description": "Instance task state\n"
                    },
                    "userData": {
                        "type": "string",
                        "description": "Configuration information or scripts to use upon launch\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kube:Kube": {
            "properties": {
                "controlPlaneIsUpToDate": {
                    "type": "boolean"
                },
                "customizationApiservers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver"
                    }
                },
                "customizationKubeProxy": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxy:KubeCustomizationKubeProxy"
                },
                "customizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomization:KubeCustomization"
                    },
                    "deprecationMessage": "Use customization_apiserver instead"
                },
                "isUpToDate": {
                    "type": "boolean"
                },
                "kubeProxyMode": {
                    "type": "string"
                },
                "kubeconfig": {
                    "type": "string",
                    "secret": true
                },
                "kubeconfigAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeKubeconfigAttribute:KubeKubeconfigAttribute"
                    },
                    "description": "The kubeconfig configuration file of the Kubernetes cluster\n",
                    "secret": true
                },
                "loadBalancersSubnetId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nextUpgradeVersions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodesSubnetId": {
                    "type": "string"
                },
                "nodesUrl": {
                    "type": "string"
                },
                "privateNetworkConfiguration": {
                    "$ref": "#/types/ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration"
                },
                "privateNetworkId": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatePolicy": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "required": [
                "controlPlaneIsUpToDate",
                "customizations",
                "customizationApiservers",
                "isUpToDate",
                "kubeProxyMode",
                "kubeconfig",
                "kubeconfigAttributes",
                "name",
                "nextUpgradeVersions",
                "nodesSubnetId",
                "nodesUrl",
                "region",
                "serviceName",
                "status",
                "updatePolicy",
                "url",
                "version"
            ],
            "inputProperties": {
                "customizationApiservers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver"
                    }
                },
                "customizationKubeProxy": {
                    "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxy:KubeCustomizationKubeProxy"
                },
                "customizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomization:KubeCustomization"
                    },
                    "deprecationMessage": "Use customization_apiserver instead"
                },
                "kubeProxyMode": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "loadBalancersSubnetId": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nodesSubnetId": {
                    "type": "string"
                },
                "privateNetworkConfiguration": {
                    "$ref": "#/types/ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration"
                },
                "privateNetworkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "updatePolicy": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Kube resources.\n",
                "properties": {
                    "controlPlaneIsUpToDate": {
                        "type": "boolean"
                    },
                    "customizationApiservers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/KubeCustomizationApiserver:KubeCustomizationApiserver"
                        }
                    },
                    "customizationKubeProxy": {
                        "$ref": "#/types/ovh:CloudProject/KubeCustomizationKubeProxy:KubeCustomizationKubeProxy"
                    },
                    "customizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/KubeCustomization:KubeCustomization"
                        },
                        "deprecationMessage": "Use customization_apiserver instead"
                    },
                    "isUpToDate": {
                        "type": "boolean"
                    },
                    "kubeProxyMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "kubeconfig": {
                        "type": "string",
                        "secret": true
                    },
                    "kubeconfigAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/KubeKubeconfigAttribute:KubeKubeconfigAttribute"
                        },
                        "description": "The kubeconfig configuration file of the Kubernetes cluster\n",
                        "secret": true
                    },
                    "loadBalancersSubnetId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nextUpgradeVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nodesSubnetId": {
                        "type": "string"
                    },
                    "nodesUrl": {
                        "type": "string"
                    },
                    "privateNetworkConfiguration": {
                        "$ref": "#/types/ovh:CloudProject/KubePrivateNetworkConfiguration:KubePrivateNetworkConfiguration"
                    },
                    "privateNetworkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatePolicy": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kubeIpRestrictions:KubeIpRestrictions": {
            "properties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP restrictions for the cluster\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "Kube ID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                }
            },
            "required": [
                "ips",
                "kubeId",
                "serviceName"
            ],
            "inputProperties": {
                "ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of IP restrictions for the cluster\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "Kube ID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ips",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubeIpRestrictions resources.\n",
                "properties": {
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of IP restrictions for the cluster\n"
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "Kube ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kubeNodePool:KubeNodePool": {
            "properties": {
                "antiAffinity": {
                    "type": "boolean",
                    "description": "Enable anti affinity groups for nodes in the pool\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling for the pool\n"
                },
                "autoscalingScaleDownUnneededTimeSeconds": {
                    "type": "integer",
                    "description": "scaleDownUnneededTimeSeconds for autoscaling\n"
                },
                "autoscalingScaleDownUnreadyTimeSeconds": {
                    "type": "integer",
                    "description": "scaleDownUnreadyTimeSeconds for autoscaling\n"
                },
                "autoscalingScaleDownUtilizationThreshold": {
                    "type": "number",
                    "description": "scaleDownUtilizationThreshold for autoscaling\n"
                },
                "availableNodes": {
                    "type": "integer",
                    "description": "Number of nodes which are actually ready in the pool\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation date\n"
                },
                "currentNodes": {
                    "type": "integer",
                    "description": "Number of nodes present in the pool\n"
                },
                "desiredNodes": {
                    "type": "integer",
                    "description": "Number of nodes you desire in the pool\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "Flavor name\n"
                },
                "kubeId": {
                    "type": "string",
                    "description": "Kube ID\n"
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "Number of nodes you desire in the pool\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "Number of nodes you desire in the pool\n"
                },
                "monthlyBilled": {
                    "type": "boolean",
                    "description": "Enable monthly billing on all nodes in the pool\n"
                },
                "name": {
                    "type": "string",
                    "description": "NodePool resource name\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project id\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "sizeStatus": {
                    "type": "string",
                    "description": "Status describing the state between number of nodes wanted and available ones\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status\n"
                },
                "template": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate",
                    "description": "Node pool template\n"
                },
                "upToDateNodes": {
                    "type": "integer",
                    "description": "Number of nodes with latest version installed in the pool\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date\n"
                }
            },
            "required": [
                "antiAffinity",
                "autoscale",
                "autoscalingScaleDownUnneededTimeSeconds",
                "autoscalingScaleDownUnreadyTimeSeconds",
                "autoscalingScaleDownUtilizationThreshold",
                "availableNodes",
                "createdAt",
                "currentNodes",
                "desiredNodes",
                "flavor",
                "flavorName",
                "kubeId",
                "maxNodes",
                "minNodes",
                "monthlyBilled",
                "name",
                "projectId",
                "serviceName",
                "sizeStatus",
                "status",
                "upToDateNodes",
                "updatedAt"
            ],
            "inputProperties": {
                "antiAffinity": {
                    "type": "boolean",
                    "description": "Enable anti affinity groups for nodes in the pool\n",
                    "willReplaceOnChanges": true
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Enable auto-scaling for the pool\n"
                },
                "autoscalingScaleDownUnneededTimeSeconds": {
                    "type": "integer",
                    "description": "scaleDownUnneededTimeSeconds for autoscaling\n"
                },
                "autoscalingScaleDownUnreadyTimeSeconds": {
                    "type": "integer",
                    "description": "scaleDownUnreadyTimeSeconds for autoscaling\n"
                },
                "autoscalingScaleDownUtilizationThreshold": {
                    "type": "number",
                    "description": "scaleDownUtilizationThreshold for autoscaling\n"
                },
                "desiredNodes": {
                    "type": "integer",
                    "description": "Number of nodes you desire in the pool\n"
                },
                "flavorName": {
                    "type": "string",
                    "description": "Flavor name\n",
                    "willReplaceOnChanges": true
                },
                "kubeId": {
                    "type": "string",
                    "description": "Kube ID\n",
                    "willReplaceOnChanges": true
                },
                "maxNodes": {
                    "type": "integer",
                    "description": "Number of nodes you desire in the pool\n"
                },
                "minNodes": {
                    "type": "integer",
                    "description": "Number of nodes you desire in the pool\n"
                },
                "monthlyBilled": {
                    "type": "boolean",
                    "description": "Enable monthly billing on all nodes in the pool\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "NodePool resource name\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n",
                    "willReplaceOnChanges": true
                },
                "template": {
                    "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate",
                    "description": "Node pool template\n"
                }
            },
            "requiredInputs": [
                "flavorName",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubeNodePool resources.\n",
                "properties": {
                    "antiAffinity": {
                        "type": "boolean",
                        "description": "Enable anti affinity groups for nodes in the pool\n",
                        "willReplaceOnChanges": true
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "Enable auto-scaling for the pool\n"
                    },
                    "autoscalingScaleDownUnneededTimeSeconds": {
                        "type": "integer",
                        "description": "scaleDownUnneededTimeSeconds for autoscaling\n"
                    },
                    "autoscalingScaleDownUnreadyTimeSeconds": {
                        "type": "integer",
                        "description": "scaleDownUnreadyTimeSeconds for autoscaling\n"
                    },
                    "autoscalingScaleDownUtilizationThreshold": {
                        "type": "number",
                        "description": "scaleDownUtilizationThreshold for autoscaling\n"
                    },
                    "availableNodes": {
                        "type": "integer",
                        "description": "Number of nodes which are actually ready in the pool\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date\n"
                    },
                    "currentNodes": {
                        "type": "integer",
                        "description": "Number of nodes present in the pool\n"
                    },
                    "desiredNodes": {
                        "type": "integer",
                        "description": "Number of nodes you desire in the pool\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "Flavor name\n"
                    },
                    "flavorName": {
                        "type": "string",
                        "description": "Flavor name\n",
                        "willReplaceOnChanges": true
                    },
                    "kubeId": {
                        "type": "string",
                        "description": "Kube ID\n",
                        "willReplaceOnChanges": true
                    },
                    "maxNodes": {
                        "type": "integer",
                        "description": "Number of nodes you desire in the pool\n"
                    },
                    "minNodes": {
                        "type": "integer",
                        "description": "Number of nodes you desire in the pool\n"
                    },
                    "monthlyBilled": {
                        "type": "boolean",
                        "description": "Enable monthly billing on all nodes in the pool\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "NodePool resource name\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project id\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n",
                        "willReplaceOnChanges": true
                    },
                    "sizeStatus": {
                        "type": "string",
                        "description": "Status describing the state between number of nodes wanted and available ones\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status\n"
                    },
                    "template": {
                        "$ref": "#/types/ovh:CloudProject/KubeNodePoolTemplate:KubeNodePoolTemplate",
                        "description": "Node pool template\n"
                    },
                    "upToDateNodes": {
                        "type": "integer",
                        "description": "Number of nodes with latest version installed in the pool\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/kubeOidc:KubeOidc": {
            "properties": {
                "clientId": {
                    "type": "string"
                },
                "issuerUrl": {
                    "type": "string"
                },
                "kubeId": {
                    "type": "string"
                },
                "oidcCaContent": {
                    "type": "string"
                },
                "oidcGroupsClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcGroupsPrefix": {
                    "type": "string"
                },
                "oidcRequiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcSigningAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcUsernameClaim": {
                    "type": "string"
                },
                "oidcUsernamePrefix": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "clientId",
                "issuerUrl",
                "kubeId",
                "serviceName"
            ],
            "inputProperties": {
                "clientId": {
                    "type": "string"
                },
                "issuerUrl": {
                    "type": "string"
                },
                "kubeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "oidcCaContent": {
                    "type": "string"
                },
                "oidcGroupsClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcGroupsPrefix": {
                    "type": "string"
                },
                "oidcRequiredClaims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcSigningAlgs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "oidcUsernameClaim": {
                    "type": "string"
                },
                "oidcUsernamePrefix": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clientId",
                "issuerUrl",
                "kubeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KubeOidc resources.\n",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "issuerUrl": {
                        "type": "string"
                    },
                    "kubeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "oidcCaContent": {
                        "type": "string"
                    },
                    "oidcGroupsClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcGroupsPrefix": {
                        "type": "string"
                    },
                    "oidcRequiredClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcSigningAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcUsernameClaim": {
                        "type": "string"
                    },
                    "oidcUsernamePrefix": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/loadbalancer:Loadbalancer": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The UTC date and timestamp when the resource was created\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the loadbalancer\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Loadbalancer flavor id\n"
                },
                "floatingIp": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerFloatingIp:LoadbalancerFloatingIp",
                    "description": "Information about floating IP\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/LoadbalancerListener:LoadbalancerListener"
                    },
                    "description": "Listeners to create with the loadbalancer\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the resource\n"
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerNetwork:LoadbalancerNetwork",
                    "description": "Network information to create the loadbalancer\n"
                },
                "operatingStatus": {
                    "type": "string",
                    "description": "Operating status of the resource\n"
                },
                "provisioningStatus": {
                    "type": "string",
                    "description": "Provisioning status of the resource\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the resource\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "UTC date and timestamp when the resource was created\n"
                },
                "vipAddress": {
                    "type": "string",
                    "description": "IP address of the Virtual IP\n"
                },
                "vipNetworkId": {
                    "type": "string",
                    "description": "Openstack ID of the network for the Virtual IP\n"
                },
                "vipSubnetId": {
                    "type": "string",
                    "description": "ID of the subnet for the Virtual IP\n"
                }
            },
            "required": [
                "createdAt",
                "flavorId",
                "floatingIp",
                "name",
                "network",
                "operatingStatus",
                "provisioningStatus",
                "region",
                "regionName",
                "serviceName",
                "updatedAt",
                "vipAddress",
                "vipNetworkId",
                "vipSubnetId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the loadbalancer\n"
                },
                "flavorId": {
                    "type": "string",
                    "description": "Loadbalancer flavor id\n"
                },
                "listeners": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/LoadbalancerListener:LoadbalancerListener"
                    },
                    "description": "Listeners to create with the loadbalancer\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the resource\n"
                },
                "network": {
                    "$ref": "#/types/ovh:CloudProject/LoadbalancerNetwork:LoadbalancerNetwork",
                    "description": "Network information to create the loadbalancer\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                }
            },
            "requiredInputs": [
                "flavorId",
                "network",
                "regionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Loadbalancer resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The UTC date and timestamp when the resource was created\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the loadbalancer\n"
                    },
                    "flavorId": {
                        "type": "string",
                        "description": "Loadbalancer flavor id\n"
                    },
                    "floatingIp": {
                        "$ref": "#/types/ovh:CloudProject/LoadbalancerFloatingIp:LoadbalancerFloatingIp",
                        "description": "Information about floating IP\n"
                    },
                    "listeners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/LoadbalancerListener:LoadbalancerListener"
                        },
                        "description": "Listeners to create with the loadbalancer\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the resource\n"
                    },
                    "network": {
                        "$ref": "#/types/ovh:CloudProject/LoadbalancerNetwork:LoadbalancerNetwork",
                        "description": "Network information to create the loadbalancer\n"
                    },
                    "operatingStatus": {
                        "type": "string",
                        "description": "Operating status of the resource\n"
                    },
                    "provisioningStatus": {
                        "type": "string",
                        "description": "Provisioning status of the resource\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of the resource\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "UTC date and timestamp when the resource was created\n"
                    },
                    "vipAddress": {
                        "type": "string",
                        "description": "IP address of the Virtual IP\n"
                    },
                    "vipNetworkId": {
                        "type": "string",
                        "description": "Openstack ID of the network for the Virtual IP\n"
                    },
                    "vipSubnetId": {
                        "type": "string",
                        "description": "ID of the subnet for the Virtual IP\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/networkPrivate:NetworkPrivate": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "regionsAttributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsAttribute:NetworkPrivateRegionsAttribute"
                    }
                },
                "regionsStatuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsStatus:NetworkPrivateRegionsStatus"
                    },
                    "deprecationMessage": "use the regions_attributes field instead"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vlanId": {
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "regions",
                "regionsAttributes",
                "regionsStatuses",
                "serviceName",
                "status",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n",
                    "willReplaceOnChanges": true
                },
                "vlanId": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkPrivate resources.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "regionsAttributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsAttribute:NetworkPrivateRegionsAttribute"
                        }
                    },
                    "regionsStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateRegionsStatus:NetworkPrivateRegionsStatus"
                        },
                        "deprecationMessage": "use the regions_attributes field instead"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the id of the cloud project.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/networkPrivateSubnet:NetworkPrivateSubnet": {
            "properties": {
                "cidr": {
                    "type": "string"
                },
                "dhcp": {
                    "type": "boolean"
                },
                "end": {
                    "type": "string"
                },
                "gatewayIp": {
                    "type": "string"
                },
                "ipPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetIpPool:NetworkPrivateSubnetIpPool"
                    }
                },
                "network": {
                    "type": "string"
                },
                "networkId": {
                    "type": "string"
                },
                "noGateway": {
                    "type": "boolean"
                },
                "region": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n"
                },
                "start": {
                    "type": "string"
                }
            },
            "required": [
                "cidr",
                "end",
                "gatewayIp",
                "ipPools",
                "network",
                "networkId",
                "region",
                "serviceName",
                "start"
            ],
            "inputProperties": {
                "dhcp": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "end": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "noGateway": {
                    "type": "boolean",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n",
                    "willReplaceOnChanges": true
                },
                "start": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "end",
                "network",
                "networkId",
                "region",
                "serviceName",
                "start"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkPrivateSubnet resources.\n",
                "properties": {
                    "cidr": {
                        "type": "string"
                    },
                    "dhcp": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "end": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "gatewayIp": {
                        "type": "string"
                    },
                    "ipPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetIpPool:NetworkPrivateSubnetIpPool"
                        }
                    },
                    "network": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "noGateway": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the id of the cloud project.\n",
                        "willReplaceOnChanges": true
                    },
                    "start": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/networkPrivateSubnetV2:NetworkPrivateSubnetV2": {
            "properties": {
                "allocationPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2AllocationPool:NetworkPrivateSubnetV2AllocationPool"
                    },
                    "description": "DHCP allocation pools of subnet\n"
                },
                "cidr": {
                    "type": "string",
                    "description": "CIDR of subnet\n"
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP in subnet\n"
                },
                "dnsNameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of DNS nameservers, default: 213.186.33.99\n"
                },
                "enableGatewayIp": {
                    "type": "boolean",
                    "description": "Enable gateway IP in subnet\n"
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway IP of subnet\n"
                },
                "hostRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2HostRoute:NetworkPrivateSubnetV2HostRoute"
                    },
                    "description": "Static host routes of subnet\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of subnet\n"
                },
                "networkId": {
                    "type": "string",
                    "description": "Network ID of subnet\n"
                },
                "region": {
                    "type": "string",
                    "description": "Region of network/subnet\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n"
                },
                "useDefaultPublicDnsResolver": {
                    "type": "boolean",
                    "description": "Use OVH default DNS\n"
                }
            },
            "required": [
                "allocationPools",
                "cidr",
                "dnsNameservers",
                "gatewayIp",
                "name",
                "networkId",
                "region",
                "serviceName"
            ],
            "inputProperties": {
                "allocationPools": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2AllocationPool:NetworkPrivateSubnetV2AllocationPool"
                    },
                    "description": "DHCP allocation pools of subnet\n",
                    "willReplaceOnChanges": true
                },
                "cidr": {
                    "type": "string",
                    "description": "CIDR of subnet\n",
                    "willReplaceOnChanges": true
                },
                "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP in subnet\n",
                    "willReplaceOnChanges": true
                },
                "dnsNameservers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of DNS nameservers, default: 213.186.33.99\n",
                    "willReplaceOnChanges": true
                },
                "enableGatewayIp": {
                    "type": "boolean",
                    "description": "Enable gateway IP in subnet\n",
                    "willReplaceOnChanges": true
                },
                "gatewayIp": {
                    "type": "string",
                    "description": "Gateway IP of subnet\n",
                    "willReplaceOnChanges": true
                },
                "hostRoutes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2HostRoute:NetworkPrivateSubnetV2HostRoute"
                    },
                    "description": "Static host routes of subnet\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of subnet\n",
                    "willReplaceOnChanges": true
                },
                "networkId": {
                    "type": "string",
                    "description": "Network ID of subnet\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "Region of network/subnet\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n",
                    "willReplaceOnChanges": true
                },
                "useDefaultPublicDnsResolver": {
                    "type": "boolean",
                    "description": "Use OVH default DNS\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cidr",
                "networkId",
                "region",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetworkPrivateSubnetV2 resources.\n",
                "properties": {
                    "allocationPools": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2AllocationPool:NetworkPrivateSubnetV2AllocationPool"
                        },
                        "description": "DHCP allocation pools of subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "cidr": {
                        "type": "string",
                        "description": "CIDR of subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "dhcp": {
                        "type": "boolean",
                        "description": "Enable DHCP in subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "dnsNameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of DNS nameservers, default: 213.186.33.99\n",
                        "willReplaceOnChanges": true
                    },
                    "enableGatewayIp": {
                        "type": "boolean",
                        "description": "Enable gateway IP in subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "gatewayIp": {
                        "type": "string",
                        "description": "Gateway IP of subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "hostRoutes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/NetworkPrivateSubnetV2HostRoute:NetworkPrivateSubnetV2HostRoute"
                        },
                        "description": "Static host routes of subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "networkId": {
                        "type": "string",
                        "description": "Network ID of subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "Region of network/subnet\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the id of the cloud project.\n",
                        "willReplaceOnChanges": true
                    },
                    "useDefaultPublicDnsResolver": {
                        "type": "boolean",
                        "description": "Use OVH default DNS\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/project:Project": {
            "properties": {
                "ProjectURN": {
                    "type": "string"
                },
                "access": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectOrder:ProjectOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:CloudProject/ProjectPlan:ProjectPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanOption:ProjectPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "projectId": {
                    "type": "string"
                },
                "projectName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "access",
                "description",
                "orders",
                "ovhSubsidiary",
                "plan",
                "projectId",
                "projectName",
                "status",
                "ProjectURN"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectOrder:ProjectOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:CloudProject/ProjectPlan:ProjectPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlanOption:ProjectPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "ProjectURN": {
                        "type": "string"
                    },
                    "access": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/ProjectOrder:ProjectOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:CloudProject/ProjectPlan:ProjectPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/ProjectPlanOption:ProjectPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "projectName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/rancher:Rancher": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Date of the managed Rancher service creation\n"
                },
                "currentState": {
                    "$ref": "#/types/ovh:CloudProject/RancherCurrentState:RancherCurrentState",
                    "description": "Current configuration applied to the managed Rancher service\n"
                },
                "currentTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/RancherCurrentTask:RancherCurrentTask"
                    },
                    "description": "Asynchronous operations ongoing on the managed Rancher service\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "Project ID\n"
                },
                "resourceStatus": {
                    "type": "string",
                    "description": "Reflects the readiness of the managed Rancher service. A new target specification request will be accepted only in\n`READY` status\n"
                },
                "targetSpec": {
                    "$ref": "#/types/ovh:CloudProject/RancherTargetSpec:RancherTargetSpec",
                    "description": "Target specification for the managed Rancher service\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Date of the last managed Rancher service update\n"
                }
            },
            "required": [
                "createdAt",
                "currentState",
                "currentTasks",
                "projectId",
                "resourceStatus",
                "targetSpec",
                "updatedAt"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "Project ID\n"
                },
                "targetSpec": {
                    "$ref": "#/types/ovh:CloudProject/RancherTargetSpec:RancherTargetSpec",
                    "description": "Target specification for the managed Rancher service\n"
                }
            },
            "requiredInputs": [
                "projectId",
                "targetSpec"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Rancher resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the managed Rancher service creation\n"
                    },
                    "currentState": {
                        "$ref": "#/types/ovh:CloudProject/RancherCurrentState:RancherCurrentState",
                        "description": "Current configuration applied to the managed Rancher service\n"
                    },
                    "currentTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/RancherCurrentTask:RancherCurrentTask"
                        },
                        "description": "Asynchronous operations ongoing on the managed Rancher service\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "Project ID\n"
                    },
                    "resourceStatus": {
                        "type": "string",
                        "description": "Reflects the readiness of the managed Rancher service. A new target specification request will be accepted only in\n`READY` status\n"
                    },
                    "targetSpec": {
                        "$ref": "#/types/ovh:CloudProject/RancherTargetSpec:RancherTargetSpec",
                        "description": "Target specification for the managed Rancher service\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Date of the last managed Rancher service update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/regionLoadBalancerLogSubscription:RegionLoadBalancerLogSubscription": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Creation date of the subscription\n"
                },
                "kind": {
                    "type": "string",
                    "description": "Log kind name of this subscription\n"
                },
                "ldpServiceName": {
                    "type": "string",
                    "description": "Name of the destination log service\n"
                },
                "loadbalancerId": {
                    "type": "string",
                    "description": "ID representing the loadbalancer of the resource\n"
                },
                "operationId": {
                    "type": "string",
                    "description": "Identifier of the operation\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name of the resource representing the name of the region.\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "Name of subscribed resource, where the logs come from\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Type of subscribed resource, where the logs come from\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "ID representing the stream of the resource\n"
                },
                "subscriptionId": {
                    "type": "string",
                    "description": "Id of the subscription\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date of the subscription\n"
                }
            },
            "required": [
                "createdAt",
                "kind",
                "ldpServiceName",
                "loadbalancerId",
                "operationId",
                "regionName",
                "resourceName",
                "resourceType",
                "serviceName",
                "streamId",
                "subscriptionId",
                "updatedAt"
            ],
            "inputProperties": {
                "kind": {
                    "type": "string",
                    "description": "Log kind name of this subscription\n",
                    "willReplaceOnChanges": true
                },
                "loadbalancerId": {
                    "type": "string",
                    "description": "ID representing the loadbalancer of the resource\n",
                    "willReplaceOnChanges": true
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name of the resource representing the name of the region.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "ID representing the stream of the resource\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "kind",
                "loadbalancerId",
                "regionName",
                "serviceName",
                "streamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RegionLoadBalancerLogSubscription resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date of the subscription\n"
                    },
                    "kind": {
                        "type": "string",
                        "description": "Log kind name of this subscription\n",
                        "willReplaceOnChanges": true
                    },
                    "ldpServiceName": {
                        "type": "string",
                        "description": "Name of the destination log service\n"
                    },
                    "loadbalancerId": {
                        "type": "string",
                        "description": "ID representing the loadbalancer of the resource\n",
                        "willReplaceOnChanges": true
                    },
                    "operationId": {
                        "type": "string",
                        "description": "Identifier of the operation\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name of the resource representing the name of the region.\n",
                        "willReplaceOnChanges": true
                    },
                    "resourceName": {
                        "type": "string",
                        "description": "Name of subscribed resource, where the logs come from\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "Type of subscribed resource, where the logs come from\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the id of the cloud project.\n",
                        "willReplaceOnChanges": true
                    },
                    "streamId": {
                        "type": "string",
                        "description": "ID representing the stream of the resource\n",
                        "willReplaceOnChanges": true
                    },
                    "subscriptionId": {
                        "type": "string",
                        "description": "Id of the subscription\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date of the subscription\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/regionNetwork:RegionNetwork": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Network name\n"
                },
                "region": {
                    "type": "string",
                    "description": "Network region\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "subnet": {
                    "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnet:RegionNetworkSubnet",
                    "description": "Parameters to create a subnet from another resource creation\n"
                },
                "visibility": {
                    "type": "string",
                    "description": "Network visibility\n"
                },
                "vlanId": {
                    "type": "number",
                    "description": "VLAN id, between 1 and 4000\n"
                }
            },
            "required": [
                "name",
                "region",
                "regionName",
                "serviceName",
                "subnet",
                "visibility",
                "vlanId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "Network name\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "subnet": {
                    "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnet:RegionNetworkSubnet",
                    "description": "Parameters to create a subnet from another resource creation\n"
                },
                "vlanId": {
                    "type": "number",
                    "description": "VLAN id, between 1 and 4000\n"
                }
            },
            "requiredInputs": [
                "regionName",
                "serviceName",
                "subnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RegionNetwork resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Network name\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Network region\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "subnet": {
                        "$ref": "#/types/ovh:CloudProject/RegionNetworkSubnet:RegionNetworkSubnet",
                        "description": "Parameters to create a subnet from another resource creation\n"
                    },
                    "visibility": {
                        "type": "string",
                        "description": "Network visibility\n"
                    },
                    "vlanId": {
                        "type": "number",
                        "description": "VLAN id, between 1 and 4000\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/regionStoragePresign:RegionStoragePresign": {
            "properties": {
                "expire": {
                    "type": "integer",
                    "description": "How long (in seconds) the URL will be valid\n"
                },
                "method": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The S3 storage container's name\n"
                },
                "object": {
                    "type": "string",
                    "description": "Name of the object to download or upload\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the ID of the cloud project\n"
                },
                "url": {
                    "type": "string",
                    "description": "Presigned URL\n"
                }
            },
            "required": [
                "expire",
                "method",
                "name",
                "object",
                "regionName",
                "serviceName",
                "url"
            ],
            "inputProperties": {
                "expire": {
                    "type": "integer",
                    "description": "How long (in seconds) the URL will be valid\n",
                    "willReplaceOnChanges": true
                },
                "method": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The S3 storage container's name\n",
                    "willReplaceOnChanges": true
                },
                "object": {
                    "type": "string",
                    "description": "Name of the object to download or upload\n",
                    "willReplaceOnChanges": true
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the ID of the cloud project\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "expire",
                "method",
                "object",
                "regionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RegionStoragePresign resources.\n",
                "properties": {
                    "expire": {
                        "type": "integer",
                        "description": "How long (in seconds) the URL will be valid\n",
                        "willReplaceOnChanges": true
                    },
                    "method": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The S3 storage container's name\n",
                        "willReplaceOnChanges": true
                    },
                    "object": {
                        "type": "string",
                        "description": "Name of the object to download or upload\n",
                        "willReplaceOnChanges": true
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the ID of the cloud project\n",
                        "willReplaceOnChanges": true
                    },
                    "url": {
                        "type": "string",
                        "description": "Presigned URL\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/s3Credential:S3Credential": {
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "internalUserId": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the ID of the cloud project.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID\n"
                }
            },
            "required": [
                "accessKeyId",
                "internalUserId",
                "secretAccessKey",
                "serviceName",
                "userId"
            ],
            "inputProperties": {
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the ID of the cloud project.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering S3Credential resources.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string"
                    },
                    "internalUserId": {
                        "type": "string"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the ID of the cloud project.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user ID\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/s3Policy:S3Policy": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "The policy document. This is a JSON formatted string.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the ID of the cloud project.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID\n"
                }
            },
            "required": [
                "policy",
                "serviceName",
                "userId"
            ],
            "inputProperties": {
                "policy": {
                    "type": "string",
                    "description": "The policy document. This is a JSON formatted string.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the ID of the cloud project.\n",
                    "willReplaceOnChanges": true
                },
                "userId": {
                    "type": "string",
                    "description": "The user ID\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "policy",
                "serviceName",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering S3Policy resources.\n",
                "properties": {
                    "policy": {
                        "type": "string",
                        "description": "The policy document. This is a JSON formatted string.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the ID of the cloud project.\n",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user ID\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/storage:Storage": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The date and timestamp when the resource was created\n"
                },
                "encryption": {
                    "$ref": "#/types/ovh:CloudProject/StorageEncryption:StorageEncryption",
                    "description": "Encryption configuration\n"
                },
                "limit": {
                    "type": "number",
                    "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                },
                "marker": {
                    "type": "string",
                    "description": "Key to start with when listing objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "Container name\n"
                },
                "objects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/StorageObject:StorageObject"
                    },
                    "description": "Container objects\n"
                },
                "objectsCount": {
                    "type": "number",
                    "description": "Container total objects count\n"
                },
                "objectsSize": {
                    "type": "number",
                    "description": "Container total objects size (bytes)\n"
                },
                "ownerId": {
                    "type": "number",
                    "description": "Container owner user ID\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "List objects whose key begins with this prefix\n"
                },
                "region": {
                    "type": "string",
                    "description": "Container region\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "replication": {
                    "$ref": "#/types/ovh:CloudProject/StorageReplication:StorageReplication",
                    "description": "Replication configuration\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "versioning": {
                    "$ref": "#/types/ovh:CloudProject/StorageVersioning:StorageVersioning",
                    "description": "Versioning configuration\n"
                },
                "virtualHost": {
                    "type": "string",
                    "description": "Container virtual host\n"
                }
            },
            "required": [
                "createdAt",
                "encryption",
                "limit",
                "marker",
                "name",
                "objects",
                "objectsCount",
                "objectsSize",
                "ownerId",
                "prefix",
                "region",
                "regionName",
                "replication",
                "serviceName",
                "versioning",
                "virtualHost"
            ],
            "inputProperties": {
                "encryption": {
                    "$ref": "#/types/ovh:CloudProject/StorageEncryption:StorageEncryption",
                    "description": "Encryption configuration\n"
                },
                "limit": {
                    "type": "number",
                    "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                },
                "marker": {
                    "type": "string",
                    "description": "Key to start with when listing objects\n"
                },
                "name": {
                    "type": "string",
                    "description": "Container name\n"
                },
                "ownerId": {
                    "type": "number",
                    "description": "Container owner user ID\n"
                },
                "prefix": {
                    "type": "string",
                    "description": "List objects whose key begins with this prefix\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "replication": {
                    "$ref": "#/types/ovh:CloudProject/StorageReplication:StorageReplication",
                    "description": "Replication configuration\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "versioning": {
                    "$ref": "#/types/ovh:CloudProject/StorageVersioning:StorageVersioning",
                    "description": "Versioning configuration\n"
                }
            },
            "requiredInputs": [
                "regionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Storage resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The date and timestamp when the resource was created\n"
                    },
                    "encryption": {
                        "$ref": "#/types/ovh:CloudProject/StorageEncryption:StorageEncryption",
                        "description": "Encryption configuration\n"
                    },
                    "limit": {
                        "type": "number",
                        "description": "Limit the number of objects returned (1000 maximum, defaults to 1000)\n"
                    },
                    "marker": {
                        "type": "string",
                        "description": "Key to start with when listing objects\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Container name\n"
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/StorageObject:StorageObject"
                        },
                        "description": "Container objects\n"
                    },
                    "objectsCount": {
                        "type": "number",
                        "description": "Container total objects count\n"
                    },
                    "objectsSize": {
                        "type": "number",
                        "description": "Container total objects size (bytes)\n"
                    },
                    "ownerId": {
                        "type": "number",
                        "description": "Container owner user ID\n"
                    },
                    "prefix": {
                        "type": "string",
                        "description": "List objects whose key begins with this prefix\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Container region\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "replication": {
                        "$ref": "#/types/ovh:CloudProject/StorageReplication:StorageReplication",
                        "description": "Replication configuration\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "versioning": {
                        "$ref": "#/types/ovh:CloudProject/StorageVersioning:StorageVersioning",
                        "description": "Versioning configuration\n"
                    },
                    "virtualHost": {
                        "type": "string",
                        "description": "Container virtual host\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/user:User": {
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "password": {
                    "type": "string",
                    "secret": true
                },
                "roleName": {
                    "type": "string"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/UserRole:UserRole"
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n"
                },
                "status": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "creationDate",
                "openstackRc",
                "password",
                "roles",
                "serviceName",
                "status",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "openstackRc": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "roleName": {
                    "type": "string"
                },
                "roleNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "openstackRc": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "password": {
                        "type": "string",
                        "secret": true
                    },
                    "roleName": {
                        "type": "string"
                    },
                    "roleNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/UserRole:UserRole"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the id of the cloud project.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/volume:Volume": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "The action of the operation\n"
                },
                "completedAt": {
                    "type": "string",
                    "description": "The completed date of the operation\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the operation\n"
                },
                "description": {
                    "type": "string",
                    "description": "Volume description\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Image ID\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Volume name\n"
                },
                "progress": {
                    "type": "number",
                    "description": "Volume status\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of regions\n"
                },
                "resourceId": {
                    "type": "string",
                    "description": "Id of the resource\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "size": {
                    "type": "number",
                    "description": "Volume size\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "Snapshot ID\n"
                },
                "startedAt": {
                    "type": "string",
                    "description": "Datetime of the operation creation\n"
                },
                "status": {
                    "type": "string",
                    "description": "Volume status\n"
                },
                "subOperations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProject/VolumeSubOperation:VolumeSubOperation"
                    },
                    "description": "Sub-operations of the operation\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the volume\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "Volume ID\n"
                }
            },
            "required": [
                "action",
                "completedAt",
                "createdAt",
                "description",
                "imageId",
                "instanceId",
                "name",
                "progress",
                "regionName",
                "regions",
                "resourceId",
                "serviceName",
                "size",
                "snapshotId",
                "startedAt",
                "status",
                "subOperations",
                "type",
                "volumeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Volume description\n"
                },
                "imageId": {
                    "type": "string",
                    "description": "Image ID\n"
                },
                "instanceId": {
                    "type": "string",
                    "description": "Instance ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Volume name\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "size": {
                    "type": "number",
                    "description": "Volume size\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "Snapshot ID\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the volume\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "Volume ID\n"
                }
            },
            "requiredInputs": [
                "regionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Volume resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The action of the operation\n"
                    },
                    "completedAt": {
                        "type": "string",
                        "description": "The completed date of the operation\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the operation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Volume description\n"
                    },
                    "imageId": {
                        "type": "string",
                        "description": "Image ID\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Instance ID\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Volume name\n"
                    },
                    "progress": {
                        "type": "number",
                        "description": "Volume status\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of regions\n"
                    },
                    "resourceId": {
                        "type": "string",
                        "description": "Id of the resource\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Volume size\n"
                    },
                    "snapshotId": {
                        "type": "string",
                        "description": "Snapshot ID\n"
                    },
                    "startedAt": {
                        "type": "string",
                        "description": "Datetime of the operation creation\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Volume status\n"
                    },
                    "subOperations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/VolumeSubOperation:VolumeSubOperation"
                        },
                        "description": "Sub-operations of the operation\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the volume\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "Volume ID\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/volumeBackup:VolumeBackup": {
            "properties": {
                "creationDate": {
                    "type": "string",
                    "description": "Creation date of the backup\n"
                },
                "name": {
                    "type": "string",
                    "description": "name of the backup\n"
                },
                "region": {
                    "type": "string",
                    "description": "Volume backup region\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size of the backup in GiB\n"
                },
                "status": {
                    "type": "string",
                    "description": "Staus of the backup\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "ID of the volume to backup\n"
                }
            },
            "required": [
                "creationDate",
                "name",
                "region",
                "regionName",
                "serviceName",
                "size",
                "status",
                "volumeId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "name of the backup\n"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "volumeId": {
                    "type": "string",
                    "description": "ID of the volume to backup\n"
                }
            },
            "requiredInputs": [
                "regionName",
                "serviceName",
                "volumeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VolumeBackup resources.\n",
                "properties": {
                    "creationDate": {
                        "type": "string",
                        "description": "Creation date of the backup\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "name of the backup\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Volume backup region\n"
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Size of the backup in GiB\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Staus of the backup\n"
                    },
                    "volumeId": {
                        "type": "string",
                        "description": "ID of the volume to backup\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProject/workflowBackup:WorkflowBackup": {
            "properties": {
                "backupName": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "cron": {
                    "type": "string"
                },
                "instanceId": {
                    "type": "string"
                },
                "maxExecutionCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name.\n"
                },
                "rotation": {
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "backupName",
                "createdAt",
                "cron",
                "instanceId",
                "name",
                "regionName",
                "rotation",
                "serviceName"
            ],
            "inputProperties": {
                "backupName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "cron": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "instanceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "maxExecutionCount": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "regionName": {
                    "type": "string",
                    "description": "Region name.\n",
                    "willReplaceOnChanges": true
                },
                "rotation": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cron",
                "instanceId",
                "regionName",
                "rotation",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WorkflowBackup resources.\n",
                "properties": {
                    "backupName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "cron": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "instanceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "maxExecutionCount": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "regionName": {
                        "type": "string",
                        "description": "Region name.\n",
                        "willReplaceOnChanges": true
                    },
                    "rotation": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/databaseInstance:DatabaseInstance": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "default": {
                    "type": "boolean",
                    "description": "Defines if the database has been created by default\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n"
                },
                "name": {
                    "type": "string",
                    "description": "Database name\n"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "default",
                "engine",
                "name",
                "serviceName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Database name\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DatabaseInstance resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "default": {
                        "type": "boolean",
                        "description": "Defines if the database has been created by default\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "Name of the engine of the service\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Database name\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/integration:Integration": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "destinationServiceId": {
                    "type": "string",
                    "description": "ID of the destination service\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n"
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Parameters for the integration\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "sourceServiceId": {
                    "type": "string",
                    "description": "ID of the source service\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the integration\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the integration\n"
                }
            },
            "required": [
                "clusterId",
                "destinationServiceId",
                "engine",
                "serviceName",
                "sourceServiceId",
                "status",
                "type"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "destinationServiceId": {
                    "type": "string",
                    "description": "ID of the destination service\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n",
                    "willReplaceOnChanges": true
                },
                "parameters": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Parameters for the integration\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "sourceServiceId": {
                    "type": "string",
                    "description": "ID of the source service\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "Type of the integration\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "destinationServiceId",
                "engine",
                "serviceName",
                "sourceServiceId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Integration resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "destinationServiceId": {
                        "type": "string",
                        "description": "ID of the destination service\n",
                        "willReplaceOnChanges": true
                    },
                    "engine": {
                        "type": "string",
                        "description": "Name of the engine of the service\n",
                        "willReplaceOnChanges": true
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Parameters for the integration\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sourceServiceId": {
                        "type": "string",
                        "description": "ID of the source service\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the integration\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the integration\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/ipRestriction:IpRestriction": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the IP restriction\n"
                }
            },
            "required": [
                "clusterId",
                "engine",
                "ip",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IP restriction\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "description": "Authorized IP\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "ip",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpRestriction resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the IP restriction\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "Name of the engine of the service\n",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "description": "Authorized IP\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the IP restriction\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/kafkaAcl:KafkaAcl": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this topic\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "topic": {
                    "type": "string",
                    "description": "Topic affected by this acl\n"
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this acl\n"
                }
            },
            "required": [
                "clusterId",
                "permission",
                "serviceName",
                "topic",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this topic\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "topic": {
                    "type": "string",
                    "description": "Topic affected by this acl\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this acl\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "permission",
                "serviceName",
                "topic",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaAcl resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission to give to this username on this topic\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "topic": {
                        "type": "string",
                        "description": "Topic affected by this acl\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Username affected by this acl\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/kafkaSchemaRegistryAcl:KafkaSchemaRegistryAcl": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this resource\n"
                },
                "resource": {
                    "type": "string",
                    "description": "Resource affected by this acl\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this acl\n"
                }
            },
            "required": [
                "clusterId",
                "permission",
                "resource",
                "serviceName",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "permission": {
                    "type": "string",
                    "description": "Permission to give to this username on this resource\n",
                    "willReplaceOnChanges": true
                },
                "resource": {
                    "type": "string",
                    "description": "Resource affected by this acl\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "Username affected by this acl\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "permission",
                "resource",
                "serviceName",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaSchemaRegistryAcl resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "permission": {
                        "type": "string",
                        "description": "Permission to give to this username on this resource\n",
                        "willReplaceOnChanges": true
                    },
                    "resource": {
                        "type": "string",
                        "description": "Resource affected by this acl\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "Username affected by this acl\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/kafkaTopic:KafkaTopic": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "minInsyncReplicas": {
                    "type": "integer",
                    "description": "Minimum insync replica accepted for this topic\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the topic\n"
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions for this topic\n"
                },
                "replication": {
                    "type": "integer",
                    "description": "Number of replication for this topic\n"
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "Number of bytes for the retention of the data for this topic\n"
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "Number of hours for the retention of the data for this topic\n"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "minInsyncReplicas",
                "name",
                "partitions",
                "replication",
                "retentionBytes",
                "retentionHours",
                "serviceName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "minInsyncReplicas": {
                    "type": "integer",
                    "description": "Minimum insync replica accepted for this topic\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the topic\n",
                    "willReplaceOnChanges": true
                },
                "partitions": {
                    "type": "integer",
                    "description": "Number of partitions for this topic\n",
                    "willReplaceOnChanges": true
                },
                "replication": {
                    "type": "integer",
                    "description": "Number of replication for this topic\n",
                    "willReplaceOnChanges": true
                },
                "retentionBytes": {
                    "type": "integer",
                    "description": "Number of bytes for the retention of the data for this topic\n",
                    "willReplaceOnChanges": true
                },
                "retentionHours": {
                    "type": "integer",
                    "description": "Number of hours for the retention of the data for this topic\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KafkaTopic resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "minInsyncReplicas": {
                        "type": "integer",
                        "description": "Minimum insync replica accepted for this topic\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the topic\n",
                        "willReplaceOnChanges": true
                    },
                    "partitions": {
                        "type": "integer",
                        "description": "Number of partitions for this topic\n",
                        "willReplaceOnChanges": true
                    },
                    "replication": {
                        "type": "integer",
                        "description": "Number of replication for this topic\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionBytes": {
                        "type": "integer",
                        "description": "Number of bytes for the retention of the data for this topic\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionHours": {
                        "type": "integer",
                        "description": "Number of hours for the retention of the data for this topic\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/logSubscription:LogSubscription": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation date of the subscription\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n"
                },
                "kind": {
                    "type": "string",
                    "description": "Log kind name of this subscription\n"
                },
                "ldpServiceName": {
                    "type": "string",
                    "description": "Name of the destination log service\n",
                    "secret": true
                },
                "operationId": {
                    "type": "string",
                    "description": "Identifier of the operation\n"
                },
                "resourceName": {
                    "type": "string",
                    "description": "Name of subscribed resource, where the logs come from\n"
                },
                "resourceType": {
                    "type": "string",
                    "description": "Type of subscribed resource, where the logs come from\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "streamId": {
                    "type": "string",
                    "description": "Id of the target Log data platform stream\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Last update date of the subscription\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "engine",
                "kind",
                "ldpServiceName",
                "operationId",
                "resourceName",
                "resourceType",
                "serviceName",
                "streamId",
                "updatedAt"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "Id of the target Log data platform stream\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName",
                "streamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogSubscription resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation date of the subscription\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "Name of the engine of the service\n",
                        "willReplaceOnChanges": true
                    },
                    "kind": {
                        "type": "string",
                        "description": "Log kind name of this subscription\n"
                    },
                    "ldpServiceName": {
                        "type": "string",
                        "description": "Name of the destination log service\n",
                        "secret": true
                    },
                    "operationId": {
                        "type": "string",
                        "description": "Identifier of the operation\n"
                    },
                    "resourceName": {
                        "type": "string",
                        "description": "Name of subscribed resource, where the logs come from\n"
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "Type of subscribed resource, where the logs come from\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Id of the target Log data platform stream\n",
                        "willReplaceOnChanges": true
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Last update date of the subscription\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/m3DbNamespace:M3DbNamespace": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the namespace\n"
                },
                "resolution": {
                    "type": "string",
                    "description": "Resolution for an aggregated namespace\n"
                },
                "retentionBlockDataExpirationDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data\n"
                },
                "retentionBlockSizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before flushing to a fileset on disk\n"
                },
                "retentionBufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to the namespace will be accepted\n"
                },
                "retentionBufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the namespace will be accepted\n"
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will retain data for the namespace\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "snapshotEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3db will create snapshot files for this namespace\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of namespace\n"
                },
                "writesToCommitLogEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3db will include writes to this namespace in the commit log\n"
                }
            },
            "required": [
                "clusterId",
                "name",
                "resolution",
                "retentionBlockSizeDuration",
                "retentionPeriodDuration",
                "serviceName",
                "snapshotEnabled",
                "type",
                "writesToCommitLogEnabled"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the namespace\n",
                    "willReplaceOnChanges": true
                },
                "resolution": {
                    "type": "string",
                    "description": "Resolution for an aggregated namespace\n"
                },
                "retentionBlockDataExpirationDuration": {
                    "type": "string",
                    "description": "Controls how long we wait before expiring stale data\n"
                },
                "retentionBlockSizeDuration": {
                    "type": "string",
                    "description": "Controls how long to keep a block in memory before flushing to a fileset on disk\n",
                    "willReplaceOnChanges": true
                },
                "retentionBufferFutureDuration": {
                    "type": "string",
                    "description": "Controls how far into the future writes to the namespace will be accepted\n"
                },
                "retentionBufferPastDuration": {
                    "type": "string",
                    "description": "Controls how far into the past writes to the namespace will be accepted\n"
                },
                "retentionPeriodDuration": {
                    "type": "string",
                    "description": "Controls the duration of time that M3DB will retain data for the namespace\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "snapshotEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3db will create snapshot files for this namespace\n"
                },
                "writesToCommitLogEnabled": {
                    "type": "boolean",
                    "description": "Defines whether M3db will include writes to this namespace in the commit log\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "resolution",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3DbNamespace resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the namespace\n",
                        "willReplaceOnChanges": true
                    },
                    "resolution": {
                        "type": "string",
                        "description": "Resolution for an aggregated namespace\n"
                    },
                    "retentionBlockDataExpirationDuration": {
                        "type": "string",
                        "description": "Controls how long we wait before expiring stale data\n"
                    },
                    "retentionBlockSizeDuration": {
                        "type": "string",
                        "description": "Controls how long to keep a block in memory before flushing to a fileset on disk\n",
                        "willReplaceOnChanges": true
                    },
                    "retentionBufferFutureDuration": {
                        "type": "string",
                        "description": "Controls how far into the future writes to the namespace will be accepted\n"
                    },
                    "retentionBufferPastDuration": {
                        "type": "string",
                        "description": "Controls how far into the past writes to the namespace will be accepted\n"
                    },
                    "retentionPeriodDuration": {
                        "type": "string",
                        "description": "Controls the duration of time that M3DB will retain data for the namespace\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "snapshotEnabled": {
                        "type": "boolean",
                        "description": "Defines whether M3db will create snapshot files for this namespace\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of namespace\n"
                    },
                    "writesToCommitLogEnabled": {
                        "type": "boolean",
                        "description": "Defines whether M3db will include writes to this namespace in the commit log\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/m3DbUser:M3DbUser": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user\n"
                },
                "group": {
                    "type": "string",
                    "description": "Group of the user\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "group": {
                    "type": "string",
                    "description": "Group of the user\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering M3DbUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "Group of the user\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/mongoDbPrometheus:MongoDbPrometheus": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "srvDomain": {
                    "type": "string",
                    "description": "Name of the srv domain endpoint\n"
                },
                "username": {
                    "type": "string",
                    "description": "Name of the user\n"
                }
            },
            "required": [
                "clusterId",
                "password",
                "serviceName",
                "srvDomain",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MongoDbPrometheus resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "srvDomain": {
                        "type": "string",
                        "description": "Name of the srv domain endpoint\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Name of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/mongoDbUser:MongoDbUser": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to with the authentication database\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to with the authentication database\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering MongoDbUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to with the authentication database\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/opensearchPattern:OpensearchPattern": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of index for this pattern\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern format\n"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "clusterId",
                "pattern",
                "serviceName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "maxIndexCount": {
                    "type": "integer",
                    "description": "Maximum number of index for this pattern\n",
                    "willReplaceOnChanges": true
                },
                "pattern": {
                    "type": "string",
                    "description": "Pattern format\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "pattern",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpensearchPattern resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "maxIndexCount": {
                        "type": "integer",
                        "description": "Maximum number of index for this pattern\n",
                        "willReplaceOnChanges": true
                    },
                    "pattern": {
                        "type": "string",
                        "description": "Pattern format\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/opensearchUser:OpensearchUser": {
            "properties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl"
                    },
                    "description": "Acls of the user\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "acls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl"
                    },
                    "description": "Acls of the user\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OpensearchUser resources.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/OpensearchUserAcl:OpensearchUserAcl"
                        },
                        "description": "Acls of the user\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/postgresSqlConnectionPool:PostgresSqlConnectionPool": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "databaseId": {
                    "type": "string",
                    "description": "Database used for the connection pool\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Connection mode to the connection pool\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection pool\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port of the connection pool\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the connection pool\n"
                },
                "sslMode": {
                    "type": "string",
                    "description": "SSL connection mode for the pool\n"
                },
                "uri": {
                    "type": "string",
                    "description": "Connection URI to the pool\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Database user authorized to connect to the pool, if none all the users are allowed\n"
                }
            },
            "required": [
                "clusterId",
                "databaseId",
                "mode",
                "name",
                "port",
                "serviceName",
                "size",
                "sslMode",
                "uri",
                "userId"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "databaseId": {
                    "type": "string",
                    "description": "Database used for the connection pool\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Connection mode to the connection pool\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the connection pool\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the connection pool\n"
                },
                "userId": {
                    "type": "string",
                    "description": "Database user authorized to connect to the pool, if none all the users are allowed\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "databaseId",
                "mode",
                "serviceName",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PostgresSqlConnectionPool resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "databaseId": {
                        "type": "string",
                        "description": "Database used for the connection pool\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Connection mode to the connection pool\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the connection pool\n",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port of the connection pool\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the connection pool\n"
                    },
                    "sslMode": {
                        "type": "string",
                        "description": "SSL connection mode for the pool\n"
                    },
                    "uri": {
                        "type": "string",
                        "description": "Connection URI to the pool\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "Database user authorized to connect to the pool, if none all the users are allowed\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/postgresSqlUser:PostgresSqlUser": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "password",
                "roles",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles the user belongs to\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PostgresSqlUser resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Roles the user belongs to\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/prometheus:Prometheus": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:CloudProjectDatabase/PrometheusTarget:PrometheusTarget"
                    },
                    "description": "List of all endpoint targets\n"
                },
                "username": {
                    "type": "string",
                    "description": "Name of the user\n"
                }
            },
            "required": [
                "clusterId",
                "engine",
                "password",
                "serviceName",
                "targets",
                "username"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Prometheus resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "engine": {
                        "type": "string",
                        "description": "Name of the engine of the service\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/PrometheusTarget:PrometheusTarget"
                        },
                        "description": "List of all endpoint targets\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Name of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/redisUser:RedisUser": {
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Categories of the user\n"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Channels of the user\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Commands of the user\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys of the user\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user\n"
                }
            },
            "required": [
                "channels",
                "clusterId",
                "createdAt",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Categories of the user\n"
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Channels of the user\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Commands of the user\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys of the user\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RedisUser resources.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Categories of the user\n"
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Channels of the user\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Commands of the user\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Keys of the user\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:CloudProjectDatabase/user:User": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Date of the creation of the user\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n"
                },
                "password": {
                    "type": "string",
                    "description": "Password of the user\n",
                    "secret": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "description": "Current status of the user\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "engine",
                "name",
                "password",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Id of the database cluster\n",
                    "willReplaceOnChanges": true
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the engine of the service\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the user\n",
                    "willReplaceOnChanges": true
                },
                "passwordReset": {
                    "type": "string",
                    "description": "Arbitrary string to change to trigger a password update\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "engine",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Id of the database cluster\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Date of the creation of the user\n"
                    },
                    "engine": {
                        "type": "string",
                        "description": "Name of the engine of the service\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the user\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "Password of the user\n",
                        "secret": true
                    },
                    "passwordReset": {
                        "type": "string",
                        "description": "Arbitrary string to change to trigger a password update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Current status of the user\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsCluster:LogsCluster": {
            "properties": {
                "archiveAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed networks for ARCHIVE flow type\n"
                },
                "clusterId": {
                    "type": "string"
                },
                "clusterType": {
                    "type": "string",
                    "description": "Cluster type\n"
                },
                "dedicatedInputPem": {
                    "type": "string",
                    "description": "PEM for dedicated inputs\n",
                    "secret": true
                },
                "directInputAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed networks for DIRECT_INPUT flow type\n"
                },
                "directInputPem": {
                    "type": "string",
                    "description": "PEM for direct inputs\n",
                    "secret": true
                },
                "hostname": {
                    "type": "string",
                    "description": "hostname\n"
                },
                "initialArchiveAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Initial allowed networks for ARCHIVE flow type\n",
                    "secret": true
                },
                "initialDirectInputAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Initial allowed networks for DIRECT_INPUT flow type\n",
                    "secret": true
                },
                "initialQueryAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Initial allowed networks for QUERY flow type\n",
                    "secret": true
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "All content generated by given service will be placed on this cluster\n"
                },
                "isUnlocked": {
                    "type": "boolean",
                    "description": "Allow given service to perform advanced operations on cluster\n"
                },
                "queryAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed networks for QUERY flow type\n"
                },
                "region": {
                    "type": "string",
                    "description": "Data center localization\n"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "clusterType",
                "dedicatedInputPem",
                "directInputPem",
                "hostname",
                "initialArchiveAllowedNetworks",
                "initialDirectInputAllowedNetworks",
                "initialQueryAllowedNetworks",
                "isDefault",
                "isUnlocked",
                "region",
                "serviceName"
            ],
            "inputProperties": {
                "archiveAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed networks for ARCHIVE flow type\n"
                },
                "clusterId": {
                    "type": "string"
                },
                "directInputAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed networks for DIRECT_INPUT flow type\n"
                },
                "queryAllowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed networks for QUERY flow type\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsCluster resources.\n",
                "properties": {
                    "archiveAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Allowed networks for ARCHIVE flow type\n"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "clusterType": {
                        "type": "string",
                        "description": "Cluster type\n"
                    },
                    "dedicatedInputPem": {
                        "type": "string",
                        "description": "PEM for dedicated inputs\n",
                        "secret": true
                    },
                    "directInputAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Allowed networks for DIRECT_INPUT flow type\n"
                    },
                    "directInputPem": {
                        "type": "string",
                        "description": "PEM for direct inputs\n",
                        "secret": true
                    },
                    "hostname": {
                        "type": "string",
                        "description": "hostname\n"
                    },
                    "initialArchiveAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Initial allowed networks for ARCHIVE flow type\n",
                        "secret": true
                    },
                    "initialDirectInputAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Initial allowed networks for DIRECT_INPUT flow type\n",
                        "secret": true
                    },
                    "initialQueryAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Initial allowed networks for QUERY flow type\n",
                        "secret": true
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "All content generated by given service will be placed on this cluster\n"
                    },
                    "isUnlocked": {
                        "type": "boolean",
                        "description": "Allow given service to perform advanced operations on cluster\n"
                    },
                    "queryAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Allowed networks for QUERY flow type\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "Data center localization\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsInput:LogsInput": {
            "properties": {
                "allowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP blocks\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Whether the workload is auto-scaled\n"
                },
                "configuration": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration",
                    "description": "Input configuration\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Input creation\n"
                },
                "currentNbInstance": {
                    "type": "integer",
                    "description": "Number of instance running (returned by the API)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Input description\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Input engine ID\n"
                },
                "exposedPort": {
                    "type": "string",
                    "description": "Port\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hostname\n"
                },
                "inputId": {
                    "type": "string",
                    "description": "Input ID\n"
                },
                "isRestartRequired": {
                    "type": "boolean",
                    "description": "Indicate if input need to be restarted\n"
                },
                "maxScaleInstance": {
                    "type": "integer",
                    "description": "Maximum number of instances in auto-scaled mode\n"
                },
                "minScaleInstance": {
                    "type": "integer",
                    "description": "Minimum number of instances in auto-scaled mode\n"
                },
                "nbInstance": {
                    "type": "integer",
                    "description": "Number of instance running\n"
                },
                "publicAddress": {
                    "type": "string",
                    "description": "Input IP address\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "sslCertificate": {
                    "type": "string",
                    "description": "Input SSL certificate\n",
                    "secret": true
                },
                "status": {
                    "type": "string",
                    "description": "init: configuration required, pending: ready to start, running: available\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Associated Graylog stream\n"
                },
                "title": {
                    "type": "string",
                    "description": "Input title\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Input last update\n"
                }
            },
            "required": [
                "allowedNetworks",
                "configuration",
                "createdAt",
                "currentNbInstance",
                "description",
                "engineId",
                "exposedPort",
                "hostname",
                "inputId",
                "isRestartRequired",
                "publicAddress",
                "serviceName",
                "sslCertificate",
                "status",
                "streamId",
                "title",
                "updatedAt"
            ],
            "inputProperties": {
                "allowedNetworks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "IP blocks\n"
                },
                "autoscale": {
                    "type": "boolean",
                    "description": "Whether the workload is auto-scaled\n"
                },
                "configuration": {
                    "$ref": "#/types/ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration",
                    "description": "Input configuration\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "Input description\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Input engine ID\n"
                },
                "exposedPort": {
                    "type": "string",
                    "description": "Port\n"
                },
                "maxScaleInstance": {
                    "type": "integer",
                    "description": "Maximum number of instances in auto-scaled mode\n"
                },
                "minScaleInstance": {
                    "type": "integer",
                    "description": "Minimum number of instances in auto-scaled mode\n"
                },
                "nbInstance": {
                    "type": "integer",
                    "description": "Number of instance running\n"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "Associated Graylog stream\n"
                },
                "title": {
                    "type": "string",
                    "description": "Input title\n"
                }
            },
            "requiredInputs": [
                "configuration",
                "description",
                "engineId",
                "serviceName",
                "streamId",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsInput resources.\n",
                "properties": {
                    "allowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "IP blocks\n"
                    },
                    "autoscale": {
                        "type": "boolean",
                        "description": "Whether the workload is auto-scaled\n"
                    },
                    "configuration": {
                        "$ref": "#/types/ovh:Dbaas/LogsInputConfiguration:LogsInputConfiguration",
                        "description": "Input configuration\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Input creation\n"
                    },
                    "currentNbInstance": {
                        "type": "integer",
                        "description": "Number of instance running (returned by the API)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Input description\n"
                    },
                    "engineId": {
                        "type": "string",
                        "description": "Input engine ID\n"
                    },
                    "exposedPort": {
                        "type": "string",
                        "description": "Port\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Hostname\n"
                    },
                    "inputId": {
                        "type": "string",
                        "description": "Input ID\n"
                    },
                    "isRestartRequired": {
                        "type": "boolean",
                        "description": "Indicate if input need to be restarted\n"
                    },
                    "maxScaleInstance": {
                        "type": "integer",
                        "description": "Maximum number of instances in auto-scaled mode\n"
                    },
                    "minScaleInstance": {
                        "type": "integer",
                        "description": "Minimum number of instances in auto-scaled mode\n"
                    },
                    "nbInstance": {
                        "type": "integer",
                        "description": "Number of instance running\n"
                    },
                    "publicAddress": {
                        "type": "string",
                        "description": "Input IP address\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "sslCertificate": {
                        "type": "string",
                        "description": "Input SSL certificate\n",
                        "secret": true
                    },
                    "status": {
                        "type": "string",
                        "description": "init: configuration required, pending: ready to start, running: available\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Associated Graylog stream\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Input title\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Input last update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsOutputGraylogStream:LogsOutputGraylogStream": {
            "properties": {
                "canAlert": {
                    "type": "boolean",
                    "description": "Indicates if the current user can create alert on the stream\n"
                },
                "coldStorageCompression": {
                    "type": "string",
                    "description": "Cold storage compression method\n"
                },
                "coldStorageContent": {
                    "type": "string",
                    "description": "ColdStorage content\n"
                },
                "coldStorageEnabled": {
                    "type": "boolean",
                    "description": "Is Cold storage enabled?\n"
                },
                "coldStorageNotifyEnabled": {
                    "type": "boolean",
                    "description": "Notify on new Cold storage archive\n"
                },
                "coldStorageRetention": {
                    "type": "integer",
                    "description": "Cold storage retention in year\n"
                },
                "coldStorageTarget": {
                    "type": "string",
                    "description": "ColdStorage destination\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Stream creation\n"
                },
                "description": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "indexingEnabled": {
                    "type": "boolean",
                    "description": "Enable ES indexing\n"
                },
                "indexingMaxSize": {
                    "type": "integer",
                    "description": "Maximum indexing size (in GB)\n"
                },
                "indexingNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to edit entry\n"
                },
                "isShareable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to share entry\n"
                },
                "nbAlertCondition": {
                    "type": "integer",
                    "description": "Number of alert condition\n"
                },
                "nbArchive": {
                    "type": "integer",
                    "description": "Number of coldstored archives\n"
                },
                "parentStreamId": {
                    "type": "string",
                    "description": "Parent stream ID\n"
                },
                "pauseIndexingOnMaxSize": {
                    "type": "boolean",
                    "description": "If set, pause indexing when maximum size is reach\n"
                },
                "retentionId": {
                    "type": "string",
                    "description": "Retention ID\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Stream ID\n"
                },
                "title": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Stream last update\n"
                },
                "webSocketEnabled": {
                    "type": "boolean",
                    "description": "Enable Websocket\n"
                },
                "writeToken": {
                    "type": "string",
                    "description": "Write token of the stream\n",
                    "secret": true
                }
            },
            "required": [
                "canAlert",
                "coldStorageCompression",
                "coldStorageContent",
                "coldStorageEnabled",
                "coldStorageNotifyEnabled",
                "coldStorageRetention",
                "coldStorageTarget",
                "createdAt",
                "description",
                "indexingEnabled",
                "indexingMaxSize",
                "indexingNotifyEnabled",
                "isEditable",
                "isShareable",
                "nbAlertCondition",
                "nbArchive",
                "pauseIndexingOnMaxSize",
                "retentionId",
                "serviceName",
                "streamId",
                "title",
                "updatedAt",
                "webSocketEnabled",
                "writeToken"
            ],
            "inputProperties": {
                "coldStorageCompression": {
                    "type": "string",
                    "description": "Cold storage compression method\n"
                },
                "coldStorageContent": {
                    "type": "string",
                    "description": "ColdStorage content\n"
                },
                "coldStorageEnabled": {
                    "type": "boolean",
                    "description": "Is Cold storage enabled?\n"
                },
                "coldStorageNotifyEnabled": {
                    "type": "boolean",
                    "description": "Notify on new Cold storage archive\n"
                },
                "coldStorageRetention": {
                    "type": "integer",
                    "description": "Cold storage retention in year\n"
                },
                "coldStorageTarget": {
                    "type": "string",
                    "description": "ColdStorage destination\n"
                },
                "description": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "indexingEnabled": {
                    "type": "boolean",
                    "description": "Enable ES indexing\n"
                },
                "indexingMaxSize": {
                    "type": "integer",
                    "description": "Maximum indexing size (in GB)\n"
                },
                "indexingNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                },
                "parentStreamId": {
                    "type": "string",
                    "description": "Parent stream ID\n",
                    "willReplaceOnChanges": true
                },
                "pauseIndexingOnMaxSize": {
                    "type": "boolean",
                    "description": "If set, pause indexing when maximum size is reach\n"
                },
                "retentionId": {
                    "type": "string",
                    "description": "Retention ID\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "title": {
                    "type": "string",
                    "description": "Stream description\n"
                },
                "webSocketEnabled": {
                    "type": "boolean",
                    "description": "Enable Websocket\n"
                }
            },
            "requiredInputs": [
                "description",
                "serviceName",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsOutputGraylogStream resources.\n",
                "properties": {
                    "canAlert": {
                        "type": "boolean",
                        "description": "Indicates if the current user can create alert on the stream\n"
                    },
                    "coldStorageCompression": {
                        "type": "string",
                        "description": "Cold storage compression method\n"
                    },
                    "coldStorageContent": {
                        "type": "string",
                        "description": "ColdStorage content\n"
                    },
                    "coldStorageEnabled": {
                        "type": "boolean",
                        "description": "Is Cold storage enabled?\n"
                    },
                    "coldStorageNotifyEnabled": {
                        "type": "boolean",
                        "description": "Notify on new Cold storage archive\n"
                    },
                    "coldStorageRetention": {
                        "type": "integer",
                        "description": "Cold storage retention in year\n"
                    },
                    "coldStorageTarget": {
                        "type": "string",
                        "description": "ColdStorage destination\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Stream creation\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "indexingEnabled": {
                        "type": "boolean",
                        "description": "Enable ES indexing\n"
                    },
                    "indexingMaxSize": {
                        "type": "integer",
                        "description": "Maximum indexing size (in GB)\n"
                    },
                    "indexingNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of the maximum configured setting\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "isShareable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to share entry\n"
                    },
                    "nbAlertCondition": {
                        "type": "integer",
                        "description": "Number of alert condition\n"
                    },
                    "nbArchive": {
                        "type": "integer",
                        "description": "Number of coldstored archives\n"
                    },
                    "parentStreamId": {
                        "type": "string",
                        "description": "Parent stream ID\n",
                        "willReplaceOnChanges": true
                    },
                    "pauseIndexingOnMaxSize": {
                        "type": "boolean",
                        "description": "If set, pause indexing when maximum size is reach\n"
                    },
                    "retentionId": {
                        "type": "string",
                        "description": "Retention ID\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Stream ID\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Stream description\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Stream last update\n"
                    },
                    "webSocketEnabled": {
                        "type": "boolean",
                        "description": "Enable Websocket\n"
                    },
                    "writeToken": {
                        "type": "string",
                        "description": "Write token of the stream\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsOutputOpenSearchAlias:LogsOutputOpenSearchAlias": {
            "properties": {
                "aliasId": {
                    "type": "string",
                    "description": "Alias used\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Operation creation\n"
                },
                "currentSize": {
                    "type": "integer",
                    "description": "Current alias size (in bytes)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Alias description\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indexes attached to alias\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to edit entry\n"
                },
                "name": {
                    "type": "string",
                    "description": "Alias name\n"
                },
                "nbIndex": {
                    "type": "integer",
                    "description": "Number of index\n"
                },
                "nbStream": {
                    "type": "integer",
                    "description": "Number of shard\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Streams attached to alias\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "Alias suffix\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Operation last update\n"
                }
            },
            "required": [
                "aliasId",
                "createdAt",
                "currentSize",
                "description",
                "indexes",
                "isEditable",
                "name",
                "nbIndex",
                "nbStream",
                "serviceName",
                "streams",
                "suffix",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Alias description\n"
                },
                "indexes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Indexes attached to alias\n"
                },
                "nbIndex": {
                    "type": "integer",
                    "description": "Number of index\n"
                },
                "nbStream": {
                    "type": "integer",
                    "description": "Number of shard\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "streams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Streams attached to alias\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "Alias suffix\n"
                }
            },
            "requiredInputs": [
                "description",
                "serviceName",
                "suffix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsOutputOpenSearchAlias resources.\n",
                "properties": {
                    "aliasId": {
                        "type": "string",
                        "description": "Alias used\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Operation creation\n"
                    },
                    "currentSize": {
                        "type": "integer",
                        "description": "Current alias size (in bytes)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Alias description\n"
                    },
                    "indexes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Indexes attached to alias\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Alias name\n"
                    },
                    "nbIndex": {
                        "type": "integer",
                        "description": "Number of index\n"
                    },
                    "nbStream": {
                        "type": "integer",
                        "description": "Number of shard\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "streams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Streams attached to alias\n"
                    },
                    "suffix": {
                        "type": "string",
                        "description": "Alias suffix\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Operation last update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsOutputOpenSearchIndex:LogsOutputOpenSearchIndex": {
            "properties": {
                "alertNotifyEnabled": {
                    "type": "boolean",
                    "description": "If set, notify when size is near 80, 90 or 100 % of its maximum capacity\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Operation creation\n"
                },
                "currentSize": {
                    "type": "integer",
                    "description": "Current Index size (in bytes)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Index description\n"
                },
                "indexId": {
                    "type": "string",
                    "description": "Index ID\n"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Indicates if you are allowed to edit entry\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "Maximum index size (in bytes)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Index name\n"
                },
                "nbShard": {
                    "type": "integer",
                    "description": "Number of shard\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "Index suffix\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Operation last update\n"
                }
            },
            "required": [
                "alertNotifyEnabled",
                "createdAt",
                "currentSize",
                "description",
                "indexId",
                "isEditable",
                "maxSize",
                "name",
                "nbShard",
                "serviceName",
                "suffix",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Index description\n"
                },
                "nbShard": {
                    "type": "integer",
                    "description": "Number of shard\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "suffix": {
                    "type": "string",
                    "description": "Index suffix\n"
                }
            },
            "requiredInputs": [
                "description",
                "nbShard",
                "serviceName",
                "suffix"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsOutputOpenSearchIndex resources.\n",
                "properties": {
                    "alertNotifyEnabled": {
                        "type": "boolean",
                        "description": "If set, notify when size is near 80, 90 or 100 % of its maximum capacity\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Operation creation\n"
                    },
                    "currentSize": {
                        "type": "integer",
                        "description": "Current Index size (in bytes)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Index description\n"
                    },
                    "indexId": {
                        "type": "string",
                        "description": "Index ID\n"
                    },
                    "isEditable": {
                        "type": "boolean",
                        "description": "Indicates if you are allowed to edit entry\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "Maximum index size (in bytes)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Index name\n"
                    },
                    "nbShard": {
                        "type": "integer",
                        "description": "Number of shard\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "suffix": {
                        "type": "string",
                        "description": "Index suffix\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Operation last update\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsRole:LogsRole": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Role creation date\n"
                },
                "description": {
                    "type": "string",
                    "description": "The role description\n"
                },
                "name": {
                    "type": "string",
                    "description": "The role name\n"
                },
                "nbMember": {
                    "type": "integer",
                    "description": "Number of members in the role\n"
                },
                "nbPermission": {
                    "type": "integer",
                    "description": "Number of permissions assigned to the role\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "Role identifier\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Role last update date\n"
                }
            },
            "required": [
                "createdAt",
                "description",
                "name",
                "nbMember",
                "nbPermission",
                "roleId",
                "serviceName",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The role description\n"
                },
                "name": {
                    "type": "string",
                    "description": "The role name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The service name\n"
                }
            },
            "requiredInputs": [
                "description",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsRole resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "Role creation date\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The role description\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The role name\n"
                    },
                    "nbMember": {
                        "type": "integer",
                        "description": "Number of members in the role\n"
                    },
                    "nbPermission": {
                        "type": "integer",
                        "description": "Number of permissions assigned to the role\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "Role identifier\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The service name\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Role last update date\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsRolePermissionStream:LogsRolePermissionStream": {
            "properties": {
                "permissionId": {
                    "type": "string",
                    "description": "Permission ID\n"
                },
                "permissionType": {
                    "type": "string",
                    "description": "Permission type (e.g., READ_ONLY)\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "Role ID to which the permission will be appended\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "streamId": {
                    "type": "string",
                    "description": "Graylog stream ID to be associated as a permission\n"
                }
            },
            "required": [
                "permissionId",
                "permissionType",
                "roleId",
                "serviceName",
                "streamId"
            ],
            "inputProperties": {
                "roleId": {
                    "type": "string",
                    "description": "Role ID to which the permission will be appended\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n",
                    "willReplaceOnChanges": true
                },
                "streamId": {
                    "type": "string",
                    "description": "Graylog stream ID to be associated as a permission\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "roleId",
                "serviceName",
                "streamId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsRolePermissionStream resources.\n",
                "properties": {
                    "permissionId": {
                        "type": "string",
                        "description": "Permission ID\n"
                    },
                    "permissionType": {
                        "type": "string",
                        "description": "Permission type (e.g., READ_ONLY)\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "Role ID to which the permission will be appended\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n",
                        "willReplaceOnChanges": true
                    },
                    "streamId": {
                        "type": "string",
                        "description": "Graylog stream ID to be associated as a permission\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dbaas/logsToken:LogsToken": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Token creation\n"
                },
                "name": {
                    "type": "string",
                    "description": "Token name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                },
                "tokenId": {
                    "type": "string",
                    "description": "Token used\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Token last update\n"
                },
                "value": {
                    "type": "string",
                    "description": "Token value\n",
                    "secret": true
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "name",
                "serviceName",
                "tokenId",
                "updatedAt",
                "value"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "Cluster ID\n"
                },
                "name": {
                    "type": "string",
                    "description": "Token name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name\n"
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogsToken resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "Cluster ID\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Token creation\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Token name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name\n"
                    },
                    "tokenId": {
                        "type": "string",
                        "description": "Token used\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "Token last update\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "Token value\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/cephAcl:CephAcl": {
            "properties": {
                "family": {
                    "type": "string"
                },
                "netmask": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "family",
                "netmask",
                "network",
                "serviceName"
            ],
            "inputProperties": {
                "netmask": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "network": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "netmask",
                "network",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CephAcl resources.\n",
                "properties": {
                    "family": {
                        "type": "string"
                    },
                    "netmask": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "network": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/nasHAPartition:NasHAPartition": {
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "usedBySnapshots": {
                    "type": "integer"
                }
            },
            "required": [
                "capacity",
                "name",
                "protocol",
                "serviceName",
                "size",
                "usedBySnapshots"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "protocol": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "protocol",
                "serviceName",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NasHAPartition resources.\n",
                "properties": {
                    "capacity": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "protocol": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer"
                    },
                    "usedBySnapshots": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/nasHAPartitionAccess:NasHAPartitionAccess": {
            "properties": {
                "aclDescription": {
                    "type": "string",
                    "description": "A brief description of the ACL\n"
                },
                "ip": {
                    "type": "string"
                },
                "partitionName": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "ip",
                "partitionName",
                "serviceName"
            ],
            "inputProperties": {
                "aclDescription": {
                    "type": "string",
                    "description": "A brief description of the ACL\n",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "partitionName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ip",
                "partitionName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NasHAPartitionAccess resources.\n",
                "properties": {
                    "aclDescription": {
                        "type": "string",
                        "description": "A brief description of the ACL\n",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "partitionName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/nasHAPartitionSnapshot:NasHAPartitionSnapshot": {
            "properties": {
                "partitionName": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "partitionName",
                "serviceName",
                "type"
            ],
            "inputProperties": {
                "partitionName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "partitionName",
                "serviceName",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NasHAPartitionSnapshot resources.\n",
                "properties": {
                    "partitionName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/server:Server": {
            "properties": {
                "availabilityZone": {
                    "type": "string",
                    "description": "dedicated AZ localisation\n"
                },
                "bootId": {
                    "type": "number"
                },
                "bootScript": {
                    "type": "string",
                    "description": "Ipxe script served on boot\n"
                },
                "commercialRange": {
                    "type": "string",
                    "description": "dedicater server commercial range\n"
                },
                "customizations": {
                    "$ref": "#/types/ovh:Dedicated/ServerCustomizations:ServerCustomizations",
                    "description": "OS reinstallation customizations\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "dedicated datacenter localisation\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of your dedicated server\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "Path of the EFI bootloader served on boot\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Dedicated/ServerIam:ServerIam",
                    "description": "IAM resource metadata\n"
                },
                "ip": {
                    "type": "string",
                    "description": "dedicated server ip\n"
                },
                "linkSpeed": {
                    "type": "number"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "name": {
                    "type": "string",
                    "description": "dedicated server name\n"
                },
                "newUpgradeSystem": {
                    "type": "boolean"
                },
                "noIntervention": {
                    "type": "boolean",
                    "description": "Prevent datacenter intervention\n"
                },
                "order": {
                    "$ref": "#/types/ovh:Dedicated/ServerOrder:ServerOrder",
                    "description": "Details about an Order\n"
                },
                "os": {
                    "type": "string",
                    "description": "Operating system\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlanOption:ServerPlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlan:ServerPlan"
                    }
                },
                "powerState": {
                    "type": "string",
                    "description": "Power state of the server\n"
                },
                "professionalUse": {
                    "type": "boolean",
                    "description": "Does this server have professional use option\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary properties to pass to cloud-init's config drive datasource\n"
                },
                "rack": {
                    "type": "string"
                },
                "region": {
                    "type": "string",
                    "description": "dedicated region localisation\n"
                },
                "rescueMail": {
                    "type": "string",
                    "description": "Custom email used to receive rescue credentials\n"
                },
                "rescueSshKey": {
                    "type": "string",
                    "description": "Public SSH Key used in the rescue mode\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "dedicated server reverse\n"
                },
                "rootDevice": {
                    "type": "string"
                },
                "serverId": {
                    "type": "number",
                    "description": "Server id\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server\n"
                },
                "state": {
                    "type": "string",
                    "description": "All states a Dedicated can be in\n"
                },
                "storages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerStorage:ServerStorage"
                    },
                    "description": "OS reinstallation storage configurations\n"
                },
                "supportLevel": {
                    "type": "string",
                    "description": "Dedicated server support level\n"
                }
            },
            "required": [
                "availabilityZone",
                "bootId",
                "bootScript",
                "commercialRange",
                "datacenter",
                "displayName",
                "efiBootloaderPath",
                "iam",
                "ip",
                "linkSpeed",
                "monitoring",
                "name",
                "newUpgradeSystem",
                "noIntervention",
                "order",
                "os",
                "plans",
                "planOptions",
                "powerState",
                "professionalUse",
                "rack",
                "region",
                "rescueMail",
                "rescueSshKey",
                "reverse",
                "rootDevice",
                "serverId",
                "serviceName",
                "state",
                "supportLevel"
            ],
            "inputProperties": {
                "bootId": {
                    "type": "number"
                },
                "bootScript": {
                    "type": "string",
                    "description": "Ipxe script served on boot\n"
                },
                "customizations": {
                    "$ref": "#/types/ovh:Dedicated/ServerCustomizations:ServerCustomizations",
                    "description": "OS reinstallation customizations\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of your dedicated server\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "Path of the EFI bootloader served on boot\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "noIntervention": {
                    "type": "boolean",
                    "description": "Prevent datacenter intervention\n"
                },
                "os": {
                    "type": "string",
                    "description": "Operating system\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlanOption:ServerPlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerPlan:ServerPlan"
                    }
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary properties to pass to cloud-init's config drive datasource\n"
                },
                "rescueMail": {
                    "type": "string",
                    "description": "Custom email used to receive rescue credentials\n"
                },
                "rescueSshKey": {
                    "type": "string",
                    "description": "Public SSH Key used in the rescue mode\n"
                },
                "rootDevice": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "All states a Dedicated can be in\n"
                },
                "storages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerStorage:ServerStorage"
                    },
                    "description": "OS reinstallation storage configurations\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Server resources.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "description": "dedicated AZ localisation\n"
                    },
                    "bootId": {
                        "type": "number"
                    },
                    "bootScript": {
                        "type": "string",
                        "description": "Ipxe script served on boot\n"
                    },
                    "commercialRange": {
                        "type": "string",
                        "description": "dedicater server commercial range\n"
                    },
                    "customizations": {
                        "$ref": "#/types/ovh:Dedicated/ServerCustomizations:ServerCustomizations",
                        "description": "OS reinstallation customizations\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "dedicated datacenter localisation\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of your dedicated server\n"
                    },
                    "efiBootloaderPath": {
                        "type": "string",
                        "description": "Path of the EFI bootloader served on boot\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Dedicated/ServerIam:ServerIam",
                        "description": "IAM resource metadata\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "dedicated server ip\n"
                    },
                    "linkSpeed": {
                        "type": "number"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "dedicated server name\n"
                    },
                    "newUpgradeSystem": {
                        "type": "boolean"
                    },
                    "noIntervention": {
                        "type": "boolean",
                        "description": "Prevent datacenter intervention\n"
                    },
                    "order": {
                        "$ref": "#/types/ovh:Dedicated/ServerOrder:ServerOrder",
                        "description": "Details about an Order\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "Operating system\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVH subsidiaries\n"
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerPlanOption:ServerPlanOption"
                        }
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerPlan:ServerPlan"
                        }
                    },
                    "powerState": {
                        "type": "string",
                        "description": "Power state of the server\n"
                    },
                    "professionalUse": {
                        "type": "boolean",
                        "description": "Does this server have professional use option\n"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Arbitrary properties to pass to cloud-init's config drive datasource\n"
                    },
                    "rack": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string",
                        "description": "dedicated region localisation\n"
                    },
                    "rescueMail": {
                        "type": "string",
                        "description": "Custom email used to receive rescue credentials\n"
                    },
                    "rescueSshKey": {
                        "type": "string",
                        "description": "Public SSH Key used in the rescue mode\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "dedicated server reverse\n"
                    },
                    "rootDevice": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "number",
                        "description": "Server id\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "All states a Dedicated can be in\n"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerStorage:ServerStorage"
                        },
                        "description": "OS reinstallation storage configurations\n"
                    },
                    "supportLevel": {
                        "type": "string",
                        "description": "Dedicated server support level\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverNetworking:ServerNetworking": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Operation description\n"
                },
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface"
                    },
                    "description": "Interface or interfaces aggregation.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n"
                },
                "status": {
                    "type": "string",
                    "description": "Operation status\n"
                }
            },
            "required": [
                "description",
                "interfaces",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface"
                    },
                    "description": "Interface or interfaces aggregation.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "interfaces",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerNetworking resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Operation description\n"
                    },
                    "interfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerNetworkingInterface:ServerNetworkingInterface"
                        },
                        "description": "Interface or interfaces aggregation.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Operation status\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverRebootTask:ServerRebootTask": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "Details of this task\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name\n"
                },
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Change this value to recreate a reboot task.\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task Creation date\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "keepers",
                "lastUpdate",
                "serviceName",
                "startDate",
                "status"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Change this value to recreate a reboot task.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerRebootTask resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "Details of this task\n"
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name\n"
                    },
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Change this value to recreate a reboot task.\n",
                        "willReplaceOnChanges": true
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task Creation date\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverReinstallTask:ServerReinstallTask": {
            "properties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase\n"
                },
                "comment": {
                    "type": "string",
                    "description": "Details of this task\n"
                },
                "customizations": {
                    "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskCustomizations:ServerReinstallTaskCustomizations",
                    "description": "OS reinstallation customizations\n"
                },
                "doneDate": {
                    "type": "string",
                    "description": "Completion date\n"
                },
                "function": {
                    "type": "string",
                    "description": "Function name\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update\n"
                },
                "os": {
                    "type": "string",
                    "description": "Operating System name\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary properties to pass to cloud-init's config drive datasource\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Task Creation date\n"
                },
                "status": {
                    "type": "string",
                    "description": "Task status\n"
                },
                "storages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStorage:ServerReinstallTaskStorage"
                    },
                    "description": "Storage configuration\n"
                }
            },
            "required": [
                "comment",
                "doneDate",
                "function",
                "lastUpdate",
                "os",
                "serviceName",
                "startDate",
                "status"
            ],
            "inputProperties": {
                "bootidOnDestroy": {
                    "type": "integer",
                    "description": "If set, reboot the server on the specified boot id during destroy phase\n"
                },
                "customizations": {
                    "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskCustomizations:ServerReinstallTaskCustomizations",
                    "description": "OS reinstallation customizations\n",
                    "willReplaceOnChanges": true
                },
                "os": {
                    "type": "string",
                    "description": "Operating System name\n",
                    "willReplaceOnChanges": true
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Arbitrary properties to pass to cloud-init's config drive datasource\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n",
                    "willReplaceOnChanges": true
                },
                "storages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStorage:ServerReinstallTaskStorage"
                    },
                    "description": "Storage configuration\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "os",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerReinstallTask resources.\n",
                "properties": {
                    "bootidOnDestroy": {
                        "type": "integer",
                        "description": "If set, reboot the server on the specified boot id during destroy phase\n"
                    },
                    "comment": {
                        "type": "string",
                        "description": "Details of this task\n"
                    },
                    "customizations": {
                        "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskCustomizations:ServerReinstallTaskCustomizations",
                        "description": "OS reinstallation customizations\n",
                        "willReplaceOnChanges": true
                    },
                    "doneDate": {
                        "type": "string",
                        "description": "Completion date\n"
                    },
                    "function": {
                        "type": "string",
                        "description": "Function name\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update\n"
                    },
                    "os": {
                        "type": "string",
                        "description": "Operating System name\n",
                        "willReplaceOnChanges": true
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Arbitrary properties to pass to cloud-init's config drive datasource\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n",
                        "willReplaceOnChanges": true
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Task Creation date\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Task status\n"
                    },
                    "storages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/ServerReinstallTaskStorage:ServerReinstallTaskStorage"
                        },
                        "description": "Storage configuration\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Dedicated/serverUpdate:ServerUpdate": {
            "properties": {
                "bootId": {
                    "type": "integer",
                    "description": "The boot id of your dedicated server.\n"
                },
                "bootScript": {
                    "type": "string",
                    "description": "The boot script of your dedicated server.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the dedicated server\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "The path of the EFI bootloader.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "required": [
                "bootId",
                "displayName",
                "efiBootloaderPath",
                "monitoring",
                "serviceName",
                "state"
            ],
            "inputProperties": {
                "bootId": {
                    "type": "integer",
                    "description": "The boot id of your dedicated server.\n"
                },
                "bootScript": {
                    "type": "string",
                    "description": "The boot script of your dedicated server.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Display name of the dedicated server\n"
                },
                "efiBootloaderPath": {
                    "type": "string",
                    "description": "The path of the EFI bootloader.\n"
                },
                "monitoring": {
                    "type": "boolean",
                    "description": "Icmp monitoring state\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your dedicated server.\n"
                },
                "state": {
                    "type": "string",
                    "description": "error, hacked, hackedBlocked, ok\n"
                }
            },
            "requiredInputs": [
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServerUpdate resources.\n",
                "properties": {
                    "bootId": {
                        "type": "integer",
                        "description": "The boot id of your dedicated server.\n"
                    },
                    "bootScript": {
                        "type": "string",
                        "description": "The boot script of your dedicated server.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Display name of the dedicated server\n"
                    },
                    "efiBootloaderPath": {
                        "type": "string",
                        "description": "The path of the EFI bootloader.\n"
                    },
                    "monitoring": {
                        "type": "boolean",
                        "description": "Icmp monitoring state\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your dedicated server.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "error, hacked, hackedBlocked, ok\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/dsRecords:DsRecords": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "dsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/DsRecordsDsRecord:DsRecordsDsRecord"
                    },
                    "description": "DS Records for the domain\n"
                }
            },
            "required": [
                "domain",
                "dsRecords"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "Domain name\n",
                    "willReplaceOnChanges": true
                },
                "dsRecords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/DsRecordsDsRecord:DsRecordsDsRecord"
                    },
                    "description": "DS Records for the domain\n"
                }
            },
            "requiredInputs": [
                "domain",
                "dsRecords"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DsRecords resources.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "Domain name\n",
                        "willReplaceOnChanges": true
                    },
                    "dsRecords": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/DsRecordsDsRecord:DsRecordsDsRecord"
                        },
                        "description": "DS Records for the domain\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/name:Name": {
            "properties": {
                "checksum": {
                    "type": "string",
                    "description": "Computed hash used to control concurrent modification requests. Here, it represents the current target specification\nvalue\n"
                },
                "currentState": {
                    "$ref": "#/types/ovh:Domain/NameCurrentState:NameCurrentState",
                    "description": "Current state of the domain name\n"
                },
                "currentTasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameCurrentTask:NameCurrentTask"
                    },
                    "description": "Ongoing asynchronous tasks related to the domain name resource\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Domain/NameIam:NameIam",
                    "description": "IAM resource metadata\n"
                },
                "order": {
                    "$ref": "#/types/ovh:Domain/NameOrder:NameOrder",
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlanOption:NamePlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlan:NamePlan"
                    }
                },
                "resourceStatus": {
                    "type": "string",
                    "description": "Reflects the readiness of the domain name resource. A new target specification request will be accepted only in `READY`,\n`UPDATING` or `ERROR` status\n"
                },
                "targetSpec": {
                    "$ref": "#/types/ovh:Domain/NameTargetSpec:NameTargetSpec",
                    "description": "Latest target specification of the domain name resource.\n"
                }
            },
            "required": [
                "checksum",
                "currentState",
                "currentTasks",
                "domainName",
                "iam",
                "order",
                "plans",
                "planOptions",
                "resourceStatus",
                "targetSpec"
            ],
            "inputProperties": {
                "checksum": {
                    "type": "string",
                    "description": "Computed hash used to control concurrent modification requests. Here, it represents the current target specification\nvalue\n"
                },
                "domainName": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlanOption:NamePlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NamePlan:NamePlan"
                    }
                },
                "targetSpec": {
                    "$ref": "#/types/ovh:Domain/NameTargetSpec:NameTargetSpec",
                    "description": "Latest target specification of the domain name resource.\n"
                }
            },
            "requiredInputs": [
                "domainName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Name resources.\n",
                "properties": {
                    "checksum": {
                        "type": "string",
                        "description": "Computed hash used to control concurrent modification requests. Here, it represents the current target specification\nvalue\n"
                    },
                    "currentState": {
                        "$ref": "#/types/ovh:Domain/NameCurrentState:NameCurrentState",
                        "description": "Current state of the domain name\n"
                    },
                    "currentTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/NameCurrentTask:NameCurrentTask"
                        },
                        "description": "Ongoing asynchronous tasks related to the domain name resource\n"
                    },
                    "domainName": {
                        "type": "string",
                        "description": "Domain name\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Domain/NameIam:NameIam",
                        "description": "IAM resource metadata\n"
                    },
                    "order": {
                        "$ref": "#/types/ovh:Domain/NameOrder:NameOrder",
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVH subsidiaries\n"
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/NamePlanOption:NamePlanOption"
                        }
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/NamePlan:NamePlan"
                        }
                    },
                    "resourceStatus": {
                        "type": "string",
                        "description": "Reflects the readiness of the domain name resource. A new target specification request will be accepted only in `READY`,\n`UPDATING` or `ERROR` status\n"
                    },
                    "targetSpec": {
                        "$ref": "#/types/ovh:Domain/NameTargetSpec:NameTargetSpec",
                        "description": "Latest target specification of the domain name resource.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/nameServers:NameServers": {
            "properties": {
                "domain": {
                    "type": "string",
                    "description": "Domain name\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameServersServer:NameServersServer"
                    },
                    "description": "Name servers for the domain\n"
                }
            },
            "required": [
                "domain",
                "servers"
            ],
            "inputProperties": {
                "domain": {
                    "type": "string",
                    "description": "Domain name\n",
                    "willReplaceOnChanges": true
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/NameServersServer:NameServersServer"
                    },
                    "description": "Name servers for the domain\n"
                }
            },
            "requiredInputs": [
                "domain",
                "servers"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NameServers resources.\n",
                "properties": {
                    "domain": {
                        "type": "string",
                        "description": "Domain name\n",
                        "willReplaceOnChanges": true
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/NameServersServer:NameServersServer"
                        },
                        "description": "Name servers for the domain\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zone:Zone": {
            "properties": {
                "ZoneURN": {
                    "type": "string"
                },
                "dnssecSupported": {
                    "type": "boolean",
                    "description": "Is DNSSEC supported by this zone\n"
                },
                "hasDnsAnycast": {
                    "type": "boolean",
                    "description": "hasDnsAnycast flag of the DNS zone\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update date of the DNS zone\n"
                },
                "name": {
                    "type": "string",
                    "description": "Zone name\n"
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name servers that host the DNS zone\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZoneOrder:ZoneOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:Domain/ZonePlan:ZonePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanOption:ZonePlanOption"
                    },
                    "description": "Product Plan to order\n"
                }
            },
            "required": [
                "dnssecSupported",
                "hasDnsAnycast",
                "lastUpdate",
                "name",
                "nameServers",
                "orders",
                "ovhSubsidiary",
                "plan",
                "ZoneURN"
            ],
            "inputProperties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZoneOrder:ZoneOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Domain/ZonePlan:ZonePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Domain/ZonePlanOption:ZonePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Zone resources.\n",
                "properties": {
                    "ZoneURN": {
                        "type": "string"
                    },
                    "dnssecSupported": {
                        "type": "boolean",
                        "description": "Is DNSSEC supported by this zone\n"
                    },
                    "hasDnsAnycast": {
                        "type": "boolean",
                        "description": "hasDnsAnycast flag of the DNS zone\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update date of the DNS zone\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Zone name\n"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name servers that host the DNS zone\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/ZoneOrder:ZoneOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Domain/ZonePlan:ZonePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Domain/ZonePlanOption:ZonePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneDNSSec:ZoneDNSSec": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "DNSSEC Status\n"
                },
                "zoneName": {
                    "type": "string",
                    "description": "The internal name of your zone\n"
                }
            },
            "required": [
                "status",
                "zoneName"
            ],
            "inputProperties": {
                "zoneName": {
                    "type": "string",
                    "description": "The internal name of your zone\n"
                }
            },
            "requiredInputs": [
                "zoneName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneDNSSec resources.\n",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "DNSSEC Status\n"
                    },
                    "zoneName": {
                        "type": "string",
                        "description": "The internal name of your zone\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneImport:ZoneImport": {
            "properties": {
                "exportedContent": {
                    "type": "string",
                    "description": "Zone file exported from the API\n"
                },
                "zoneFile": {
                    "type": "string",
                    "description": "Zone file that will be imported\n"
                },
                "zoneName": {
                    "type": "string",
                    "description": "Zone name\n"
                }
            },
            "required": [
                "exportedContent",
                "zoneFile",
                "zoneName"
            ],
            "inputProperties": {
                "zoneFile": {
                    "type": "string",
                    "description": "Zone file that will be imported\n"
                },
                "zoneName": {
                    "type": "string",
                    "description": "Zone name\n"
                }
            },
            "requiredInputs": [
                "zoneFile",
                "zoneName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneImport resources.\n",
                "properties": {
                    "exportedContent": {
                        "type": "string",
                        "description": "Zone file exported from the API\n"
                    },
                    "zoneFile": {
                        "type": "string",
                        "description": "Zone file that will be imported\n"
                    },
                    "zoneName": {
                        "type": "string",
                        "description": "Zone name\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneRecord:ZoneRecord": {
            "properties": {
                "fieldtype": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "fieldtype",
                "target",
                "zone"
            ],
            "inputProperties": {
                "fieldtype": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subdomain": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "ttl": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "fieldtype",
                "target",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneRecord resources.\n",
                "properties": {
                    "fieldtype": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "subdomain": {
                        "type": "string"
                    },
                    "target": {
                        "type": "string"
                    },
                    "ttl": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Domain/zoneRedirection:ZoneRedirection": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "target",
                "type",
                "zone"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "keywords": {
                    "type": "string"
                },
                "subdomain": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "target": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "target",
                "type",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ZoneRedirection resources.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "keywords": {
                        "type": "string"
                    },
                    "subdomain": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "target": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabase:PrivateDatabase": {
            "properties": {
                "DatabaseURN": {
                    "type": "string"
                },
                "cpu": {
                    "type": "integer",
                    "description": "Number of CPU on your private database\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "Datacenter where this private database is located\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Name displayed in customer panel for your private database\n"
                },
                "hostname": {
                    "type": "string",
                    "description": "Private database hostname\n"
                },
                "hostnameFtp": {
                    "type": "string",
                    "description": "Private database FTP hostname\n"
                },
                "infrastructure": {
                    "type": "string",
                    "description": "Infrastructure where service was stored\n"
                },
                "offer": {
                    "type": "string",
                    "description": "Type of the private database offer\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Private database service port\n"
                },
                "portFtp": {
                    "type": "integer",
                    "description": "Private database FTP port\n"
                },
                "quotaSize": {
                    "type": "integer",
                    "description": "Space allowed (in MB) on your private database\n"
                },
                "quotaUsed": {
                    "type": "integer",
                    "description": "Sapce used (in MB) on your private database\n"
                },
                "ram": {
                    "type": "integer",
                    "description": "Amount of ram (in MB) on your private database\n"
                },
                "server": {
                    "type": "string",
                    "description": "Private database server name\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "Private database state\n"
                },
                "type": {
                    "type": "string",
                    "description": "Private database type\n"
                },
                "version": {
                    "type": "string",
                    "description": "Private database available versions\n"
                },
                "versionLabel": {
                    "type": "string",
                    "description": "Private database version label\n"
                },
                "versionNumber": {
                    "type": "number",
                    "description": "Private database version number\n"
                }
            },
            "required": [
                "cpu",
                "datacenter",
                "displayName",
                "hostname",
                "hostnameFtp",
                "infrastructure",
                "offer",
                "orders",
                "ovhSubsidiary",
                "plan",
                "port",
                "portFtp",
                "quotaSize",
                "quotaUsed",
                "ram",
                "server",
                "serviceName",
                "state",
                "type",
                "DatabaseURN",
                "version",
                "versionLabel",
                "versionNumber"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Name displayed in customer panel for your private database\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabase resources.\n",
                "properties": {
                    "DatabaseURN": {
                        "type": "string"
                    },
                    "cpu": {
                        "type": "integer",
                        "description": "Number of CPU on your private database\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "Datacenter where this private database is located\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Name displayed in customer panel for your private database\n"
                    },
                    "hostname": {
                        "type": "string",
                        "description": "Private database hostname\n"
                    },
                    "hostnameFtp": {
                        "type": "string",
                        "description": "Private database FTP hostname\n"
                    },
                    "infrastructure": {
                        "type": "string",
                        "description": "Infrastructure where service was stored\n"
                    },
                    "offer": {
                        "type": "string",
                        "description": "Type of the private database offer\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/PrivateDatabaseOrder:PrivateDatabaseOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Hosting/PrivateDatabasePlan:PrivateDatabasePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/PrivateDatabasePlanOption:PrivateDatabasePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Private database service port\n"
                    },
                    "portFtp": {
                        "type": "integer",
                        "description": "Private database FTP port\n"
                    },
                    "quotaSize": {
                        "type": "integer",
                        "description": "Space allowed (in MB) on your private database\n"
                    },
                    "quotaUsed": {
                        "type": "integer",
                        "description": "Sapce used (in MB) on your private database\n"
                    },
                    "ram": {
                        "type": "integer",
                        "description": "Amount of ram (in MB) on your private database\n"
                    },
                    "server": {
                        "type": "string",
                        "description": "Private database server name\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "Private database state\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Private database type\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "Private database available versions\n"
                    },
                    "versionLabel": {
                        "type": "string",
                        "description": "Private database version label\n"
                    },
                    "versionNumber": {
                        "type": "number",
                        "description": "Private database version number\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseAllowlist:PrivateDatabaseAllowlist": {
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "The whitelisted IP in your instance\n"
                },
                "name": {
                    "type": "string",
                    "description": "Custom name for your Whitelisted IP\n"
                },
                "service": {
                    "type": "boolean",
                    "description": "Authorize this IP to access service port\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database\n"
                },
                "sftp": {
                    "type": "boolean",
                    "description": "Authorize this IP to access SFTP port\n"
                }
            },
            "required": [
                "ip",
                "name",
                "service",
                "serviceName",
                "sftp"
            ],
            "inputProperties": {
                "ip": {
                    "type": "string",
                    "description": "The whitelisted IP in your instance\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Custom name for your Whitelisted IP\n"
                },
                "service": {
                    "type": "boolean",
                    "description": "Authorize this IP to access service port\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database\n"
                },
                "sftp": {
                    "type": "boolean",
                    "description": "Authorize this IP to access SFTP port\n"
                }
            },
            "requiredInputs": [
                "ip",
                "service",
                "serviceName",
                "sftp"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseAllowlist resources.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The whitelisted IP in your instance\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Custom name for your Whitelisted IP\n"
                    },
                    "service": {
                        "type": "boolean",
                        "description": "Authorize this IP to access service port\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n"
                    },
                    "sftp": {
                        "type": "boolean",
                        "description": "Authorize this IP to access SFTP port\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseDb:PrivateDatabaseDb": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Name of your new database\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database\n"
                }
            },
            "required": [
                "databaseName",
                "serviceName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "Name of your new database\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseDb resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Name of your new database\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseUser:PrivateDatabaseUser": {
            "properties": {
                "password": {
                    "type": "string",
                    "description": "Password for the new user ( alphanumeric and 8 characters minimum )\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases\n"
                }
            },
            "required": [
                "password",
                "serviceName",
                "userName"
            ],
            "inputProperties": {
                "password": {
                    "type": "string",
                    "description": "Password for the new user ( alphanumeric and 8 characters minimum )\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database\n",
                    "willReplaceOnChanges": true
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "password",
                "serviceName",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseUser resources.\n",
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "Password for the new user ( alphanumeric and 8 characters minimum )\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n",
                        "willReplaceOnChanges": true
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name used to connect on your databases\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Hosting/privateDatabaseUserGrant:PrivateDatabaseUserGrant": {
            "properties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database name where add grant\n"
                },
                "grant": {
                    "type": "string",
                    "description": "Database name where add grant\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database\n"
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases\n"
                }
            },
            "required": [
                "databaseName",
                "grant",
                "serviceName",
                "userName"
            ],
            "inputProperties": {
                "databaseName": {
                    "type": "string",
                    "description": "Database name where add grant\n",
                    "willReplaceOnChanges": true
                },
                "grant": {
                    "type": "string",
                    "description": "Database name where add grant\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your private database\n",
                    "willReplaceOnChanges": true
                },
                "userName": {
                    "type": "string",
                    "description": "User name used to connect on your databases\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "databaseName",
                "grant",
                "serviceName",
                "userName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PrivateDatabaseUserGrant resources.\n",
                "properties": {
                    "databaseName": {
                        "type": "string",
                        "description": "Database name where add grant\n",
                        "willReplaceOnChanges": true
                    },
                    "grant": {
                        "type": "string",
                        "description": "Database name where add grant\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your private database\n",
                        "willReplaceOnChanges": true
                    },
                    "userName": {
                        "type": "string",
                        "description": "User name used to connect on your databases\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Iam/permissionsGroup:PermissionsGroup": {
            "properties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "excepts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "urn": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "description",
                "name",
                "owner",
                "updatedAt",
                "urn"
            ],
            "inputProperties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "excepts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PermissionsGroup resources.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Iam/policy:Policy": {
            "properties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "excepts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "permissionsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "readOnly": {
                    "type": "boolean"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "identities",
                "name",
                "owner",
                "readOnly",
                "resources",
                "updatedAt"
            ],
            "inputProperties": {
                "allows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "denies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "excepts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "permissionsGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "identities",
                "resources"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Policy resources.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "identities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "permissionsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Iam/resourceGroup:ResourceGroup": {
            "properties": {
                "GroupURN": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "readOnly": {
                    "type": "boolean"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "name",
                "owner",
                "readOnly",
                "updatedAt",
                "GroupURN"
            ],
            "inputProperties": {
                "name": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceGroup resources.\n",
                "properties": {
                    "GroupURN": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/firewall:Firewall": {
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "ip": {
                    "type": "string",
                    "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "ipOnFirewall": {
                    "type": "string",
                    "description": "IPv4 address (e.g., 192.0.2.0)\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of your ip on firewall\n"
                }
            },
            "required": [
                "enabled",
                "ip",
                "ipOnFirewall",
                "state"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean"
                },
                "ip": {
                    "type": "string",
                    "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "ipOnFirewall": {
                    "type": "string",
                    "description": "IPv4 address (e.g., 192.0.2.0)\n"
                }
            },
            "requiredInputs": [
                "ip",
                "ipOnFirewall"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Firewall resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "ip": {
                        "type": "string",
                        "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)\n"
                    },
                    "ipOnFirewall": {
                        "type": "string",
                        "description": "IPv4 address (e.g., 192.0.2.0)\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your ip on firewall\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/firewallRule:FirewallRule": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Possible values for action\n"
                },
                "creationDate": {
                    "type": "string"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination ip for your rule\n"
                },
                "destinationPort": {
                    "type": "number",
                    "description": "Destination port for your rule. Only with TCP/UDP protocol\n"
                },
                "destinationPortDesc": {
                    "type": "string",
                    "description": "Destination port range for your rule. Only with TCP/UDP protocol\n"
                },
                "fragments": {
                    "type": "boolean",
                    "description": "Fragments option\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "ipOnFirewall": {
                    "type": "string",
                    "description": "IPv4 address (e.g., 192.0.2.0)\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Possible values for protocol\n"
                },
                "rule": {
                    "type": "string"
                },
                "sequence": {
                    "type": "number",
                    "description": "Possible values for action\n"
                },
                "source": {
                    "type": "string",
                    "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "sourcePort": {
                    "type": "number",
                    "description": "Source port for your rule. Only with TCP/UDP protocol\n"
                },
                "sourcePortDesc": {
                    "type": "string",
                    "description": "Source port for your rule. Only with TCP/UDP protocol\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of your rule\n"
                },
                "tcpOption": {
                    "type": "string",
                    "description": "TCP option on your rule\n"
                }
            },
            "required": [
                "action",
                "creationDate",
                "destination",
                "destinationPort",
                "destinationPortDesc",
                "fragments",
                "ip",
                "ipOnFirewall",
                "protocol",
                "rule",
                "sequence",
                "source",
                "sourcePort",
                "sourcePortDesc",
                "state",
                "tcpOption"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "description": "Possible values for action\n"
                },
                "destinationPort": {
                    "type": "number",
                    "description": "Destination port for your rule. Only with TCP/UDP protocol\n"
                },
                "fragments": {
                    "type": "boolean",
                    "description": "Fragments option\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "ipOnFirewall": {
                    "type": "string",
                    "description": "IPv4 address (e.g., 192.0.2.0)\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Possible values for protocol\n"
                },
                "sequence": {
                    "type": "number",
                    "description": "Possible values for action\n"
                },
                "source": {
                    "type": "string",
                    "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "sourcePort": {
                    "type": "number",
                    "description": "Source port for your rule. Only with TCP/UDP protocol\n"
                },
                "tcpOption": {
                    "type": "string",
                    "description": "TCP option on your rule\n"
                }
            },
            "requiredInputs": [
                "action",
                "ip",
                "ipOnFirewall",
                "protocol",
                "sequence"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallRule resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "Possible values for action\n"
                    },
                    "creationDate": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination ip for your rule\n"
                    },
                    "destinationPort": {
                        "type": "number",
                        "description": "Destination port for your rule. Only with TCP/UDP protocol\n"
                    },
                    "destinationPortDesc": {
                        "type": "string",
                        "description": "Destination port range for your rule. Only with TCP/UDP protocol\n"
                    },
                    "fragments": {
                        "type": "boolean",
                        "description": "Fragments option\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)\n"
                    },
                    "ipOnFirewall": {
                        "type": "string",
                        "description": "IPv4 address (e.g., 192.0.2.0)\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Possible values for protocol\n"
                    },
                    "rule": {
                        "type": "string"
                    },
                    "sequence": {
                        "type": "number",
                        "description": "Possible values for action\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "IPv4 CIDR notation (e.g., 192.0.2.0/24)\n"
                    },
                    "sourcePort": {
                        "type": "number",
                        "description": "Source port for your rule. Only with TCP/UDP protocol\n"
                    },
                    "sourcePortDesc": {
                        "type": "string",
                        "description": "Source port for your rule. Only with TCP/UDP protocol\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your rule\n"
                    },
                    "tcpOption": {
                        "type": "string",
                        "description": "TCP option on your rule\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/ipService:IpService": {
            "properties": {
                "canBeTerminated": {
                    "type": "boolean"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip\n"
                },
                "ip": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceOrder:IpServiceOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "organisationId": {
                    "type": "string"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:Ip/IpServicePlan:IpServicePlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanOption:IpServicePlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "routedTos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceRoutedTo:IpServiceRoutedTo"
                    },
                    "description": "Routage information\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "description": "Possible values for ip type\n"
                }
            },
            "required": [
                "canBeTerminated",
                "country",
                "description",
                "ip",
                "orders",
                "organisationId",
                "ovhSubsidiary",
                "plan",
                "routedTos",
                "serviceName",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServiceOrder:IpServiceOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Ip/IpServicePlan:IpServicePlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Ip/IpServicePlanOption:IpServicePlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpService resources.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean"
                    },
                    "country": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Custom description on your ip\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/IpServiceOrder:IpServiceOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "organisationId": {
                        "type": "string"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Ip/IpServicePlan:IpServicePlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/IpServicePlanOption:IpServicePlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "routedTos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/IpServiceRoutedTo:IpServiceRoutedTo"
                        },
                        "description": "Routage information\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible values for ip type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/mitigation:Mitigation": {
            "properties": {
                "auto": {
                    "type": "boolean",
                    "description": "Set on true if your ip is on auto-mitigation\n"
                },
                "ip": {
                    "type": "string",
                    "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "ipOnMitigation": {
                    "type": "string",
                    "description": "IPv4 address (e.g., 192.0.2.0)\n"
                },
                "permanent": {
                    "type": "boolean",
                    "description": "Set on true if your ip is on permanent mitigation\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of your ip on mitigation\n"
                }
            },
            "required": [
                "auto",
                "ip",
                "ipOnMitigation",
                "permanent",
                "state"
            ],
            "inputProperties": {
                "ip": {
                    "type": "string",
                    "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)\n"
                },
                "ipOnMitigation": {
                    "type": "string",
                    "description": "IPv4 address (e.g., 192.0.2.0)\n"
                },
                "permanent": {
                    "type": "boolean",
                    "description": "Set on true if your ip is on permanent mitigation\n"
                }
            },
            "requiredInputs": [
                "ip",
                "ipOnMitigation"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Mitigation resources.\n",
                "properties": {
                    "auto": {
                        "type": "boolean",
                        "description": "Set on true if your ip is on auto-mitigation\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)\n"
                    },
                    "ipOnMitigation": {
                        "type": "string",
                        "description": "IPv4 address (e.g., 192.0.2.0)\n"
                    },
                    "permanent": {
                        "type": "boolean",
                        "description": "Set on true if your ip is on permanent mitigation\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your ip on mitigation\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/move:Move": {
            "properties": {
                "canBeTerminated": {
                    "type": "boolean"
                },
                "country": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip\n"
                },
                "ip": {
                    "type": "string"
                },
                "organisationId": {
                    "type": "string"
                },
                "routedTo": {
                    "$ref": "#/types/ovh:Ip/MoveRoutedTo:MoveRoutedTo",
                    "description": "Routage information\n"
                },
                "serviceName": {
                    "type": "string"
                },
                "taskStartDate": {
                    "type": "string",
                    "description": "Starting date and time field of the current IP task that is in charge of changing the service the IP is attached to\n"
                },
                "taskStatus": {
                    "type": "string",
                    "description": "Status field of the current IP task that is in charge of changing the service the IP is attached to\n"
                },
                "type": {
                    "type": "string",
                    "description": "Possible values for ip type\n"
                }
            },
            "required": [
                "canBeTerminated",
                "country",
                "description",
                "ip",
                "organisationId",
                "routedTo",
                "serviceName",
                "taskStartDate",
                "taskStatus",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Custom description on your ip\n"
                },
                "ip": {
                    "type": "string"
                },
                "routedTo": {
                    "$ref": "#/types/ovh:Ip/MoveRoutedTo:MoveRoutedTo",
                    "description": "Routage information\n"
                }
            },
            "requiredInputs": [
                "ip",
                "routedTo"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Move resources.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean"
                    },
                    "country": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Custom description on your ip\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "organisationId": {
                        "type": "string"
                    },
                    "routedTo": {
                        "$ref": "#/types/ovh:Ip/MoveRoutedTo:MoveRoutedTo",
                        "description": "Routage information\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "taskStartDate": {
                        "type": "string",
                        "description": "Starting date and time field of the current IP task that is in charge of changing the service the IP is attached to\n"
                    },
                    "taskStatus": {
                        "type": "string",
                        "description": "Status field of the current IP task that is in charge of changing the service the IP is attached to\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Possible values for ip type\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Ip/reverse:Reverse": {
            "properties": {
                "ReverseIp": {
                    "type": "string"
                },
                "ReverseValue": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                }
            },
            "required": [
                "ip",
                "ReverseIp",
                "ReverseValue"
            ],
            "inputProperties": {
                "ReverseIp": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ReverseValue": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ip": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "ip",
                "ReverseIp",
                "ReverseValue"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Reverse resources.\n",
                "properties": {
                    "ReverseIp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ReverseValue": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ip": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpFarm:HttpFarm": {
            "properties": {
                "balance": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe"
                },
                "serviceName": {
                    "type": "string"
                },
                "stickiness": {
                    "type": "string"
                },
                "vrackNetworkId": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "stickiness": {
                    "type": "string"
                },
                "vrackNetworkId": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:IpLoadBalancing/HttpFarmProbe:HttpFarmProbe"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "stickiness": {
                        "type": "string"
                    },
                    "vrackNetworkId": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpFarmServer:HttpFarmServer": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "backup": {
                    "type": "boolean"
                },
                "chain": {
                    "type": "string"
                },
                "cookie": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "farmId": {
                    "type": "integer"
                },
                "onMarkedDown": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "probe": {
                    "type": "boolean"
                },
                "proxyProtocolVersion": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "ssl": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "required": [
                "address",
                "cookie",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "backup": {
                    "type": "boolean"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "farmId": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "onMarkedDown": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "probe": {
                    "type": "boolean"
                },
                "proxyProtocolVersion": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "backup": {
                        "type": "boolean"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "cookie": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "farmId": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "onMarkedDown": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "probe": {
                        "type": "boolean"
                    },
                    "proxyProtocolVersion": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpFrontend:HttpFrontend": {
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultFarmId": {
                    "type": "integer"
                },
                "defaultSslId": {
                    "type": "integer"
                },
                "disabled": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "hsts": {
                    "type": "boolean"
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port": {
                    "type": "string"
                },
                "redirectLocation": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "ssl": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultFarmId": {
                    "type": "integer"
                },
                "defaultSslId": {
                    "type": "integer"
                },
                "disabled": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "hsts": {
                    "type": "boolean"
                },
                "httpHeaders": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "port": {
                    "type": "string"
                },
                "redirectLocation": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultFarmId": {
                        "type": "integer"
                    },
                    "defaultSslId": {
                        "type": "integer"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "hsts": {
                        "type": "boolean"
                    },
                    "httpHeaders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "port": {
                        "type": "string"
                    },
                    "redirectLocation": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpRoute:HttpRoute": {
            "properties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteRule:HttpRouteRule"
                    },
                    "description": "List of rules to match to trigger action\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated last. Only the first matching route will\ntrigger an action\n"
                }
            },
            "required": [
                "action",
                "frontendId",
                "rules",
                "serviceName",
                "status",
                "weight"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated last. Only the first matching route will\ntrigger an action\n"
                }
            },
            "requiredInputs": [
                "action",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpRoute resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteAction:HttpRouteAction",
                        "description": "Action triggered when all rules match\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your route, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "integer",
                        "description": "Route traffic for this frontend\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/HttpRouteRule:HttpRouteRule"
                        },
                        "description": "List of rules to match to trigger action\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated last. Only the first matching route will\ntrigger an action\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/httpRouteRule:HttpRouteRule": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "match": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "pattern": {
                    "type": "string"
                },
                "routeId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "subField": {
                    "type": "string"
                }
            },
            "required": [
                "field",
                "match",
                "negate",
                "routeId",
                "serviceName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "match": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "pattern": {
                    "type": "string"
                },
                "routeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subField": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HttpRouteRule resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "field": {
                        "type": "string"
                    },
                    "match": {
                        "type": "string"
                    },
                    "negate": {
                        "type": "boolean"
                    },
                    "pattern": {
                        "type": "string"
                    },
                    "routeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "subField": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/loadBalancer:LoadBalancer": {
            "properties": {
                "LoadBalancerURN": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                },
                "ipLoadbalancing": {
                    "type": "string",
                    "description": "Your IP load balancing\n"
                },
                "ipv4": {
                    "type": "string",
                    "description": "The IPV4 associated to your IP load balancing\n"
                },
                "ipv6": {
                    "type": "string",
                    "description": "The IPV6 associated to your IP load balancing. DEPRECATED.\n"
                },
                "metricsToken": {
                    "type": "string",
                    "description": "The metrics token associated with your IP load balancing\n",
                    "secret": true
                },
                "offer": {
                    "type": "string",
                    "description": "The offer of your IP load balancing\n"
                },
                "orderableZones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrderableZone:LoadBalancerOrderableZone"
                    },
                    "description": "Available additional zone for your Load Balancer\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "sslConfiguration": {
                    "type": "string",
                    "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and\nJava 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android\n2.3, Java 7. Intermediate if null.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Current state of your IP\n"
                },
                "vrackEligibility": {
                    "type": "boolean",
                    "description": "Vrack eligibility\n"
                },
                "vrackName": {
                    "type": "string",
                    "description": "Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product\n"
                },
                "zones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Location where your service is\n"
                }
            },
            "required": [
                "displayName",
                "ipLoadbalancing",
                "ipv4",
                "ipv6",
                "metricsToken",
                "offer",
                "orders",
                "orderableZones",
                "ovhSubsidiary",
                "plan",
                "serviceName",
                "sslConfiguration",
                "state",
                "LoadBalancerURN",
                "vrackEligibility",
                "vrackName",
                "zones"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "sslConfiguration": {
                    "type": "string",
                    "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and\nJava 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android\n2.3, Java 7. Intermediate if null.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LoadBalancer resources.\n",
                "properties": {
                    "LoadBalancerURN": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Set the name displayed in ManagerV6 for your iplb (max 50 chars)\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string",
                        "description": "Your IP load balancing\n"
                    },
                    "ipv4": {
                        "type": "string",
                        "description": "The IPV4 associated to your IP load balancing\n"
                    },
                    "ipv6": {
                        "type": "string",
                        "description": "The IPV6 associated to your IP load balancing. DEPRECATED.\n"
                    },
                    "metricsToken": {
                        "type": "string",
                        "description": "The metrics token associated with your IP load balancing\n",
                        "secret": true
                    },
                    "offer": {
                        "type": "string",
                        "description": "The offer of your IP load balancing\n"
                    },
                    "orderableZones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrderableZone:LoadBalancerOrderableZone"
                        },
                        "description": "Available additional zone for your Load Balancer\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerOrder:LoadBalancerOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlan:LoadBalancerPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/LoadBalancerPlanOption:LoadBalancerPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "sslConfiguration": {
                        "type": "string",
                        "description": "Modern oldest compatible clients : Firefox 27, Chrome 30, IE 11 on Windows 7, Edge, Opera 17, Safari 9, Android 5.0, and\nJava 8. Intermediate oldest compatible clients : Firefox 1, Chrome 1, IE 7, Opera 5, Safari 1, Windows XP IE8, Android\n2.3, Java 7. Intermediate if null.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Current state of your IP\n"
                    },
                    "vrackEligibility": {
                        "type": "boolean",
                        "description": "Vrack eligibility\n"
                    },
                    "vrackName": {
                        "type": "string",
                        "description": "Name of the vRack on which the current Load Balancer is attached to, as it is named on vRack product\n"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Location where your service is\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/refresh:Refresh": {
            "properties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "serviceName": {
                    "type": "string"
                }
            },
            "required": [
                "keepers",
                "serviceName"
            ],
            "inputProperties": {
                "keepers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "keepers",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Refresh resources.\n",
                "properties": {
                    "keepers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/ssl:Ssl": {
            "properties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Certificate chain\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your ssl certificate, this field is for you\n"
                },
                "expireDate": {
                    "type": "string",
                    "description": "Expire date of your SSL certificate\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "Fingerprint of your SSL certificate\n"
                },
                "key": {
                    "type": "string",
                    "description": "Certificate key\n",
                    "secret": true
                },
                "sans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Subject Alternative Name of your SSL certificate\n"
                },
                "serial": {
                    "type": "string",
                    "description": "Serial of your SSL certificate (Deprecated, use fingerprint instead!)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "subject": {
                    "type": "string",
                    "description": "Subject of your SSL certificate\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of your SSL certificate. 'built' for SSL certificates managed by the IP Load Balancing. 'custom' for user manager\ncertificates.\n"
                }
            },
            "required": [
                "certificate",
                "expireDate",
                "fingerprint",
                "key",
                "sans",
                "serial",
                "serviceName",
                "subject",
                "type"
            ],
            "inputProperties": {
                "certificate": {
                    "type": "string",
                    "description": "Certificate\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Certificate chain\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your ssl certificate, this field is for you\n"
                },
                "key": {
                    "type": "string",
                    "description": "Certificate key\n",
                    "secret": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                }
            },
            "requiredInputs": [
                "certificate",
                "key",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ssl resources.\n",
                "properties": {
                    "certificate": {
                        "type": "string",
                        "description": "Certificate\n"
                    },
                    "chain": {
                        "type": "string",
                        "description": "Certificate chain\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your ssl certificate, this field is for you\n"
                    },
                    "expireDate": {
                        "type": "string",
                        "description": "Expire date of your SSL certificate\n"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "Fingerprint of your SSL certificate\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Certificate key\n",
                        "secret": true
                    },
                    "sans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Subject Alternative Name of your SSL certificate\n"
                    },
                    "serial": {
                        "type": "string",
                        "description": "Serial of your SSL certificate (Deprecated, use fingerprint instead!)\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "Subject of your SSL certificate\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of your SSL certificate. 'built' for SSL certificates managed by the IP Load Balancing. 'custom' for user manager\ncertificates.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpFarm:TcpFarm": {
            "properties": {
                "balance": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe"
                },
                "serviceName": {
                    "type": "string"
                },
                "stickiness": {
                    "type": "string"
                },
                "vrackNetworkId": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "balance": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "probe": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "stickiness": {
                    "type": "string"
                },
                "vrackNetworkId": {
                    "type": "integer"
                },
                "zone": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpFarm resources.\n",
                "properties": {
                    "balance": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "probe": {
                        "$ref": "#/types/ovh:IpLoadBalancing/TcpFarmProbe:TcpFarmProbe"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "stickiness": {
                        "type": "string"
                    },
                    "vrackNetworkId": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpFarmServer:TcpFarmServer": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "backup": {
                    "type": "boolean"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "farmId": {
                    "type": "integer"
                },
                "onMarkedDown": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "probe": {
                    "type": "boolean"
                },
                "proxyProtocolVersion": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "ssl": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "required": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "backup": {
                    "type": "boolean"
                },
                "chain": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "farmId": {
                    "type": "integer",
                    "willReplaceOnChanges": true
                },
                "onMarkedDown": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "probe": {
                    "type": "boolean"
                },
                "proxyProtocolVersion": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "backup": {
                        "type": "boolean"
                    },
                    "chain": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "farmId": {
                        "type": "integer",
                        "willReplaceOnChanges": true
                    },
                    "onMarkedDown": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "probe": {
                        "type": "boolean"
                    },
                    "proxyProtocolVersion": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpFrontend:TcpFrontend": {
            "properties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultFarmId": {
                    "type": "integer"
                },
                "defaultSslId": {
                    "type": "integer"
                },
                "deniedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disabled": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "ssl": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "defaultFarmId",
                "defaultSslId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "allowedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultFarmId": {
                    "type": "integer"
                },
                "defaultSslId": {
                    "type": "integer"
                },
                "deniedSources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disabled": {
                    "type": "boolean"
                },
                "displayName": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "ssl": {
                    "type": "boolean"
                },
                "zone": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpFrontend resources.\n",
                "properties": {
                    "allowedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "defaultFarmId": {
                        "type": "integer"
                    },
                    "defaultSslId": {
                        "type": "integer"
                    },
                    "deniedSources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "port": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "ssl": {
                        "type": "boolean"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpRoute:TcpRoute": {
            "properties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteRule:TcpRouteRule"
                    },
                    "description": "List of rules to match to trigger action\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated last. Only the first matching route will\ntrigger an action\n"
                }
            },
            "required": [
                "action",
                "frontendId",
                "rules",
                "serviceName",
                "status",
                "weight"
            ],
            "inputProperties": {
                "action": {
                    "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction",
                    "description": "Action triggered when all rules match\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your route, this field is for you\n"
                },
                "frontendId": {
                    "type": "integer",
                    "description": "Route traffic for this frontend\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n",
                    "willReplaceOnChanges": true
                },
                "weight": {
                    "type": "integer",
                    "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated last. Only the first matching route will\ntrigger an action\n"
                }
            },
            "requiredInputs": [
                "action",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpRoute resources.\n",
                "properties": {
                    "action": {
                        "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteAction:TcpRouteAction",
                        "description": "Action triggered when all rules match\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your route, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "integer",
                        "description": "Route traffic for this frontend\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/TcpRouteRule:TcpRouteRule"
                        },
                        "description": "List of rules to match to trigger action\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Route status. Routes in \"ok\" state are ready to operate\n"
                    },
                    "weight": {
                        "type": "integer",
                        "description": "Route priority ([0..255]). 0 if null. Highest priority routes are evaluated last. Only the first matching route will\ntrigger an action\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/tcpRouteRule:TcpRouteRule": {
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "match": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "pattern": {
                    "type": "string"
                },
                "routeId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "subField": {
                    "type": "string"
                }
            },
            "required": [
                "field",
                "match",
                "negate",
                "routeId",
                "serviceName"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "match": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "pattern": {
                    "type": "string"
                },
                "routeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subField": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "field",
                "match",
                "routeId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TcpRouteRule resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "field": {
                        "type": "string"
                    },
                    "match": {
                        "type": "string"
                    },
                    "negate": {
                        "type": "boolean"
                    },
                    "pattern": {
                        "type": "string"
                    },
                    "routeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "subField": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/udpFarm:UdpFarm": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your backend, this field is for you\n"
                },
                "farmId": {
                    "type": "number",
                    "description": "Id of your farm\n"
                },
                "port": {
                    "type": "number",
                    "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "vrackNetworkId": {
                    "type": "number",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer\nis attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone of your farm\n"
                }
            },
            "required": [
                "farmId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your backend, this field is for you\n"
                },
                "port": {
                    "type": "number",
                    "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "vrackNetworkId": {
                    "type": "number",
                    "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer\nis attached to a vRack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone of your farm\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UdpFarm resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your backend, this field is for you\n"
                    },
                    "farmId": {
                        "type": "number",
                        "description": "Id of your farm\n"
                    },
                    "port": {
                        "type": "number",
                        "description": "Port attached to your farm ([1..49151]). Inherited from frontend if null\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "vrackNetworkId": {
                        "type": "number",
                        "description": "Internal Load Balancer identifier of the vRack private network to attach to your farm, mandatory when your Load Balancer\nis attached to a vRack\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone of your farm\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/udpFarmServer:UdpFarmServer": {
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 address (e.g., 192.0.2.0)\n"
                },
                "backendId": {
                    "type": "number",
                    "description": "Synonym for farm_id\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your server, this field is for you\n"
                },
                "farmId": {
                    "type": "number",
                    "description": "Id of your farm\n"
                },
                "port": {
                    "type": "number",
                    "description": "Port attached to your server ([1..49151]). Inherited from farm if null\n"
                },
                "serverId": {
                    "type": "number",
                    "description": "Id of your server\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "Possible values for server status\n"
                }
            },
            "required": [
                "address",
                "backendId",
                "farmId",
                "serverId",
                "serviceName",
                "status"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "IPv4 address (e.g., 192.0.2.0)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your server, this field is for you\n"
                },
                "farmId": {
                    "type": "number",
                    "description": "Id of your farm\n"
                },
                "port": {
                    "type": "number",
                    "description": "Port attached to your server ([1..49151]). Inherited from farm if null\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "status": {
                    "type": "string",
                    "description": "Possible values for server status\n"
                }
            },
            "requiredInputs": [
                "address",
                "farmId",
                "serviceName",
                "status"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UdpFarmServer resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IPv4 address (e.g., 192.0.2.0)\n"
                    },
                    "backendId": {
                        "type": "number",
                        "description": "Synonym for farm_id\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your server, this field is for you\n"
                    },
                    "farmId": {
                        "type": "number",
                        "description": "Id of your farm\n"
                    },
                    "port": {
                        "type": "number",
                        "description": "Port attached to your server ([1..49151]). Inherited from farm if null\n"
                    },
                    "serverId": {
                        "type": "number",
                        "description": "Id of your server\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Possible values for server status\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/udpFrontend:UdpFrontend": {
            "properties": {
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null\n"
                },
                "defaultFarmId": {
                    "type": "number",
                    "description": "Default UDP Farm of your frontend\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "frontendId": {
                    "type": "number",
                    "description": "Id of your frontend\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and\ncomma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone of your frontend. Use \"all\" for all owned zone.\n"
                }
            },
            "required": [
                "disabled",
                "frontendId",
                "port",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "dedicatedIpfos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Only attach frontend on these ip. No restriction if null\n"
                },
                "defaultFarmId": {
                    "type": "number",
                    "description": "Default UDP Farm of your frontend\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable your frontend. Default: 'false'\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your frontend, this field is for you\n"
                },
                "port": {
                    "type": "string",
                    "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and\ncomma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IP load balancing\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Zone of your frontend. Use \"all\" for all owned zone.\n"
                }
            },
            "requiredInputs": [
                "port",
                "serviceName",
                "zone"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering UdpFrontend resources.\n",
                "properties": {
                    "dedicatedIpfos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Only attach frontend on these ip. No restriction if null\n"
                    },
                    "defaultFarmId": {
                        "type": "number",
                        "description": "Default UDP Farm of your frontend\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable your frontend. Default: 'false'\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your frontend, this field is for you\n"
                    },
                    "frontendId": {
                        "type": "number",
                        "description": "Id of your frontend\n"
                    },
                    "port": {
                        "type": "string",
                        "description": "Port(s) attached to your frontend. Supports single port (numerical value), range (2 dash-delimited increasing ports) and\ncomma-separated list of 'single port' and/or 'range'. Each port must be in the [1;49151] range.\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IP load balancing\n"
                    },
                    "zone": {
                        "type": "string",
                        "description": "Zone of your frontend. Use \"all\" for all owned zone.\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:IpLoadBalancing/vrackNetwork:VrackNetwork": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVH API as it may conflicts with http/tcp\nfarms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must\nbe in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IPloadbalancer\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                },
                "vrackNetworkId": {
                    "type": "integer",
                    "description": "Internal Load Balancer identifier of the vRack private network\n"
                }
            },
            "required": [
                "natIp",
                "serviceName",
                "subnet",
                "vlan",
                "vrackNetworkId"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Human readable name for your vrack network\n"
                },
                "farmIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "This attribute is there for documentation purpose only and isnt passed to the OVH API as it may conflicts with http/tcp\nfarms `vrack_network_id` attribute\n"
                },
                "natIp": {
                    "type": "string",
                    "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must\nbe in the private network and reserved for the Load Balancer\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your IPloadbalancer\n"
                },
                "subnet": {
                    "type": "string",
                    "description": "IP block of the private network in the vRack\n"
                },
                "vlan": {
                    "type": "integer",
                    "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                }
            },
            "requiredInputs": [
                "natIp",
                "serviceName",
                "subnet"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VrackNetwork resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name for your vrack network\n"
                    },
                    "farmIds": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "This attribute is there for documentation purpose only and isnt passed to the OVH API as it may conflicts with http/tcp\nfarms `vrack_network_id` attribute\n"
                    },
                    "natIp": {
                        "type": "string",
                        "description": "An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must\nbe in the private network and reserved for the Load Balancer\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your IPloadbalancer\n"
                    },
                    "subnet": {
                        "type": "string",
                        "description": "IP block of the private network in the vRack\n"
                    },
                    "vlan": {
                        "type": "integer",
                        "description": "VLAN of the private network in the vRack. 0 if the private network is not in a VLAN\n"
                    },
                    "vrackNetworkId": {
                        "type": "integer",
                        "description": "Internal Load Balancer identifier of the vRack private network\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/aPIOAuth2Client:APIOAuth2Client": {
            "properties": {
                "callbackUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Callback URLs of the applications using this oauth2 client. Required if using the AUTHORIZATION_CODE flow.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "Client ID for the oauth2 client, generated during the resource creation.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "Secret for the oauth2 client, generated during the oauth2 client creation.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "A description of your oauth2 client.\n"
                },
                "flow": {
                    "type": "string",
                    "description": "OAuth2 flow type implemented for this oauth2 client. Can be either AUTHORIZATION_CODE or CLIENT_CREDENTIALS\n"
                },
                "identity": {
                    "type": "string",
                    "description": "URN that will allow you to associate this oauth2 client with an access policy\n"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "clientId",
                "clientSecret",
                "description",
                "flow",
                "identity",
                "name"
            ],
            "inputProperties": {
                "callbackUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Callback URLs of the applications using this oauth2 client. Required if using the AUTHORIZATION_CODE flow.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of your oauth2 client.\n"
                },
                "flow": {
                    "type": "string",
                    "description": "OAuth2 flow type implemented for this oauth2 client. Can be either AUTHORIZATION_CODE or CLIENT_CREDENTIALS\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "description",
                "flow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering APIOAuth2Client resources.\n",
                "properties": {
                    "callbackUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Callback URLs of the applications using this oauth2 client. Required if using the AUTHORIZATION_CODE flow.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "Client ID for the oauth2 client, generated during the resource creation.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "Secret for the oauth2 client, generated during the oauth2 client creation.\n",
                        "secret": true
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of your oauth2 client.\n"
                    },
                    "flow": {
                        "type": "string",
                        "description": "OAuth2 flow type implemented for this oauth2 client. Can be either AUTHORIZATION_CODE or CLIENT_CREDENTIALS\n",
                        "willReplaceOnChanges": true
                    },
                    "identity": {
                        "type": "string",
                        "description": "URN that will allow you to associate this oauth2 client with an access policy\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/identityGroup:IdentityGroup": {
            "properties": {
                "GroupURN": {
                    "type": "string"
                },
                "creation": {
                    "type": "string"
                },
                "defaultGroup": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "lastUpdate": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            },
            "required": [
                "creation",
                "defaultGroup",
                "lastUpdate",
                "name",
                "GroupURN"
            ],
            "inputProperties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "role": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityGroup resources.\n",
                "properties": {
                    "GroupURN": {
                        "type": "string"
                    },
                    "creation": {
                        "type": "string"
                    },
                    "defaultGroup": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Me/identityUser:IdentityUser": {
            "properties": {
                "UserURN": {
                    "type": "string"
                },
                "creation": {
                    "type": "string",
                    "description": "Creation date of this user\n"
                },
                "description": {
                    "type": "string",
                    "description": "User description\n"
                },
                "email": {
                    "type": "string",
                    "description": "User's email\n"
                },
                "group": {
                    "type": "string",
                    "description": "User's group\n"
                },
                "lastUpdate": {
                    "type": "string",
                    "description": "Last update of this user\n"
                },
                "login": {
                    "type": "string",
                    "description": "User's login suffix\n"
                },
                "password": {
                    "type": "string",
                    "description": "User's password\n",
                    "secret": true
                },
                "passwordLastUpdate": {
                    "type": "string",
                    "description": "When the user changed his password for the last time\n"
                },
                "status": {
                    "type": "string",
                    "description": "Current user's status\n"
                }
            },
            "required": [
                "creation",
                "email",
                "lastUpdate",
                "login",
                "password",
                "passwordLastUpdate",
                "status",
                "UserURN"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "User description\n"
                },
                "email": {
                    "type": "string",
                    "description": "User's email\n"
                },
                "group": {
                    "type": "string",
                    "description": "User's group\n"
                },
                "login": {
                    "type": "string",
                    "description": "User's login suffix\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "User's password\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "email",
                "login",
                "password"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IdentityUser resources.\n",
                "properties": {
                    "UserURN": {
                        "type": "string"
                    },
                    "creation": {
                        "type": "string",
                        "description": "Creation date of this user\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User description\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email\n"
                    },
                    "group": {
                        "type": "string",
                        "description": "User's group\n"
                    },
                    "lastUpdate": {
                        "type": "string",
                        "description": "Last update of this user\n"
                    },
                    "login": {
                        "type": "string",
                        "description": "User's login suffix\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password\n",
                        "secret": true
                    },
                    "passwordLastUpdate": {
                        "type": "string",
                        "description": "When the user changed his password for the last time\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Current user's status\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Okms/credential:Credential": {
            "properties": {
                "certificatePem": {
                    "type": "string",
                    "description": "Certificate PEM of the credential\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation time of the credential\n"
                },
                "csr": {
                    "type": "string",
                    "description": "Valid Certificate Signing Request\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the credential (max 200)\n"
                },
                "expiredAt": {
                    "type": "string",
                    "description": "Expiration time of the credential\n"
                },
                "fromCsr": {
                    "type": "boolean",
                    "description": "Is the credential generated from CSR\n"
                },
                "identityUrns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of identity URNs associated with the credential (max 25)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the credential (max 50)\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "privateKeyPem": {
                    "type": "string",
                    "description": "Private Key PEM of the credential if no CSR is provided (cannot be retrieve later)\n",
                    "secret": true
                },
                "status": {
                    "type": "string",
                    "description": "Status of the credential\n"
                },
                "validity": {
                    "type": "number",
                    "description": "Validity in days (default 365, max 365)\n"
                }
            },
            "required": [
                "certificatePem",
                "createdAt",
                "csr",
                "description",
                "expiredAt",
                "fromCsr",
                "identityUrns",
                "name",
                "okmsId",
                "privateKeyPem",
                "status",
                "validity"
            ],
            "inputProperties": {
                "csr": {
                    "type": "string",
                    "description": "Valid Certificate Signing Request\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the credential (max 200)\n"
                },
                "identityUrns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of identity URNs associated with the credential (max 25)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the credential (max 50)\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "validity": {
                    "type": "number",
                    "description": "Validity in days (default 365, max 365)\n"
                }
            },
            "requiredInputs": [
                "identityUrns",
                "okmsId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Credential resources.\n",
                "properties": {
                    "certificatePem": {
                        "type": "string",
                        "description": "Certificate PEM of the credential\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation time of the credential\n"
                    },
                    "csr": {
                        "type": "string",
                        "description": "Valid Certificate Signing Request\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the credential (max 200)\n"
                    },
                    "expiredAt": {
                        "type": "string",
                        "description": "Expiration time of the credential\n"
                    },
                    "fromCsr": {
                        "type": "boolean",
                        "description": "Is the credential generated from CSR\n"
                    },
                    "identityUrns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of identity URNs associated with the credential (max 25)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the credential (max 50)\n"
                    },
                    "okmsId": {
                        "type": "string",
                        "description": "Okms ID\n"
                    },
                    "privateKeyPem": {
                        "type": "string",
                        "description": "Private Key PEM of the credential if no CSR is provided (cannot be retrieve later)\n",
                        "secret": true
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the credential\n"
                    },
                    "validity": {
                        "type": "number",
                        "description": "Validity in days (default 365, max 365)\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Okms/okms:Okms": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in Manager for this KMS\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Okms/OkmsIam:OkmsIam",
                    "description": "IAM resource metadata\n"
                },
                "kmipEndpoint": {
                    "type": "string",
                    "description": "KMS kmip API endpoint\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "publicCa": {
                    "type": "string",
                    "description": "KMS public CA (Certificate Authority)\n"
                },
                "region": {
                    "type": "string",
                    "description": "KMS region\n"
                },
                "restEndpoint": {
                    "type": "string",
                    "description": "KMS rest API endpoint\n"
                },
                "swaggerEndpoint": {
                    "type": "string",
                    "description": "KMS rest API swagger UI\n"
                }
            },
            "required": [
                "displayName",
                "iam",
                "kmipEndpoint",
                "ovhSubsidiary",
                "publicCa",
                "region",
                "restEndpoint",
                "swaggerEndpoint"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in Manager for this KMS\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "region": {
                    "type": "string",
                    "description": "KMS region\n"
                }
            },
            "requiredInputs": [
                "ovhSubsidiary",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Okms resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "Set the name displayed in Manager for this KMS\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/OkmsIam:OkmsIam",
                        "description": "IAM resource metadata\n"
                    },
                    "kmipEndpoint": {
                        "type": "string",
                        "description": "KMS kmip API endpoint\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVH subsidiaries\n"
                    },
                    "publicCa": {
                        "type": "string",
                        "description": "KMS public CA (Certificate Authority)\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "KMS region\n"
                    },
                    "restEndpoint": {
                        "type": "string",
                        "description": "KMS rest API endpoint\n"
                    },
                    "swaggerEndpoint": {
                        "type": "string",
                        "description": "KMS rest API swagger UI\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Okms/serviceKey:ServiceKey": {
            "properties": {
                "context": {
                    "type": "string",
                    "description": "Context of the key\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation time of the key\n"
                },
                "curve": {
                    "type": "string",
                    "description": "Curve type for Elliptic Curve (EC) keys\n"
                },
                "deactivationReason": {
                    "type": "string",
                    "description": "Key deactivation reason\n"
                },
                "name": {
                    "type": "string",
                    "description": "Key name\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operations for which the key is intended to be used\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size of the key to be created\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the key\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the key to be created\n"
                }
            },
            "required": [
                "context",
                "createdAt",
                "curve",
                "deactivationReason",
                "name",
                "okmsId",
                "operations",
                "size",
                "state",
                "type"
            ],
            "inputProperties": {
                "context": {
                    "type": "string",
                    "description": "Context of the key\n"
                },
                "curve": {
                    "type": "string",
                    "description": "Curve type for Elliptic Curve (EC) keys\n"
                },
                "name": {
                    "type": "string",
                    "description": "Key name\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The operations for which the key is intended to be used\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size of the key to be created\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the key to be created\n"
                }
            },
            "requiredInputs": [
                "okmsId",
                "operations",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceKey resources.\n",
                "properties": {
                    "context": {
                        "type": "string",
                        "description": "Context of the key\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation time of the key\n"
                    },
                    "curve": {
                        "type": "string",
                        "description": "Curve type for Elliptic Curve (EC) keys\n"
                    },
                    "deactivationReason": {
                        "type": "string",
                        "description": "Key deactivation reason\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Key name\n"
                    },
                    "okmsId": {
                        "type": "string",
                        "description": "Okms ID\n"
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The operations for which the key is intended to be used\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Size of the key to be created\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the key\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the key to be created\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Okms/serviceKeyJWK:ServiceKeyJWK": {
            "properties": {
                "context": {
                    "type": "string",
                    "description": "Context of the key\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation time of the key\n"
                },
                "deactivationReason": {
                    "type": "string",
                    "description": "Key deactivation reason\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Okms/ServiceKeyJWKIam:ServiceKeyJWKIam",
                    "description": "IAM resource metadata\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Okms/ServiceKeyJWKKey:ServiceKeyJWKKey"
                    },
                    "description": "Set of JSON Web Keys to import\n"
                },
                "name": {
                    "type": "string",
                    "description": "Key name\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                },
                "size": {
                    "type": "number",
                    "description": "Size of the key to be created\n"
                },
                "state": {
                    "type": "string",
                    "description": "State of the key\n"
                },
                "type": {
                    "type": "string",
                    "description": "Type of the key to be created\n"
                }
            },
            "required": [
                "createdAt",
                "deactivationReason",
                "iam",
                "keys",
                "name",
                "okmsId",
                "size",
                "state",
                "type"
            ],
            "inputProperties": {
                "context": {
                    "type": "string",
                    "description": "Context of the key\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Okms/ServiceKeyJWKKey:ServiceKeyJWKKey"
                    },
                    "description": "Set of JSON Web Keys to import\n"
                },
                "name": {
                    "type": "string",
                    "description": "Key name\n"
                },
                "okmsId": {
                    "type": "string",
                    "description": "Okms ID\n"
                }
            },
            "requiredInputs": [
                "keys",
                "okmsId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ServiceKeyJWK resources.\n",
                "properties": {
                    "context": {
                        "type": "string",
                        "description": "Context of the key\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation time of the key\n"
                    },
                    "deactivationReason": {
                        "type": "string",
                        "description": "Key deactivation reason\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/ServiceKeyJWKIam:ServiceKeyJWKIam",
                        "description": "IAM resource metadata\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Okms/ServiceKeyJWKKey:ServiceKeyJWKKey"
                        },
                        "description": "Set of JSON Web Keys to import\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Key name\n"
                    },
                    "okmsId": {
                        "type": "string",
                        "description": "Okms ID\n"
                    },
                    "size": {
                        "type": "number",
                        "description": "Size of the key to be created\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State of the key\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of the key to be created\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:SavingsPlan/savingsPlan:SavingsPlan": {
            "properties": {
                "autoRenewal": {
                    "type": "boolean",
                    "description": "Whether Savings Plan should be renewed at the end of the period (defaults to false)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Custom display name, used in invoices\n"
                },
                "endDate": {
                    "type": "string",
                    "description": "End date of the Savings Plan\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Savings Plan flavor\n"
                },
                "period": {
                    "type": "string",
                    "description": "Periodicity of the Savings Plan\n"
                },
                "periodEndAction": {
                    "type": "string",
                    "description": "Action performed when reaching the end of the period\n"
                },
                "periodEndDate": {
                    "type": "string",
                    "description": "End date of the current period\n"
                },
                "periodStartDate": {
                    "type": "string",
                    "description": "Start date of the current period\n"
                },
                "serviceId": {
                    "type": "integer",
                    "description": "ID of the service\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "ID of the public cloud project\n"
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the Savings Plan\n"
                },
                "startDate": {
                    "type": "string",
                    "description": "Start date of the Savings Plan\n"
                },
                "status": {
                    "type": "string",
                    "description": "Status of the Savings Plan\n"
                }
            },
            "required": [
                "autoRenewal",
                "displayName",
                "endDate",
                "flavor",
                "period",
                "periodEndAction",
                "periodEndDate",
                "periodStartDate",
                "serviceId",
                "serviceName",
                "size",
                "startDate",
                "status"
            ],
            "inputProperties": {
                "autoRenewal": {
                    "type": "boolean",
                    "description": "Whether Savings Plan should be renewed at the end of the period (defaults to false)\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "Custom display name, used in invoices\n"
                },
                "flavor": {
                    "type": "string",
                    "description": "Savings Plan flavor\n",
                    "willReplaceOnChanges": true
                },
                "period": {
                    "type": "string",
                    "description": "Periodicity of the Savings Plan\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "ID of the public cloud project\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "integer",
                    "description": "Size of the Savings Plan\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "flavor",
                "period",
                "serviceName",
                "size"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SavingsPlan resources.\n",
                "properties": {
                    "autoRenewal": {
                        "type": "boolean",
                        "description": "Whether Savings Plan should be renewed at the end of the period (defaults to false)\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Custom display name, used in invoices\n"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "End date of the Savings Plan\n"
                    },
                    "flavor": {
                        "type": "string",
                        "description": "Savings Plan flavor\n",
                        "willReplaceOnChanges": true
                    },
                    "period": {
                        "type": "string",
                        "description": "Periodicity of the Savings Plan\n",
                        "willReplaceOnChanges": true
                    },
                    "periodEndAction": {
                        "type": "string",
                        "description": "Action performed when reaching the end of the period\n"
                    },
                    "periodEndDate": {
                        "type": "string",
                        "description": "End date of the current period\n"
                    },
                    "periodStartDate": {
                        "type": "string",
                        "description": "Start date of the current period\n"
                    },
                    "serviceId": {
                        "type": "integer",
                        "description": "ID of the service\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "ID of the public cloud project\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "Size of the Savings Plan\n"
                    },
                    "startDate": {
                        "type": "string",
                        "description": "Start date of the Savings Plan\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the Savings Plan\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vps/vps:Vps": {
            "properties": {
                "cluster": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in Manager for your VPS (max 50 chars)\n"
                },
                "iam": {
                    "$ref": "#/types/ovh:Vps/VpsIam:VpsIam",
                    "description": "IAM resource metadata\n"
                },
                "keymap": {
                    "type": "string",
                    "description": "KVM keyboard layout on VPS Cloud\n"
                },
                "memoryLimit": {
                    "type": "number"
                },
                "model": {
                    "$ref": "#/types/ovh:Vps/VpsModel:VpsModel",
                    "description": "A structure describing characteristics of a VPS model\n"
                },
                "monitoringIpBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Ip blocks for OVH monitoring servers\n"
                },
                "name": {
                    "type": "string"
                },
                "netbootMode": {
                    "type": "string",
                    "description": "All values a VPS netboot mode can be in\n"
                },
                "offerType": {
                    "type": "string",
                    "description": "All offers a VPS can have\n"
                },
                "order": {
                    "$ref": "#/types/ovh:Vps/VpsOrder:VpsOrder",
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlanOption:VpsPlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlan:VpsPlan"
                    }
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your VPS offer\n"
                },
                "slaMonitoring": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string",
                    "description": "All states a VPS can be in\n"
                },
                "vcore": {
                    "type": "number"
                },
                "zone": {
                    "type": "string"
                }
            },
            "required": [
                "cluster",
                "displayName",
                "iam",
                "keymap",
                "memoryLimit",
                "model",
                "monitoringIpBlocks",
                "name",
                "netbootMode",
                "offerType",
                "order",
                "plans",
                "planOptions",
                "serviceName",
                "slaMonitoring",
                "state",
                "vcore",
                "zone"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "Set the name displayed in Manager for your VPS (max 50 chars)\n"
                },
                "keymap": {
                    "type": "string",
                    "description": "KVM keyboard layout on VPS Cloud\n"
                },
                "memoryLimit": {
                    "type": "number"
                },
                "model": {
                    "$ref": "#/types/ovh:Vps/VpsModel:VpsModel",
                    "description": "A structure describing characteristics of a VPS model\n"
                },
                "monitoringIpBlocks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Ip blocks for OVH monitoring servers\n"
                },
                "name": {
                    "type": "string"
                },
                "netbootMode": {
                    "type": "string",
                    "description": "All values a VPS netboot mode can be in\n"
                },
                "offerType": {
                    "type": "string",
                    "description": "All offers a VPS can have\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "OVH subsidiaries\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlanOption:VpsPlanOption"
                    }
                },
                "plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vps/VpsPlan:VpsPlan"
                    }
                },
                "slaMonitoring": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string",
                    "description": "All states a VPS can be in\n"
                },
                "vcore": {
                    "type": "number"
                },
                "zone": {
                    "type": "string"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vps resources.\n",
                "properties": {
                    "cluster": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Set the name displayed in Manager for your VPS (max 50 chars)\n"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Vps/VpsIam:VpsIam",
                        "description": "IAM resource metadata\n"
                    },
                    "keymap": {
                        "type": "string",
                        "description": "KVM keyboard layout on VPS Cloud\n"
                    },
                    "memoryLimit": {
                        "type": "number"
                    },
                    "model": {
                        "$ref": "#/types/ovh:Vps/VpsModel:VpsModel",
                        "description": "A structure describing characteristics of a VPS model\n"
                    },
                    "monitoringIpBlocks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Ip blocks for OVH monitoring servers\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "netbootMode": {
                        "type": "string",
                        "description": "All values a VPS netboot mode can be in\n"
                    },
                    "offerType": {
                        "type": "string",
                        "description": "All offers a VPS can have\n"
                    },
                    "order": {
                        "$ref": "#/types/ovh:Vps/VpsOrder:VpsOrder",
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "OVH subsidiaries\n"
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vps/VpsPlanOption:VpsPlanOption"
                        }
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vps/VpsPlan:VpsPlan"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your VPS offer\n"
                    },
                    "slaMonitoring": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string",
                        "description": "All states a VPS can be in\n"
                    },
                    "vcore": {
                        "type": "number"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/cloudProject:CloudProject": {
            "properties": {
                "projectId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the vrack resource.\n"
                }
            },
            "required": [
                "projectId",
                "serviceName"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the vrack resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "projectId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudProject resources.\n",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the vrack resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/dedicatedServer:DedicatedServer": {
            "properties": {
                "serverId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n"
                }
            },
            "required": [
                "serverId",
                "serviceName"
            ],
            "inputProperties": {
                "serverId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the resource representing the id of the cloud project.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serverId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServer resources.\n",
                "properties": {
                    "serverId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the resource representing the id of the cloud project.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/dedicatedServerInterface:DedicatedServerInterface": {
            "properties": {
                "interfaceId": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the vrack resource.\n"
                }
            },
            "required": [
                "interfaceId",
                "serviceName"
            ],
            "inputProperties": {
                "interfaceId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "Service name of the vrack resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "interfaceId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DedicatedServerInterface resources.\n",
                "properties": {
                    "interfaceId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "Service name of the vrack resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/ipAddress:IpAddress": {
            "properties": {
                "block": {
                    "type": "string",
                    "description": "Your IP block.\n"
                },
                "gateway": {
                    "type": "string",
                    "description": "Your gateway\n"
                },
                "ip": {
                    "type": "string",
                    "description": "Your IP block\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                },
                "zone": {
                    "type": "string",
                    "description": "Where you want your block announced on the network\n"
                }
            },
            "required": [
                "block",
                "gateway",
                "ip",
                "serviceName",
                "zone"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "Your IP block.\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "block",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpAddress resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "Your IP block.\n",
                        "willReplaceOnChanges": true
                    },
                    "gateway": {
                        "type": "string",
                        "description": "Your gateway\n"
                    },
                    "ip": {
                        "type": "string",
                        "description": "Your IP block\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n",
                        "willReplaceOnChanges": true
                    },
                    "zone": {
                        "type": "string",
                        "description": "Where you want your block announced on the network\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/ipLoadbalancing:IpLoadbalancing": {
            "properties": {
                "LoadbalancingId": {
                    "type": "string",
                    "description": "Your ipLoadbalancing\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "LoadbalancingId",
                "serviceName"
            ],
            "inputProperties": {
                "LoadbalancingId": {
                    "type": "string",
                    "description": "Your ipLoadbalancing\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "LoadbalancingId",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpLoadbalancing resources.\n",
                "properties": {
                    "LoadbalancingId": {
                        "type": "string",
                        "description": "Your ipLoadbalancing\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/ipv6Address:Ipv6Address": {
            "properties": {
                "block": {
                    "type": "string",
                    "description": "IPv6 CIDR notation (e.g., 2001:41d0::/128)\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "block",
                "serviceName"
            ],
            "inputProperties": {
                "block": {
                    "type": "string",
                    "description": "IPv6 CIDR notation (e.g., 2001:41d0::/128)\n",
                    "willReplaceOnChanges": true
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "block",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ipv6Address resources.\n",
                "properties": {
                    "block": {
                        "type": "string",
                        "description": "IPv6 CIDR notation (e.g., 2001:41d0::/128)\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/oVHCloudConnect:OVHCloudConnect": {
            "properties": {
                "ovhCloudConnect": {
                    "type": "string",
                    "description": "ovhCloudConnect service name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "ovhCloudConnect",
                "serviceName"
            ],
            "inputProperties": {
                "ovhCloudConnect": {
                    "type": "string",
                    "description": "ovhCloudConnect service name\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "requiredInputs": [
                "ovhCloudConnect",
                "serviceName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering OVHCloudConnect resources.\n",
                "properties": {
                    "ovhCloudConnect": {
                        "type": "string",
                        "description": "ovhCloudConnect service name\n"
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n"
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/services:Services": {
            "properties": {
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                },
                "vrackServices": {
                    "type": "string",
                    "description": "vrackServices service name\n"
                }
            },
            "required": [
                "serviceName",
                "vrackServices"
            ],
            "inputProperties": {
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n",
                    "willReplaceOnChanges": true
                },
                "vrackServices": {
                    "type": "string",
                    "description": "vrackServices service name\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "serviceName",
                "vrackServices"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Services resources.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n",
                        "willReplaceOnChanges": true
                    },
                    "vrackServices": {
                        "type": "string",
                        "description": "vrackServices service name\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "ovh:Vrack/vrack:Vrack": {
            "properties": {
                "VrackURN": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n"
                },
                "name": {
                    "type": "string",
                    "description": "yourvrackname\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackOrder:VrackOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n"
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used."
                },
                "plan": {
                    "$ref": "#/types/ovh:Vrack/VrackPlan:VrackPlan",
                    "description": "Product Plan to order\n"
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanOption:VrackPlanOption"
                    },
                    "description": "Product Plan to order\n"
                },
                "serviceName": {
                    "type": "string",
                    "description": "The internal name of your vrack\n"
                }
            },
            "required": [
                "description",
                "name",
                "orders",
                "ovhSubsidiary",
                "plan",
                "serviceName",
                "VrackURN"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "yourvrackdescription\n"
                },
                "name": {
                    "type": "string",
                    "description": "yourvrackname\n"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackOrder:VrackOrder"
                    },
                    "description": "Details about an Order\n"
                },
                "ovhSubsidiary": {
                    "type": "string",
                    "description": "Ovh Subsidiary\n",
                    "willReplaceOnChanges": true
                },
                "paymentMean": {
                    "type": "string",
                    "description": "Ovh payment mode\n",
                    "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                    "willReplaceOnChanges": true
                },
                "plan": {
                    "$ref": "#/types/ovh:Vrack/VrackPlan:VrackPlan",
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                },
                "planOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/ovh:Vrack/VrackPlanOption:VrackPlanOption"
                    },
                    "description": "Product Plan to order\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vrack resources.\n",
                "properties": {
                    "VrackURN": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "yourvrackdescription\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "yourvrackname\n"
                    },
                    "orders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vrack/VrackOrder:VrackOrder"
                        },
                        "description": "Details about an Order\n"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "description": "Ovh Subsidiary\n",
                        "willReplaceOnChanges": true
                    },
                    "paymentMean": {
                        "type": "string",
                        "description": "Ovh payment mode\n",
                        "deprecationMessage": "This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.",
                        "willReplaceOnChanges": true
                    },
                    "plan": {
                        "$ref": "#/types/ovh:Vrack/VrackPlan:VrackPlan",
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "planOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Vrack/VrackPlanOption:VrackPlanOption"
                        },
                        "description": "Product Plan to order\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "description": "The internal name of your vrack\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "ovh:Cloud/getProject:getProject": {
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "access": {
                        "type": "string"
                    },
                    "creationDate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Cloud/getProjectIam:getProjectIam"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "manualQuota": {
                        "type": "boolean"
                    },
                    "orderId": {
                        "type": "number"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "projectName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "unleash": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "access",
                    "creationDate",
                    "description",
                    "expiration",
                    "iam",
                    "manualQuota",
                    "orderId",
                    "planCode",
                    "projectId",
                    "projectName",
                    "serviceName",
                    "status",
                    "unleash",
                    "id"
                ]
            }
        },
        "ovh:Cloud/getProjects:getProjects": {
            "outputs": {
                "description": "A collection of values returned by getProjects.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Cloud/getProjectsProject:getProjectsProject"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "projects",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerFilter:getCapabilitiesContainerFilter": {
            "inputs": {
                "description": "A collection of arguments for invoking getCapabilitiesContainerFilter.\n",
                "properties": {
                    "planName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "planName",
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCapabilitiesContainerFilter.\n",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerFilterFeature:getCapabilitiesContainerFilterFeature"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "planName": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registryLimits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerFilterRegistryLimit:getCapabilitiesContainerFilterRegistryLimit"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "code",
                    "createdAt",
                    "features",
                    "name",
                    "planName",
                    "region",
                    "registryLimits",
                    "serviceName",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getCapabilitiesContainerRegistry:getCapabilitiesContainerRegistry": {
            "inputs": {
                "description": "A collection of arguments for invoking getCapabilitiesContainerRegistry.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCapabilitiesContainerRegistry.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getCapabilitiesContainerRegistryResult:getCapabilitiesContainerRegistryResult"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistries:getContainerRegistries": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistries.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistries.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getContainerRegistriesResult:getContainerRegistriesResult"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistry:getContainerRegistry": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistry.\n",
                "properties": {
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistry.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "name",
                    "projectId",
                    "region",
                    "registryId",
                    "serviceName",
                    "size",
                    "status",
                    "updatedAt",
                    "url",
                    "version",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistryIPRestrictionsManagement:getContainerRegistryIPRestrictionsManagement": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryIPRestrictionsManagement.\n",
                "properties": {
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryIPRestrictionsManagement.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ipRestrictions",
                    "registryId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistryIPRestrictionsRegistry:getContainerRegistryIPRestrictionsRegistry": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryIPRestrictionsRegistry.\n",
                "properties": {
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryIPRestrictionsRegistry.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ipRestrictions",
                    "registryId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistryOIDC:getContainerRegistryOIDC": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryOIDC.\n",
                "properties": {
                    "oidcAdminGroup": {
                        "type": "string"
                    },
                    "oidcAutoOnboard": {
                        "type": "boolean"
                    },
                    "oidcClientId": {
                        "type": "string"
                    },
                    "oidcEndpoint": {
                        "type": "string"
                    },
                    "oidcGroupsClaim": {
                        "type": "string"
                    },
                    "oidcName": {
                        "type": "string"
                    },
                    "oidcScope": {
                        "type": "string"
                    },
                    "oidcUserClaim": {
                        "type": "string"
                    },
                    "oidcVerifyCert": {
                        "type": "boolean"
                    },
                    "registryId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryOIDC.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "oidcAdminGroup": {
                        "type": "string"
                    },
                    "oidcAutoOnboard": {
                        "type": "boolean"
                    },
                    "oidcClientId": {
                        "type": "string"
                    },
                    "oidcEndpoint": {
                        "type": "string"
                    },
                    "oidcGroupsClaim": {
                        "type": "string"
                    },
                    "oidcName": {
                        "type": "string"
                    },
                    "oidcScope": {
                        "type": "string"
                    },
                    "oidcUserClaim": {
                        "type": "string"
                    },
                    "oidcVerifyCert": {
                        "type": "boolean"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getContainerRegistryUsers:getContainerRegistryUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getContainerRegistryUsers.\n",
                "properties": {
                    "registryId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getContainerRegistryUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "registryId": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getContainerRegistryUsersResult:getContainerRegistryUsersResult"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "registryId",
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getFailoverIpAttach:getFailoverIpAttach": {
            "inputs": {
                "description": "A collection of arguments for invoking getFailoverIpAttach.\n",
                "properties": {
                    "block": {
                        "type": "string"
                    },
                    "continentCode": {
                        "type": "string"
                    },
                    "geoLoc": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "routedTo": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFailoverIpAttach.\n",
                "properties": {
                    "block": {
                        "type": "string"
                    },
                    "continentCode": {
                        "type": "string"
                    },
                    "geoLoc": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "progress": {
                        "type": "integer"
                    },
                    "routedTo": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "block",
                    "continentCode",
                    "geoLoc",
                    "id",
                    "ip",
                    "progress",
                    "routedTo",
                    "serviceName",
                    "status",
                    "subType"
                ]
            }
        },
        "ovh:CloudProject/getFlavors:getFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getFlavors.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFlavors.\n",
                "properties": {
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getFlavorsFlavor:getFlavorsFlavor"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "flavors",
                    "region",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getFloatingIPs:getFloatingIPs": {
            "inputs": {
                "description": "A collection of arguments for invoking getFloatingIPs.\n",
                "properties": {
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFloatingIPs.\n",
                "properties": {
                    "cloudProjectFloatingips": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getFloatingIPsCloudProjectFloatingip:getFloatingIPsCloudProjectFloatingip"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cloudProjectFloatingips",
                    "regionName",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getGatewayInterface:getGatewayInterface": {
            "inputs": {
                "description": "A collection of arguments for invoking getGatewayInterface.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGatewayInterface.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "interfaceId": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnetId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "interfaceId",
                    "ip",
                    "networkId",
                    "region",
                    "serviceName",
                    "subnetId"
                ]
            }
        },
        "ovh:CloudProject/getInstance:getInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstance.\n",
                "properties": {
                    "instanceId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instanceId",
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstance.\n",
                "properties": {
                    "addresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getInstanceAddress:getInstanceAddress"
                        }
                    },
                    "attachedVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getInstanceAttachedVolume:getInstanceAttachedVolume"
                        }
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "imageId": {
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sshKey": {
                        "type": "string"
                    },
                    "taskState": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "addresses",
                    "attachedVolumes",
                    "availabilityZone",
                    "flavorId",
                    "flavorName",
                    "imageId",
                    "instanceId",
                    "name",
                    "region",
                    "serviceName",
                    "sshKey",
                    "taskState",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getInstances:getInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstances.\n",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "region",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstances.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "instances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getInstancesInstance:getInstancesInstance"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "instances",
                    "region",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKube:getKube": {
            "inputs": {
                "description": "A collection of arguments for invoking getKube.\n",
                "properties": {
                    "customizationApiservers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver"
                        }
                    },
                    "customizationKubeProxy": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomizationKubeProxy:getKubeCustomizationKubeProxy"
                    },
                    "customizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeCustomization:getKubeCustomization"
                        },
                        "deprecationMessage": "Use customization_apiserver instead"
                    },
                    "kubeId": {
                        "type": "string"
                    },
                    "kubeProxyMode": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "updatePolicy": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKube.\n",
                "properties": {
                    "controlPlaneIsUpToDate": {
                        "type": "boolean"
                    },
                    "customizationApiservers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeCustomizationApiserver:getKubeCustomizationApiserver"
                        }
                    },
                    "customizationKubeProxy": {
                        "$ref": "#/types/ovh:CloudProject/getKubeCustomizationKubeProxy:getKubeCustomizationKubeProxy"
                    },
                    "customizations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeCustomization:getKubeCustomization"
                        },
                        "deprecationMessage": "Use customization_apiserver instead"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isUpToDate": {
                        "type": "boolean"
                    },
                    "kubeId": {
                        "type": "string"
                    },
                    "kubeProxyMode": {
                        "type": "string"
                    },
                    "loadBalancersSubnetId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nextUpgradeVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nodesSubnetId": {
                        "type": "string"
                    },
                    "nodesUrl": {
                        "type": "string"
                    },
                    "privateNetworkId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "updatePolicy": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "controlPlaneIsUpToDate",
                    "customizations",
                    "customizationApiservers",
                    "isUpToDate",
                    "kubeId",
                    "loadBalancersSubnetId",
                    "nextUpgradeVersions",
                    "nodesSubnetId",
                    "nodesUrl",
                    "privateNetworkId",
                    "serviceName",
                    "status",
                    "url",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeIpRestrictions:getKubeIpRestrictions": {
            "inputs": {
                "description": "A collection of arguments for invoking getKubeIpRestrictions.\n",
                "properties": {
                    "kubeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeIpRestrictions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "kubeId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ips",
                    "kubeId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeNodePool:getKubeNodePool": {
            "inputs": {
                "description": "A collection of arguments for invoking getKubeNodePool.\n",
                "properties": {
                    "kubeId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "template": {
                        "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplate:getKubeNodePoolTemplate"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeNodePool.\n",
                "properties": {
                    "antiAffinity": {
                        "type": "boolean"
                    },
                    "autoscale": {
                        "type": "boolean"
                    },
                    "autoscalingScaleDownUnneededTimeSeconds": {
                        "type": "integer"
                    },
                    "autoscalingScaleDownUnreadyTimeSeconds": {
                        "type": "integer"
                    },
                    "autoscalingScaleDownUtilizationThreshold": {
                        "type": "number"
                    },
                    "availableNodes": {
                        "type": "integer"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "currentNodes": {
                        "type": "integer"
                    },
                    "desiredNodes": {
                        "type": "integer"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "flavorName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string"
                    },
                    "maxNodes": {
                        "type": "integer"
                    },
                    "minNodes": {
                        "type": "integer"
                    },
                    "monthlyBilled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sizeStatus": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "template": {
                        "$ref": "#/types/ovh:CloudProject/getKubeNodePoolTemplate:getKubeNodePoolTemplate"
                    },
                    "upToDateNodes": {
                        "type": "integer"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "antiAffinity",
                    "autoscale",
                    "autoscalingScaleDownUnneededTimeSeconds",
                    "autoscalingScaleDownUnreadyTimeSeconds",
                    "autoscalingScaleDownUtilizationThreshold",
                    "availableNodes",
                    "createdAt",
                    "currentNodes",
                    "desiredNodes",
                    "flavor",
                    "flavorName",
                    "kubeId",
                    "maxNodes",
                    "minNodes",
                    "monthlyBilled",
                    "name",
                    "projectId",
                    "serviceName",
                    "sizeStatus",
                    "status",
                    "upToDateNodes",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeNodePoolNodes:getKubeNodePoolNodes": {
            "inputs": {
                "description": "A collection of arguments for invoking getKubeNodePoolNodes.\n",
                "properties": {
                    "kubeId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeNodePoolNodes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeNodePoolNodesNode:getKubeNodePoolNodesNode"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "name",
                    "nodes",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeNodes:getKubeNodes": {
            "inputs": {
                "description": "A collection of arguments for invoking getKubeNodes.\n",
                "properties": {
                    "kubeId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeNodes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubeId": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getKubeNodesNode:getKubeNodesNode"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "nodes",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getKubeOidc:getKubeOidc": {
            "inputs": {
                "description": "A collection of arguments for invoking getKubeOidc.\n",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "issuerUrl": {
                        "type": "string"
                    },
                    "kubeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "oidcCaContent": {
                        "type": "string"
                    },
                    "oidcGroupsClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcGroupsPrefix": {
                        "type": "string"
                    },
                    "oidcRequiredClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcSigningAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcUsernameClaim": {
                        "type": "string"
                    },
                    "oidcUsernamePrefix": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKubeOidc.\n",
                "properties": {
                    "clientId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "issuerUrl": {
                        "type": "string"
                    },
                    "kubeId": {
                        "type": "string"
                    },
                    "oidcCaContent": {
                        "type": "string"
                    },
                    "oidcGroupsClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcGroupsPrefix": {
                        "type": "string"
                    },
                    "oidcRequiredClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcSigningAlgs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "oidcUsernameClaim": {
                        "type": "string"
                    },
                    "oidcUsernamePrefix": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "kubeId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getLoadBalancer:getLoadBalancer": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoadBalancer.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoadBalancer.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "flavorId": {
                        "type": "string"
                    },
                    "floatingIp": {
                        "$ref": "#/types/ovh:CloudProject/getLoadBalancerFloatingIp:getLoadBalancerFloatingIp"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "operatingStatus": {
                        "type": "string"
                    },
                    "provisioningStatus": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "vipAddress": {
                        "type": "string"
                    },
                    "vipNetworkId": {
                        "type": "string"
                    },
                    "vipSubnetId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "flavorId",
                    "floatingIp",
                    "id",
                    "name",
                    "operatingStatus",
                    "provisioningStatus",
                    "regionName",
                    "serviceName",
                    "updatedAt",
                    "vipAddress",
                    "vipNetworkId",
                    "vipSubnetId"
                ]
            }
        },
        "ovh:CloudProject/getLoadBalancerFlavors:getLoadBalancerFlavors": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoadBalancerFlavors.\n",
                "properties": {
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoadBalancerFlavors.\n",
                "properties": {
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getLoadBalancerFlavorsFlavor:getLoadBalancerFlavorsFlavor"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "flavors",
                    "regionName",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getLoadBalancers:getLoadBalancers": {
            "inputs": {
                "description": "A collection of arguments for invoking getLoadBalancers.\n",
                "properties": {
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLoadBalancers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "loadbalancers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getLoadBalancersLoadbalancer:getLoadBalancersLoadbalancer"
                        }
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "loadbalancers",
                    "regionName",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getM3dbNamespace:getM3dbNamespace": {
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbNamespace.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbNamespace.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resolution": {
                        "type": "string"
                    },
                    "retentionBlockDataExpirationDuration": {
                        "type": "string"
                    },
                    "retentionBlockSizeDuration": {
                        "type": "string"
                    },
                    "retentionBufferFutureDuration": {
                        "type": "string"
                    },
                    "retentionBufferPastDuration": {
                        "type": "string"
                    },
                    "retentionPeriodDuration": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "snapshotEnabled": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "writesToCommitLogEnabled": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "resolution",
                    "retentionBlockDataExpirationDuration",
                    "retentionBlockSizeDuration",
                    "retentionBufferFutureDuration",
                    "retentionBufferPastDuration",
                    "retentionPeriodDuration",
                    "serviceName",
                    "snapshotEnabled",
                    "type",
                    "writesToCommitLogEnabled",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getM3dbNamespaces:getM3dbNamespaces": {
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbNamespaces.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbNamespaces.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "namespaceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "namespaceIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getM3dbUser:getM3dbUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getM3dbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getM3dbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "group",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getMongoDbPrometheus:getMongoDbPrometheus": {
            "inputs": {
                "description": "A collection of arguments for invoking getMongoDbPrometheus.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMongoDbPrometheus.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "srvDomain": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName",
                    "srvDomain",
                    "username",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getMongoDbUser:getMongoDbUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getMongoDbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMongoDbUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "name",
                    "roles",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getNetworkPrivate:getNetworkPrivate": {
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkPrivate.\n",
                "properties": {
                    "networkId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "networkId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkPrivate.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "regions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getNetworkPrivateRegion:getNetworkPrivateRegion"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "number"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "networkId",
                    "regions",
                    "serviceName",
                    "status",
                    "type",
                    "vlanId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getNetworkPrivateSubnets:getNetworkPrivateSubnets": {
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkPrivateSubnets.\n",
                "properties": {
                    "networkId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "networkId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkPrivateSubnets.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "networkId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getNetworkPrivateSubnetsSubnet:getNetworkPrivateSubnetsSubnet"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "networkId",
                    "serviceName",
                    "subnets",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getNetworkPrivates:getNetworkPrivates": {
            "inputs": {
                "description": "A collection of arguments for invoking getNetworkPrivates.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetworkPrivates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getNetworkPrivatesNetwork:getNetworkPrivatesNetwork"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "networks",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getOpenSearchPattern:getOpenSearchPattern": {
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchPattern.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchPattern.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "maxIndexCount": {
                        "type": "integer"
                    },
                    "pattern": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "maxIndexCount",
                    "pattern",
                    "serviceName"
                ]
            }
        },
        "ovh:CloudProject/getOpenSearchPatterns:getOpenSearchPatterns": {
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchPatterns.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchPatterns.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "patternIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "patternIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getOpenSearchUser:getOpenSearchUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getOpenSearchUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOpenSearchUser.\n",
                "properties": {
                    "acls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getOpenSearchUserAcl:getOpenSearchUserAcl"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "acls",
                    "clusterId",
                    "createdAt",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getPrometheus:getPrometheus": {
            "inputs": {
                "description": "A collection of arguments for invoking getPrometheus.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "engine": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrometheus.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getPrometheusTarget:getPrometheusTarget"
                        }
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName",
                    "targets",
                    "username",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRancher:getRancher": {
            "inputs": {
                "description": "A collection of arguments for invoking getRancher.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRancher.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "currentState": {
                        "$ref": "#/types/ovh:CloudProject/getRancherCurrentState:getRancherCurrentState"
                    },
                    "currentTasks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getRancherCurrentTask:getRancherCurrentTask"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "resourceStatus": {
                        "type": "string"
                    },
                    "targetSpec": {
                        "$ref": "#/types/ovh:CloudProject/getRancherTargetSpec:getRancherTargetSpec"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "currentState",
                    "currentTasks",
                    "id",
                    "projectId",
                    "resourceStatus",
                    "targetSpec",
                    "updatedAt"
                ]
            }
        },
        "ovh:CloudProject/getRancherPlan:getRancherPlan": {
            "inputs": {
                "description": "A collection of arguments for invoking getRancherPlan.\n",
                "properties": {
                    "projectId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRancherPlan.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getRancherPlanPlan:getRancherPlanPlan"
                        }
                    },
                    "projectId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "plans",
                    "projectId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRancherVersion:getRancherVersion": {
            "inputs": {
                "description": "A collection of arguments for invoking getRancherVersion.\n",
                "properties": {
                    "projectId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRancherVersion.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getRancherVersionVersion:getRancherVersionVersion"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "projectId",
                    "versions",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRedisUser:getRedisUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getRedisUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRedisUser.\n",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "categories",
                    "channels",
                    "clusterId",
                    "commands",
                    "createdAt",
                    "keys",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegion:getRegion": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegion.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegion.\n",
                "properties": {
                    "continentCode": {
                        "type": "string"
                    },
                    "datacenterLocation": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getRegionService:getRegionService"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "continentCode",
                    "datacenterLocation",
                    "name",
                    "serviceName",
                    "services",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegionLoadBalancerLogSubscription:getRegionLoadBalancerLogSubscription": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegionLoadBalancerLogSubscription.\n",
                "properties": {
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "loadbalancerId",
                    "regionName",
                    "serviceName",
                    "subscriptionId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegionLoadBalancerLogSubscription.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "ldpServiceName": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "kind",
                    "ldpServiceName",
                    "loadbalancerId",
                    "regionName",
                    "resourceName",
                    "resourceType",
                    "serviceName",
                    "streamId",
                    "subscriptionId",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegionLoadBalancerLogSubscriptions:getRegionLoadBalancerLogSubscriptions": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegionLoadBalancerLogSubscriptions.\n",
                "properties": {
                    "kind": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "loadbalancerId",
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegionLoadBalancerLogSubscriptions.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "loadbalancerId": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "loadbalancerId",
                    "regionName",
                    "serviceName",
                    "subscriptionIds",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getRegions:getRegions": {
            "inputs": {
                "description": "A collection of arguments for invoking getRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getRegions.\n",
                "properties": {
                    "hasServicesUps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "names": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "names",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getStorage:getStorage": {
            "inputs": {
                "description": "A collection of arguments for invoking getStorage.\n",
                "properties": {
                    "limit": {
                        "type": "number"
                    },
                    "marker": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStorage.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "encryption": {
                        "$ref": "#/types/ovh:CloudProject/getStorageEncryption:getStorageEncryption"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "limit": {
                        "type": "number"
                    },
                    "marker": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getStorageObject:getStorageObject"
                        }
                    },
                    "objectsCount": {
                        "type": "number"
                    },
                    "objectsSize": {
                        "type": "number"
                    },
                    "ownerId": {
                        "type": "number"
                    },
                    "prefix": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "replication": {
                        "$ref": "#/types/ovh:CloudProject/getStorageReplication:getStorageReplication"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "versioning": {
                        "$ref": "#/types/ovh:CloudProject/getStorageVersioning:getStorageVersioning"
                    },
                    "virtualHost": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "encryption",
                    "limit",
                    "marker",
                    "name",
                    "objects",
                    "objectsCount",
                    "objectsSize",
                    "ownerId",
                    "prefix",
                    "region",
                    "regionName",
                    "replication",
                    "serviceName",
                    "tags",
                    "versioning",
                    "virtualHost",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getStorages:getStorages": {
            "inputs": {
                "description": "A collection of arguments for invoking getStorages.\n",
                "properties": {
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getStorages.\n",
                "properties": {
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getStoragesContainer:getStoragesContainer"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "containers",
                    "regionName",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUser:getUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "creationDate": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getUserRole:getUserRole"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "description",
                    "roles",
                    "serviceName",
                    "status",
                    "userId",
                    "username",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUserS3Credential:getUserS3Credential": {
            "inputs": {
                "description": "A collection of arguments for invoking getUserS3Credential.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyId",
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserS3Credential.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyId",
                    "secretAccessKey",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUserS3Credentials:getUserS3Credentials": {
            "inputs": {
                "description": "A collection of arguments for invoking getUserS3Credentials.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserS3Credentials.\n",
                "properties": {
                    "accessKeyIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessKeyIds",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUserS3Policy:getUserS3Policy": {
            "inputs": {
                "description": "A collection of arguments for invoking getUserS3Policy.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "userId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUserS3Policy.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "policy": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "policy",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getUsers:getUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "serviceName": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getUsersUser:getUsersUser"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "users",
                    "id"
                ]
            }
        },
        "ovh:CloudProject/getVRack:getVRack": {
            "inputs": {
                "description": "A collection of arguments for invoking getVRack.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVRack.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "id",
                    "name",
                    "serviceName"
                ]
            }
        },
        "ovh:CloudProject/getVolume:getVolume": {
            "inputs": {
                "description": "A collection of arguments for invoking getVolume.\n",
                "properties": {
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "volumeId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName",
                    "volumeId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVolume.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "volumeId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "regionName",
                    "serviceName",
                    "size",
                    "volumeId"
                ]
            }
        },
        "ovh:CloudProject/getVolumes:getVolumes": {
            "inputs": {
                "description": "A collection of arguments for invoking getVolumes.\n",
                "properties": {
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVolumes.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "regionName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "volumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProject/getVolumesVolume:getVolumesVolume"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "regionName",
                    "serviceName",
                    "volumes",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getCapabilities:getCapabilities": {
            "inputs": {
                "description": "A collection of arguments for invoking getCapabilities.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCapabilities.\n",
                "properties": {
                    "engines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesEngine:getCapabilitiesEngine"
                        }
                    },
                    "flavors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesFlavor:getCapabilitiesFlavor"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesOption:getCapabilitiesOption"
                        }
                    },
                    "plans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getCapabilitiesPlan:getCapabilitiesPlan"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "engines",
                    "flavors",
                    "options",
                    "plans",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getCertificates:getCertificates": {
            "inputs": {
                "description": "A collection of arguments for invoking getCertificates.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCertificates.\n",
                "properties": {
                    "ca": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ca",
                    "clusterId",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabase:getDatabase": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabase.\n",
                "properties": {
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "engine",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabase.\n",
                "properties": {
                    "advancedConfiguration": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "backupRegions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "backupTime": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskSize": {
                        "type": "integer"
                    },
                    "diskType": {
                        "type": "string"
                    },
                    "endpoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getDatabaseEndpoint:getDatabaseEndpoint"
                        }
                    },
                    "engine": {
                        "type": "string"
                    },
                    "flavor": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipRestrictions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getDatabaseIpRestriction:getDatabaseIpRestriction"
                        }
                    },
                    "kafkaRestApi": {
                        "type": "boolean"
                    },
                    "kafkaSchemaRegistry": {
                        "type": "boolean"
                    },
                    "maintenanceTime": {
                        "type": "string"
                    },
                    "networkType": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:CloudProjectDatabase/getDatabaseNode:getDatabaseNode"
                        }
                    },
                    "opensearchAclsEnabled": {
                        "type": "boolean"
                    },
                    "plan": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "advancedConfiguration",
                    "backupRegions",
                    "backupTime",
                    "createdAt",
                    "description",
                    "diskSize",
                    "diskType",
                    "endpoints",
                    "engine",
                    "flavor",
                    "id",
                    "ipRestrictions",
                    "kafkaRestApi",
                    "kafkaSchemaRegistry",
                    "maintenanceTime",
                    "networkType",
                    "nodes",
                    "opensearchAclsEnabled",
                    "plan",
                    "serviceName",
                    "status",
                    "version"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseInstance:getDatabaseInstance": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseInstance.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseInstance.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "default",
                    "engine",
                    "name",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseInstances:getDatabaseInstances": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseInstances.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseInstances.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "databaseIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "databaseIds",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseIntegration:getDatabaseIntegration": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseIntegration.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseIntegration.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "destinationServiceId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sourceServiceId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "destinationServiceId",
                    "engine",
                    "id",
                    "parameters",
                    "serviceName",
                    "sourceServiceId",
                    "status",
                    "type"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseIntegrations:getDatabaseIntegrations": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseIntegrations.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseIntegrations.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "integrationIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "integrationIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseLogSubscription:getDatabaseLogSubscription": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseLogSubscription.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseLogSubscription.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "ldpServiceName": {
                        "type": "string",
                        "secret": true
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "resourceType": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "engine",
                    "id",
                    "kind",
                    "ldpServiceName",
                    "resourceName",
                    "resourceType",
                    "serviceName",
                    "streamId",
                    "updatedAt"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabaseLogSubscriptions:getDatabaseLogSubscriptions": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabaseLogSubscriptions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabaseLogSubscriptions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subscriptionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName",
                    "subscriptionIds",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabasePostgreSQLConnectionPools:getDatabasePostgreSQLConnectionPools": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabasePostgreSQLConnectionPools.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabasePostgreSQLConnectionPools.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "connectionPoolIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "connectionPoolIds",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getDatabases:getDatabases": {
            "inputs": {
                "description": "A collection of arguments for invoking getDatabases.\n",
                "properties": {
                    "engine": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDatabases.\n",
                "properties": {
                    "clusterIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterIds",
                    "engine",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getIpRestrictions:getIpRestrictions": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpRestrictions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIpRestrictions.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "ips",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaAcl:getKafkaAcl": {
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "topic": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "permission",
                    "serviceName",
                    "topic",
                    "username"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaAcls:getKafkaAcls": {
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaAcls.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaAcls.\n",
                "properties": {
                    "aclIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "aclIds",
                    "clusterId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaSchemaRegistryAcl:getKafkaSchemaRegistryAcl": {
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaRegistryAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaRegistryAcl.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "permission": {
                        "type": "string"
                    },
                    "resource": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "permission",
                    "resource",
                    "serviceName",
                    "username"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaSchemaRegistryAcls:getKafkaSchemaRegistryAcls": {
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaSchemaRegistryAcls.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaSchemaRegistryAcls.\n",
                "properties": {
                    "aclIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "aclIds",
                    "clusterId",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaTopic:getKafkaTopic": {
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopic.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "minInsyncReplicas": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partitions": {
                        "type": "integer"
                    },
                    "replication": {
                        "type": "integer"
                    },
                    "retentionBytes": {
                        "type": "integer"
                    },
                    "retentionHours": {
                        "type": "integer"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "id",
                    "minInsyncReplicas",
                    "name",
                    "partitions",
                    "replication",
                    "retentionBytes",
                    "retentionHours",
                    "serviceName"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaTopics:getKafkaTopics": {
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaTopics.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaTopics.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "topicIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName",
                    "topicIds",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getKafkaUserAccess:getKafkaUserAccess": {
            "inputs": {
                "description": "A collection of arguments for invoking getKafkaUserAccess.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getKafkaUserAccess.\n",
                "properties": {
                    "cert": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "key": {
                        "type": "string",
                        "secret": true
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cert",
                    "clusterId",
                    "key",
                    "serviceName",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getPostgresSqlConnectionPool:getPostgresSqlConnectionPool": {
            "inputs": {
                "description": "A collection of arguments for invoking getPostgresSqlConnectionPool.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPostgresSqlConnectionPool.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "databaseId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "sslMode": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "databaseId",
                    "mode",
                    "name",
                    "port",
                    "serviceName",
                    "size",
                    "sslMode",
                    "uri",
                    "userId",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getPostgresSqlUser:getPostgresSqlUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getPostgresSqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPostgresSqlUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "name",
                    "roles",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getUser:getUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "createdAt",
                    "engine",
                    "name",
                    "serviceName",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:CloudProjectDatabase/getUsers:getUsers": {
            "inputs": {
                "description": "A collection of arguments for invoking getUsers.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUsers.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "engine": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "engine",
                    "serviceName",
                    "userIds",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsCluster:getLogsCluster": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogsCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsCluster.\n",
                "properties": {
                    "archiveAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "clusterType": {
                        "type": "string"
                    },
                    "dedicatedInputPem": {
                        "type": "string",
                        "secret": true
                    },
                    "directInputAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "directInputPem": {
                        "type": "string",
                        "secret": true
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isDefault": {
                        "type": "boolean"
                    },
                    "isUnlocked": {
                        "type": "boolean"
                    },
                    "queryAllowedNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "archiveAllowedNetworks",
                    "clusterId",
                    "clusterType",
                    "dedicatedInputPem",
                    "directInputAllowedNetworks",
                    "directInputPem",
                    "hostname",
                    "isDefault",
                    "isUnlocked",
                    "queryAllowedNetworks",
                    "region",
                    "serviceName",
                    "urn",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsClusters:getLogsClusters": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogsClusters.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsClusters.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    },
                    "uuids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "urn",
                    "uuids",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsClustersRetention:getLogsClustersRetention": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogsClustersRetention.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "retentionId": {
                        "type": "string"
                    },
                    "retentionType": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsClustersRetention.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isSupported": {
                        "type": "boolean"
                    },
                    "retentionId": {
                        "type": "string"
                    },
                    "retentionType": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "duration",
                    "isSupported",
                    "retentionId",
                    "retentionType",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsInputEngine:getLogsInputEngine": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogsInputEngine.\n",
                "properties": {
                    "isDeprecated": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsInputEngine.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "isDeprecated": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "isDeprecated",
                    "name",
                    "serviceName",
                    "version",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsOutputGraylogStream:getLogsOutputGraylogStream": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogsOutputGraylogStream.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "title"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsOutputGraylogStream.\n",
                "properties": {
                    "canAlert": {
                        "type": "boolean"
                    },
                    "coldStorageCompression": {
                        "type": "string"
                    },
                    "coldStorageContent": {
                        "type": "string"
                    },
                    "coldStorageEnabled": {
                        "type": "boolean"
                    },
                    "coldStorageNotifyEnabled": {
                        "type": "boolean"
                    },
                    "coldStorageRetention": {
                        "type": "integer"
                    },
                    "coldStorageTarget": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "indexingEnabled": {
                        "type": "boolean"
                    },
                    "indexingMaxSize": {
                        "type": "integer"
                    },
                    "indexingNotifyEnabled": {
                        "type": "boolean"
                    },
                    "isEditable": {
                        "type": "boolean"
                    },
                    "isShareable": {
                        "type": "boolean"
                    },
                    "nbAlertCondition": {
                        "type": "integer"
                    },
                    "nbArchive": {
                        "type": "integer"
                    },
                    "parentStreamId": {
                        "type": "string"
                    },
                    "pauseIndexingOnMaxSize": {
                        "type": "boolean"
                    },
                    "retentionId": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "streamId": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "webSocketEnabled": {
                        "type": "boolean"
                    },
                    "writeToken": {
                        "type": "string",
                        "secret": true
                    }
                },
                "type": "object",
                "required": [
                    "canAlert",
                    "coldStorageCompression",
                    "coldStorageContent",
                    "coldStorageEnabled",
                    "coldStorageNotifyEnabled",
                    "coldStorageRetention",
                    "coldStorageTarget",
                    "createdAt",
                    "description",
                    "indexingEnabled",
                    "indexingMaxSize",
                    "indexingNotifyEnabled",
                    "isEditable",
                    "isShareable",
                    "nbAlertCondition",
                    "nbArchive",
                    "parentStreamId",
                    "pauseIndexingOnMaxSize",
                    "retentionId",
                    "serviceName",
                    "streamId",
                    "title",
                    "updatedAt",
                    "webSocketEnabled",
                    "writeToken",
                    "id"
                ]
            }
        },
        "ovh:Dbaas/getLogsOutputOpenSearchIndex:getLogsOutputOpenSearchIndex": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogsOutputOpenSearchIndex.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "nbShard": {
                        "type": "integer"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogsOutputOpenSearchIndex.\n",
                "properties": {
                    "alertNotifyEnabled": {
                        "type": "boolean"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "currentSize": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "indexId": {
                        "type": "string"
                    },
                    "isEditable": {
                        "type": "boolean"
                    },
                    "maxSize": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nbShard": {
                        "type": "integer"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "alertNotifyEnabled",
                    "createdAt",
                    "currentSize",
                    "description",
                    "indexId",
                    "isEditable",
                    "maxSize",
                    "name",
                    "nbShard",
                    "serviceName",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getCeph:getCeph": {
            "inputs": {
                "description": "A collection of arguments for invoking getCeph.\n",
                "properties": {
                    "cephVersion": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCeph.\n",
                "properties": {
                    "CephURN": {
                        "type": "string"
                    },
                    "cephMons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cephVersion": {
                        "type": "string"
                    },
                    "crushTunables": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "label": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "state": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cephMons",
                    "cephVersion",
                    "crushTunables",
                    "label",
                    "region",
                    "serviceName",
                    "size",
                    "state",
                    "status",
                    "CephURN",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getNasHA:getNasHA": {
            "inputs": {
                "description": "A collection of arguments for invoking getNasHA.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNasHA.\n",
                "properties": {
                    "NasHAURN": {
                        "type": "string"
                    },
                    "canCreatePartition": {
                        "type": "boolean"
                    },
                    "customName": {
                        "type": "string"
                    },
                    "datacenter": {
                        "type": "string"
                    },
                    "diskType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "monitored": {
                        "type": "boolean"
                    },
                    "partitionsLists": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "zpoolCapacity": {
                        "type": "number"
                    },
                    "zpoolSize": {
                        "type": "number"
                    }
                },
                "type": "object",
                "required": [
                    "canCreatePartition",
                    "customName",
                    "datacenter",
                    "diskType",
                    "ip",
                    "monitored",
                    "partitionsLists",
                    "serviceName",
                    "NasHAURN",
                    "zpoolCapacity",
                    "zpoolSize",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getNasHAPartition:getNasHAPartition": {
            "inputs": {
                "description": "A collection of arguments for invoking getNasHAPartition.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNasHAPartition.\n",
                "properties": {
                    "capacity": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "usedBySnapshots": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "capacity",
                    "description",
                    "name",
                    "protocol",
                    "serviceName",
                    "size",
                    "usedBySnapshots",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getServerBoots:getServerBoots": {
            "inputs": {
                "description": "A collection of arguments for invoking getServerBoots.\n",
                "properties": {
                    "bootType": {
                        "type": "string"
                    },
                    "kernel": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerBoots.\n",
                "properties": {
                    "bootType": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kernel": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getServerSpecificationsHardware:getServerSpecificationsHardware": {
            "inputs": {
                "description": "A collection of arguments for invoking getServerSpecificationsHardware.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerSpecificationsHardware.\n",
                "properties": {
                    "bootMode": {
                        "type": "string"
                    },
                    "coresPerProcessor": {
                        "type": "number"
                    },
                    "defaultHardwareRaidSize": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareDefaultHardwareRaidSize:getServerSpecificationsHardwareDefaultHardwareRaidSize"
                    },
                    "defaultHardwareRaidType": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "diskGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareDiskGroup:getServerSpecificationsHardwareDiskGroup"
                        }
                    },
                    "expansionCards": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareExpansionCard:getServerSpecificationsHardwareExpansionCard"
                        }
                    },
                    "formFactor": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "memorySize": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareMemorySize:getServerSpecificationsHardwareMemorySize"
                    },
                    "motherboard": {
                        "type": "string"
                    },
                    "numberOfProcessors": {
                        "type": "number"
                    },
                    "processorArchitecture": {
                        "type": "string"
                    },
                    "processorName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "threadsPerProcessor": {
                        "type": "number"
                    },
                    "usbKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Dedicated/getServerSpecificationsHardwareUsbKey:getServerSpecificationsHardwareUsbKey"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "bootMode",
                    "coresPerProcessor",
                    "defaultHardwareRaidSize",
                    "defaultHardwareRaidType",
                    "description",
                    "diskGroups",
                    "expansionCards",
                    "formFactor",
                    "memorySize",
                    "motherboard",
                    "numberOfProcessors",
                    "processorArchitecture",
                    "processorName",
                    "serviceName",
                    "threadsPerProcessor",
                    "usbKeys",
                    "id"
                ]
            }
        },
        "ovh:Dedicated/getServerSpecificationsNetwork:getServerSpecificationsNetwork": {
            "inputs": {
                "description": "A collection of arguments for invoking getServerSpecificationsNetwork.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServerSpecificationsNetwork.\n",
                "properties": {
                    "bandwidth": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkBandwidth:getServerSpecificationsNetworkBandwidth"
                    },
                    "connectionVal": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkConnectionVal:getServerSpecificationsNetworkConnectionVal"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ola": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkOla:getServerSpecificationsNetworkOla"
                    },
                    "routing": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkRouting:getServerSpecificationsNetworkRouting"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "switching": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkSwitching:getServerSpecificationsNetworkSwitching"
                    },
                    "traffic": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkTraffic:getServerSpecificationsNetworkTraffic"
                    },
                    "vmac": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkVmac:getServerSpecificationsNetworkVmac"
                    },
                    "vrack": {
                        "$ref": "#/types/ovh:Dedicated/getServerSpecificationsNetworkVrack:getServerSpecificationsNetworkVrack"
                    }
                },
                "type": "object",
                "required": [
                    "bandwidth",
                    "connectionVal",
                    "ola",
                    "routing",
                    "serviceName",
                    "switching",
                    "traffic",
                    "vmac",
                    "vrack",
                    "id"
                ]
            }
        },
        "ovh:Domain/getZone:getZone": {
            "inputs": {
                "description": "A collection of arguments for invoking getZone.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZone.\n",
                "properties": {
                    "ZoneURN": {
                        "type": "string"
                    },
                    "dnssecSupported": {
                        "type": "boolean"
                    },
                    "hasDnsAnycast": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "dnssecSupported",
                    "hasDnsAnycast",
                    "lastUpdate",
                    "name",
                    "nameServers",
                    "ZoneURN",
                    "id"
                ]
            }
        },
        "ovh:Domain/getZoneDNSSec:getZoneDNSSec": {
            "inputs": {
                "description": "A collection of arguments for invoking getZoneDNSSec.\n",
                "properties": {
                    "zoneName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "zoneName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getZoneDNSSec.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "status": {
                        "type": "string"
                    },
                    "zoneName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "status",
                    "zoneName",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabase:getPrivateDatabase": {
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabase.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabase.\n",
                "properties": {
                    "cpu": {
                        "type": "integer"
                    },
                    "datacenter": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "hostname": {
                        "type": "string"
                    },
                    "hostnameFtp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "infrastructure": {
                        "type": "string"
                    },
                    "offer": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "portFtp": {
                        "type": "integer"
                    },
                    "quotaSize": {
                        "type": "integer"
                    },
                    "quotaUsed": {
                        "type": "integer"
                    },
                    "ram": {
                        "type": "integer"
                    },
                    "server": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "versionLabel": {
                        "type": "string"
                    },
                    "versionNumber": {
                        "type": "number"
                    }
                },
                "type": "object",
                "required": [
                    "cpu",
                    "datacenter",
                    "displayName",
                    "hostname",
                    "hostnameFtp",
                    "infrastructure",
                    "offer",
                    "port",
                    "portFtp",
                    "quotaSize",
                    "quotaUsed",
                    "ram",
                    "server",
                    "serviceName",
                    "state",
                    "type",
                    "urn",
                    "version",
                    "versionLabel",
                    "versionNumber",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseAllowlist:getPrivateDatabaseAllowlist": {
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseAllowlist.\n",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseAllowlist.\n",
                "properties": {
                    "creationDate": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "lastUpdate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "service": {
                        "type": "boolean"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sftp": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "lastUpdate",
                    "name",
                    "service",
                    "serviceName",
                    "sftp",
                    "status",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseDb:getPrivateDatabaseDb": {
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseDb.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseDb.\n",
                "properties": {
                    "backupTime": {
                        "type": "string"
                    },
                    "creationDate": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "quotaUsed": {
                        "type": "integer"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/getPrivateDatabaseDbUser:getPrivateDatabaseDbUser"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "backupTime",
                    "creationDate",
                    "databaseName",
                    "quotaUsed",
                    "serviceName",
                    "users",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseUser:getPrivateDatabaseUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseUser.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseUser.\n",
                "properties": {
                    "creationDate": {
                        "type": "string"
                    },
                    "databases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Hosting/getPrivateDatabaseUserDatabase:getPrivateDatabaseUserDatabase"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "databases",
                    "serviceName",
                    "userName",
                    "id"
                ]
            }
        },
        "ovh:Hosting/getPrivateDatabaseUserGrant:getPrivateDatabaseUserGrant": {
            "inputs": {
                "description": "A collection of arguments for invoking getPrivateDatabaseUserGrant.\n",
                "properties": {
                    "databaseName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "databaseName",
                    "serviceName",
                    "userName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrivateDatabaseUserGrant.\n",
                "properties": {
                    "creationDate": {
                        "type": "string"
                    },
                    "databaseName": {
                        "type": "string"
                    },
                    "grant": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creationDate",
                    "databaseName",
                    "grant",
                    "serviceName",
                    "userName",
                    "id"
                ]
            }
        },
        "ovh:Iam/getPermissionsGroup:getPermissionsGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getPermissionsGroup.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "urn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPermissionsGroup.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "id",
                    "name",
                    "owner",
                    "updatedAt",
                    "urn"
                ]
            }
        },
        "ovh:Iam/getPermissionsGroups:getPermissionsGroups": {
            "outputs": {
                "description": "A collection of values returned by getPermissionsGroups.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "urns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "urns",
                    "id"
                ]
            }
        },
        "ovh:Iam/getPolicies:getPolicies": {
            "outputs": {
                "description": "A collection of values returned by getPolicies.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "policies",
                    "id"
                ]
            }
        },
        "ovh:Iam/getPolicy:getPolicy": {
            "inputs": {
                "description": "A collection of arguments for invoking getPolicy.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "permissionsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicy.\n",
                "properties": {
                    "allows": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "denies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "excepts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "identities": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "permissionsGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "id",
                    "identities",
                    "name",
                    "owner",
                    "readOnly",
                    "resources",
                    "updatedAt"
                ]
            }
        },
        "ovh:Iam/getReferenceActions:getReferenceActions": {
            "inputs": {
                "description": "A collection of arguments for invoking getReferenceActions.\n",
                "properties": {
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getReferenceActions.\n",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Iam/getReferenceActionsAction:getReferenceActionsAction"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "actions",
                    "type",
                    "id"
                ]
            }
        },
        "ovh:Iam/getReferenceResourceType:getReferenceResourceType": {
            "outputs": {
                "description": "A collection of values returned by getReferenceResourceType.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "types",
                    "id"
                ]
            }
        },
        "ovh:Iam/getResourceGroup:getResourceGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getResourceGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getResourceGroup.\n",
                "properties": {
                    "GroupURN": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "id",
                    "name",
                    "owner",
                    "readOnly",
                    "resources",
                    "updatedAt",
                    "GroupURN"
                ]
            }
        },
        "ovh:Iam/getResourceGroups:getResourceGroups": {
            "outputs": {
                "description": "A collection of values returned by getResourceGroups.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "resourceGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "resourceGroups",
                    "id"
                ]
            }
        },
        "ovh:Ip/getFirewall:getFirewall": {
            "inputs": {
                "description": "A collection of arguments for invoking getFirewall.\n",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "ipOnFirewall": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ip",
                    "ipOnFirewall"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFirewall.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "ipOnFirewall": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "ip",
                    "ipOnFirewall",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:Ip/getFirewallRule:getFirewallRule": {
            "inputs": {
                "description": "A collection of arguments for invoking getFirewallRule.\n",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "ipOnFirewall": {
                        "type": "string"
                    },
                    "sequence": {
                        "type": "number"
                    }
                },
                "type": "object",
                "required": [
                    "ip",
                    "ipOnFirewall",
                    "sequence"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFirewallRule.\n",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "creationDate": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string"
                    },
                    "destinationPort": {
                        "type": "string"
                    },
                    "fragments": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "ipOnFirewall": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "rule": {
                        "type": "string"
                    },
                    "sequence": {
                        "type": "number"
                    },
                    "source": {
                        "type": "string"
                    },
                    "sourcePort": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "tcpOption": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "action",
                    "creationDate",
                    "destination",
                    "destinationPort",
                    "fragments",
                    "ip",
                    "ipOnFirewall",
                    "protocol",
                    "rule",
                    "sequence",
                    "source",
                    "sourcePort",
                    "state",
                    "tcpOption",
                    "id"
                ]
            }
        },
        "ovh:Ip/getMitigation:getMitigation": {
            "inputs": {
                "description": "A collection of arguments for invoking getMitigation.\n",
                "properties": {
                    "ip": {
                        "type": "string"
                    },
                    "ipOnMitigation": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "ip",
                    "ipOnMitigation"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMitigation.\n",
                "properties": {
                    "auto": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "ipOnMitigation": {
                        "type": "string"
                    },
                    "permanent": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "auto",
                    "ip",
                    "ipOnMitigation",
                    "permanent",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:Ip/getService:getService": {
            "inputs": {
                "description": "A collection of arguments for invoking getService.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getService.\n",
                "properties": {
                    "canBeTerminated": {
                        "type": "boolean"
                    },
                    "country": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "organisationId": {
                        "type": "string"
                    },
                    "routedTos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Ip/getServiceRoutedTo:getServiceRoutedTo"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "canBeTerminated",
                    "country",
                    "description",
                    "ip",
                    "organisationId",
                    "routedTos",
                    "serviceName",
                    "type",
                    "id"
                ]
            }
        },
        "ovh:IpLoadBalancing/getIpLoadBalancing:getIpLoadBalancing": {
            "inputs": {
                "description": "A collection of arguments for invoking getIpLoadBalancing.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "ipLoadbalancing": {
                        "type": "string"
                    },
                    "ipv4": {
                        "type": "string"
                    },
                    "ipv6": {
                        "type": "string"
                    },
                    "offer": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sslConfiguration": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "vrackEligibility": {
                        "type": "boolean"
                    },
                    "vrackName": {
                        "type": "string"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getIpLoadBalancing.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ipLoadbalancing": {
                        "type": "string"
                    },
                    "ipv4": {
                        "type": "string"
                    },
                    "ipv6": {
                        "type": "string"
                    },
                    "metricsToken": {
                        "type": "string",
                        "secret": true
                    },
                    "offer": {
                        "type": "string"
                    },
                    "orderableZones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:IpLoadBalancing/getIpLoadBalancingOrderableZone:getIpLoadBalancingOrderableZone"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "sslConfiguration": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "urn": {
                        "type": "string"
                    },
                    "vrackEligibility": {
                        "type": "boolean"
                    },
                    "vrackName": {
                        "type": "string"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "displayName",
                    "ipLoadbalancing",
                    "ipv4",
                    "ipv6",
                    "metricsToken",
                    "offer",
                    "orderableZones",
                    "serviceName",
                    "sslConfiguration",
                    "state",
                    "urn",
                    "vrackEligibility",
                    "vrackName",
                    "zones",
                    "id"
                ]
            }
        },
        "ovh:IpLoadBalancing/getVrackNetwork:getVrackNetwork": {
            "inputs": {
                "description": "A collection of arguments for invoking getVrackNetwork.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    },
                    "vrackNetworkId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName",
                    "vrackNetworkId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrackNetwork.\n",
                "properties": {
                    "displayName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "natIp": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    },
                    "vlan": {
                        "type": "integer"
                    },
                    "vrackNetworkId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "displayName",
                    "natIp",
                    "serviceName",
                    "subnet",
                    "vlan",
                    "vrackNetworkId",
                    "id"
                ]
            }
        },
        "ovh:Me/getAPIOAuth2Client:getAPIOAuth2Client": {
            "inputs": {
                "description": "A collection of arguments for invoking getAPIOAuth2Client.\n",
                "properties": {
                    "clientId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clientId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAPIOAuth2Client.\n",
                "properties": {
                    "callbackUrls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clientId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "flow": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "identity": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "callbackUrls",
                    "clientId",
                    "description",
                    "flow",
                    "identity",
                    "name",
                    "id"
                ]
            }
        },
        "ovh:Me/getAPIOAuth2Clients:getAPIOAuth2Clients": {
            "outputs": {
                "description": "A collection of values returned by getAPIOAuth2Clients.\n",
                "properties": {
                    "clientIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "clientIds",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityGroup:getIdentityGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityGroup.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityGroup.\n",
                "properties": {
                    "GroupURN": {
                        "type": "string"
                    },
                    "creation": {
                        "type": "string"
                    },
                    "defaultGroup": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creation",
                    "defaultGroup",
                    "description",
                    "lastUpdate",
                    "name",
                    "role",
                    "GroupURN",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityGroups:getIdentityGroups": {
            "outputs": {
                "description": "A collection of values returned by getIdentityGroups.\n",
                "properties": {
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    }
                },
                "type": "object",
                "required": [
                    "groups",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityUser:getIdentityUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getIdentityUser.\n",
                "properties": {
                    "user": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "user"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIdentityUser.\n",
                "properties": {
                    "UserURN": {
                        "type": "string"
                    },
                    "creation": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "lastUpdate": {
                        "type": "string"
                    },
                    "login": {
                        "type": "string"
                    },
                    "passwordLastUpdate": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "creation",
                    "description",
                    "email",
                    "group",
                    "lastUpdate",
                    "login",
                    "passwordLastUpdate",
                    "status",
                    "UserURN",
                    "user",
                    "id"
                ]
            }
        },
        "ovh:Me/getIdentityUsers:getIdentityUsers": {
            "outputs": {
                "description": "A collection of values returned by getIdentityUsers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "users",
                    "id"
                ]
            }
        },
        "ovh:Me/getMe:getMe": {
            "outputs": {
                "description": "A collection of values returned by getMe.\n",
                "properties": {
                    "AccountURN": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "area": {
                        "type": "string"
                    },
                    "birthCity": {
                        "type": "string"
                    },
                    "birthDay": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "companyNationalIdentificationNumber": {
                        "type": "string"
                    },
                    "corporationType": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "currencies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Me/getMeCurrency:getMeCurrency"
                        }
                    },
                    "customerCode": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "fax": {
                        "type": "string"
                    },
                    "firstname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "italianSdi": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "legalform": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nationalIdentificationNumber": {
                        "type": "string"
                    },
                    "nichandle": {
                        "type": "string"
                    },
                    "organisation": {
                        "type": "string"
                    },
                    "ovhCompany": {
                        "type": "string"
                    },
                    "ovhSubsidiary": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "phoneCountry": {
                        "type": "string"
                    },
                    "sex": {
                        "type": "string"
                    },
                    "spareEmail": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "vat": {
                        "type": "string"
                    },
                    "zip": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "address",
                    "area",
                    "birthCity",
                    "birthDay",
                    "city",
                    "companyNationalIdentificationNumber",
                    "corporationType",
                    "country",
                    "currencies",
                    "customerCode",
                    "email",
                    "fax",
                    "firstname",
                    "italianSdi",
                    "language",
                    "legalform",
                    "name",
                    "nationalIdentificationNumber",
                    "nichandle",
                    "organisation",
                    "ovhCompany",
                    "ovhSubsidiary",
                    "phone",
                    "phoneCountry",
                    "sex",
                    "spareEmail",
                    "state",
                    "AccountURN",
                    "vat",
                    "zip",
                    "id"
                ]
            }
        },
        "ovh:Me/getPaymentmeanBankAccount:getPaymentmeanBankAccount": {
            "inputs": {
                "description": "A collection of arguments for invoking getPaymentmeanBankAccount.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "state": {
                        "type": "string"
                    },
                    "useDefault": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "useOldest": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPaymentmeanBankAccount.\n",
                "properties": {
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useOldest": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:Me/getPaymentmeanCreditCard:getPaymentmeanCreditCard": {
            "inputs": {
                "description": "A collection of arguments for invoking getPaymentmeanCreditCard.\n",
                "properties": {
                    "descriptionRegexp": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "useDefault": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    },
                    "useLastToExpire": {
                        "type": "boolean",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getPaymentmeanCreditCard.\n",
                "properties": {
                    "default": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "descriptionRegexp": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "state": {
                        "type": "string"
                    },
                    "states": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "useDefault": {
                        "type": "boolean"
                    },
                    "useLastToExpire": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "default",
                    "description",
                    "state",
                    "id"
                ]
            }
        },
        "ovh:Okms/getOkmsCredential:getOkmsCredential": {
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsCredential.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "okmsId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsCredential.\n",
                "properties": {
                    "certificatePem": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "expiredAt": {
                        "type": "string"
                    },
                    "fromCsr": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "identityUrns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "certificatePem",
                    "createdAt",
                    "description",
                    "expiredAt",
                    "fromCsr",
                    "id",
                    "identityUrns",
                    "name",
                    "okmsId",
                    "status"
                ]
            }
        },
        "ovh:Okms/getOkmsResource:getOkmsResource": {
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsResource.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsResource.\n",
                "properties": {
                    "iam": {
                        "$ref": "#/types/ovh:Okms/getOkmsResourceIam:getOkmsResourceIam"
                    },
                    "id": {
                        "type": "string"
                    },
                    "kmipEndpoint": {
                        "type": "string"
                    },
                    "publicCa": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "restEndpoint": {
                        "type": "string"
                    },
                    "swaggerEndpoint": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "iam",
                    "id",
                    "kmipEndpoint",
                    "publicCa",
                    "region",
                    "restEndpoint",
                    "swaggerEndpoint"
                ]
            }
        },
        "ovh:Okms/getOkmsServiceKey:getOkmsServiceKey": {
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsServiceKey.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "okmsId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsServiceKey.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "curve": {
                        "type": "string"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/getOkmsServiceKeyIam:getOkmsServiceKeyIam"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "size": {
                        "type": "number"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "curve",
                    "iam",
                    "id",
                    "name",
                    "okmsId",
                    "operations",
                    "size",
                    "state",
                    "type"
                ]
            }
        },
        "ovh:Okms/getOkmsServiceKeyJwk:getOkmsServiceKeyJwk": {
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsServiceKeyJwk.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "okmsId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsServiceKeyJwk.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/getOkmsServiceKeyJwkIam:getOkmsServiceKeyJwkIam"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Okms/getOkmsServiceKeyJwkKey:getOkmsServiceKeyJwkKey"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    },
                    "size": {
                        "type": "number"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "iam",
                    "id",
                    "keys",
                    "name",
                    "okmsId",
                    "size",
                    "state",
                    "type"
                ]
            }
        },
        "ovh:Okms/getOkmsServiceKeyPem:getOkmsServiceKeyPem": {
            "inputs": {
                "description": "A collection of arguments for invoking getOkmsServiceKeyPem.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "okmsId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOkmsServiceKeyPem.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "curve": {
                        "type": "string"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/getOkmsServiceKeyPemIam:getOkmsServiceKeyPemIam"
                    },
                    "id": {
                        "type": "string"
                    },
                    "keysPems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Okms/getOkmsServiceKeyPemKeysPem:getOkmsServiceKeyPemKeysPem"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "okmsId": {
                        "type": "string"
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "size": {
                        "type": "number"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "curve",
                    "iam",
                    "id",
                    "keysPems",
                    "name",
                    "okmsId",
                    "operations",
                    "size",
                    "state",
                    "type"
                ]
            }
        },
        "ovh:Okms/getOvhCloudConnect:getOvhCloudConnect": {
            "inputs": {
                "description": "A collection of arguments for invoking getOvhCloudConnect.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getOvhCloudConnect.\n",
                "properties": {
                    "bandwidth": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "iam": {
                        "$ref": "#/types/ovh:Okms/getOvhCloudConnectIam:getOvhCloudConnectIam"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "interfaceLists": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "pop": {
                        "type": "string"
                    },
                    "portQuantity": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    },
                    "providerName": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "vrack": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bandwidth",
                    "description",
                    "iam",
                    "interfaceLists",
                    "pop",
                    "portQuantity",
                    "product",
                    "providerName",
                    "serviceName",
                    "status",
                    "uuid",
                    "vrack",
                    "id"
                ]
            }
        },
        "ovh:Okms/getOvhCloudConnects:getOvhCloudConnects": {
            "outputs": {
                "description": "A collection of values returned by getOvhCloudConnects.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "occs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Okms/getOvhCloudConnectsOcc:getOvhCloudConnectsOcc"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "occs",
                    "id"
                ]
            }
        },
        "ovh:Order/getCart:getCart": {
            "inputs": {
                "description": "A collection of arguments for invoking getCart.\n",
                "properties": {
                    "assign": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "expire": {
                        "type": "string"
                    },
                    "ovhSubsidiary": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object",
                "required": [
                    "ovhSubsidiary"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCart.\n",
                "properties": {
                    "assign": {
                        "type": "boolean"
                    },
                    "cartId": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "expire": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "ovhSubsidiary": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "expire",
                    "items",
                    "ovhSubsidiary",
                    "readOnly",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProduct:getCartProduct": {
            "inputs": {
                "description": "A collection of arguments for invoking getCartProduct.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProduct.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "product": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductResult:getCartProductResult"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "product",
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProductOptions:getCartProductOptions": {
            "inputs": {
                "description": "A collection of arguments for invoking getCartProductOptions.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProductOptions.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductOptionsResult:getCartProductOptionsResult"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "product",
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProductOptionsPlan:getCartProductOptionsPlan": {
            "inputs": {
                "description": "A collection of arguments for invoking getCartProductOptionsPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "optionsPlanCode": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "optionsPlanCode",
                    "planCode",
                    "priceCapacity",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProductOptionsPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "exclusive": {
                        "type": "boolean"
                    },
                    "family": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "mandatory": {
                        "type": "boolean"
                    },
                    "optionsPlanCode": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductOptionsPlanPrice:getCartProductOptionsPlanPrice"
                        }
                    },
                    "product": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string"
                    },
                    "selectedPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductOptionsPlanSelectedPrice:getCartProductOptionsPlanSelectedPrice"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "exclusive",
                    "family",
                    "mandatory",
                    "optionsPlanCode",
                    "planCode",
                    "priceCapacity",
                    "prices",
                    "product",
                    "productName",
                    "productType",
                    "selectedPrices",
                    "id"
                ]
            }
        },
        "ovh:Order/getCartProductPlan:getCartProductPlan": {
            "inputs": {
                "description": "A collection of arguments for invoking getCartProductPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "priceCapacity",
                    "product"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCartProductPlan.\n",
                "properties": {
                    "cartId": {
                        "type": "string"
                    },
                    "catalogName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "planCode": {
                        "type": "string"
                    },
                    "priceCapacity": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductPlanPrice:getCartProductPlanPrice"
                        }
                    },
                    "product": {
                        "type": "string"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "productType": {
                        "type": "string"
                    },
                    "selectedPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:Order/getCartProductPlanSelectedPrice:getCartProductPlanSelectedPrice"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cartId",
                    "planCode",
                    "priceCapacity",
                    "prices",
                    "product",
                    "productName",
                    "productType",
                    "selectedPrices",
                    "id"
                ]
            }
        },
        "ovh:Vps/getVps:getVps": {
            "inputs": {
                "description": "A collection of arguments for invoking getVps.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVps.\n",
                "properties": {
                    "VpsURN": {
                        "type": "string"
                    },
                    "cluster": {
                        "type": "string"
                    },
                    "datacenter": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "displayname": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keymap": {
                        "type": "string"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "model": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "netbootmode": {
                        "type": "string"
                    },
                    "offertype": {
                        "type": "string"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "slamonitoring": {
                        "type": "boolean"
                    },
                    "state": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "vcore": {
                        "type": "integer"
                    },
                    "zone": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cluster",
                    "datacenter",
                    "displayname",
                    "ips",
                    "keymap",
                    "memory",
                    "model",
                    "name",
                    "netbootmode",
                    "offertype",
                    "serviceName",
                    "slamonitoring",
                    "state",
                    "type",
                    "VpsURN",
                    "vcore",
                    "zone",
                    "id"
                ]
            }
        },
        "ovh:Vps/getVpss:getVpss": {
            "outputs": {
                "description": "A collection of values returned by getVpss.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:Vrack/getVracks:getVracks": {
            "outputs": {
                "description": "A collection of values returned by getVracks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getInstallationTemplate:getInstallationTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getInstallationTemplate.\n",
                "properties": {
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "templateName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getInstallationTemplate.\n",
                "properties": {
                    "bitFormat": {
                        "type": "integer"
                    },
                    "category": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "distribution": {
                        "type": "string"
                    },
                    "endOfInstall": {
                        "type": "string"
                    },
                    "family": {
                        "type": "string"
                    },
                    "filesystems": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "hardRaidConfiguration": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "inputs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getInstallationTemplateInput:getInstallationTemplateInput"
                        }
                    },
                    "licenses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getInstallationTemplateLicense:getInstallationTemplateLicense"
                        }
                    },
                    "lvmReady": {
                        "type": "boolean"
                    },
                    "noPartitioning": {
                        "type": "boolean"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getInstallationTemplateProject:getInstallationTemplateProject"
                        }
                    },
                    "softRaidOnlyMirroring": {
                        "type": "boolean"
                    },
                    "subfamily": {
                        "type": "string"
                    },
                    "templateName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bitFormat",
                    "category",
                    "description",
                    "distribution",
                    "endOfInstall",
                    "family",
                    "filesystems",
                    "hardRaidConfiguration",
                    "inputs",
                    "licenses",
                    "lvmReady",
                    "noPartitioning",
                    "projects",
                    "softRaidOnlyMirroring",
                    "subfamily",
                    "templateName",
                    "id"
                ]
            }
        },
        "ovh:index/getInstallationTemplates:getInstallationTemplates": {
            "outputs": {
                "description": "A collection of values returned by getInstallationTemplates.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getServer:getServer": {
            "inputs": {
                "description": "A collection of arguments for invoking getServer.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getServer.\n",
                "properties": {
                    "ServerURN": {
                        "type": "string"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "bootId": {
                        "type": "integer"
                    },
                    "bootScript": {
                        "type": "string"
                    },
                    "commercialRange": {
                        "type": "string"
                    },
                    "datacenter": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "efiBootloaderPath": {
                        "type": "string"
                    },
                    "enabledPublicVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enabledVrackAggregationVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "enabledVrackVnis": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "ips": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "linkSpeed": {
                        "type": "integer"
                    },
                    "monitoring": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "newUpgradeSystem": {
                        "type": "boolean"
                    },
                    "noIntervention": {
                        "type": "boolean"
                    },
                    "os": {
                        "type": "string"
                    },
                    "powerState": {
                        "type": "string"
                    },
                    "professionalUse": {
                        "type": "boolean"
                    },
                    "rack": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "rescueMail": {
                        "type": "string"
                    },
                    "rescueSshKey": {
                        "type": "string"
                    },
                    "reverse": {
                        "type": "string"
                    },
                    "rootDevice": {
                        "type": "string"
                    },
                    "serverId": {
                        "type": "integer"
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "supportLevel": {
                        "type": "string"
                    },
                    "vnis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/ovh:index/getServerVni:getServerVni"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "availabilityZone",
                    "bootId",
                    "bootScript",
                    "commercialRange",
                    "datacenter",
                    "displayName",
                    "efiBootloaderPath",
                    "enabledPublicVnis",
                    "enabledVrackAggregationVnis",
                    "enabledVrackVnis",
                    "ip",
                    "ips",
                    "linkSpeed",
                    "monitoring",
                    "name",
                    "newUpgradeSystem",
                    "noIntervention",
                    "os",
                    "powerState",
                    "professionalUse",
                    "rack",
                    "region",
                    "rescueMail",
                    "rescueSshKey",
                    "reverse",
                    "rootDevice",
                    "serverId",
                    "serviceName",
                    "state",
                    "supportLevel",
                    "ServerURN",
                    "vnis",
                    "id"
                ]
            }
        },
        "ovh:index/getServers:getServers": {
            "outputs": {
                "description": "A collection of values returned by getServers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "id"
                ]
            }
        },
        "ovh:index/getVrackNetworks:getVrackNetworks": {
            "inputs": {
                "description": "A collection of arguments for invoking getVrackNetworks.\n",
                "properties": {
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "serviceName"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVrackNetworks.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "serviceName": {
                        "type": "string"
                    },
                    "subnet": {
                        "type": "string"
                    },
                    "vlanId": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "results",
                    "serviceName",
                    "id"
                ]
            }
        }
    }
}