// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Vrack.inputs;

import com.ovhcloud.pulumi.ovh.Vrack.inputs.IpV6BridgedSubrangeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpV6State extends com.pulumi.resources.ResourceArgs {

    public static final IpV6State Empty = new IpV6State();

    /**
     * Your IPv6 block.
     * 
     */
    @Import(name="block")
    private @Nullable Output<String> block;

    /**
     * @return Your IPv6 block.
     * 
     */
    public Optional<Output<String>> block() {
        return Optional.ofNullable(this.block);
    }

    /**
     * Bridged subrange configuration.
     * 
     */
    @Import(name="bridgedSubrange")
    private @Nullable Output<IpV6BridgedSubrangeArgs> bridgedSubrange;

    /**
     * @return Bridged subrange configuration.
     * 
     */
    public Optional<Output<IpV6BridgedSubrangeArgs>> bridgedSubrange() {
        return Optional.ofNullable(this.bridgedSubrange);
    }

    /**
     * The IPv6 block.
     * 
     */
    @Import(name="ipv6")
    private @Nullable Output<String> ipv6;

    /**
     * @return The IPv6 block.
     * 
     */
    public Optional<Output<String>> ipv6() {
        return Optional.ofNullable(this.ipv6);
    }

    /**
     * The region in which the block is routed.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which the block is routed.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The internal name of your vrack
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The internal name of your vrack
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private IpV6State() {}

    private IpV6State(IpV6State $) {
        this.block = $.block;
        this.bridgedSubrange = $.bridgedSubrange;
        this.ipv6 = $.ipv6;
        this.region = $.region;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpV6State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpV6State $;

        public Builder() {
            $ = new IpV6State();
        }

        public Builder(IpV6State defaults) {
            $ = new IpV6State(Objects.requireNonNull(defaults));
        }

        /**
         * @param block Your IPv6 block.
         * 
         * @return builder
         * 
         */
        public Builder block(@Nullable Output<String> block) {
            $.block = block;
            return this;
        }

        /**
         * @param block Your IPv6 block.
         * 
         * @return builder
         * 
         */
        public Builder block(String block) {
            return block(Output.of(block));
        }

        /**
         * @param bridgedSubrange Bridged subrange configuration.
         * 
         * @return builder
         * 
         */
        public Builder bridgedSubrange(@Nullable Output<IpV6BridgedSubrangeArgs> bridgedSubrange) {
            $.bridgedSubrange = bridgedSubrange;
            return this;
        }

        /**
         * @param bridgedSubrange Bridged subrange configuration.
         * 
         * @return builder
         * 
         */
        public Builder bridgedSubrange(IpV6BridgedSubrangeArgs bridgedSubrange) {
            return bridgedSubrange(Output.of(bridgedSubrange));
        }

        /**
         * @param ipv6 The IPv6 block.
         * 
         * @return builder
         * 
         */
        public Builder ipv6(@Nullable Output<String> ipv6) {
            $.ipv6 = ipv6;
            return this;
        }

        /**
         * @param ipv6 The IPv6 block.
         * 
         * @return builder
         * 
         */
        public Builder ipv6(String ipv6) {
            return ipv6(Output.of(ipv6));
        }

        /**
         * @param region The region in which the block is routed.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which the block is routed.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param serviceName The internal name of your vrack
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The internal name of your vrack
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public IpV6State build() {
            return $;
        }
    }

}
