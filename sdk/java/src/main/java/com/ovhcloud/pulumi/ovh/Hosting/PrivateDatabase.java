// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Hosting;

import com.ovhcloud.pulumi.ovh.Hosting.PrivateDatabaseArgs;
import com.ovhcloud.pulumi.ovh.Hosting.inputs.PrivateDatabaseState;
import com.ovhcloud.pulumi.ovh.Hosting.outputs.PrivateDatabaseOrder;
import com.ovhcloud.pulumi.ovh.Hosting.outputs.PrivateDatabasePlan;
import com.ovhcloud.pulumi.ovh.Hosting.outputs.PrivateDatabasePlanOption;
import com.ovhcloud.pulumi.ovh.Utilities;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.Me.MeFunctions;
 * import com.pulumi.ovh.Order.OrderFunctions;
 * import com.pulumi.ovh.Order.inputs.GetCartArgs;
 * import com.pulumi.ovh.Order.inputs.GetCartProductPlanArgs;
 * import com.pulumi.ovh.Hosting.PrivateDatabase;
 * import com.pulumi.ovh.Hosting.PrivateDatabaseArgs;
 * import com.pulumi.ovh.Hosting.inputs.PrivateDatabasePlanArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var myaccount = MeFunctions.getMe();
 * 
 *         final var mycart = OrderFunctions.getCart(GetCartArgs.builder()
 *             .ovhSubsidiary(myaccount.applyValue(getMeResult -> getMeResult.ovhSubsidiary()))
 *             .build());
 * 
 *         final var databaseCartProductPlan = OrderFunctions.getCartProductPlan(GetCartProductPlanArgs.builder()
 *             .cartId(mycart.applyValue(getCartResult -> getCartResult.id()))
 *             .priceCapacity("renew")
 *             .product("privateSQL")
 *             .planCode("private-sql-512-instance")
 *             .build());
 * 
 *         var databasePrivateDatabase = new PrivateDatabase("databasePrivateDatabase", PrivateDatabaseArgs.builder()
 *             .ovhSubsidiary(mycart.applyValue(getCartResult -> getCartResult.ovhSubsidiary()))
 *             .displayName("Postgresql-12")
 *             .plan(PrivateDatabasePlanArgs.builder()
 *                 .duration(databaseCartProductPlan.applyValue(getCartProductPlanResult -> getCartProductPlanResult.prices()[3].duration()))
 *                 .planCode(databaseCartProductPlan.applyValue(getCartProductPlanResult -> getCartProductPlanResult.planCode()))
 *                 .pricingMode(databaseCartProductPlan.applyValue(getCartProductPlanResult -> getCartProductPlanResult.selectedPrices()[0].pricingMode()))
 *                 .configurations(                
 *                     PrivateDatabasePlanConfigurationArgs.builder()
 *                         .label("dc")
 *                         .value("gra3")
 *                         .build(),
 *                     PrivateDatabasePlanConfigurationArgs.builder()
 *                         .label("engine")
 *                         .value("postgresql_12")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *         ctx.export("privatedatabaseServiceName", databasePrivateDatabase.serviceName());
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * OVHcloud Webhosting database can be imported using the `service_name`. Using the following configuration:
 * 
 * terraform
 * 
 * import {
 * 
 *   to = ovh_hosting_privatedatabase.database
 * 
 *   id = &#34;&lt;service name&gt;&#34;
 * 
 * }
 * 
 * You can then run:
 * 
 * bash
 * 
 * $ pulumi preview -generate-config-out=database.tf
 * 
 * $ pulumi up
 * 
 * The file `database.tf` will then contain the imported resource&#39;s configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.
 * 
 */
@ResourceType(type="ovh:Hosting/privateDatabase:PrivateDatabase")
public class PrivateDatabase extends com.pulumi.resources.CustomResource {
    /**
     * URN of the private database, used when writing IAM policies
     * 
     */
    @Export(name="DatabaseURN", refs={String.class}, tree="[0]")
    private Output<String> DatabaseURN;

    /**
     * @return URN of the private database, used when writing IAM policies
     * 
     */
    public Output<String> DatabaseURN() {
        return this.DatabaseURN;
    }
    /**
     * Number of CPU on your private database
     * 
     */
    @Export(name="cpu", refs={Integer.class}, tree="[0]")
    private Output<Integer> cpu;

    /**
     * @return Number of CPU on your private database
     * 
     */
    public Output<Integer> cpu() {
        return this.cpu;
    }
    /**
     * Datacenter where this private database is located
     * 
     */
    @Export(name="datacenter", refs={String.class}, tree="[0]")
    private Output<String> datacenter;

    /**
     * @return Datacenter where this private database is located
     * 
     */
    public Output<String> datacenter() {
        return this.datacenter;
    }
    /**
     * Name displayed in customer panel for your private database
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output<String> displayName;

    /**
     * @return Name displayed in customer panel for your private database
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Private database hostname
     * 
     */
    @Export(name="hostname", refs={String.class}, tree="[0]")
    private Output<String> hostname;

    /**
     * @return Private database hostname
     * 
     */
    public Output<String> hostname() {
        return this.hostname;
    }
    /**
     * Private database FTP hostname
     * 
     */
    @Export(name="hostnameFtp", refs={String.class}, tree="[0]")
    private Output<String> hostnameFtp;

    /**
     * @return Private database FTP hostname
     * 
     */
    public Output<String> hostnameFtp() {
        return this.hostnameFtp;
    }
    /**
     * Infrastructure where service was stored
     * 
     */
    @Export(name="infrastructure", refs={String.class}, tree="[0]")
    private Output<String> infrastructure;

    /**
     * @return Infrastructure where service was stored
     * 
     */
    public Output<String> infrastructure() {
        return this.infrastructure;
    }
    /**
     * Type of the private database offer
     * 
     */
    @Export(name="offer", refs={String.class}, tree="[0]")
    private Output<String> offer;

    /**
     * @return Type of the private database offer
     * 
     */
    public Output<String> offer() {
        return this.offer;
    }
    /**
     * Details about your Order
     * 
     */
    @Export(name="orders", refs={List.class,PrivateDatabaseOrder.class}, tree="[0,1]")
    private Output<List<PrivateDatabaseOrder>> orders;

    /**
     * @return Details about your Order
     * 
     */
    public Output<List<PrivateDatabaseOrder>> orders() {
        return this.orders;
    }
    /**
     * OVHcloud Subsidiary. Country of OVHcloud legal entity you&#39;ll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)
     * 
     */
    @Export(name="ovhSubsidiary", refs={String.class}, tree="[0]")
    private Output<String> ovhSubsidiary;

    /**
     * @return OVHcloud Subsidiary. Country of OVHcloud legal entity you&#39;ll be billed by. List of supported subsidiaries available on API at [/1.0/me.json under `models.nichandle.OvhSubsidiaryEnum`](https://eu.api.ovh.com/1.0/me.json)
     * 
     */
    public Output<String> ovhSubsidiary() {
        return this.ovhSubsidiary;
    }
    /**
     * Ovh payment mode
     * 
     * @deprecated
     * This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used.
     * 
     */
    @Deprecated /* This field is not anymore used since the API has been deprecated in favor of /payment/mean. Now, the default payment mean is used. */
    @Export(name="paymentMean", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> paymentMean;

    /**
     * @return Ovh payment mode
     * 
     */
    public Output<Optional<String>> paymentMean() {
        return Codegen.optional(this.paymentMean);
    }
    /**
     * Product Plan to order
     * 
     */
    @Export(name="plan", refs={PrivateDatabasePlan.class}, tree="[0]")
    private Output<PrivateDatabasePlan> plan;

    /**
     * @return Product Plan to order
     * 
     */
    public Output<PrivateDatabasePlan> plan() {
        return this.plan;
    }
    /**
     * Product Plan to order
     * 
     */
    @Export(name="planOptions", refs={List.class,PrivateDatabasePlanOption.class}, tree="[0,1]")
    private Output</* @Nullable */ List<PrivateDatabasePlanOption>> planOptions;

    /**
     * @return Product Plan to order
     * 
     */
    public Output<Optional<List<PrivateDatabasePlanOption>>> planOptions() {
        return Codegen.optional(this.planOptions);
    }
    /**
     * Private database service port
     * 
     */
    @Export(name="port", refs={Integer.class}, tree="[0]")
    private Output<Integer> port;

    /**
     * @return Private database service port
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * Private database FTP port
     * 
     */
    @Export(name="portFtp", refs={Integer.class}, tree="[0]")
    private Output<Integer> portFtp;

    /**
     * @return Private database FTP port
     * 
     */
    public Output<Integer> portFtp() {
        return this.portFtp;
    }
    /**
     * Space allowed (in MB) on your private database
     * 
     */
    @Export(name="quotaSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> quotaSize;

    /**
     * @return Space allowed (in MB) on your private database
     * 
     */
    public Output<Integer> quotaSize() {
        return this.quotaSize;
    }
    /**
     * Sapce used (in MB) on your private database
     * 
     */
    @Export(name="quotaUsed", refs={Integer.class}, tree="[0]")
    private Output<Integer> quotaUsed;

    /**
     * @return Sapce used (in MB) on your private database
     * 
     */
    public Output<Integer> quotaUsed() {
        return this.quotaUsed;
    }
    /**
     * Amount of ram (in MB) on your private database
     * 
     */
    @Export(name="ram", refs={Integer.class}, tree="[0]")
    private Output<Integer> ram;

    /**
     * @return Amount of ram (in MB) on your private database
     * 
     */
    public Output<Integer> ram() {
        return this.ram;
    }
    /**
     * Private database server name
     * 
     */
    @Export(name="server", refs={String.class}, tree="[0]")
    private Output<String> server;

    /**
     * @return Private database server name
     * 
     */
    public Output<String> server() {
        return this.server;
    }
    /**
     * Service name
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Private database state
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Private database state
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Private database type
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Private database type
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Private database available versions
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return Private database available versions
     * 
     */
    public Output<String> version() {
        return this.version;
    }
    /**
     * Private database version label
     * 
     */
    @Export(name="versionLabel", refs={String.class}, tree="[0]")
    private Output<String> versionLabel;

    /**
     * @return Private database version label
     * 
     */
    public Output<String> versionLabel() {
        return this.versionLabel;
    }
    /**
     * Private database version number
     * 
     */
    @Export(name="versionNumber", refs={Double.class}, tree="[0]")
    private Output<Double> versionNumber;

    /**
     * @return Private database version number
     * 
     */
    public Output<Double> versionNumber() {
        return this.versionNumber;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PrivateDatabase(java.lang.String name) {
        this(name, PrivateDatabaseArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PrivateDatabase(java.lang.String name, @Nullable PrivateDatabaseArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PrivateDatabase(java.lang.String name, @Nullable PrivateDatabaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Hosting/privateDatabase:PrivateDatabase", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PrivateDatabase(java.lang.String name, Output<java.lang.String> id, @Nullable PrivateDatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Hosting/privateDatabase:PrivateDatabase", name, state, makeResourceOptions(options, id), false);
    }

    private static PrivateDatabaseArgs makeArgs(@Nullable PrivateDatabaseArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PrivateDatabaseArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PrivateDatabase get(java.lang.String name, Output<java.lang.String> id, @Nullable PrivateDatabaseState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PrivateDatabase(name, id, state, options);
    }
}
