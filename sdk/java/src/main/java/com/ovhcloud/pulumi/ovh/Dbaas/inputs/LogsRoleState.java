// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dbaas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsRoleState extends com.pulumi.resources.ResourceArgs {

    public static final LogsRoleState Empty = new LogsRoleState();

    /**
     * Role creation date
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Role creation date
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The role description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The role description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The role name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The role name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * number of member for the role
     * 
     */
    @Import(name="nbMember")
    private @Nullable Output<Integer> nbMember;

    /**
     * @return number of member for the role
     * 
     */
    public Optional<Output<Integer>> nbMember() {
        return Optional.ofNullable(this.nbMember);
    }

    /**
     * number of configured permission for the role
     * 
     */
    @Import(name="nbPermission")
    private @Nullable Output<Integer> nbPermission;

    /**
     * @return number of configured permission for the role
     * 
     */
    public Optional<Output<Integer>> nbPermission() {
        return Optional.ofNullable(this.nbPermission);
    }

    /**
     * Role identifier
     * 
     */
    @Import(name="roleId")
    private @Nullable Output<String> roleId;

    /**
     * @return Role identifier
     * 
     */
    public Optional<Output<String>> roleId() {
        return Optional.ofNullable(this.roleId);
    }

    /**
     * The service name
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The service name
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Role last update date
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Role last update date
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private LogsRoleState() {}

    private LogsRoleState(LogsRoleState $) {
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.name = $.name;
        this.nbMember = $.nbMember;
        this.nbPermission = $.nbPermission;
        this.roleId = $.roleId;
        this.serviceName = $.serviceName;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsRoleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsRoleState $;

        public Builder() {
            $ = new LogsRoleState();
        }

        public Builder(LogsRoleState defaults) {
            $ = new LogsRoleState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Role creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Role creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description The role description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The role description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The role name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The role name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param nbMember number of member for the role
         * 
         * @return builder
         * 
         */
        public Builder nbMember(@Nullable Output<Integer> nbMember) {
            $.nbMember = nbMember;
            return this;
        }

        /**
         * @param nbMember number of member for the role
         * 
         * @return builder
         * 
         */
        public Builder nbMember(Integer nbMember) {
            return nbMember(Output.of(nbMember));
        }

        /**
         * @param nbPermission number of configured permission for the role
         * 
         * @return builder
         * 
         */
        public Builder nbPermission(@Nullable Output<Integer> nbPermission) {
            $.nbPermission = nbPermission;
            return this;
        }

        /**
         * @param nbPermission number of configured permission for the role
         * 
         * @return builder
         * 
         */
        public Builder nbPermission(Integer nbPermission) {
            return nbPermission(Output.of(nbPermission));
        }

        /**
         * @param roleId Role identifier
         * 
         * @return builder
         * 
         */
        public Builder roleId(@Nullable Output<String> roleId) {
            $.roleId = roleId;
            return this;
        }

        /**
         * @param roleId Role identifier
         * 
         * @return builder
         * 
         */
        public Builder roleId(String roleId) {
            return roleId(Output.of(roleId));
        }

        /**
         * @param serviceName The service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param updatedAt Role last update date
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Role last update date
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public LogsRoleState build() {
            return $;
        }
    }

}
