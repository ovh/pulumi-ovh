// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.ovhcloud.pulumi.ovh.CloudProject.inputs.NetworkPrivateSubnetV2AllocationPoolArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.NetworkPrivateSubnetV2HostRouteArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkPrivateSubnetV2State extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPrivateSubnetV2State Empty = new NetworkPrivateSubnetV2State();

    /**
     * List of IP allocation pools Changing this value recreates the resource.
     * 
     */
    @Import(name="allocationPools")
    private @Nullable Output<List<NetworkPrivateSubnetV2AllocationPoolArgs>> allocationPools;

    /**
     * @return List of IP allocation pools Changing this value recreates the resource.
     * 
     */
    public Optional<Output<List<NetworkPrivateSubnetV2AllocationPoolArgs>>> allocationPools() {
        return Optional.ofNullable(this.allocationPools);
    }

    /**
     * IP range of the subnet Changing this value recreates the subnet.
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return IP range of the subnet Changing this value recreates the subnet.
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * Enable DHCP. Changing this forces a new resource to be created. Defaults to true.
     * 
     */
    @Import(name="dhcp")
    private @Nullable Output<Boolean> dhcp;

    /**
     * @return Enable DHCP. Changing this forces a new resource to be created. Defaults to true.
     * 
     */
    public Optional<Output<Boolean>> dhcp() {
        return Optional.ofNullable(this.dhcp);
    }

    /**
     * DNS nameservers used by DHCP Changing this value recreates the resource. Defaults to OVH default DNS nameserver.
     * 
     */
    @Import(name="dnsNameservers")
    private @Nullable Output<List<String>> dnsNameservers;

    /**
     * @return DNS nameservers used by DHCP Changing this value recreates the resource. Defaults to OVH default DNS nameserver.
     * 
     */
    public Optional<Output<List<String>>> dnsNameservers() {
        return Optional.ofNullable(this.dnsNameservers);
    }

    /**
     * Set to true if you want to set a default gateway IP. Changing this value recreates the resource. Defaults to true.
     * 
     */
    @Import(name="enableGatewayIp")
    private @Nullable Output<Boolean> enableGatewayIp;

    /**
     * @return Set to true if you want to set a default gateway IP. Changing this value recreates the resource. Defaults to true.
     * 
     */
    public Optional<Output<Boolean>> enableGatewayIp() {
        return Optional.ofNullable(this.enableGatewayIp);
    }

    /**
     * See Argument Reference above.
     * 
     */
    @Import(name="gatewayIp")
    private @Nullable Output<String> gatewayIp;

    /**
     * @return See Argument Reference above.
     * 
     */
    public Optional<Output<String>> gatewayIp() {
        return Optional.ofNullable(this.gatewayIp);
    }

    /**
     * Static host routes of subnet
     * 
     */
    @Import(name="hostRoutes")
    private @Nullable Output<List<NetworkPrivateSubnetV2HostRouteArgs>> hostRoutes;

    /**
     * @return Static host routes of subnet
     * 
     */
    public Optional<Output<List<NetworkPrivateSubnetV2HostRouteArgs>>> hostRoutes() {
        return Optional.ofNullable(this.hostRoutes);
    }

    /**
     * Name of the subnet Changing this value recreates the subnet.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the subnet Changing this value recreates the subnet.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The id of the network. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return The id of the network. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * The region in which the network subnet will be created. Ex.: &#34;GRA1&#34;. Changing this value recreates the resource.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region in which the network subnet will be created. Ex.: &#34;GRA1&#34;. Changing this value recreates the resource.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Set to false if you want to use your DNS resolver. Changing this value recreates the resource.
     * 
     */
    @Import(name="useDefaultPublicDnsResolver")
    private @Nullable Output<Boolean> useDefaultPublicDnsResolver;

    /**
     * @return Set to false if you want to use your DNS resolver. Changing this value recreates the resource.
     * 
     */
    public Optional<Output<Boolean>> useDefaultPublicDnsResolver() {
        return Optional.ofNullable(this.useDefaultPublicDnsResolver);
    }

    private NetworkPrivateSubnetV2State() {}

    private NetworkPrivateSubnetV2State(NetworkPrivateSubnetV2State $) {
        this.allocationPools = $.allocationPools;
        this.cidr = $.cidr;
        this.dhcp = $.dhcp;
        this.dnsNameservers = $.dnsNameservers;
        this.enableGatewayIp = $.enableGatewayIp;
        this.gatewayIp = $.gatewayIp;
        this.hostRoutes = $.hostRoutes;
        this.name = $.name;
        this.networkId = $.networkId;
        this.region = $.region;
        this.serviceName = $.serviceName;
        this.useDefaultPublicDnsResolver = $.useDefaultPublicDnsResolver;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPrivateSubnetV2State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPrivateSubnetV2State $;

        public Builder() {
            $ = new NetworkPrivateSubnetV2State();
        }

        public Builder(NetworkPrivateSubnetV2State defaults) {
            $ = new NetworkPrivateSubnetV2State(Objects.requireNonNull(defaults));
        }

        /**
         * @param allocationPools List of IP allocation pools Changing this value recreates the resource.
         * 
         * @return builder
         * 
         */
        public Builder allocationPools(@Nullable Output<List<NetworkPrivateSubnetV2AllocationPoolArgs>> allocationPools) {
            $.allocationPools = allocationPools;
            return this;
        }

        /**
         * @param allocationPools List of IP allocation pools Changing this value recreates the resource.
         * 
         * @return builder
         * 
         */
        public Builder allocationPools(List<NetworkPrivateSubnetV2AllocationPoolArgs> allocationPools) {
            return allocationPools(Output.of(allocationPools));
        }

        /**
         * @param allocationPools List of IP allocation pools Changing this value recreates the resource.
         * 
         * @return builder
         * 
         */
        public Builder allocationPools(NetworkPrivateSubnetV2AllocationPoolArgs... allocationPools) {
            return allocationPools(List.of(allocationPools));
        }

        /**
         * @param cidr IP range of the subnet Changing this value recreates the subnet.
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr IP range of the subnet Changing this value recreates the subnet.
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param dhcp Enable DHCP. Changing this forces a new resource to be created. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder dhcp(@Nullable Output<Boolean> dhcp) {
            $.dhcp = dhcp;
            return this;
        }

        /**
         * @param dhcp Enable DHCP. Changing this forces a new resource to be created. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder dhcp(Boolean dhcp) {
            return dhcp(Output.of(dhcp));
        }

        /**
         * @param dnsNameservers DNS nameservers used by DHCP Changing this value recreates the resource. Defaults to OVH default DNS nameserver.
         * 
         * @return builder
         * 
         */
        public Builder dnsNameservers(@Nullable Output<List<String>> dnsNameservers) {
            $.dnsNameservers = dnsNameservers;
            return this;
        }

        /**
         * @param dnsNameservers DNS nameservers used by DHCP Changing this value recreates the resource. Defaults to OVH default DNS nameserver.
         * 
         * @return builder
         * 
         */
        public Builder dnsNameservers(List<String> dnsNameservers) {
            return dnsNameservers(Output.of(dnsNameservers));
        }

        /**
         * @param dnsNameservers DNS nameservers used by DHCP Changing this value recreates the resource. Defaults to OVH default DNS nameserver.
         * 
         * @return builder
         * 
         */
        public Builder dnsNameservers(String... dnsNameservers) {
            return dnsNameservers(List.of(dnsNameservers));
        }

        /**
         * @param enableGatewayIp Set to true if you want to set a default gateway IP. Changing this value recreates the resource. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder enableGatewayIp(@Nullable Output<Boolean> enableGatewayIp) {
            $.enableGatewayIp = enableGatewayIp;
            return this;
        }

        /**
         * @param enableGatewayIp Set to true if you want to set a default gateway IP. Changing this value recreates the resource. Defaults to true.
         * 
         * @return builder
         * 
         */
        public Builder enableGatewayIp(Boolean enableGatewayIp) {
            return enableGatewayIp(Output.of(enableGatewayIp));
        }

        /**
         * @param gatewayIp See Argument Reference above.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIp(@Nullable Output<String> gatewayIp) {
            $.gatewayIp = gatewayIp;
            return this;
        }

        /**
         * @param gatewayIp See Argument Reference above.
         * 
         * @return builder
         * 
         */
        public Builder gatewayIp(String gatewayIp) {
            return gatewayIp(Output.of(gatewayIp));
        }

        /**
         * @param hostRoutes Static host routes of subnet
         * 
         * @return builder
         * 
         */
        public Builder hostRoutes(@Nullable Output<List<NetworkPrivateSubnetV2HostRouteArgs>> hostRoutes) {
            $.hostRoutes = hostRoutes;
            return this;
        }

        /**
         * @param hostRoutes Static host routes of subnet
         * 
         * @return builder
         * 
         */
        public Builder hostRoutes(List<NetworkPrivateSubnetV2HostRouteArgs> hostRoutes) {
            return hostRoutes(Output.of(hostRoutes));
        }

        /**
         * @param hostRoutes Static host routes of subnet
         * 
         * @return builder
         * 
         */
        public Builder hostRoutes(NetworkPrivateSubnetV2HostRouteArgs... hostRoutes) {
            return hostRoutes(List.of(hostRoutes));
        }

        /**
         * @param name Name of the subnet Changing this value recreates the subnet.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the subnet Changing this value recreates the subnet.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkId The id of the network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId The id of the network. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param region The region in which the network subnet will be created. Ex.: &#34;GRA1&#34;. Changing this value recreates the resource.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region in which the network subnet will be created. Ex.: &#34;GRA1&#34;. Changing this value recreates the resource.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param useDefaultPublicDnsResolver Set to false if you want to use your DNS resolver. Changing this value recreates the resource.
         * 
         * @return builder
         * 
         */
        public Builder useDefaultPublicDnsResolver(@Nullable Output<Boolean> useDefaultPublicDnsResolver) {
            $.useDefaultPublicDnsResolver = useDefaultPublicDnsResolver;
            return this;
        }

        /**
         * @param useDefaultPublicDnsResolver Set to false if you want to use your DNS resolver. Changing this value recreates the resource.
         * 
         * @return builder
         * 
         */
        public Builder useDefaultPublicDnsResolver(Boolean useDefaultPublicDnsResolver) {
            return useDefaultPublicDnsResolver(Output.of(useDefaultPublicDnsResolver));
        }

        public NetworkPrivateSubnetV2State build() {
            return $;
        }
    }

}
