// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject;

import com.ovhcloud.pulumi.ovh.CloudProject.LoadBalancerArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.LoadBalancerState;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.LoadBalancerFloatingIp;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.LoadBalancerListener;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.LoadBalancerNetwork;
import com.ovhcloud.pulumi.ovh.Utilities;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.CloudProject.LoadBalancer;
 * import com.pulumi.ovh.CloudProject.LoadBalancerArgs;
 * import com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkArgs;
 * import com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkPrivateArgs;
 * import com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkPrivateNetworkArgs;
 * import com.pulumi.ovh.CloudProject.inputs.LoadBalancerListenerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var lb = new LoadBalancer("lb", LoadBalancerArgs.builder()
 *             .serviceName("<public cloud project ID>")
 *             .regionName("GRA9")
 *             .flavorId("<loadbalancer flavor ID>")
 *             .network(LoadBalancerNetworkArgs.builder()
 *                 .private_(LoadBalancerNetworkPrivateArgs.builder()
 *                     .network(LoadBalancerNetworkPrivateNetworkArgs.builder()
 *                         .id("TODO: ForExpression"[0].openstackid())
 *                         .subnetId(ovh_cloud_project_network_private_subnet.myprivsub().id())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .description("My new LB")
 *             .listeners(            
 *                 LoadBalancerListenerArgs.builder()
 *                     .port("34568")
 *                     .protocol("tcp")
 *                     .build(),
 *                 LoadBalancerListenerArgs.builder()
 *                     .port("34569")
 *                     .protocol("udp")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ### Example usage with network and subnet creation
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.CloudProject.NetworkPrivate;
 * import com.pulumi.ovh.CloudProject.NetworkPrivateArgs;
 * import com.pulumi.ovh.CloudProject.NetworkPrivateSubnet;
 * import com.pulumi.ovh.CloudProject.NetworkPrivateSubnetArgs;
 * import com.pulumi.ovh.CloudProject.LoadBalancer;
 * import com.pulumi.ovh.CloudProject.LoadBalancerArgs;
 * import com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkArgs;
 * import com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkPrivateArgs;
 * import com.pulumi.ovh.CloudProject.inputs.LoadBalancerNetworkPrivateNetworkArgs;
 * import com.pulumi.ovh.CloudProject.inputs.LoadBalancerListenerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var priv = new NetworkPrivate("priv", NetworkPrivateArgs.builder()
 *             .serviceName("<public cloud project ID>")
 *             .vlanId("10")
 *             .regions("GRA9")
 *             .build());
 * 
 *         var privsub = new NetworkPrivateSubnet("privsub", NetworkPrivateSubnetArgs.builder()
 *             .serviceName(priv.serviceName())
 *             .networkId(priv.id())
 *             .region("GRA9")
 *             .start("10.0.0.2")
 *             .end("10.0.255.254")
 *             .network("10.0.0.0/16")
 *             .dhcp(true)
 *             .build());
 * 
 *         var lb = new LoadBalancer("lb", LoadBalancerArgs.builder()
 *             .serviceName(privsub.serviceName())
 *             .regionName(privsub.region())
 *             .flavorId("<loadbalancer flavor ID>")
 *             .network(LoadBalancerNetworkArgs.builder()
 *                 .private_(LoadBalancerNetworkPrivateArgs.builder()
 *                     .network(LoadBalancerNetworkPrivateNetworkArgs.builder()
 *                         .id(priv.regionsAttributes().applyValue(regionsAttributes -> "TODO: ForExpression")[0].applyValue(regions -> regions.openstackid()))
 *                         .subnetId(privsub.id())
 *                         .build())
 *                     .build())
 *                 .build())
 *             .description("My new LB")
 *             .listeners(            
 *                 LoadBalancerListenerArgs.builder()
 *                     .port("34568")
 *                     .protocol("tcp")
 *                     .build(),
 *                 LoadBalancerListenerArgs.builder()
 *                     .port("34569")
 *                     .protocol("udp")
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A load balancer in a public cloud project can be imported using the `service_name`, `region_name` and `id` attributes.
 * 
 * Using the following configuration:
 * 
 * hcl
 * 
 * import {
 * 
 *   id = &#34;&lt;service_name&gt;/&lt;region_name&gt;/&lt;id&gt;&#34;
 * 
 *   to = ovh_cloud_project_loadbalancer.lb
 * 
 * }
 * 
 * You can then run:
 * 
 * bash
 * 
 * $ pulumi preview -generate-config-out=lb.tf
 * 
 * $ pulumi up
 * 
 * The file `lb.tf` will then contain the imported resource&#39;s configuration, that can be copied next to the `import` block above.
 * 
 * See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.
 * 
 */
@ResourceType(type="ovh:CloudProject/loadBalancer:LoadBalancer")
public class LoadBalancer extends com.pulumi.resources.CustomResource {
    /**
     * The UTC date and timestamp when the resource was created
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The UTC date and timestamp when the resource was created
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Description of the loadbalancer
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description of the loadbalancer
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Loadbalancer flavor id
     * 
     */
    @Export(name="flavorId", refs={String.class}, tree="[0]")
    private Output<String> flavorId;

    /**
     * @return Loadbalancer flavor id
     * 
     */
    public Output<String> flavorId() {
        return this.flavorId;
    }
    /**
     * Information about floating IP
     * 
     */
    @Export(name="floatingIp", refs={LoadBalancerFloatingIp.class}, tree="[0]")
    private Output<LoadBalancerFloatingIp> floatingIp;

    /**
     * @return Information about floating IP
     * 
     */
    public Output<LoadBalancerFloatingIp> floatingIp() {
        return this.floatingIp;
    }
    /**
     * Listeners to create with the loadbalancer
     * 
     */
    @Export(name="listeners", refs={List.class,LoadBalancerListener.class}, tree="[0,1]")
    private Output</* @Nullable */ List<LoadBalancerListener>> listeners;

    /**
     * @return Listeners to create with the loadbalancer
     * 
     */
    public Output<Optional<List<LoadBalancerListener>>> listeners() {
        return Codegen.optional(this.listeners);
    }
    /**
     * Name of the resource
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the resource
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Network information to create the loadbalancer
     * 
     */
    @Export(name="network", refs={LoadBalancerNetwork.class}, tree="[0]")
    private Output<LoadBalancerNetwork> network;

    /**
     * @return Network information to create the loadbalancer
     * 
     */
    public Output<LoadBalancerNetwork> network() {
        return this.network;
    }
    /**
     * Operating status of the resource
     * 
     */
    @Export(name="operatingStatus", refs={String.class}, tree="[0]")
    private Output<String> operatingStatus;

    /**
     * @return Operating status of the resource
     * 
     */
    public Output<String> operatingStatus() {
        return this.operatingStatus;
    }
    /**
     * Provisioning status of the resource
     * 
     */
    @Export(name="provisioningStatus", refs={String.class}, tree="[0]")
    private Output<String> provisioningStatus;

    /**
     * @return Provisioning status of the resource
     * 
     */
    public Output<String> provisioningStatus() {
        return this.provisioningStatus;
    }
    /**
     * Region of the resource
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region of the resource
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Region name
     * 
     */
    @Export(name="regionName", refs={String.class}, tree="[0]")
    private Output<String> regionName;

    /**
     * @return Region name
     * 
     */
    public Output<String> regionName() {
        return this.regionName;
    }
    /**
     * Service name
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * UTC date and timestamp when the resource was created
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return UTC date and timestamp when the resource was created
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * IP address of the Virtual IP
     * 
     */
    @Export(name="vipAddress", refs={String.class}, tree="[0]")
    private Output<String> vipAddress;

    /**
     * @return IP address of the Virtual IP
     * 
     */
    public Output<String> vipAddress() {
        return this.vipAddress;
    }
    /**
     * Openstack ID of the network for the Virtual IP
     * 
     */
    @Export(name="vipNetworkId", refs={String.class}, tree="[0]")
    private Output<String> vipNetworkId;

    /**
     * @return Openstack ID of the network for the Virtual IP
     * 
     */
    public Output<String> vipNetworkId() {
        return this.vipNetworkId;
    }
    /**
     * ID of the subnet for the Virtual IP
     * 
     */
    @Export(name="vipSubnetId", refs={String.class}, tree="[0]")
    private Output<String> vipSubnetId;

    /**
     * @return ID of the subnet for the Virtual IP
     * 
     */
    public Output<String> vipSubnetId() {
        return this.vipSubnetId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LoadBalancer(java.lang.String name) {
        this(name, LoadBalancerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LoadBalancer(java.lang.String name, LoadBalancerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LoadBalancer(java.lang.String name, LoadBalancerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:CloudProject/loadBalancer:LoadBalancer", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private LoadBalancer(java.lang.String name, Output<java.lang.String> id, @Nullable LoadBalancerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:CloudProject/loadBalancer:LoadBalancer", name, state, makeResourceOptions(options, id), false);
    }

    private static LoadBalancerArgs makeArgs(LoadBalancerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? LoadBalancerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LoadBalancer get(java.lang.String name, Output<java.lang.String> id, @Nullable LoadBalancerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LoadBalancer(name, id, state, options);
    }
}
