// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProjectDatabase.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MongoDbPrometheusState extends com.pulumi.resources.ResourceArgs {

    public static final MongoDbPrometheusState Empty = new MongoDbPrometheusState();

    /**
     * Cluster ID.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return Cluster ID.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * (Sensitive) Password of the user.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return (Sensitive) Password of the user.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * Arbitrary string to change to trigger a password update
     * 
     */
    @Import(name="passwordReset")
    private @Nullable Output<String> passwordReset;

    /**
     * @return Arbitrary string to change to trigger a password update
     * 
     */
    public Optional<Output<String>> passwordReset() {
        return Optional.ofNullable(this.passwordReset);
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Name of the srv domain endpoint.
     * 
     */
    @Import(name="srvDomain")
    private @Nullable Output<String> srvDomain;

    /**
     * @return Name of the srv domain endpoint.
     * 
     */
    public Optional<Output<String>> srvDomain() {
        return Optional.ofNullable(this.srvDomain);
    }

    /**
     * name of the prometheus user.
     * 
     */
    @Import(name="username")
    private @Nullable Output<String> username;

    /**
     * @return name of the prometheus user.
     * 
     */
    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private MongoDbPrometheusState() {}

    private MongoDbPrometheusState(MongoDbPrometheusState $) {
        this.clusterId = $.clusterId;
        this.password = $.password;
        this.passwordReset = $.passwordReset;
        this.serviceName = $.serviceName;
        this.srvDomain = $.srvDomain;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MongoDbPrometheusState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MongoDbPrometheusState $;

        public Builder() {
            $ = new MongoDbPrometheusState();
        }

        public Builder(MongoDbPrometheusState defaults) {
            $ = new MongoDbPrometheusState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId Cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId Cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param password (Sensitive) Password of the user.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password (Sensitive) Password of the user.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param passwordReset Arbitrary string to change to trigger a password update
         * 
         * @return builder
         * 
         */
        public Builder passwordReset(@Nullable Output<String> passwordReset) {
            $.passwordReset = passwordReset;
            return this;
        }

        /**
         * @param passwordReset Arbitrary string to change to trigger a password update
         * 
         * @return builder
         * 
         */
        public Builder passwordReset(String passwordReset) {
            return passwordReset(Output.of(passwordReset));
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param srvDomain Name of the srv domain endpoint.
         * 
         * @return builder
         * 
         */
        public Builder srvDomain(@Nullable Output<String> srvDomain) {
            $.srvDomain = srvDomain;
            return this;
        }

        /**
         * @param srvDomain Name of the srv domain endpoint.
         * 
         * @return builder
         * 
         */
        public Builder srvDomain(String srvDomain) {
            return srvDomain(Output.of(srvDomain));
        }

        /**
         * @param username name of the prometheus user.
         * 
         * @return builder
         * 
         */
        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username name of the prometheus user.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public MongoDbPrometheusState build() {
            return $;
        }
    }

}
