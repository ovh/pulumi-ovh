// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.IpLoadBalancing;

import com.ovhcloud.pulumi.ovh.IpLoadBalancing.VrackNetworkArgs;
import com.ovhcloud.pulumi.ovh.IpLoadBalancing.inputs.VrackNetworkState;
import com.ovhcloud.pulumi.ovh.Utilities;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manage a vrack network for your IP Loadbalancing service.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.IpLoadBalancing.IpLoadBalancingFunctions;
 * import com.pulumi.ovh.IpLoadBalancing.inputs.GetIpLoadBalancingArgs;
 * import com.ovhcloud.pulumi.ovh.Vrack.IpLoadbalancing;
 * import com.ovhcloud.pulumi.ovh.Vrack.IpLoadbalancingArgs;
 * import com.ovhcloud.pulumi.ovh.IpLoadBalancing.VrackNetwork;
 * import com.ovhcloud.pulumi.ovh.IpLoadBalancing.VrackNetworkArgs;
 * import com.ovhcloud.pulumi.ovh.IpLoadBalancing.TcpFarm;
 * import com.ovhcloud.pulumi.ovh.IpLoadBalancing.TcpFarmArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var iplb = IpLoadBalancingFunctions.getIpLoadBalancing(GetIpLoadBalancingArgs.builder()
 *             .serviceName("loadbalancer-xxxxxxxxxxxxxxxxxx")
 *             .build());
 * 
 *         var vipLb = new IpLoadbalancing("vipLb", IpLoadbalancingArgs.builder()
 *             .serviceName("xxx")
 *             .LoadbalancingId(iplb.serviceName())
 *             .build());
 * 
 *         var network = new VrackNetwork("network", VrackNetworkArgs.builder()
 *             .serviceName(vipLb.LoadbalancingId())
 *             .subnet("10.0.0.0/16")
 *             .vlan(1)
 *             .natIp("10.0.0.0/27")
 *             .displayName("mynetwork")
 *             .build());
 * 
 *         var testFarm = new TcpFarm("testFarm", TcpFarmArgs.builder()
 *             .serviceName(network.serviceName())
 *             .displayName("mytcpbackends")
 *             .port(80)
 *             .vrackNetworkId(network.vrackNetworkId())
 *             .zone(iplb.zones()[0])
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="ovh:IpLoadBalancing/vrackNetwork:VrackNetwork")
public class VrackNetwork extends com.pulumi.resources.CustomResource {
    /**
     * Human readable name for your vrack network
     * 
     */
    @Export(name="displayName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Human readable name for your vrack network
     * 
     */
    public Output<Optional<String>> displayName() {
        return Codegen.optional(this.displayName);
    }
    /**
     * This attribute is there for documentation purpose only and isnt passed to the OVHcloud API as it may conflicts with http/tcp farms `vrack_network_id` attribute
     * 
     */
    @Export(name="farmIds", refs={List.class,Integer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Integer>> farmIds;

    /**
     * @return This attribute is there for documentation purpose only and isnt passed to the OVHcloud API as it may conflicts with http/tcp farms `vrack_network_id` attribute
     * 
     */
    public Output<Optional<List<Integer>>> farmIds() {
        return Codegen.optional(this.farmIds);
    }
    /**
     * An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer
     * 
     */
    @Export(name="natIp", refs={String.class}, tree="[0]")
    private Output<String> natIp;

    /**
     * @return An IP block used as a pool of IPs by this Load Balancer to connect to the servers in this private network. The blck must be in the private network and reserved for the Load Balancer
     * 
     */
    public Output<String> natIp() {
        return this.natIp;
    }
    /**
     * The internal name of your IP load balancing
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return The internal name of your IP load balancing
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * IP block of the private network in the vRack
     * 
     */
    @Export(name="subnet", refs={String.class}, tree="[0]")
    private Output<String> subnet;

    /**
     * @return IP block of the private network in the vRack
     * 
     */
    public Output<String> subnet() {
        return this.subnet;
    }
    /**
     * VLAN of the private network in the vRack. 0 if the private network is not in a VLAN
     * 
     */
    @Export(name="vlan", refs={Integer.class}, tree="[0]")
    private Output<Integer> vlan;

    /**
     * @return VLAN of the private network in the vRack. 0 if the private network is not in a VLAN
     * 
     */
    public Output<Integer> vlan() {
        return this.vlan;
    }
    /**
     * (Required) Internal Load Balancer identifier of the vRack private network
     * 
     */
    @Export(name="vrackNetworkId", refs={Integer.class}, tree="[0]")
    private Output<Integer> vrackNetworkId;

    /**
     * @return (Required) Internal Load Balancer identifier of the vRack private network
     * 
     */
    public Output<Integer> vrackNetworkId() {
        return this.vrackNetworkId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VrackNetwork(java.lang.String name) {
        this(name, VrackNetworkArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VrackNetwork(java.lang.String name, VrackNetworkArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VrackNetwork(java.lang.String name, VrackNetworkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:IpLoadBalancing/vrackNetwork:VrackNetwork", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VrackNetwork(java.lang.String name, Output<java.lang.String> id, @Nullable VrackNetworkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:IpLoadBalancing/vrackNetwork:VrackNetwork", name, state, makeResourceOptions(options, id), false);
    }

    private static VrackNetworkArgs makeArgs(VrackNetworkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VrackNetworkArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VrackNetwork get(java.lang.String name, Output<java.lang.String> id, @Nullable VrackNetworkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VrackNetwork(name, id, state, options);
    }
}
