// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Ip;

import com.ovhcloud.pulumi.ovh.Ip.MoveArgs;
import com.ovhcloud.pulumi.ovh.Ip.inputs.MoveState;
import com.ovhcloud.pulumi.ovh.Ip.outputs.MoveRoutedTo;
import com.ovhcloud.pulumi.ovh.Utilities;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Moves a given IP to a different service, or inversely, parks it if empty service is given
 * 
 * ## Move IP `1.2.3.4` to service loadbalancer-XXXXX
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.Ip.Move;
 * import com.pulumi.ovh.Ip.MoveArgs;
 * import com.pulumi.ovh.Ip.inputs.MoveRoutedToArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var moveIpToLoadBalancerXxxxx = new Move("moveIpToLoadBalancerXxxxx", MoveArgs.builder()
 *             .ip("1.2.3.4")
 *             .routedTo(MoveRoutedToArgs.builder()
 *                 .serviceName("loadbalancer-XXXXX")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Park IP/Detach IP `1.2.3.4` from any service
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.Ip.Move;
 * import com.pulumi.ovh.Ip.MoveArgs;
 * import com.pulumi.ovh.Ip.inputs.MoveRoutedToArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var parkIp = new Move("parkIp", MoveArgs.builder()
 *             .ip("1.2.3.4")
 *             .routedTo(MoveRoutedToArgs.builder()
 *                 .serviceName("")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * The resource can be imported using the `ip` field, e.g.,
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import ovh:Ip/move:Move mv &#39;1.2.3.4/32&#39;
 * ```
 * 
 */
@ResourceType(type="ovh:Ip/move:Move")
public class Move extends com.pulumi.resources.CustomResource {
    /**
     * Whether IP service can be terminated
     * 
     */
    @Export(name="canBeTerminated", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> canBeTerminated;

    /**
     * @return Whether IP service can be terminated
     * 
     */
    public Output<Boolean> canBeTerminated() {
        return this.canBeTerminated;
    }
    /**
     * Country
     * 
     */
    @Export(name="country", refs={String.class}, tree="[0]")
    private Output<String> country;

    /**
     * @return Country
     * 
     */
    public Output<String> country() {
        return this.country;
    }
    /**
     * Description attached to the IP
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return Description attached to the IP
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * IP block that we want to attach to a different service
     * 
     */
    @Export(name="ip", refs={String.class}, tree="[0]")
    private Output<String> ip;

    /**
     * @return IP block that we want to attach to a different service
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }
    /**
     * IP block organisation Id
     * 
     */
    @Export(name="organisationId", refs={String.class}, tree="[0]")
    private Output<String> organisationId;

    /**
     * @return IP block organisation Id
     * 
     */
    public Output<String> organisationId() {
        return this.organisationId;
    }
    /**
     * Service to route the IP to. If null, the IP will be [parked](https://api.ovh.com/console/#/ip/%7Bip%7D/park~POST)
     * instead of [moved](https://api.ovh.com/console/#/ip/%7Bip%7D/move~POST)
     * 
     */
    @Export(name="routedTo", refs={MoveRoutedTo.class}, tree="[0]")
    private Output<MoveRoutedTo> routedTo;

    /**
     * @return Service to route the IP to. If null, the IP will be [parked](https://api.ovh.com/console/#/ip/%7Bip%7D/park~POST)
     * instead of [moved](https://api.ovh.com/console/#/ip/%7Bip%7D/move~POST)
     * 
     */
    public Output<MoveRoutedTo> routedTo() {
        return this.routedTo;
    }
    /**
     * Service name in the form of `ip-&lt;part-1&gt;.&lt;part-2&gt;.&lt;part-3&gt;.&lt;part-4&gt;`
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return Service name in the form of `ip-&lt;part-1&gt;.&lt;part-2&gt;.&lt;part-3&gt;.&lt;part-4&gt;`
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Starting date and time field of the current IP task that is in charge of changing the service the IP is attached to
     * 
     */
    @Export(name="taskStartDate", refs={String.class}, tree="[0]")
    private Output<String> taskStartDate;

    /**
     * @return Starting date and time field of the current IP task that is in charge of changing the service the IP is attached to
     * 
     */
    public Output<String> taskStartDate() {
        return this.taskStartDate;
    }
    /**
     * Status field of the current IP task that is in charge of changing the service the IP is attached to
     * 
     */
    @Export(name="taskStatus", refs={String.class}, tree="[0]")
    private Output<String> taskStatus;

    /**
     * @return Status field of the current IP task that is in charge of changing the service the IP is attached to
     * 
     */
    public Output<String> taskStatus() {
        return this.taskStatus;
    }
    /**
     * Possible values for ip type
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Possible values for ip type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Move(java.lang.String name) {
        this(name, MoveArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Move(java.lang.String name, MoveArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Move(java.lang.String name, MoveArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Ip/move:Move", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Move(java.lang.String name, Output<java.lang.String> id, @Nullable MoveState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Ip/move:Move", name, state, makeResourceOptions(options, id), false);
    }

    private static MoveArgs makeArgs(MoveArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? MoveArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Move get(java.lang.String name, Output<java.lang.String> id, @Nullable MoveState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Move(name, id, state, options);
    }
}
