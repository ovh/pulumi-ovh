// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Okms.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetOkmsCredentialResult {
    /**
     * @return (String) PEM encoded certificate of the credential
     * 
     */
    private String certificatePem;
    /**
     * @return (String) Type of the certificate (ECDSA or RSA)
     * 
     */
    private String certificateType;
    /**
     * @return (String) Creation time of the credential
     * 
     */
    private String createdAt;
    /**
     * @return (String) Description of the credential
     * 
     */
    private String description;
    /**
     * @return (String) Expiration time of the credential
     * 
     */
    private String expiredAt;
    /**
     * @return (Boolean) Is the credential generated from CSR
     * 
     */
    private Boolean fromCsr;
    private String id;
    /**
     * @return (List of String) List of identity URNs associated with the credential
     * 
     */
    private List<String> identityUrns;
    /**
     * @return (String) Name of the credential
     * 
     */
    private String name;
    private String okmsId;
    /**
     * @return (String) Status of the credential
     * 
     */
    private String status;

    private GetOkmsCredentialResult() {}
    /**
     * @return (String) PEM encoded certificate of the credential
     * 
     */
    public String certificatePem() {
        return this.certificatePem;
    }
    /**
     * @return (String) Type of the certificate (ECDSA or RSA)
     * 
     */
    public String certificateType() {
        return this.certificateType;
    }
    /**
     * @return (String) Creation time of the credential
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return (String) Description of the credential
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return (String) Expiration time of the credential
     * 
     */
    public String expiredAt() {
        return this.expiredAt;
    }
    /**
     * @return (Boolean) Is the credential generated from CSR
     * 
     */
    public Boolean fromCsr() {
        return this.fromCsr;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return (List of String) List of identity URNs associated with the credential
     * 
     */
    public List<String> identityUrns() {
        return this.identityUrns;
    }
    /**
     * @return (String) Name of the credential
     * 
     */
    public String name() {
        return this.name;
    }
    public String okmsId() {
        return this.okmsId;
    }
    /**
     * @return (String) Status of the credential
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOkmsCredentialResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificatePem;
        private String certificateType;
        private String createdAt;
        private String description;
        private String expiredAt;
        private Boolean fromCsr;
        private String id;
        private List<String> identityUrns;
        private String name;
        private String okmsId;
        private String status;
        public Builder() {}
        public Builder(GetOkmsCredentialResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificatePem = defaults.certificatePem;
    	      this.certificateType = defaults.certificateType;
    	      this.createdAt = defaults.createdAt;
    	      this.description = defaults.description;
    	      this.expiredAt = defaults.expiredAt;
    	      this.fromCsr = defaults.fromCsr;
    	      this.id = defaults.id;
    	      this.identityUrns = defaults.identityUrns;
    	      this.name = defaults.name;
    	      this.okmsId = defaults.okmsId;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder certificatePem(String certificatePem) {
            if (certificatePem == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "certificatePem");
            }
            this.certificatePem = certificatePem;
            return this;
        }
        @CustomType.Setter
        public Builder certificateType(String certificateType) {
            if (certificateType == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "certificateType");
            }
            this.certificateType = certificateType;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder expiredAt(String expiredAt) {
            if (expiredAt == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "expiredAt");
            }
            this.expiredAt = expiredAt;
            return this;
        }
        @CustomType.Setter
        public Builder fromCsr(Boolean fromCsr) {
            if (fromCsr == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "fromCsr");
            }
            this.fromCsr = fromCsr;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder identityUrns(List<String> identityUrns) {
            if (identityUrns == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "identityUrns");
            }
            this.identityUrns = identityUrns;
            return this;
        }
        public Builder identityUrns(String... identityUrns) {
            return identityUrns(List.of(identityUrns));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder okmsId(String okmsId) {
            if (okmsId == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "okmsId");
            }
            this.okmsId = okmsId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetOkmsCredentialResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetOkmsCredentialResult build() {
            final var _resultValue = new GetOkmsCredentialResult();
            _resultValue.certificatePem = certificatePem;
            _resultValue.certificateType = certificateType;
            _resultValue.createdAt = createdAt;
            _resultValue.description = description;
            _resultValue.expiredAt = expiredAt;
            _resultValue.fromCsr = fromCsr;
            _resultValue.id = id;
            _resultValue.identityUrns = identityUrns;
            _resultValue.name = name;
            _resultValue.okmsId = okmsId;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
