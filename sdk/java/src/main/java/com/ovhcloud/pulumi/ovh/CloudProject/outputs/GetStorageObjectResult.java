// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStorageObjectResult {
    /**
     * @return ETag
     * 
     */
    private String etag;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Whether this object is a delete marker
     * 
     */
    private Boolean isDeleteMarker;
    /**
     * @return Whether this is the latest version of the object
     * 
     */
    private Boolean isLatest;
    /**
     * @return Key
     * 
     */
    private String key;
    /**
     * @return Last modification date
     * 
     */
    private String lastModified;
    /**
     * @return Name
     * 
     */
    private String name;
    /**
     * @return Region name
     * 
     */
    private String regionName;
    /**
     * @return Service name
     * 
     */
    private String serviceName;
    /**
     * @return Size (bytes)
     * 
     */
    private Double size;
    /**
     * @return Storage class
     * 
     */
    private String storageClass;
    /**
     * @return Version ID of the object
     * 
     */
    private String versionId;

    private GetStorageObjectResult() {}
    /**
     * @return ETag
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether this object is a delete marker
     * 
     */
    public Boolean isDeleteMarker() {
        return this.isDeleteMarker;
    }
    /**
     * @return Whether this is the latest version of the object
     * 
     */
    public Boolean isLatest() {
        return this.isLatest;
    }
    /**
     * @return Key
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Last modification date
     * 
     */
    public String lastModified() {
        return this.lastModified;
    }
    /**
     * @return Name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Region name
     * 
     */
    public String regionName() {
        return this.regionName;
    }
    /**
     * @return Service name
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Size (bytes)
     * 
     */
    public Double size() {
        return this.size;
    }
    /**
     * @return Storage class
     * 
     */
    public String storageClass() {
        return this.storageClass;
    }
    /**
     * @return Version ID of the object
     * 
     */
    public String versionId() {
        return this.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStorageObjectResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String etag;
        private String id;
        private Boolean isDeleteMarker;
        private Boolean isLatest;
        private String key;
        private String lastModified;
        private String name;
        private String regionName;
        private String serviceName;
        private Double size;
        private String storageClass;
        private String versionId;
        public Builder() {}
        public Builder(GetStorageObjectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.isDeleteMarker = defaults.isDeleteMarker;
    	      this.isLatest = defaults.isLatest;
    	      this.key = defaults.key;
    	      this.lastModified = defaults.lastModified;
    	      this.name = defaults.name;
    	      this.regionName = defaults.regionName;
    	      this.serviceName = defaults.serviceName;
    	      this.size = defaults.size;
    	      this.storageClass = defaults.storageClass;
    	      this.versionId = defaults.versionId;
        }

        @CustomType.Setter
        public Builder etag(String etag) {
            if (etag == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "etag");
            }
            this.etag = etag;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isDeleteMarker(Boolean isDeleteMarker) {
            if (isDeleteMarker == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "isDeleteMarker");
            }
            this.isDeleteMarker = isDeleteMarker;
            return this;
        }
        @CustomType.Setter
        public Builder isLatest(Boolean isLatest) {
            if (isLatest == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "isLatest");
            }
            this.isLatest = isLatest;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder lastModified(String lastModified) {
            if (lastModified == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "lastModified");
            }
            this.lastModified = lastModified;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder regionName(String regionName) {
            if (regionName == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "regionName");
            }
            this.regionName = regionName;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder size(Double size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder storageClass(String storageClass) {
            if (storageClass == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "storageClass");
            }
            this.storageClass = storageClass;
            return this;
        }
        @CustomType.Setter
        public Builder versionId(String versionId) {
            if (versionId == null) {
              throw new MissingRequiredPropertyException("GetStorageObjectResult", "versionId");
            }
            this.versionId = versionId;
            return this;
        }
        public GetStorageObjectResult build() {
            final var _resultValue = new GetStorageObjectResult();
            _resultValue.etag = etag;
            _resultValue.id = id;
            _resultValue.isDeleteMarker = isDeleteMarker;
            _resultValue.isLatest = isLatest;
            _resultValue.key = key;
            _resultValue.lastModified = lastModified;
            _resultValue.name = name;
            _resultValue.regionName = regionName;
            _resultValue.serviceName = serviceName;
            _resultValue.size = size;
            _resultValue.storageClass = storageClass;
            _resultValue.versionId = versionId;
            return _resultValue;
        }
    }
}
