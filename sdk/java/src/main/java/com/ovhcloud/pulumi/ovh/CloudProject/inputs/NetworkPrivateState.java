// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.ovhcloud.pulumi.ovh.CloudProject.inputs.NetworkPrivateRegionsAttributeArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.NetworkPrivateRegionsStatusArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkPrivateState extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPrivateState Empty = new NetworkPrivateState();

    /**
     * The name of the network.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the network.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * an array of valid OVHcloud public cloud region ID in which the network will be available. Ex.: &#34;GRA1&#34;. Defaults to all public cloud regions.
     * 
     */
    @Import(name="regions")
    private @Nullable Output<List<String>> regions;

    /**
     * @return an array of valid OVHcloud public cloud region ID in which the network will be available. Ex.: &#34;GRA1&#34;. Defaults to all public cloud regions.
     * 
     */
    public Optional<Output<List<String>>> regions() {
        return Optional.ofNullable(this.regions);
    }

    /**
     * A map representing information about the region.
     * * `regions_attributes/region` - The id of the region.
     * * `regions_attributes/status` - The status of the network in the region.
     * * `regions_attributes/openstackid` - The private network id in the region.
     * 
     */
    @Import(name="regionsAttributes")
    private @Nullable Output<List<NetworkPrivateRegionsAttributeArgs>> regionsAttributes;

    /**
     * @return A map representing information about the region.
     * * `regions_attributes/region` - The id of the region.
     * * `regions_attributes/status` - The status of the network in the region.
     * * `regions_attributes/openstackid` - The private network id in the region.
     * 
     */
    public Optional<Output<List<NetworkPrivateRegionsAttributeArgs>>> regionsAttributes() {
        return Optional.ofNullable(this.regionsAttributes);
    }

    /**
     * (Deprecated) A map representing the status of the network per region.
     * * `regions_status/region` - (Deprecated) The id of the region.
     * * `regions_status/status` - (Deprecated) The status of the network in the region.
     * 
     * @deprecated
     * use the regions_attributes field instead
     * 
     */
    @Deprecated /* use the regions_attributes field instead */
    @Import(name="regionsStatuses")
    private @Nullable Output<List<NetworkPrivateRegionsStatusArgs>> regionsStatuses;

    /**
     * @return (Deprecated) A map representing the status of the network per region.
     * * `regions_status/region` - (Deprecated) The id of the region.
     * * `regions_status/status` - (Deprecated) The status of the network in the region.
     * 
     * @deprecated
     * use the regions_attributes field instead
     * 
     */
    @Deprecated /* use the regions_attributes field instead */
    public Optional<Output<List<NetworkPrivateRegionsStatusArgs>>> regionsStatuses() {
        return Optional.ofNullable(this.regionsStatuses);
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * the status of the network. should be normally set to &#39;ACTIVE&#39;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return the status of the network. should be normally set to &#39;ACTIVE&#39;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * the type of the network. Either &#39;private&#39; or &#39;public&#39;.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return the type of the network. Either &#39;private&#39; or &#39;public&#39;.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * a vlan id to associate with the network. Changing this value recreates the resource. Defaults to 0.
     * 
     */
    @Import(name="vlanId")
    private @Nullable Output<Integer> vlanId;

    /**
     * @return a vlan id to associate with the network. Changing this value recreates the resource. Defaults to 0.
     * 
     */
    public Optional<Output<Integer>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    private NetworkPrivateState() {}

    private NetworkPrivateState(NetworkPrivateState $) {
        this.name = $.name;
        this.regions = $.regions;
        this.regionsAttributes = $.regionsAttributes;
        this.regionsStatuses = $.regionsStatuses;
        this.serviceName = $.serviceName;
        this.status = $.status;
        this.type = $.type;
        this.vlanId = $.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPrivateState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPrivateState $;

        public Builder() {
            $ = new NetworkPrivateState();
        }

        public Builder(NetworkPrivateState defaults) {
            $ = new NetworkPrivateState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the network.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the network.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param regions an array of valid OVHcloud public cloud region ID in which the network will be available. Ex.: &#34;GRA1&#34;. Defaults to all public cloud regions.
         * 
         * @return builder
         * 
         */
        public Builder regions(@Nullable Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions an array of valid OVHcloud public cloud region ID in which the network will be available. Ex.: &#34;GRA1&#34;. Defaults to all public cloud regions.
         * 
         * @return builder
         * 
         */
        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions an array of valid OVHcloud public cloud region ID in which the network will be available. Ex.: &#34;GRA1&#34;. Defaults to all public cloud regions.
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param regionsAttributes A map representing information about the region.
         * * `regions_attributes/region` - The id of the region.
         * * `regions_attributes/status` - The status of the network in the region.
         * * `regions_attributes/openstackid` - The private network id in the region.
         * 
         * @return builder
         * 
         */
        public Builder regionsAttributes(@Nullable Output<List<NetworkPrivateRegionsAttributeArgs>> regionsAttributes) {
            $.regionsAttributes = regionsAttributes;
            return this;
        }

        /**
         * @param regionsAttributes A map representing information about the region.
         * * `regions_attributes/region` - The id of the region.
         * * `regions_attributes/status` - The status of the network in the region.
         * * `regions_attributes/openstackid` - The private network id in the region.
         * 
         * @return builder
         * 
         */
        public Builder regionsAttributes(List<NetworkPrivateRegionsAttributeArgs> regionsAttributes) {
            return regionsAttributes(Output.of(regionsAttributes));
        }

        /**
         * @param regionsAttributes A map representing information about the region.
         * * `regions_attributes/region` - The id of the region.
         * * `regions_attributes/status` - The status of the network in the region.
         * * `regions_attributes/openstackid` - The private network id in the region.
         * 
         * @return builder
         * 
         */
        public Builder regionsAttributes(NetworkPrivateRegionsAttributeArgs... regionsAttributes) {
            return regionsAttributes(List.of(regionsAttributes));
        }

        /**
         * @param regionsStatuses (Deprecated) A map representing the status of the network per region.
         * * `regions_status/region` - (Deprecated) The id of the region.
         * * `regions_status/status` - (Deprecated) The status of the network in the region.
         * 
         * @return builder
         * 
         * @deprecated
         * use the regions_attributes field instead
         * 
         */
        @Deprecated /* use the regions_attributes field instead */
        public Builder regionsStatuses(@Nullable Output<List<NetworkPrivateRegionsStatusArgs>> regionsStatuses) {
            $.regionsStatuses = regionsStatuses;
            return this;
        }

        /**
         * @param regionsStatuses (Deprecated) A map representing the status of the network per region.
         * * `regions_status/region` - (Deprecated) The id of the region.
         * * `regions_status/status` - (Deprecated) The status of the network in the region.
         * 
         * @return builder
         * 
         * @deprecated
         * use the regions_attributes field instead
         * 
         */
        @Deprecated /* use the regions_attributes field instead */
        public Builder regionsStatuses(List<NetworkPrivateRegionsStatusArgs> regionsStatuses) {
            return regionsStatuses(Output.of(regionsStatuses));
        }

        /**
         * @param regionsStatuses (Deprecated) A map representing the status of the network per region.
         * * `regions_status/region` - (Deprecated) The id of the region.
         * * `regions_status/status` - (Deprecated) The status of the network in the region.
         * 
         * @return builder
         * 
         * @deprecated
         * use the regions_attributes field instead
         * 
         */
        @Deprecated /* use the regions_attributes field instead */
        public Builder regionsStatuses(NetworkPrivateRegionsStatusArgs... regionsStatuses) {
            return regionsStatuses(List.of(regionsStatuses));
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param status the status of the network. should be normally set to &#39;ACTIVE&#39;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status the status of the network. should be normally set to &#39;ACTIVE&#39;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type the type of the network. Either &#39;private&#39; or &#39;public&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type the type of the network. Either &#39;private&#39; or &#39;public&#39;.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vlanId a vlan id to associate with the network. Changing this value recreates the resource. Defaults to 0.
         * 
         * @return builder
         * 
         */
        public Builder vlanId(@Nullable Output<Integer> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        /**
         * @param vlanId a vlan id to associate with the network. Changing this value recreates the resource. Defaults to 0.
         * 
         * @return builder
         * 
         */
        public Builder vlanId(Integer vlanId) {
            return vlanId(Output.of(vlanId));
        }

        public NetworkPrivateState build() {
            return $;
        }
    }

}
