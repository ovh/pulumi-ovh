// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetKubeNodePoolNodesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKubeNodePoolNodesArgs Empty = new GetKubeNodePoolNodesArgs();

    /**
     * The ID of the managed kubernetes cluster.
     * 
     */
    @Import(name="kubeId", required=true)
    private Output<String> kubeId;

    /**
     * @return The ID of the managed kubernetes cluster.
     * 
     */
    public Output<String> kubeId() {
        return this.kubeId;
    }

    /**
     * Name of the node pool from which we want the nodes.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the node pool from which we want the nodes.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private GetKubeNodePoolNodesArgs() {}

    private GetKubeNodePoolNodesArgs(GetKubeNodePoolNodesArgs $) {
        this.kubeId = $.kubeId;
        this.name = $.name;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKubeNodePoolNodesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKubeNodePoolNodesArgs $;

        public Builder() {
            $ = new GetKubeNodePoolNodesArgs();
        }

        public Builder(GetKubeNodePoolNodesArgs defaults) {
            $ = new GetKubeNodePoolNodesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kubeId The ID of the managed kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder kubeId(Output<String> kubeId) {
            $.kubeId = kubeId;
            return this;
        }

        /**
         * @param kubeId The ID of the managed kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder kubeId(String kubeId) {
            return kubeId(Output.of(kubeId));
        }

        /**
         * @param name Name of the node pool from which we want the nodes.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the node pool from which we want the nodes.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param serviceName The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public GetKubeNodePoolNodesArgs build() {
            if ($.kubeId == null) {
                throw new MissingRequiredPropertyException("GetKubeNodePoolNodesArgs", "kubeId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetKubeNodePoolNodesArgs", "name");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetKubeNodePoolNodesArgs", "serviceName");
            }
            return $;
        }
    }

}
