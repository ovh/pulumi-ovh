// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dbaas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogsRoleArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogsRoleArgs Empty = new LogsRoleArgs();

    /**
     * The role description
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return The role description
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * The role name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The role name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The service name
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private LogsRoleArgs() {}

    private LogsRoleArgs(LogsRoleArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogsRoleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogsRoleArgs $;

        public Builder() {
            $ = new LogsRoleArgs();
        }

        public Builder(LogsRoleArgs defaults) {
            $ = new LogsRoleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description The role description
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The role description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name The role name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The role name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param serviceName The service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public LogsRoleArgs build() {
            if ($.description == null) {
                throw new MissingRequiredPropertyException("LogsRoleArgs", "description");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("LogsRoleArgs", "serviceName");
            }
            return $;
        }
    }

}
