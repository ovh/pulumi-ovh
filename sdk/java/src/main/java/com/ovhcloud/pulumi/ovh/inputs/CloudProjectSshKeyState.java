// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudProjectSshKeyState extends com.pulumi.resources.ResourceArgs {

    public static final CloudProjectSshKeyState Empty = new CloudProjectSshKeyState();

    /**
     * SSH key fingerprint
     * 
     */
    @Import(name="fingerPrint")
    private @Nullable Output<String> fingerPrint;

    /**
     * @return SSH key fingerprint
     * 
     */
    public Optional<Output<String>> fingerPrint() {
        return Optional.ofNullable(this.fingerPrint);
    }

    /**
     * SSH key name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return SSH key name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * SSH public key
     * 
     */
    @Import(name="publicKey")
    private @Nullable Output<String> publicKey;

    /**
     * @return SSH public key
     * 
     */
    public Optional<Output<String>> publicKey() {
        return Optional.ofNullable(this.publicKey);
    }

    /**
     * Region to create SSH key
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region to create SSH key
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * SSH key regions
     * 
     */
    @Import(name="regions")
    private @Nullable Output<List<String>> regions;

    /**
     * @return SSH key regions
     * 
     */
    public Optional<Output<List<String>>> regions() {
        return Optional.ofNullable(this.regions);
    }

    /**
     * Service name
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private CloudProjectSshKeyState() {}

    private CloudProjectSshKeyState(CloudProjectSshKeyState $) {
        this.fingerPrint = $.fingerPrint;
        this.name = $.name;
        this.publicKey = $.publicKey;
        this.region = $.region;
        this.regions = $.regions;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudProjectSshKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudProjectSshKeyState $;

        public Builder() {
            $ = new CloudProjectSshKeyState();
        }

        public Builder(CloudProjectSshKeyState defaults) {
            $ = new CloudProjectSshKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param fingerPrint SSH key fingerprint
         * 
         * @return builder
         * 
         */
        public Builder fingerPrint(@Nullable Output<String> fingerPrint) {
            $.fingerPrint = fingerPrint;
            return this;
        }

        /**
         * @param fingerPrint SSH key fingerprint
         * 
         * @return builder
         * 
         */
        public Builder fingerPrint(String fingerPrint) {
            return fingerPrint(Output.of(fingerPrint));
        }

        /**
         * @param name SSH key name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name SSH key name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param publicKey SSH public key
         * 
         * @return builder
         * 
         */
        public Builder publicKey(@Nullable Output<String> publicKey) {
            $.publicKey = publicKey;
            return this;
        }

        /**
         * @param publicKey SSH public key
         * 
         * @return builder
         * 
         */
        public Builder publicKey(String publicKey) {
            return publicKey(Output.of(publicKey));
        }

        /**
         * @param region Region to create SSH key
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region to create SSH key
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param regions SSH key regions
         * 
         * @return builder
         * 
         */
        public Builder regions(@Nullable Output<List<String>> regions) {
            $.regions = regions;
            return this;
        }

        /**
         * @param regions SSH key regions
         * 
         * @return builder
         * 
         */
        public Builder regions(List<String> regions) {
            return regions(Output.of(regions));
        }

        /**
         * @param regions SSH key regions
         * 
         * @return builder
         * 
         */
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public CloudProjectSshKeyState build() {
            return $;
        }
    }

}
