// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Domain.inputs;

import com.ovhcloud.pulumi.ovh.Domain.inputs.DSRecordsDsRecordArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DSRecordsState extends com.pulumi.resources.ResourceArgs {

    public static final DSRecordsState Empty = new DSRecordsState();

    /**
     * Domain name for which to manage DS records
     * 
     */
    @Import(name="domain")
    private @Nullable Output<String> domain;

    /**
     * @return Domain name for which to manage DS records
     * 
     */
    public Optional<Output<String>> domain() {
        return Optional.ofNullable(this.domain);
    }

    /**
     * Details about a DS record
     * 
     */
    @Import(name="dsRecords")
    private @Nullable Output<List<DSRecordsDsRecordArgs>> dsRecords;

    /**
     * @return Details about a DS record
     * 
     */
    public Optional<Output<List<DSRecordsDsRecordArgs>>> dsRecords() {
        return Optional.ofNullable(this.dsRecords);
    }

    private DSRecordsState() {}

    private DSRecordsState(DSRecordsState $) {
        this.domain = $.domain;
        this.dsRecords = $.dsRecords;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DSRecordsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DSRecordsState $;

        public Builder() {
            $ = new DSRecordsState();
        }

        public Builder(DSRecordsState defaults) {
            $ = new DSRecordsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param domain Domain name for which to manage DS records
         * 
         * @return builder
         * 
         */
        public Builder domain(@Nullable Output<String> domain) {
            $.domain = domain;
            return this;
        }

        /**
         * @param domain Domain name for which to manage DS records
         * 
         * @return builder
         * 
         */
        public Builder domain(String domain) {
            return domain(Output.of(domain));
        }

        /**
         * @param dsRecords Details about a DS record
         * 
         * @return builder
         * 
         */
        public Builder dsRecords(@Nullable Output<List<DSRecordsDsRecordArgs>> dsRecords) {
            $.dsRecords = dsRecords;
            return this;
        }

        /**
         * @param dsRecords Details about a DS record
         * 
         * @return builder
         * 
         */
        public Builder dsRecords(List<DSRecordsDsRecordArgs> dsRecords) {
            return dsRecords(Output.of(dsRecords));
        }

        /**
         * @param dsRecords Details about a DS record
         * 
         * @return builder
         * 
         */
        public Builder dsRecords(DSRecordsDsRecordArgs... dsRecords) {
            return dsRecords(List.of(dsRecords));
        }

        public DSRecordsState build() {
            return $;
        }
    }

}
