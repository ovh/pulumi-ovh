// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Vps.inputs;

import com.ovhcloud.pulumi.ovh.Vps.inputs.VpsPlanOptionConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VpsPlanOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final VpsPlanOptionArgs Empty = new VpsPlanOptionArgs();

    /**
     * Representation of a configuration item for personalizing product
     * 
     */
    @Import(name="configurations")
    private @Nullable Output<List<VpsPlanOptionConfigurationArgs>> configurations;

    /**
     * @return Representation of a configuration item for personalizing product
     * 
     */
    public Optional<Output<List<VpsPlanOptionConfigurationArgs>>> configurations() {
        return Optional.ofNullable(this.configurations);
    }

    /**
     * duration
     * 
     */
    @Import(name="duration", required=true)
    private Output<String> duration;

    /**
     * @return duration
     * 
     */
    public Output<String> duration() {
        return this.duration;
    }

    /**
     * Plan code
     * 
     */
    @Import(name="planCode", required=true)
    private Output<String> planCode;

    /**
     * @return Plan code
     * 
     */
    public Output<String> planCode() {
        return this.planCode;
    }

    /**
     * Pricing model identifier
     * 
     */
    @Import(name="pricingMode", required=true)
    private Output<String> pricingMode;

    /**
     * @return Pricing model identifier
     * 
     */
    public Output<String> pricingMode() {
        return this.pricingMode;
    }

    /**
     * Quantity of product desired
     * 
     */
    @Import(name="quantity", required=true)
    private Output<Double> quantity;

    /**
     * @return Quantity of product desired
     * 
     */
    public Output<Double> quantity() {
        return this.quantity;
    }

    private VpsPlanOptionArgs() {}

    private VpsPlanOptionArgs(VpsPlanOptionArgs $) {
        this.configurations = $.configurations;
        this.duration = $.duration;
        this.planCode = $.planCode;
        this.pricingMode = $.pricingMode;
        this.quantity = $.quantity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VpsPlanOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VpsPlanOptionArgs $;

        public Builder() {
            $ = new VpsPlanOptionArgs();
        }

        public Builder(VpsPlanOptionArgs defaults) {
            $ = new VpsPlanOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configurations Representation of a configuration item for personalizing product
         * 
         * @return builder
         * 
         */
        public Builder configurations(@Nullable Output<List<VpsPlanOptionConfigurationArgs>> configurations) {
            $.configurations = configurations;
            return this;
        }

        /**
         * @param configurations Representation of a configuration item for personalizing product
         * 
         * @return builder
         * 
         */
        public Builder configurations(List<VpsPlanOptionConfigurationArgs> configurations) {
            return configurations(Output.of(configurations));
        }

        /**
         * @param configurations Representation of a configuration item for personalizing product
         * 
         * @return builder
         * 
         */
        public Builder configurations(VpsPlanOptionConfigurationArgs... configurations) {
            return configurations(List.of(configurations));
        }

        /**
         * @param duration duration
         * 
         * @return builder
         * 
         */
        public Builder duration(Output<String> duration) {
            $.duration = duration;
            return this;
        }

        /**
         * @param duration duration
         * 
         * @return builder
         * 
         */
        public Builder duration(String duration) {
            return duration(Output.of(duration));
        }

        /**
         * @param planCode Plan code
         * 
         * @return builder
         * 
         */
        public Builder planCode(Output<String> planCode) {
            $.planCode = planCode;
            return this;
        }

        /**
         * @param planCode Plan code
         * 
         * @return builder
         * 
         */
        public Builder planCode(String planCode) {
            return planCode(Output.of(planCode));
        }

        /**
         * @param pricingMode Pricing model identifier
         * 
         * @return builder
         * 
         */
        public Builder pricingMode(Output<String> pricingMode) {
            $.pricingMode = pricingMode;
            return this;
        }

        /**
         * @param pricingMode Pricing model identifier
         * 
         * @return builder
         * 
         */
        public Builder pricingMode(String pricingMode) {
            return pricingMode(Output.of(pricingMode));
        }

        /**
         * @param quantity Quantity of product desired
         * 
         * @return builder
         * 
         */
        public Builder quantity(Output<Double> quantity) {
            $.quantity = quantity;
            return this;
        }

        /**
         * @param quantity Quantity of product desired
         * 
         * @return builder
         * 
         */
        public Builder quantity(Double quantity) {
            return quantity(Output.of(quantity));
        }

        public VpsPlanOptionArgs build() {
            if ($.duration == null) {
                throw new MissingRequiredPropertyException("VpsPlanOptionArgs", "duration");
            }
            if ($.planCode == null) {
                throw new MissingRequiredPropertyException("VpsPlanOptionArgs", "planCode");
            }
            if ($.pricingMode == null) {
                throw new MissingRequiredPropertyException("VpsPlanOptionArgs", "pricingMode");
            }
            if ($.quantity == null) {
                throw new MissingRequiredPropertyException("VpsPlanOptionArgs", "quantity");
            }
            return $;
        }
    }

}
