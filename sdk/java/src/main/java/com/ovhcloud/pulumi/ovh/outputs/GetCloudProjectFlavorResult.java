// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.outputs;

import com.ovhcloud.pulumi.ovh.outputs.GetCloudProjectFlavorCapability;
import com.ovhcloud.pulumi.ovh.outputs.GetCloudProjectFlavorPlanCodes;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudProjectFlavorResult {
    /**
     * @return Available in stock
     * 
     */
    private Boolean available;
    /**
     * @return Capabilities of the flavor
     * 
     */
    private List<GetCloudProjectFlavorCapability> capabilities;
    /**
     * @return Number of disks
     * 
     */
    private Double disk;
    /**
     * @return Flavor id
     * 
     */
    private String id;
    /**
     * @return Max capacity of inbound traffic in Mbit/s
     * 
     */
    private Double inboundBandwidth;
    /**
     * @return Flavor name
     * 
     */
    private String name;
    /**
     * @return OS to install on
     * 
     */
    private String osType;
    /**
     * @return Max capacity of outbound traffic in Mbit/s
     * 
     */
    private Double outboundBandwidth;
    /**
     * @return Plan codes to order instances
     * 
     */
    private GetCloudProjectFlavorPlanCodes planCodes;
    /**
     * @return Number instance you can spawn with your actual quota
     * 
     */
    private Double quota;
    /**
     * @return Ram quantity (Gio)
     * 
     */
    private Double ram;
    /**
     * @return Flavor region
     * 
     */
    private String region;
    /**
     * @return Service name
     * 
     */
    private String serviceName;
    /**
     * @return Flavor type
     * 
     */
    private String type;
    /**
     * @return Number of VCPUs
     * 
     */
    private Double vcpus;

    private GetCloudProjectFlavorResult() {}
    /**
     * @return Available in stock
     * 
     */
    public Boolean available() {
        return this.available;
    }
    /**
     * @return Capabilities of the flavor
     * 
     */
    public List<GetCloudProjectFlavorCapability> capabilities() {
        return this.capabilities;
    }
    /**
     * @return Number of disks
     * 
     */
    public Double disk() {
        return this.disk;
    }
    /**
     * @return Flavor id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Max capacity of inbound traffic in Mbit/s
     * 
     */
    public Double inboundBandwidth() {
        return this.inboundBandwidth;
    }
    /**
     * @return Flavor name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return OS to install on
     * 
     */
    public String osType() {
        return this.osType;
    }
    /**
     * @return Max capacity of outbound traffic in Mbit/s
     * 
     */
    public Double outboundBandwidth() {
        return this.outboundBandwidth;
    }
    /**
     * @return Plan codes to order instances
     * 
     */
    public GetCloudProjectFlavorPlanCodes planCodes() {
        return this.planCodes;
    }
    /**
     * @return Number instance you can spawn with your actual quota
     * 
     */
    public Double quota() {
        return this.quota;
    }
    /**
     * @return Ram quantity (Gio)
     * 
     */
    public Double ram() {
        return this.ram;
    }
    /**
     * @return Flavor region
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return Service name
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Flavor type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Number of VCPUs
     * 
     */
    public Double vcpus() {
        return this.vcpus;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudProjectFlavorResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean available;
        private List<GetCloudProjectFlavorCapability> capabilities;
        private Double disk;
        private String id;
        private Double inboundBandwidth;
        private String name;
        private String osType;
        private Double outboundBandwidth;
        private GetCloudProjectFlavorPlanCodes planCodes;
        private Double quota;
        private Double ram;
        private String region;
        private String serviceName;
        private String type;
        private Double vcpus;
        public Builder() {}
        public Builder(GetCloudProjectFlavorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.available = defaults.available;
    	      this.capabilities = defaults.capabilities;
    	      this.disk = defaults.disk;
    	      this.id = defaults.id;
    	      this.inboundBandwidth = defaults.inboundBandwidth;
    	      this.name = defaults.name;
    	      this.osType = defaults.osType;
    	      this.outboundBandwidth = defaults.outboundBandwidth;
    	      this.planCodes = defaults.planCodes;
    	      this.quota = defaults.quota;
    	      this.ram = defaults.ram;
    	      this.region = defaults.region;
    	      this.serviceName = defaults.serviceName;
    	      this.type = defaults.type;
    	      this.vcpus = defaults.vcpus;
        }

        @CustomType.Setter
        public Builder available(Boolean available) {
            if (available == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "available");
            }
            this.available = available;
            return this;
        }
        @CustomType.Setter
        public Builder capabilities(List<GetCloudProjectFlavorCapability> capabilities) {
            if (capabilities == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "capabilities");
            }
            this.capabilities = capabilities;
            return this;
        }
        public Builder capabilities(GetCloudProjectFlavorCapability... capabilities) {
            return capabilities(List.of(capabilities));
        }
        @CustomType.Setter
        public Builder disk(Double disk) {
            if (disk == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "disk");
            }
            this.disk = disk;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder inboundBandwidth(Double inboundBandwidth) {
            if (inboundBandwidth == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "inboundBandwidth");
            }
            this.inboundBandwidth = inboundBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder osType(String osType) {
            if (osType == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "osType");
            }
            this.osType = osType;
            return this;
        }
        @CustomType.Setter
        public Builder outboundBandwidth(Double outboundBandwidth) {
            if (outboundBandwidth == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "outboundBandwidth");
            }
            this.outboundBandwidth = outboundBandwidth;
            return this;
        }
        @CustomType.Setter
        public Builder planCodes(GetCloudProjectFlavorPlanCodes planCodes) {
            if (planCodes == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "planCodes");
            }
            this.planCodes = planCodes;
            return this;
        }
        @CustomType.Setter
        public Builder quota(Double quota) {
            if (quota == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "quota");
            }
            this.quota = quota;
            return this;
        }
        @CustomType.Setter
        public Builder ram(Double ram) {
            if (ram == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "ram");
            }
            this.ram = ram;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder vcpus(Double vcpus) {
            if (vcpus == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectFlavorResult", "vcpus");
            }
            this.vcpus = vcpus;
            return this;
        }
        public GetCloudProjectFlavorResult build() {
            final var _resultValue = new GetCloudProjectFlavorResult();
            _resultValue.available = available;
            _resultValue.capabilities = capabilities;
            _resultValue.disk = disk;
            _resultValue.id = id;
            _resultValue.inboundBandwidth = inboundBandwidth;
            _resultValue.name = name;
            _resultValue.osType = osType;
            _resultValue.outboundBandwidth = outboundBandwidth;
            _resultValue.planCodes = planCodes;
            _resultValue.quota = quota;
            _resultValue.ram = ram;
            _resultValue.region = region;
            _resultValue.serviceName = serviceName;
            _resultValue.type = type;
            _resultValue.vcpus = vcpus;
            return _resultValue;
        }
    }
}
