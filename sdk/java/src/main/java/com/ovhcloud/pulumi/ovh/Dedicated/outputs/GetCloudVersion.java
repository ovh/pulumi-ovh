// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dedicated.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCloudVersion {
    private String build;
    private String major;
    private String minor;

    private GetCloudVersion() {}
    public String build() {
        return this.build;
    }
    public String major() {
        return this.major;
    }
    public String minor() {
        return this.minor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudVersion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String build;
        private String major;
        private String minor;
        public Builder() {}
        public Builder(GetCloudVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.build = defaults.build;
    	      this.major = defaults.major;
    	      this.minor = defaults.minor;
        }

        @CustomType.Setter
        public Builder build(String build) {
            if (build == null) {
              throw new MissingRequiredPropertyException("GetCloudVersion", "build");
            }
            this.build = build;
            return this;
        }
        @CustomType.Setter
        public Builder major(String major) {
            if (major == null) {
              throw new MissingRequiredPropertyException("GetCloudVersion", "major");
            }
            this.major = major;
            return this;
        }
        @CustomType.Setter
        public Builder minor(String minor) {
            if (minor == null) {
              throw new MissingRequiredPropertyException("GetCloudVersion", "minor");
            }
            this.minor = minor;
            return this;
        }
        public GetCloudVersion build() {
            final var _resultValue = new GetCloudVersion();
            _resultValue.build = build;
            _resultValue.major = major;
            _resultValue.minor = minor;
            return _resultValue;
        }
    }
}
