// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOvhcloudConnectConfigPopsPopConfig {
    /**
     * @return Customer Private AS
     * 
     */
    private Double customerBgpArea;
    /**
     * @return ID of the Pop Configuration
     * 
     */
    private Double id;
    /**
     * @return ID of the interface
     * 
     */
    private Double interfaceId;
    /**
     * @return OVH Private AS
     * 
     */
    private Double ovhBgpArea;
    /**
     * @return Status of the pop configuration
     * 
     */
    private String status;
    /**
     * @return Subnet should be a /30, first IP for OVH, second IP for customer
     * 
     */
    private String subnet;
    /**
     * @return Type of the pop configuration
     * 
     */
    private String type;

    private GetOvhcloudConnectConfigPopsPopConfig() {}
    /**
     * @return Customer Private AS
     * 
     */
    public Double customerBgpArea() {
        return this.customerBgpArea;
    }
    /**
     * @return ID of the Pop Configuration
     * 
     */
    public Double id() {
        return this.id;
    }
    /**
     * @return ID of the interface
     * 
     */
    public Double interfaceId() {
        return this.interfaceId;
    }
    /**
     * @return OVH Private AS
     * 
     */
    public Double ovhBgpArea() {
        return this.ovhBgpArea;
    }
    /**
     * @return Status of the pop configuration
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Subnet should be a /30, first IP for OVH, second IP for customer
     * 
     */
    public String subnet() {
        return this.subnet;
    }
    /**
     * @return Type of the pop configuration
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOvhcloudConnectConfigPopsPopConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double customerBgpArea;
        private Double id;
        private Double interfaceId;
        private Double ovhBgpArea;
        private String status;
        private String subnet;
        private String type;
        public Builder() {}
        public Builder(GetOvhcloudConnectConfigPopsPopConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customerBgpArea = defaults.customerBgpArea;
    	      this.id = defaults.id;
    	      this.interfaceId = defaults.interfaceId;
    	      this.ovhBgpArea = defaults.ovhBgpArea;
    	      this.status = defaults.status;
    	      this.subnet = defaults.subnet;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder customerBgpArea(Double customerBgpArea) {
            if (customerBgpArea == null) {
              throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopsPopConfig", "customerBgpArea");
            }
            this.customerBgpArea = customerBgpArea;
            return this;
        }
        @CustomType.Setter
        public Builder id(Double id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopsPopConfig", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder interfaceId(Double interfaceId) {
            if (interfaceId == null) {
              throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopsPopConfig", "interfaceId");
            }
            this.interfaceId = interfaceId;
            return this;
        }
        @CustomType.Setter
        public Builder ovhBgpArea(Double ovhBgpArea) {
            if (ovhBgpArea == null) {
              throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopsPopConfig", "ovhBgpArea");
            }
            this.ovhBgpArea = ovhBgpArea;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopsPopConfig", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder subnet(String subnet) {
            if (subnet == null) {
              throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopsPopConfig", "subnet");
            }
            this.subnet = subnet;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopsPopConfig", "type");
            }
            this.type = type;
            return this;
        }
        public GetOvhcloudConnectConfigPopsPopConfig build() {
            final var _resultValue = new GetOvhcloudConnectConfigPopsPopConfig();
            _resultValue.customerBgpArea = customerBgpArea;
            _resultValue.id = id;
            _resultValue.interfaceId = interfaceId;
            _resultValue.ovhBgpArea = ovhBgpArea;
            _resultValue.status = status;
            _resultValue.subnet = subnet;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
