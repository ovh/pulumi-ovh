// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.outputs;

import com.ovhcloud.pulumi.ovh.CloudProject.outputs.GetUserRole;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetUserResult {
    /**
     * @return the date the user was created.
     * 
     */
    private String creationDate;
    /**
     * @return description of the role
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return A list of roles associated with the user.
     * 
     */
    private List<GetUserRole> roles;
    private String serviceName;
    /**
     * @return the status of the user. should be normally set to &#39;ok&#39;.
     * 
     */
    private String status;
    private String userId;
    /**
     * @return the username generated for the user. This username can be used with the Openstack API.
     * 
     */
    private String username;

    private GetUserResult() {}
    /**
     * @return the date the user was created.
     * 
     */
    public String creationDate() {
        return this.creationDate;
    }
    /**
     * @return description of the role
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A list of roles associated with the user.
     * 
     */
    public List<GetUserRole> roles() {
        return this.roles;
    }
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return the status of the user. should be normally set to &#39;ok&#39;.
     * 
     */
    public String status() {
        return this.status;
    }
    public String userId() {
        return this.userId;
    }
    /**
     * @return the username generated for the user. This username can be used with the Openstack API.
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String creationDate;
        private String description;
        private String id;
        private List<GetUserRole> roles;
        private String serviceName;
        private String status;
        private String userId;
        private String username;
        public Builder() {}
        public Builder(GetUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationDate = defaults.creationDate;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.roles = defaults.roles;
    	      this.serviceName = defaults.serviceName;
    	      this.status = defaults.status;
    	      this.userId = defaults.userId;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder creationDate(String creationDate) {
            if (creationDate == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "creationDate");
            }
            this.creationDate = creationDate;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder roles(List<GetUserRole> roles) {
            if (roles == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "roles");
            }
            this.roles = roles;
            return this;
        }
        public Builder roles(GetUserRole... roles) {
            return roles(List.of(roles));
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder userId(String userId) {
            if (userId == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "userId");
            }
            this.userId = userId;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetUserResult", "username");
            }
            this.username = username;
            return this;
        }
        public GetUserResult build() {
            final var _resultValue = new GetUserResult();
            _resultValue.creationDate = creationDate;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.roles = roles;
            _resultValue.serviceName = serviceName;
            _resultValue.status = status;
            _resultValue.userId = userId;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
