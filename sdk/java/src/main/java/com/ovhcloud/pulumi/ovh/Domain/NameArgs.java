// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Domain;

import com.ovhcloud.pulumi.ovh.Domain.inputs.NamePlanArgs;
import com.ovhcloud.pulumi.ovh.Domain.inputs.NamePlanOptionArgs;
import com.ovhcloud.pulumi.ovh.Domain.inputs.NameTargetSpecArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NameArgs extends com.pulumi.resources.ResourceArgs {

    public static final NameArgs Empty = new NameArgs();

    /**
     * Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
     * 
     */
    @Import(name="checksum")
    private @Nullable Output<String> checksum;

    /**
     * @return Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
     * 
     */
    public Optional<Output<String>> checksum() {
        return Optional.ofNullable(this.checksum);
    }

    /**
     * Domain name
     * 
     */
    @Import(name="domainName", required=true)
    private Output<String> domainName;

    /**
     * @return Domain name
     * 
     */
    public Output<String> domainName() {
        return this.domainName;
    }

    /**
     * OVH subsidiaries
     * 
     */
    @Import(name="ovhSubsidiary")
    private @Nullable Output<String> ovhSubsidiary;

    /**
     * @return OVH subsidiaries
     * 
     */
    public Optional<Output<String>> ovhSubsidiary() {
        return Optional.ofNullable(this.ovhSubsidiary);
    }

    @Import(name="planOptions")
    private @Nullable Output<List<NamePlanOptionArgs>> planOptions;

    public Optional<Output<List<NamePlanOptionArgs>>> planOptions() {
        return Optional.ofNullable(this.planOptions);
    }

    @Import(name="plans")
    private @Nullable Output<List<NamePlanArgs>> plans;

    public Optional<Output<List<NamePlanArgs>>> plans() {
        return Optional.ofNullable(this.plans);
    }

    /**
     * Latest target specification of the domain name resource.
     * 
     */
    @Import(name="targetSpec")
    private @Nullable Output<NameTargetSpecArgs> targetSpec;

    /**
     * @return Latest target specification of the domain name resource.
     * 
     */
    public Optional<Output<NameTargetSpecArgs>> targetSpec() {
        return Optional.ofNullable(this.targetSpec);
    }

    private NameArgs() {}

    private NameArgs(NameArgs $) {
        this.checksum = $.checksum;
        this.domainName = $.domainName;
        this.ovhSubsidiary = $.ovhSubsidiary;
        this.planOptions = $.planOptions;
        this.plans = $.plans;
        this.targetSpec = $.targetSpec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NameArgs $;

        public Builder() {
            $ = new NameArgs();
        }

        public Builder(NameArgs defaults) {
            $ = new NameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param checksum Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
         * 
         * @return builder
         * 
         */
        public Builder checksum(@Nullable Output<String> checksum) {
            $.checksum = checksum;
            return this;
        }

        /**
         * @param checksum Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
         * 
         * @return builder
         * 
         */
        public Builder checksum(String checksum) {
            return checksum(Output.of(checksum));
        }

        /**
         * @param domainName Domain name
         * 
         * @return builder
         * 
         */
        public Builder domainName(Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName Domain name
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param ovhSubsidiary OVH subsidiaries
         * 
         * @return builder
         * 
         */
        public Builder ovhSubsidiary(@Nullable Output<String> ovhSubsidiary) {
            $.ovhSubsidiary = ovhSubsidiary;
            return this;
        }

        /**
         * @param ovhSubsidiary OVH subsidiaries
         * 
         * @return builder
         * 
         */
        public Builder ovhSubsidiary(String ovhSubsidiary) {
            return ovhSubsidiary(Output.of(ovhSubsidiary));
        }

        public Builder planOptions(@Nullable Output<List<NamePlanOptionArgs>> planOptions) {
            $.planOptions = planOptions;
            return this;
        }

        public Builder planOptions(List<NamePlanOptionArgs> planOptions) {
            return planOptions(Output.of(planOptions));
        }

        public Builder planOptions(NamePlanOptionArgs... planOptions) {
            return planOptions(List.of(planOptions));
        }

        public Builder plans(@Nullable Output<List<NamePlanArgs>> plans) {
            $.plans = plans;
            return this;
        }

        public Builder plans(List<NamePlanArgs> plans) {
            return plans(Output.of(plans));
        }

        public Builder plans(NamePlanArgs... plans) {
            return plans(List.of(plans));
        }

        /**
         * @param targetSpec Latest target specification of the domain name resource.
         * 
         * @return builder
         * 
         */
        public Builder targetSpec(@Nullable Output<NameTargetSpecArgs> targetSpec) {
            $.targetSpec = targetSpec;
            return this;
        }

        /**
         * @param targetSpec Latest target specification of the domain name resource.
         * 
         * @return builder
         * 
         */
        public Builder targetSpec(NameTargetSpecArgs targetSpec) {
            return targetSpec(Output.of(targetSpec));
        }

        public NameArgs build() {
            if ($.domainName == null) {
                throw new MissingRequiredPropertyException("NameArgs", "domainName");
            }
            return $;
        }
    }

}
