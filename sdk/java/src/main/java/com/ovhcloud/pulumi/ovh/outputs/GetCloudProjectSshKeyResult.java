// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudProjectSshKeyResult {
    /**
     * @return SSH key fingerprint
     * 
     */
    private String fingerPrint;
    /**
     * @return SSH key ID
     * 
     */
    private String id;
    /**
     * @return SSH key name
     * 
     */
    private String name;
    /**
     * @return SSH public key
     * 
     */
    private String publicKey;
    /**
     * @return SSH key regions
     * 
     */
    private List<String> regions;
    /**
     * @return Service name
     * 
     */
    private String serviceName;

    private GetCloudProjectSshKeyResult() {}
    /**
     * @return SSH key fingerprint
     * 
     */
    public String fingerPrint() {
        return this.fingerPrint;
    }
    /**
     * @return SSH key ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return SSH key name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return SSH public key
     * 
     */
    public String publicKey() {
        return this.publicKey;
    }
    /**
     * @return SSH key regions
     * 
     */
    public List<String> regions() {
        return this.regions;
    }
    /**
     * @return Service name
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudProjectSshKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fingerPrint;
        private String id;
        private String name;
        private String publicKey;
        private List<String> regions;
        private String serviceName;
        public Builder() {}
        public Builder(GetCloudProjectSshKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fingerPrint = defaults.fingerPrint;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.publicKey = defaults.publicKey;
    	      this.regions = defaults.regions;
    	      this.serviceName = defaults.serviceName;
        }

        @CustomType.Setter
        public Builder fingerPrint(String fingerPrint) {
            if (fingerPrint == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectSshKeyResult", "fingerPrint");
            }
            this.fingerPrint = fingerPrint;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectSshKeyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectSshKeyResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            if (publicKey == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectSshKeyResult", "publicKey");
            }
            this.publicKey = publicKey;
            return this;
        }
        @CustomType.Setter
        public Builder regions(List<String> regions) {
            if (regions == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectSshKeyResult", "regions");
            }
            this.regions = regions;
            return this;
        }
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectSshKeyResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        public GetCloudProjectSshKeyResult build() {
            final var _resultValue = new GetCloudProjectSshKeyResult();
            _resultValue.fingerPrint = fingerPrint;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.publicKey = publicKey;
            _resultValue.regions = regions;
            _resultValue.serviceName = serviceName;
            return _resultValue;
        }
    }
}
