// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.VMware.outputs;

import com.ovhcloud.pulumi.ovh.VMware.outputs.GetCloudDirectorOrganizationCurrentState;
import com.ovhcloud.pulumi.ovh.VMware.outputs.GetCloudDirectorOrganizationCurrentTask;
import com.ovhcloud.pulumi.ovh.VMware.outputs.GetCloudDirectorOrganizationIam;
import com.ovhcloud.pulumi.ovh.VMware.outputs.GetCloudDirectorOrganizationTargetSpec;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudDirectorOrganizationResult {
    /**
     * @return Current state of VMware Cloud Director organization service
     * 
     */
    private GetCloudDirectorOrganizationCurrentState currentState;
    /**
     * @return Asynchronous operations ongoing on the VMware Cloud Director organization
     * 
     */
    private List<GetCloudDirectorOrganizationCurrentTask> currentTasks;
    /**
     * @return IAM resource metadata
     * 
     */
    private GetCloudDirectorOrganizationIam iam;
    /**
     * @return Unique identifier
     * 
     */
    private String id;
    /**
     * @return Organization ID
     * 
     */
    private String organizationId;
    /**
     * @return Reflects the readiness of the VMware Cloud Director organization.
     * 
     */
    private String resourceStatus;
    /**
     * @return Target specification of VMware Cloud Director organization service
     * 
     */
    private GetCloudDirectorOrganizationTargetSpec targetSpec;
    private String updatedAt;

    private GetCloudDirectorOrganizationResult() {}
    /**
     * @return Current state of VMware Cloud Director organization service
     * 
     */
    public GetCloudDirectorOrganizationCurrentState currentState() {
        return this.currentState;
    }
    /**
     * @return Asynchronous operations ongoing on the VMware Cloud Director organization
     * 
     */
    public List<GetCloudDirectorOrganizationCurrentTask> currentTasks() {
        return this.currentTasks;
    }
    /**
     * @return IAM resource metadata
     * 
     */
    public GetCloudDirectorOrganizationIam iam() {
        return this.iam;
    }
    /**
     * @return Unique identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Organization ID
     * 
     */
    public String organizationId() {
        return this.organizationId;
    }
    /**
     * @return Reflects the readiness of the VMware Cloud Director organization.
     * 
     */
    public String resourceStatus() {
        return this.resourceStatus;
    }
    /**
     * @return Target specification of VMware Cloud Director organization service
     * 
     */
    public GetCloudDirectorOrganizationTargetSpec targetSpec() {
        return this.targetSpec;
    }
    public String updatedAt() {
        return this.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudDirectorOrganizationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetCloudDirectorOrganizationCurrentState currentState;
        private List<GetCloudDirectorOrganizationCurrentTask> currentTasks;
        private GetCloudDirectorOrganizationIam iam;
        private String id;
        private String organizationId;
        private String resourceStatus;
        private GetCloudDirectorOrganizationTargetSpec targetSpec;
        private String updatedAt;
        public Builder() {}
        public Builder(GetCloudDirectorOrganizationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentState = defaults.currentState;
    	      this.currentTasks = defaults.currentTasks;
    	      this.iam = defaults.iam;
    	      this.id = defaults.id;
    	      this.organizationId = defaults.organizationId;
    	      this.resourceStatus = defaults.resourceStatus;
    	      this.targetSpec = defaults.targetSpec;
    	      this.updatedAt = defaults.updatedAt;
        }

        @CustomType.Setter
        public Builder currentState(GetCloudDirectorOrganizationCurrentState currentState) {
            if (currentState == null) {
              throw new MissingRequiredPropertyException("GetCloudDirectorOrganizationResult", "currentState");
            }
            this.currentState = currentState;
            return this;
        }
        @CustomType.Setter
        public Builder currentTasks(List<GetCloudDirectorOrganizationCurrentTask> currentTasks) {
            if (currentTasks == null) {
              throw new MissingRequiredPropertyException("GetCloudDirectorOrganizationResult", "currentTasks");
            }
            this.currentTasks = currentTasks;
            return this;
        }
        public Builder currentTasks(GetCloudDirectorOrganizationCurrentTask... currentTasks) {
            return currentTasks(List.of(currentTasks));
        }
        @CustomType.Setter
        public Builder iam(GetCloudDirectorOrganizationIam iam) {
            if (iam == null) {
              throw new MissingRequiredPropertyException("GetCloudDirectorOrganizationResult", "iam");
            }
            this.iam = iam;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudDirectorOrganizationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(String organizationId) {
            if (organizationId == null) {
              throw new MissingRequiredPropertyException("GetCloudDirectorOrganizationResult", "organizationId");
            }
            this.organizationId = organizationId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceStatus(String resourceStatus) {
            if (resourceStatus == null) {
              throw new MissingRequiredPropertyException("GetCloudDirectorOrganizationResult", "resourceStatus");
            }
            this.resourceStatus = resourceStatus;
            return this;
        }
        @CustomType.Setter
        public Builder targetSpec(GetCloudDirectorOrganizationTargetSpec targetSpec) {
            if (targetSpec == null) {
              throw new MissingRequiredPropertyException("GetCloudDirectorOrganizationResult", "targetSpec");
            }
            this.targetSpec = targetSpec;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetCloudDirectorOrganizationResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        public GetCloudDirectorOrganizationResult build() {
            final var _resultValue = new GetCloudDirectorOrganizationResult();
            _resultValue.currentState = currentState;
            _resultValue.currentTasks = currentTasks;
            _resultValue.iam = iam;
            _resultValue.id = id;
            _resultValue.organizationId = organizationId;
            _resultValue.resourceStatus = resourceStatus;
            _resultValue.targetSpec = targetSpec;
            _resultValue.updatedAt = updatedAt;
            return _resultValue;
        }
    }
}
