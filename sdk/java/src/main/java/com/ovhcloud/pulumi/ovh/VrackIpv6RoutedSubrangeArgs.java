// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class VrackIpv6RoutedSubrangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final VrackIpv6RoutedSubrangeArgs Empty = new VrackIpv6RoutedSubrangeArgs();

    /**
     * Your IPv6 block.
     * 
     */
    @Import(name="block", required=true)
    private Output<String> block;

    /**
     * @return Your IPv6 block.
     * 
     */
    public Output<String> block() {
        return this.block;
    }

    /**
     * Next-hop IPv6 address (e.g., 2001:41d0:1:1994::1)
     * 
     */
    @Import(name="nexthop", required=true)
    private Output<String> nexthop;

    /**
     * @return Next-hop IPv6 address (e.g., 2001:41d0:1:1994::1)
     * 
     */
    public Output<String> nexthop() {
        return this.nexthop;
    }

    /**
     * The subrange to route into your vRack, IPv6 CIDR notation (e.g., 2001:41d0::/128)
     * 
     */
    @Import(name="routedSubrange", required=true)
    private Output<String> routedSubrange;

    /**
     * @return The subrange to route into your vRack, IPv6 CIDR notation (e.g., 2001:41d0::/128)
     * 
     */
    public Output<String> routedSubrange() {
        return this.routedSubrange;
    }

    /**
     * The internal name of your vrack
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The internal name of your vrack
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private VrackIpv6RoutedSubrangeArgs() {}

    private VrackIpv6RoutedSubrangeArgs(VrackIpv6RoutedSubrangeArgs $) {
        this.block = $.block;
        this.nexthop = $.nexthop;
        this.routedSubrange = $.routedSubrange;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VrackIpv6RoutedSubrangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VrackIpv6RoutedSubrangeArgs $;

        public Builder() {
            $ = new VrackIpv6RoutedSubrangeArgs();
        }

        public Builder(VrackIpv6RoutedSubrangeArgs defaults) {
            $ = new VrackIpv6RoutedSubrangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param block Your IPv6 block.
         * 
         * @return builder
         * 
         */
        public Builder block(Output<String> block) {
            $.block = block;
            return this;
        }

        /**
         * @param block Your IPv6 block.
         * 
         * @return builder
         * 
         */
        public Builder block(String block) {
            return block(Output.of(block));
        }

        /**
         * @param nexthop Next-hop IPv6 address (e.g., 2001:41d0:1:1994::1)
         * 
         * @return builder
         * 
         */
        public Builder nexthop(Output<String> nexthop) {
            $.nexthop = nexthop;
            return this;
        }

        /**
         * @param nexthop Next-hop IPv6 address (e.g., 2001:41d0:1:1994::1)
         * 
         * @return builder
         * 
         */
        public Builder nexthop(String nexthop) {
            return nexthop(Output.of(nexthop));
        }

        /**
         * @param routedSubrange The subrange to route into your vRack, IPv6 CIDR notation (e.g., 2001:41d0::/128)
         * 
         * @return builder
         * 
         */
        public Builder routedSubrange(Output<String> routedSubrange) {
            $.routedSubrange = routedSubrange;
            return this;
        }

        /**
         * @param routedSubrange The subrange to route into your vRack, IPv6 CIDR notation (e.g., 2001:41d0::/128)
         * 
         * @return builder
         * 
         */
        public Builder routedSubrange(String routedSubrange) {
            return routedSubrange(Output.of(routedSubrange));
        }

        /**
         * @param serviceName The internal name of your vrack
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The internal name of your vrack
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public VrackIpv6RoutedSubrangeArgs build() {
            if ($.block == null) {
                throw new MissingRequiredPropertyException("VrackIpv6RoutedSubrangeArgs", "block");
            }
            if ($.nexthop == null) {
                throw new MissingRequiredPropertyException("VrackIpv6RoutedSubrangeArgs", "nexthop");
            }
            if ($.routedSubrange == null) {
                throw new MissingRequiredPropertyException("VrackIpv6RoutedSubrangeArgs", "routedSubrange");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("VrackIpv6RoutedSubrangeArgs", "serviceName");
            }
            return $;
        }
    }

}
