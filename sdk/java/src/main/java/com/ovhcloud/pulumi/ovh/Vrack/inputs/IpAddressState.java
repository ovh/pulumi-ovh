// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Vrack.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpAddressState extends com.pulumi.resources.ResourceArgs {

    public static final IpAddressState Empty = new IpAddressState();

    /**
     * Your IP block.
     * 
     */
    @Import(name="block")
    private @Nullable Output<String> block;

    /**
     * @return Your IP block.
     * 
     */
    public Optional<Output<String>> block() {
        return Optional.ofNullable(this.block);
    }

    /**
     * Your gateway
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<String> gateway;

    /**
     * @return Your gateway
     * 
     */
    public Optional<Output<String>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    /**
     * Your IP block
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return Your IP block
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * The internal name of your vrack
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The internal name of your vrack
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Where you want your block announced on the network
     * 
     */
    @Import(name="zone")
    private @Nullable Output<String> zone;

    /**
     * @return Where you want your block announced on the network
     * 
     */
    public Optional<Output<String>> zone() {
        return Optional.ofNullable(this.zone);
    }

    private IpAddressState() {}

    private IpAddressState(IpAddressState $) {
        this.block = $.block;
        this.gateway = $.gateway;
        this.ip = $.ip;
        this.serviceName = $.serviceName;
        this.zone = $.zone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpAddressState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpAddressState $;

        public Builder() {
            $ = new IpAddressState();
        }

        public Builder(IpAddressState defaults) {
            $ = new IpAddressState(Objects.requireNonNull(defaults));
        }

        /**
         * @param block Your IP block.
         * 
         * @return builder
         * 
         */
        public Builder block(@Nullable Output<String> block) {
            $.block = block;
            return this;
        }

        /**
         * @param block Your IP block.
         * 
         * @return builder
         * 
         */
        public Builder block(String block) {
            return block(Output.of(block));
        }

        /**
         * @param gateway Your gateway
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<String> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway Your gateway
         * 
         * @return builder
         * 
         */
        public Builder gateway(String gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param ip Your IP block
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip Your IP block
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param serviceName The internal name of your vrack
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The internal name of your vrack
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param zone Where you want your block announced on the network
         * 
         * @return builder
         * 
         */
        public Builder zone(@Nullable Output<String> zone) {
            $.zone = zone;
            return this;
        }

        /**
         * @param zone Where you want your block announced on the network
         * 
         * @return builder
         * 
         */
        public Builder zone(String zone) {
            return zone(Output.of(zone));
        }

        public IpAddressState build() {
            return $;
        }
    }

}
