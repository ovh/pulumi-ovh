// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudProjectDatabaseValkeyUserResult {
    /**
     * @return Categories of the user.
     * 
     */
    private List<String> categories;
    /**
     * @return Channels of the user.
     * 
     */
    private List<String> channels;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String clusterId;
    /**
     * @return Commands of the user.
     * 
     */
    private List<String> commands;
    /**
     * @return Date of the creation of the user.
     * 
     */
    private String createdAt;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Keys of the user.
     * 
     */
    private List<String> keys;
    /**
     * @return See Argument Reference above.
     * 
     */
    private String name;
    /**
     * @return Current status of the user.
     * 
     */
    private String serviceName;
    /**
     * @return Current status of the user.
     * 
     */
    private String status;

    private GetCloudProjectDatabaseValkeyUserResult() {}
    /**
     * @return Categories of the user.
     * 
     */
    public List<String> categories() {
        return this.categories;
    }
    /**
     * @return Channels of the user.
     * 
     */
    public List<String> channels() {
        return this.channels;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return Commands of the user.
     * 
     */
    public List<String> commands() {
        return this.commands;
    }
    /**
     * @return Date of the creation of the user.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Keys of the user.
     * 
     */
    public List<String> keys() {
        return this.keys;
    }
    /**
     * @return See Argument Reference above.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Current status of the user.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return Current status of the user.
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudProjectDatabaseValkeyUserResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> categories;
        private List<String> channels;
        private String clusterId;
        private List<String> commands;
        private String createdAt;
        private String id;
        private List<String> keys;
        private String name;
        private String serviceName;
        private String status;
        public Builder() {}
        public Builder(GetCloudProjectDatabaseValkeyUserResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categories = defaults.categories;
    	      this.channels = defaults.channels;
    	      this.clusterId = defaults.clusterId;
    	      this.commands = defaults.commands;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.keys = defaults.keys;
    	      this.name = defaults.name;
    	      this.serviceName = defaults.serviceName;
    	      this.status = defaults.status;
        }

        @CustomType.Setter
        public Builder categories(List<String> categories) {
            if (categories == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "categories");
            }
            this.categories = categories;
            return this;
        }
        public Builder categories(String... categories) {
            return categories(List.of(categories));
        }
        @CustomType.Setter
        public Builder channels(List<String> channels) {
            if (channels == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "channels");
            }
            this.channels = channels;
            return this;
        }
        public Builder channels(String... channels) {
            return channels(List.of(channels));
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            if (clusterId == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "clusterId");
            }
            this.clusterId = clusterId;
            return this;
        }
        @CustomType.Setter
        public Builder commands(List<String> commands) {
            if (commands == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "commands");
            }
            this.commands = commands;
            return this;
        }
        public Builder commands(String... commands) {
            return commands(List.of(commands));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder keys(List<String> keys) {
            if (keys == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "keys");
            }
            this.keys = keys;
            return this;
        }
        public Builder keys(String... keys) {
            return keys(List.of(keys));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetCloudProjectDatabaseValkeyUserResult", "status");
            }
            this.status = status;
            return this;
        }
        public GetCloudProjectDatabaseValkeyUserResult build() {
            final var _resultValue = new GetCloudProjectDatabaseValkeyUserResult();
            _resultValue.categories = categories;
            _resultValue.channels = channels;
            _resultValue.clusterId = clusterId;
            _resultValue.commands = commands;
            _resultValue.createdAt = createdAt;
            _resultValue.id = id;
            _resultValue.keys = keys;
            _resultValue.name = name;
            _resultValue.serviceName = serviceName;
            _resultValue.status = status;
            return _resultValue;
        }
    }
}
