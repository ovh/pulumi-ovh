// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudProjectContainerregistryIamState extends com.pulumi.resources.ResourceArgs {

    public static final CloudProjectContainerregistryIamState Empty = new CloudProjectContainerregistryIamState();

    /**
     * Delete existing users from Harbor. IAM can&#39;t be enabled if there is at least one user already created. This parameter is only used at IAM configuration creation. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="deleteUsers")
    private @Nullable Output<Boolean> deleteUsers;

    /**
     * @return Delete existing users from Harbor. IAM can&#39;t be enabled if there is at least one user already created. This parameter is only used at IAM configuration creation. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<Boolean>> deleteUsers() {
        return Optional.ofNullable(this.deleteUsers);
    }

    @Import(name="iamEnabled")
    private @Nullable Output<Boolean> iamEnabled;

    public Optional<Output<Boolean>> iamEnabled() {
        return Optional.ofNullable(this.iamEnabled);
    }

    /**
     * The ID of the Managed Private Registry. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="registryId")
    private @Nullable Output<String> registryId;

    /**
     * @return The ID of the Managed Private Registry. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> registryId() {
        return Optional.ofNullable(this.registryId);
    }

    /**
     * The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private CloudProjectContainerregistryIamState() {}

    private CloudProjectContainerregistryIamState(CloudProjectContainerregistryIamState $) {
        this.deleteUsers = $.deleteUsers;
        this.iamEnabled = $.iamEnabled;
        this.registryId = $.registryId;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudProjectContainerregistryIamState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudProjectContainerregistryIamState $;

        public Builder() {
            $ = new CloudProjectContainerregistryIamState();
        }

        public Builder(CloudProjectContainerregistryIamState defaults) {
            $ = new CloudProjectContainerregistryIamState(Objects.requireNonNull(defaults));
        }

        /**
         * @param deleteUsers Delete existing users from Harbor. IAM can&#39;t be enabled if there is at least one user already created. This parameter is only used at IAM configuration creation. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder deleteUsers(@Nullable Output<Boolean> deleteUsers) {
            $.deleteUsers = deleteUsers;
            return this;
        }

        /**
         * @param deleteUsers Delete existing users from Harbor. IAM can&#39;t be enabled if there is at least one user already created. This parameter is only used at IAM configuration creation. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder deleteUsers(Boolean deleteUsers) {
            return deleteUsers(Output.of(deleteUsers));
        }

        public Builder iamEnabled(@Nullable Output<Boolean> iamEnabled) {
            $.iamEnabled = iamEnabled;
            return this;
        }

        public Builder iamEnabled(Boolean iamEnabled) {
            return iamEnabled(Output.of(iamEnabled));
        }

        /**
         * @param registryId The ID of the Managed Private Registry. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder registryId(@Nullable Output<String> registryId) {
            $.registryId = registryId;
            return this;
        }

        /**
         * @param registryId The ID of the Managed Private Registry. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder registryId(String registryId) {
            return registryId(Output.of(registryId));
        }

        /**
         * @param serviceName The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The ID of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public CloudProjectContainerregistryIamState build() {
            return $;
        }
    }

}
