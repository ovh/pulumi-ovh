// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class KubePrivateNetworkConfiguration {
    /**
     * @return If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
     * 
     */
    private String defaultVrackGateway;
    /**
     * @return Defines whether routing should default to using the nodes&#39; private interface, instead of their public interface. Default is false.
     * 
     * In order to use the gateway IP advertised by the private network subnet DHCP, the following configuration shall be used.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    private Boolean privateNetworkRoutingAsDefault;

    private KubePrivateNetworkConfiguration() {}
    /**
     * @return If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
     * 
     */
    public String defaultVrackGateway() {
        return this.defaultVrackGateway;
    }
    /**
     * @return Defines whether routing should default to using the nodes&#39; private interface, instead of their public interface. Default is false.
     * 
     * In order to use the gateway IP advertised by the private network subnet DHCP, the following configuration shall be used.
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public Boolean privateNetworkRoutingAsDefault() {
        return this.privateNetworkRoutingAsDefault;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubePrivateNetworkConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String defaultVrackGateway;
        private Boolean privateNetworkRoutingAsDefault;
        public Builder() {}
        public Builder(KubePrivateNetworkConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultVrackGateway = defaults.defaultVrackGateway;
    	      this.privateNetworkRoutingAsDefault = defaults.privateNetworkRoutingAsDefault;
        }

        @CustomType.Setter
        public Builder defaultVrackGateway(String defaultVrackGateway) {
            if (defaultVrackGateway == null) {
              throw new MissingRequiredPropertyException("KubePrivateNetworkConfiguration", "defaultVrackGateway");
            }
            this.defaultVrackGateway = defaultVrackGateway;
            return this;
        }
        @CustomType.Setter
        public Builder privateNetworkRoutingAsDefault(Boolean privateNetworkRoutingAsDefault) {
            if (privateNetworkRoutingAsDefault == null) {
              throw new MissingRequiredPropertyException("KubePrivateNetworkConfiguration", "privateNetworkRoutingAsDefault");
            }
            this.privateNetworkRoutingAsDefault = privateNetworkRoutingAsDefault;
            return this;
        }
        public KubePrivateNetworkConfiguration build() {
            final var _resultValue = new KubePrivateNetworkConfiguration();
            _resultValue.defaultVrackGateway = defaultVrackGateway;
            _resultValue.privateNetworkRoutingAsDefault = privateNetworkRoutingAsDefault;
            return _resultValue;
        }
    }
}
