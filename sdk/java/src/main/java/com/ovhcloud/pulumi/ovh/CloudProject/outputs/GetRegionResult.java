// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.outputs;

import com.ovhcloud.pulumi.ovh.CloudProject.outputs.GetRegionService;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRegionResult {
    /**
     * @return the code of the geographic continent the region is running. E.g.: EU for Europe, US for America...
     * 
     */
    private String continentCode;
    /**
     * @return The location code of the datacenter. E.g.: &#34;GRA&#34;, meaning Gravelines, for region &#34;GRA1&#34;
     * 
     */
    private String datacenterLocation;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return the name of the public cloud service
     * 
     */
    private String name;
    private String serviceName;
    /**
     * @return The list of public cloud services running within the region
     * 
     */
    private List<GetRegionService> services;

    private GetRegionResult() {}
    /**
     * @return the code of the geographic continent the region is running. E.g.: EU for Europe, US for America...
     * 
     */
    public String continentCode() {
        return this.continentCode;
    }
    /**
     * @return The location code of the datacenter. E.g.: &#34;GRA&#34;, meaning Gravelines, for region &#34;GRA1&#34;
     * 
     */
    public String datacenterLocation() {
        return this.datacenterLocation;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return the name of the public cloud service
     * 
     */
    public String name() {
        return this.name;
    }
    public String serviceName() {
        return this.serviceName;
    }
    /**
     * @return The list of public cloud services running within the region
     * 
     */
    public List<GetRegionService> services() {
        return this.services;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String continentCode;
        private String datacenterLocation;
        private String id;
        private String name;
        private String serviceName;
        private List<GetRegionService> services;
        public Builder() {}
        public Builder(GetRegionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.continentCode = defaults.continentCode;
    	      this.datacenterLocation = defaults.datacenterLocation;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.serviceName = defaults.serviceName;
    	      this.services = defaults.services;
        }

        @CustomType.Setter
        public Builder continentCode(String continentCode) {
            if (continentCode == null) {
              throw new MissingRequiredPropertyException("GetRegionResult", "continentCode");
            }
            this.continentCode = continentCode;
            return this;
        }
        @CustomType.Setter
        public Builder datacenterLocation(String datacenterLocation) {
            if (datacenterLocation == null) {
              throw new MissingRequiredPropertyException("GetRegionResult", "datacenterLocation");
            }
            this.datacenterLocation = datacenterLocation;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetRegionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetRegionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetRegionResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder services(List<GetRegionService> services) {
            if (services == null) {
              throw new MissingRequiredPropertyException("GetRegionResult", "services");
            }
            this.services = services;
            return this;
        }
        public Builder services(GetRegionService... services) {
            return services(List.of(services));
        }
        public GetRegionResult build() {
            final var _resultValue = new GetRegionResult();
            _resultValue.continentCode = continentCode;
            _resultValue.datacenterLocation = datacenterLocation;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.serviceName = serviceName;
            _resultValue.services = services;
            return _resultValue;
        }
    }
}
