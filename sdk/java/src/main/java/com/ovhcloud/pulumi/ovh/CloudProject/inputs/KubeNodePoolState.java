// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.ovhcloud.pulumi.ovh.CloudProject.inputs.KubeNodePoolTemplateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubeNodePoolState extends com.pulumi.resources.ResourceArgs {

    public static final KubeNodePoolState Empty = new KubeNodePoolState();

    /**
     * should the pool use the anti-affinity feature. Default to `false`. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="antiAffinity")
    private @Nullable Output<Boolean> antiAffinity;

    /**
     * @return should the pool use the anti-affinity feature. Default to `false`. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<Boolean>> antiAffinity() {
        return Optional.ofNullable(this.antiAffinity);
    }

    /**
     * Enable auto-scaling for the pool. Default to `false`.
     * 
     */
    @Import(name="autoscale")
    private @Nullable Output<Boolean> autoscale;

    /**
     * @return Enable auto-scaling for the pool. Default to `false`.
     * 
     */
    public Optional<Output<Boolean>> autoscale() {
        return Optional.ofNullable(this.autoscale);
    }

    /**
     * scaleDownUnneededTimeSeconds autoscaling parameter How long a node should be unneeded before it is eligible for scale down
     * 
     */
    @Import(name="autoscalingScaleDownUnneededTimeSeconds")
    private @Nullable Output<Integer> autoscalingScaleDownUnneededTimeSeconds;

    /**
     * @return scaleDownUnneededTimeSeconds autoscaling parameter How long a node should be unneeded before it is eligible for scale down
     * 
     */
    public Optional<Output<Integer>> autoscalingScaleDownUnneededTimeSeconds() {
        return Optional.ofNullable(this.autoscalingScaleDownUnneededTimeSeconds);
    }

    /**
     * scaleDownUnreadyTimeSeconds autoscaling parameter How long an unready node should be unneeded before it is eligible for scale down
     * 
     */
    @Import(name="autoscalingScaleDownUnreadyTimeSeconds")
    private @Nullable Output<Integer> autoscalingScaleDownUnreadyTimeSeconds;

    /**
     * @return scaleDownUnreadyTimeSeconds autoscaling parameter How long an unready node should be unneeded before it is eligible for scale down
     * 
     */
    public Optional<Output<Integer>> autoscalingScaleDownUnreadyTimeSeconds() {
        return Optional.ofNullable(this.autoscalingScaleDownUnreadyTimeSeconds);
    }

    /**
     * scaleDownUtilizationThreshold autoscaling parameter Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
     * * ` template  ` - (Optional) Managed Kubernetes nodepool template, which is a complex object constituted by two main nested objects:
     * 
     */
    @Import(name="autoscalingScaleDownUtilizationThreshold")
    private @Nullable Output<Double> autoscalingScaleDownUtilizationThreshold;

    /**
     * @return scaleDownUtilizationThreshold autoscaling parameter Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
     * * ` template  ` - (Optional) Managed Kubernetes nodepool template, which is a complex object constituted by two main nested objects:
     * 
     */
    public Optional<Output<Double>> autoscalingScaleDownUtilizationThreshold() {
        return Optional.ofNullable(this.autoscalingScaleDownUtilizationThreshold);
    }

    /**
     * Number of nodes which are actually ready in the pool
     * 
     */
    @Import(name="availableNodes")
    private @Nullable Output<Integer> availableNodes;

    /**
     * @return Number of nodes which are actually ready in the pool
     * 
     */
    public Optional<Output<Integer>> availableNodes() {
        return Optional.ofNullable(this.availableNodes);
    }

    /**
     * Creation date
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Creation date
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Number of nodes present in the pool
     * 
     */
    @Import(name="currentNodes")
    private @Nullable Output<Integer> currentNodes;

    /**
     * @return Number of nodes present in the pool
     * 
     */
    public Optional<Output<Integer>> currentNodes() {
        return Optional.ofNullable(this.currentNodes);
    }

    /**
     * number of nodes to start.
     * 
     */
    @Import(name="desiredNodes")
    private @Nullable Output<Integer> desiredNodes;

    /**
     * @return number of nodes to start.
     * 
     */
    public Optional<Output<Integer>> desiredNodes() {
        return Optional.ofNullable(this.desiredNodes);
    }

    /**
     * Flavor name
     * 
     */
    @Import(name="flavor")
    private @Nullable Output<String> flavor;

    /**
     * @return Flavor name
     * 
     */
    public Optional<Output<String>> flavor() {
        return Optional.ofNullable(this.flavor);
    }

    /**
     * a valid OVHcloud public cloud flavor ID in which the nodes will be started. Ex: &#34;b2-7&#34;. You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="flavorName")
    private @Nullable Output<String> flavorName;

    /**
     * @return a valid OVHcloud public cloud flavor ID in which the nodes will be started. Ex: &#34;b2-7&#34;. You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> flavorName() {
        return Optional.ofNullable(this.flavorName);
    }

    /**
     * The id of the managed kubernetes cluster. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="kubeId")
    private @Nullable Output<String> kubeId;

    /**
     * @return The id of the managed kubernetes cluster. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> kubeId() {
        return Optional.ofNullable(this.kubeId);
    }

    /**
     * maximum number of nodes allowed in the pool. Setting `desired_nodes` over this value will raise an error.
     * 
     */
    @Import(name="maxNodes")
    private @Nullable Output<Integer> maxNodes;

    /**
     * @return maximum number of nodes allowed in the pool. Setting `desired_nodes` over this value will raise an error.
     * 
     */
    public Optional<Output<Integer>> maxNodes() {
        return Optional.ofNullable(this.maxNodes);
    }

    /**
     * minimum number of nodes allowed in the pool. Setting `desired_nodes` under this value will raise an error.
     * 
     */
    @Import(name="minNodes")
    private @Nullable Output<Integer> minNodes;

    /**
     * @return minimum number of nodes allowed in the pool. Setting `desired_nodes` under this value will raise an error.
     * 
     */
    public Optional<Output<Integer>> minNodes() {
        return Optional.ofNullable(this.minNodes);
    }

    /**
     * should the nodes be billed on a monthly basis. Default to `false`. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="monthlyBilled")
    private @Nullable Output<Boolean> monthlyBilled;

    /**
     * @return should the nodes be billed on a monthly basis. Default to `false`. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<Boolean>> monthlyBilled() {
        return Optional.ofNullable(this.monthlyBilled);
    }

    /**
     * The name of the nodepool. Warning: `_` char is not allowed! **Changing this value recreates the resource.**
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the nodepool. Warning: `_` char is not allowed! **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Project id
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Project id
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Status describing the state between number of nodes wanted and available ones
     * 
     */
    @Import(name="sizeStatus")
    private @Nullable Output<String> sizeStatus;

    /**
     * @return Status describing the state between number of nodes wanted and available ones
     * 
     */
    public Optional<Output<String>> sizeStatus() {
        return Optional.ofNullable(this.sizeStatus);
    }

    /**
     * Current status
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Current status
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Node pool template
     * 
     */
    @Import(name="template")
    private @Nullable Output<KubeNodePoolTemplateArgs> template;

    /**
     * @return Node pool template
     * 
     */
    public Optional<Output<KubeNodePoolTemplateArgs>> template() {
        return Optional.ofNullable(this.template);
    }

    /**
     * Number of nodes with the latest version installed in the pool
     * 
     */
    @Import(name="upToDateNodes")
    private @Nullable Output<Integer> upToDateNodes;

    /**
     * @return Number of nodes with the latest version installed in the pool
     * 
     */
    public Optional<Output<Integer>> upToDateNodes() {
        return Optional.ofNullable(this.upToDateNodes);
    }

    /**
     * Last update date
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Last update date
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private KubeNodePoolState() {}

    private KubeNodePoolState(KubeNodePoolState $) {
        this.antiAffinity = $.antiAffinity;
        this.autoscale = $.autoscale;
        this.autoscalingScaleDownUnneededTimeSeconds = $.autoscalingScaleDownUnneededTimeSeconds;
        this.autoscalingScaleDownUnreadyTimeSeconds = $.autoscalingScaleDownUnreadyTimeSeconds;
        this.autoscalingScaleDownUtilizationThreshold = $.autoscalingScaleDownUtilizationThreshold;
        this.availableNodes = $.availableNodes;
        this.createdAt = $.createdAt;
        this.currentNodes = $.currentNodes;
        this.desiredNodes = $.desiredNodes;
        this.flavor = $.flavor;
        this.flavorName = $.flavorName;
        this.kubeId = $.kubeId;
        this.maxNodes = $.maxNodes;
        this.minNodes = $.minNodes;
        this.monthlyBilled = $.monthlyBilled;
        this.name = $.name;
        this.projectId = $.projectId;
        this.serviceName = $.serviceName;
        this.sizeStatus = $.sizeStatus;
        this.status = $.status;
        this.template = $.template;
        this.upToDateNodes = $.upToDateNodes;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubeNodePoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubeNodePoolState $;

        public Builder() {
            $ = new KubeNodePoolState();
        }

        public Builder(KubeNodePoolState defaults) {
            $ = new KubeNodePoolState(Objects.requireNonNull(defaults));
        }

        /**
         * @param antiAffinity should the pool use the anti-affinity feature. Default to `false`. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder antiAffinity(@Nullable Output<Boolean> antiAffinity) {
            $.antiAffinity = antiAffinity;
            return this;
        }

        /**
         * @param antiAffinity should the pool use the anti-affinity feature. Default to `false`. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder antiAffinity(Boolean antiAffinity) {
            return antiAffinity(Output.of(antiAffinity));
        }

        /**
         * @param autoscale Enable auto-scaling for the pool. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoscale(@Nullable Output<Boolean> autoscale) {
            $.autoscale = autoscale;
            return this;
        }

        /**
         * @param autoscale Enable auto-scaling for the pool. Default to `false`.
         * 
         * @return builder
         * 
         */
        public Builder autoscale(Boolean autoscale) {
            return autoscale(Output.of(autoscale));
        }

        /**
         * @param autoscalingScaleDownUnneededTimeSeconds scaleDownUnneededTimeSeconds autoscaling parameter How long a node should be unneeded before it is eligible for scale down
         * 
         * @return builder
         * 
         */
        public Builder autoscalingScaleDownUnneededTimeSeconds(@Nullable Output<Integer> autoscalingScaleDownUnneededTimeSeconds) {
            $.autoscalingScaleDownUnneededTimeSeconds = autoscalingScaleDownUnneededTimeSeconds;
            return this;
        }

        /**
         * @param autoscalingScaleDownUnneededTimeSeconds scaleDownUnneededTimeSeconds autoscaling parameter How long a node should be unneeded before it is eligible for scale down
         * 
         * @return builder
         * 
         */
        public Builder autoscalingScaleDownUnneededTimeSeconds(Integer autoscalingScaleDownUnneededTimeSeconds) {
            return autoscalingScaleDownUnneededTimeSeconds(Output.of(autoscalingScaleDownUnneededTimeSeconds));
        }

        /**
         * @param autoscalingScaleDownUnreadyTimeSeconds scaleDownUnreadyTimeSeconds autoscaling parameter How long an unready node should be unneeded before it is eligible for scale down
         * 
         * @return builder
         * 
         */
        public Builder autoscalingScaleDownUnreadyTimeSeconds(@Nullable Output<Integer> autoscalingScaleDownUnreadyTimeSeconds) {
            $.autoscalingScaleDownUnreadyTimeSeconds = autoscalingScaleDownUnreadyTimeSeconds;
            return this;
        }

        /**
         * @param autoscalingScaleDownUnreadyTimeSeconds scaleDownUnreadyTimeSeconds autoscaling parameter How long an unready node should be unneeded before it is eligible for scale down
         * 
         * @return builder
         * 
         */
        public Builder autoscalingScaleDownUnreadyTimeSeconds(Integer autoscalingScaleDownUnreadyTimeSeconds) {
            return autoscalingScaleDownUnreadyTimeSeconds(Output.of(autoscalingScaleDownUnreadyTimeSeconds));
        }

        /**
         * @param autoscalingScaleDownUtilizationThreshold scaleDownUtilizationThreshold autoscaling parameter Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
         * * ` template  ` - (Optional) Managed Kubernetes nodepool template, which is a complex object constituted by two main nested objects:
         * 
         * @return builder
         * 
         */
        public Builder autoscalingScaleDownUtilizationThreshold(@Nullable Output<Double> autoscalingScaleDownUtilizationThreshold) {
            $.autoscalingScaleDownUtilizationThreshold = autoscalingScaleDownUtilizationThreshold;
            return this;
        }

        /**
         * @param autoscalingScaleDownUtilizationThreshold scaleDownUtilizationThreshold autoscaling parameter Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down
         * * ` template  ` - (Optional) Managed Kubernetes nodepool template, which is a complex object constituted by two main nested objects:
         * 
         * @return builder
         * 
         */
        public Builder autoscalingScaleDownUtilizationThreshold(Double autoscalingScaleDownUtilizationThreshold) {
            return autoscalingScaleDownUtilizationThreshold(Output.of(autoscalingScaleDownUtilizationThreshold));
        }

        /**
         * @param availableNodes Number of nodes which are actually ready in the pool
         * 
         * @return builder
         * 
         */
        public Builder availableNodes(@Nullable Output<Integer> availableNodes) {
            $.availableNodes = availableNodes;
            return this;
        }

        /**
         * @param availableNodes Number of nodes which are actually ready in the pool
         * 
         * @return builder
         * 
         */
        public Builder availableNodes(Integer availableNodes) {
            return availableNodes(Output.of(availableNodes));
        }

        /**
         * @param createdAt Creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param currentNodes Number of nodes present in the pool
         * 
         * @return builder
         * 
         */
        public Builder currentNodes(@Nullable Output<Integer> currentNodes) {
            $.currentNodes = currentNodes;
            return this;
        }

        /**
         * @param currentNodes Number of nodes present in the pool
         * 
         * @return builder
         * 
         */
        public Builder currentNodes(Integer currentNodes) {
            return currentNodes(Output.of(currentNodes));
        }

        /**
         * @param desiredNodes number of nodes to start.
         * 
         * @return builder
         * 
         */
        public Builder desiredNodes(@Nullable Output<Integer> desiredNodes) {
            $.desiredNodes = desiredNodes;
            return this;
        }

        /**
         * @param desiredNodes number of nodes to start.
         * 
         * @return builder
         * 
         */
        public Builder desiredNodes(Integer desiredNodes) {
            return desiredNodes(Output.of(desiredNodes));
        }

        /**
         * @param flavor Flavor name
         * 
         * @return builder
         * 
         */
        public Builder flavor(@Nullable Output<String> flavor) {
            $.flavor = flavor;
            return this;
        }

        /**
         * @param flavor Flavor name
         * 
         * @return builder
         * 
         */
        public Builder flavor(String flavor) {
            return flavor(Output.of(flavor));
        }

        /**
         * @param flavorName a valid OVHcloud public cloud flavor ID in which the nodes will be started. Ex: &#34;b2-7&#34;. You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder flavorName(@Nullable Output<String> flavorName) {
            $.flavorName = flavorName;
            return this;
        }

        /**
         * @param flavorName a valid OVHcloud public cloud flavor ID in which the nodes will be started. Ex: &#34;b2-7&#34;. You can find the list of flavor IDs: https://www.ovhcloud.com/fr/public-cloud/prices/. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder flavorName(String flavorName) {
            return flavorName(Output.of(flavorName));
        }

        /**
         * @param kubeId The id of the managed kubernetes cluster. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder kubeId(@Nullable Output<String> kubeId) {
            $.kubeId = kubeId;
            return this;
        }

        /**
         * @param kubeId The id of the managed kubernetes cluster. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder kubeId(String kubeId) {
            return kubeId(Output.of(kubeId));
        }

        /**
         * @param maxNodes maximum number of nodes allowed in the pool. Setting `desired_nodes` over this value will raise an error.
         * 
         * @return builder
         * 
         */
        public Builder maxNodes(@Nullable Output<Integer> maxNodes) {
            $.maxNodes = maxNodes;
            return this;
        }

        /**
         * @param maxNodes maximum number of nodes allowed in the pool. Setting `desired_nodes` over this value will raise an error.
         * 
         * @return builder
         * 
         */
        public Builder maxNodes(Integer maxNodes) {
            return maxNodes(Output.of(maxNodes));
        }

        /**
         * @param minNodes minimum number of nodes allowed in the pool. Setting `desired_nodes` under this value will raise an error.
         * 
         * @return builder
         * 
         */
        public Builder minNodes(@Nullable Output<Integer> minNodes) {
            $.minNodes = minNodes;
            return this;
        }

        /**
         * @param minNodes minimum number of nodes allowed in the pool. Setting `desired_nodes` under this value will raise an error.
         * 
         * @return builder
         * 
         */
        public Builder minNodes(Integer minNodes) {
            return minNodes(Output.of(minNodes));
        }

        /**
         * @param monthlyBilled should the nodes be billed on a monthly basis. Default to `false`. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder monthlyBilled(@Nullable Output<Boolean> monthlyBilled) {
            $.monthlyBilled = monthlyBilled;
            return this;
        }

        /**
         * @param monthlyBilled should the nodes be billed on a monthly basis. Default to `false`. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder monthlyBilled(Boolean monthlyBilled) {
            return monthlyBilled(Output.of(monthlyBilled));
        }

        /**
         * @param name The name of the nodepool. Warning: `_` char is not allowed! **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the nodepool. Warning: `_` char is not allowed! **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectId Project id
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project id
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param sizeStatus Status describing the state between number of nodes wanted and available ones
         * 
         * @return builder
         * 
         */
        public Builder sizeStatus(@Nullable Output<String> sizeStatus) {
            $.sizeStatus = sizeStatus;
            return this;
        }

        /**
         * @param sizeStatus Status describing the state between number of nodes wanted and available ones
         * 
         * @return builder
         * 
         */
        public Builder sizeStatus(String sizeStatus) {
            return sizeStatus(Output.of(sizeStatus));
        }

        /**
         * @param status Current status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Current status
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param template Node pool template
         * 
         * @return builder
         * 
         */
        public Builder template(@Nullable Output<KubeNodePoolTemplateArgs> template) {
            $.template = template;
            return this;
        }

        /**
         * @param template Node pool template
         * 
         * @return builder
         * 
         */
        public Builder template(KubeNodePoolTemplateArgs template) {
            return template(Output.of(template));
        }

        /**
         * @param upToDateNodes Number of nodes with the latest version installed in the pool
         * 
         * @return builder
         * 
         */
        public Builder upToDateNodes(@Nullable Output<Integer> upToDateNodes) {
            $.upToDateNodes = upToDateNodes;
            return this;
        }

        /**
         * @param upToDateNodes Number of nodes with the latest version installed in the pool
         * 
         * @return builder
         * 
         */
        public Builder upToDateNodes(Integer upToDateNodes) {
            return upToDateNodes(Output.of(upToDateNodes));
        }

        /**
         * @param updatedAt Last update date
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Last update date
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public KubeNodePoolState build() {
            return $;
        }
    }

}
