// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageEfsShareSnapshotState extends com.pulumi.resources.ResourceArgs {

    public static final StorageEfsShareSnapshotState Empty = new StorageEfsShareSnapshotState();

    /**
     * Snapshot creation date
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Snapshot creation date
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Snapshot description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Snapshot description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Snapshot name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Snapshot name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Snapshot path
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Snapshot path
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * Service name
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Share ID
     * 
     */
    @Import(name="shareId")
    private @Nullable Output<String> shareId;

    /**
     * @return Share ID
     * 
     */
    public Optional<Output<String>> shareId() {
        return Optional.ofNullable(this.shareId);
    }

    /**
     * Snapshot status
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Snapshot status
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Snapshot type
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Snapshot type
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private StorageEfsShareSnapshotState() {}

    private StorageEfsShareSnapshotState(StorageEfsShareSnapshotState $) {
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.name = $.name;
        this.path = $.path;
        this.serviceName = $.serviceName;
        this.shareId = $.shareId;
        this.status = $.status;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageEfsShareSnapshotState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageEfsShareSnapshotState $;

        public Builder() {
            $ = new StorageEfsShareSnapshotState();
        }

        public Builder(StorageEfsShareSnapshotState defaults) {
            $ = new StorageEfsShareSnapshotState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Snapshot creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Snapshot creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description Snapshot description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Snapshot description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Snapshot name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Snapshot name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param path Snapshot path
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Snapshot path
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param shareId Share ID
         * 
         * @return builder
         * 
         */
        public Builder shareId(@Nullable Output<String> shareId) {
            $.shareId = shareId;
            return this;
        }

        /**
         * @param shareId Share ID
         * 
         * @return builder
         * 
         */
        public Builder shareId(String shareId) {
            return shareId(Output.of(shareId));
        }

        /**
         * @param status Snapshot status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Snapshot status
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param type Snapshot type
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Snapshot type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public StorageEfsShareSnapshotState build() {
            return $;
        }
    }

}
