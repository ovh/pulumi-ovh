// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFlavorsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFlavorsArgs Empty = new GetFlavorsArgs();

    /**
     * Filter flavors using the given name (strict equality, e.g. b2-7)
     * 
     */
    @Import(name="nameFilter")
    private @Nullable Output<String> nameFilter;

    /**
     * @return Filter flavors using the given name (strict equality, e.g. b2-7)
     * 
     */
    public Optional<Output<String>> nameFilter() {
        return Optional.ofNullable(this.nameFilter);
    }

    /**
     * Flavor region
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Flavor region
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * Service name
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private GetFlavorsArgs() {}

    private GetFlavorsArgs(GetFlavorsArgs $) {
        this.nameFilter = $.nameFilter;
        this.region = $.region;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFlavorsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFlavorsArgs $;

        public Builder() {
            $ = new GetFlavorsArgs();
        }

        public Builder(GetFlavorsArgs defaults) {
            $ = new GetFlavorsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param nameFilter Filter flavors using the given name (strict equality, e.g. b2-7)
         * 
         * @return builder
         * 
         */
        public Builder nameFilter(@Nullable Output<String> nameFilter) {
            $.nameFilter = nameFilter;
            return this;
        }

        /**
         * @param nameFilter Filter flavors using the given name (strict equality, e.g. b2-7)
         * 
         * @return builder
         * 
         */
        public Builder nameFilter(String nameFilter) {
            return nameFilter(Output.of(nameFilter));
        }

        /**
         * @param region Flavor region
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Flavor region
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public GetFlavorsArgs build() {
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetFlavorsArgs", "serviceName");
            }
            return $;
        }
    }

}
