// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class GetOvhcloudConnectConfigPopDatacentersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOvhcloudConnectConfigPopDatacentersArgs Empty = new GetOvhcloudConnectConfigPopDatacentersArgs();

    /**
     * ID of the Pop Configuration
     * 
     */
    @Import(name="configPopId", required=true)
    private Output<Double> configPopId;

    /**
     * @return ID of the Pop Configuration
     * 
     */
    public Output<Double> configPopId() {
        return this.configPopId;
    }

    /**
     * Service name
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private GetOvhcloudConnectConfigPopDatacentersArgs() {}

    private GetOvhcloudConnectConfigPopDatacentersArgs(GetOvhcloudConnectConfigPopDatacentersArgs $) {
        this.configPopId = $.configPopId;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOvhcloudConnectConfigPopDatacentersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOvhcloudConnectConfigPopDatacentersArgs $;

        public Builder() {
            $ = new GetOvhcloudConnectConfigPopDatacentersArgs();
        }

        public Builder(GetOvhcloudConnectConfigPopDatacentersArgs defaults) {
            $ = new GetOvhcloudConnectConfigPopDatacentersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configPopId ID of the Pop Configuration
         * 
         * @return builder
         * 
         */
        public Builder configPopId(Output<Double> configPopId) {
            $.configPopId = configPopId;
            return this;
        }

        /**
         * @param configPopId ID of the Pop Configuration
         * 
         * @return builder
         * 
         */
        public Builder configPopId(Double configPopId) {
            return configPopId(Output.of(configPopId));
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public GetOvhcloudConnectConfigPopDatacentersArgs build() {
            if ($.configPopId == null) {
                throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopDatacentersArgs", "configPopId");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopDatacentersArgs", "serviceName");
            }
            return $;
        }
    }

}
