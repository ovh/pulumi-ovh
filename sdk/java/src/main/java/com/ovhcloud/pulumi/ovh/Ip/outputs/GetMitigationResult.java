// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Ip.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetMitigationResult {
    /**
     * @return Set on true if the IP is on auto-mitigation
     * 
     */
    private Boolean auto;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The IP or the CIDR
     * 
     */
    private String ip;
    /**
     * @return IPv4 address
     * * ` permanent  ` - Set on true if the IP is on permanent mitigation
     * 
     */
    private String ipOnMitigation;
    private Boolean permanent;
    /**
     * @return Current state of the IP on mitigation
     * 
     */
    private String state;

    private GetMitigationResult() {}
    /**
     * @return Set on true if the IP is on auto-mitigation
     * 
     */
    public Boolean auto() {
        return this.auto;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The IP or the CIDR
     * 
     */
    public String ip() {
        return this.ip;
    }
    /**
     * @return IPv4 address
     * * ` permanent  ` - Set on true if the IP is on permanent mitigation
     * 
     */
    public String ipOnMitigation() {
        return this.ipOnMitigation;
    }
    public Boolean permanent() {
        return this.permanent;
    }
    /**
     * @return Current state of the IP on mitigation
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMitigationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean auto;
        private String id;
        private String ip;
        private String ipOnMitigation;
        private Boolean permanent;
        private String state;
        public Builder() {}
        public Builder(GetMitigationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auto = defaults.auto;
    	      this.id = defaults.id;
    	      this.ip = defaults.ip;
    	      this.ipOnMitigation = defaults.ipOnMitigation;
    	      this.permanent = defaults.permanent;
    	      this.state = defaults.state;
        }

        @CustomType.Setter
        public Builder auto(Boolean auto) {
            if (auto == null) {
              throw new MissingRequiredPropertyException("GetMitigationResult", "auto");
            }
            this.auto = auto;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMitigationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ip(String ip) {
            if (ip == null) {
              throw new MissingRequiredPropertyException("GetMitigationResult", "ip");
            }
            this.ip = ip;
            return this;
        }
        @CustomType.Setter
        public Builder ipOnMitigation(String ipOnMitigation) {
            if (ipOnMitigation == null) {
              throw new MissingRequiredPropertyException("GetMitigationResult", "ipOnMitigation");
            }
            this.ipOnMitigation = ipOnMitigation;
            return this;
        }
        @CustomType.Setter
        public Builder permanent(Boolean permanent) {
            if (permanent == null) {
              throw new MissingRequiredPropertyException("GetMitigationResult", "permanent");
            }
            this.permanent = permanent;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetMitigationResult", "state");
            }
            this.state = state;
            return this;
        }
        public GetMitigationResult build() {
            final var _resultValue = new GetMitigationResult();
            _resultValue.auto = auto;
            _resultValue.id = id;
            _resultValue.ip = ip;
            _resultValue.ipOnMitigation = ipOnMitigation;
            _resultValue.permanent = permanent;
            _resultValue.state = state;
            return _resultValue;
        }
    }
}
