// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Domain.inputs;

import com.ovhcloud.pulumi.ovh.Domain.inputs.NameOrderDetailArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NameOrderArgs extends com.pulumi.resources.ResourceArgs {

    public static final NameOrderArgs Empty = new NameOrderArgs();

    @Import(name="date")
    private @Nullable Output<String> date;

    public Optional<Output<String>> date() {
        return Optional.ofNullable(this.date);
    }

    @Import(name="details")
    private @Nullable Output<List<NameOrderDetailArgs>> details;

    public Optional<Output<List<NameOrderDetailArgs>>> details() {
        return Optional.ofNullable(this.details);
    }

    @Import(name="expirationDate")
    private @Nullable Output<String> expirationDate;

    public Optional<Output<String>> expirationDate() {
        return Optional.ofNullable(this.expirationDate);
    }

    @Import(name="orderId")
    private @Nullable Output<Double> orderId;

    public Optional<Output<Double>> orderId() {
        return Optional.ofNullable(this.orderId);
    }

    private NameOrderArgs() {}

    private NameOrderArgs(NameOrderArgs $) {
        this.date = $.date;
        this.details = $.details;
        this.expirationDate = $.expirationDate;
        this.orderId = $.orderId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NameOrderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NameOrderArgs $;

        public Builder() {
            $ = new NameOrderArgs();
        }

        public Builder(NameOrderArgs defaults) {
            $ = new NameOrderArgs(Objects.requireNonNull(defaults));
        }

        public Builder date(@Nullable Output<String> date) {
            $.date = date;
            return this;
        }

        public Builder date(String date) {
            return date(Output.of(date));
        }

        public Builder details(@Nullable Output<List<NameOrderDetailArgs>> details) {
            $.details = details;
            return this;
        }

        public Builder details(List<NameOrderDetailArgs> details) {
            return details(Output.of(details));
        }

        public Builder details(NameOrderDetailArgs... details) {
            return details(List.of(details));
        }

        public Builder expirationDate(@Nullable Output<String> expirationDate) {
            $.expirationDate = expirationDate;
            return this;
        }

        public Builder expirationDate(String expirationDate) {
            return expirationDate(Output.of(expirationDate));
        }

        public Builder orderId(@Nullable Output<Double> orderId) {
            $.orderId = orderId;
            return this;
        }

        public Builder orderId(Double orderId) {
            return orderId(Output.of(orderId));
        }

        public NameOrderArgs build() {
            return $;
        }
    }

}
