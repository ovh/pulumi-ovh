// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Vrack.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DedicatedCloudDatacenterState extends com.pulumi.resources.ResourceArgs {

    public static final DedicatedCloudDatacenterState Empty = new DedicatedCloudDatacenterState();

    /**
     * Your Dedicated Cloud Datacenter.
     * 
     */
    @Import(name="datacenter")
    private @Nullable Output<String> datacenter;

    /**
     * @return Your Dedicated Cloud Datacenter.
     * 
     */
    public Optional<Output<String>> datacenter() {
        return Optional.ofNullable(this.datacenter);
    }

    /**
     * Your dedicatedCloud name
     * 
     */
    @Import(name="dedicatedCloud")
    private @Nullable Output<String> dedicatedCloud;

    /**
     * @return Your dedicatedCloud name
     * 
     */
    public Optional<Output<String>> dedicatedCloud() {
        return Optional.ofNullable(this.dedicatedCloud);
    }

    /**
     * The internal name of your vrack
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The internal name of your vrack
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The internal name of your target vrack
     * 
     */
    @Import(name="targetServiceName")
    private @Nullable Output<String> targetServiceName;

    /**
     * @return The internal name of your target vrack
     * 
     */
    public Optional<Output<String>> targetServiceName() {
        return Optional.ofNullable(this.targetServiceName);
    }

    private DedicatedCloudDatacenterState() {}

    private DedicatedCloudDatacenterState(DedicatedCloudDatacenterState $) {
        this.datacenter = $.datacenter;
        this.dedicatedCloud = $.dedicatedCloud;
        this.serviceName = $.serviceName;
        this.targetServiceName = $.targetServiceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DedicatedCloudDatacenterState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DedicatedCloudDatacenterState $;

        public Builder() {
            $ = new DedicatedCloudDatacenterState();
        }

        public Builder(DedicatedCloudDatacenterState defaults) {
            $ = new DedicatedCloudDatacenterState(Objects.requireNonNull(defaults));
        }

        /**
         * @param datacenter Your Dedicated Cloud Datacenter.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(@Nullable Output<String> datacenter) {
            $.datacenter = datacenter;
            return this;
        }

        /**
         * @param datacenter Your Dedicated Cloud Datacenter.
         * 
         * @return builder
         * 
         */
        public Builder datacenter(String datacenter) {
            return datacenter(Output.of(datacenter));
        }

        /**
         * @param dedicatedCloud Your dedicatedCloud name
         * 
         * @return builder
         * 
         */
        public Builder dedicatedCloud(@Nullable Output<String> dedicatedCloud) {
            $.dedicatedCloud = dedicatedCloud;
            return this;
        }

        /**
         * @param dedicatedCloud Your dedicatedCloud name
         * 
         * @return builder
         * 
         */
        public Builder dedicatedCloud(String dedicatedCloud) {
            return dedicatedCloud(Output.of(dedicatedCloud));
        }

        /**
         * @param serviceName The internal name of your vrack
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The internal name of your vrack
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param targetServiceName The internal name of your target vrack
         * 
         * @return builder
         * 
         */
        public Builder targetServiceName(@Nullable Output<String> targetServiceName) {
            $.targetServiceName = targetServiceName;
            return this;
        }

        /**
         * @param targetServiceName The internal name of your target vrack
         * 
         * @return builder
         * 
         */
        public Builder targetServiceName(String targetServiceName) {
            return targetServiceName(Output.of(targetServiceName));
        }

        public DedicatedCloudDatacenterState build() {
            return $;
        }
    }

}
