// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStoragePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStoragePlainArgs Empty = new GetStoragePlainArgs();

    /**
     * Limit the number of objects returned (1000 maximum, defaults to 1000)
     * 
     */
    @Import(name="limit")
    private @Nullable Double limit;

    /**
     * @return Limit the number of objects returned (1000 maximum, defaults to 1000)
     * 
     */
    public Optional<Double> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * Key to start with when listing objects
     * 
     */
    @Import(name="marker")
    private @Nullable String marker;

    /**
     * @return Key to start with when listing objects
     * 
     */
    public Optional<String> marker() {
        return Optional.ofNullable(this.marker);
    }

    /**
     * Name
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return Name
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * List objects whose key begins with this prefix
     * 
     */
    @Import(name="prefix")
    private @Nullable String prefix;

    /**
     * @return List objects whose key begins with this prefix
     * 
     */
    public Optional<String> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    /**
     * Region name
     * 
     */
    @Import(name="regionName", required=true)
    private String regionName;

    /**
     * @return Region name
     * 
     */
    public String regionName() {
        return this.regionName;
    }

    /**
     * Service name
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return Service name
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    private GetStoragePlainArgs() {}

    private GetStoragePlainArgs(GetStoragePlainArgs $) {
        this.limit = $.limit;
        this.marker = $.marker;
        this.name = $.name;
        this.prefix = $.prefix;
        this.regionName = $.regionName;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStoragePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStoragePlainArgs $;

        public Builder() {
            $ = new GetStoragePlainArgs();
        }

        public Builder(GetStoragePlainArgs defaults) {
            $ = new GetStoragePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param limit Limit the number of objects returned (1000 maximum, defaults to 1000)
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable Double limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param marker Key to start with when listing objects
         * 
         * @return builder
         * 
         */
        public Builder marker(@Nullable String marker) {
            $.marker = marker;
            return this;
        }

        /**
         * @param name Name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param prefix List objects whose key begins with this prefix
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable String prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param regionName Region name
         * 
         * @return builder
         * 
         */
        public Builder regionName(String regionName) {
            $.regionName = regionName;
            return this;
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public GetStoragePlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetStoragePlainArgs", "name");
            }
            if ($.regionName == null) {
                throw new MissingRequiredPropertyException("GetStoragePlainArgs", "regionName");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetStoragePlainArgs", "serviceName");
            }
            return $;
        }
    }

}
