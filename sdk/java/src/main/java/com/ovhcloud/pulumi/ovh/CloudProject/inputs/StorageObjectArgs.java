// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageObjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final StorageObjectArgs Empty = new StorageObjectArgs();

    /**
     * ETag
     * 
     */
    @Import(name="etag")
    private @Nullable Output<String> etag;

    /**
     * @return ETag
     * 
     */
    public Optional<Output<String>> etag() {
        return Optional.ofNullable(this.etag);
    }

    /**
     * Whether this object is a delete marker
     * 
     */
    @Import(name="isDeleteMarker")
    private @Nullable Output<Boolean> isDeleteMarker;

    /**
     * @return Whether this object is a delete marker
     * 
     */
    public Optional<Output<Boolean>> isDeleteMarker() {
        return Optional.ofNullable(this.isDeleteMarker);
    }

    /**
     * Whether this is the latest version of the object
     * 
     */
    @Import(name="isLatest")
    private @Nullable Output<Boolean> isLatest;

    /**
     * @return Whether this is the latest version of the object
     * 
     */
    public Optional<Output<Boolean>> isLatest() {
        return Optional.ofNullable(this.isLatest);
    }

    /**
     * Key
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return Key
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * Last modification date
     * 
     */
    @Import(name="lastModified")
    private @Nullable Output<String> lastModified;

    /**
     * @return Last modification date
     * 
     */
    public Optional<Output<String>> lastModified() {
        return Optional.ofNullable(this.lastModified);
    }

    /**
     * Size (bytes)
     * 
     */
    @Import(name="size")
    private @Nullable Output<Double> size;

    /**
     * @return Size (bytes)
     * 
     */
    public Optional<Output<Double>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * Storage class
     * 
     */
    @Import(name="storageClass")
    private @Nullable Output<String> storageClass;

    /**
     * @return Storage class
     * 
     */
    public Optional<Output<String>> storageClass() {
        return Optional.ofNullable(this.storageClass);
    }

    /**
     * Version ID of the object
     * 
     */
    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    /**
     * @return Version ID of the object
     * 
     */
    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private StorageObjectArgs() {}

    private StorageObjectArgs(StorageObjectArgs $) {
        this.etag = $.etag;
        this.isDeleteMarker = $.isDeleteMarker;
        this.isLatest = $.isLatest;
        this.key = $.key;
        this.lastModified = $.lastModified;
        this.size = $.size;
        this.storageClass = $.storageClass;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageObjectArgs $;

        public Builder() {
            $ = new StorageObjectArgs();
        }

        public Builder(StorageObjectArgs defaults) {
            $ = new StorageObjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param etag ETag
         * 
         * @return builder
         * 
         */
        public Builder etag(@Nullable Output<String> etag) {
            $.etag = etag;
            return this;
        }

        /**
         * @param etag ETag
         * 
         * @return builder
         * 
         */
        public Builder etag(String etag) {
            return etag(Output.of(etag));
        }

        /**
         * @param isDeleteMarker Whether this object is a delete marker
         * 
         * @return builder
         * 
         */
        public Builder isDeleteMarker(@Nullable Output<Boolean> isDeleteMarker) {
            $.isDeleteMarker = isDeleteMarker;
            return this;
        }

        /**
         * @param isDeleteMarker Whether this object is a delete marker
         * 
         * @return builder
         * 
         */
        public Builder isDeleteMarker(Boolean isDeleteMarker) {
            return isDeleteMarker(Output.of(isDeleteMarker));
        }

        /**
         * @param isLatest Whether this is the latest version of the object
         * 
         * @return builder
         * 
         */
        public Builder isLatest(@Nullable Output<Boolean> isLatest) {
            $.isLatest = isLatest;
            return this;
        }

        /**
         * @param isLatest Whether this is the latest version of the object
         * 
         * @return builder
         * 
         */
        public Builder isLatest(Boolean isLatest) {
            return isLatest(Output.of(isLatest));
        }

        /**
         * @param key Key
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Key
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param lastModified Last modification date
         * 
         * @return builder
         * 
         */
        public Builder lastModified(@Nullable Output<String> lastModified) {
            $.lastModified = lastModified;
            return this;
        }

        /**
         * @param lastModified Last modification date
         * 
         * @return builder
         * 
         */
        public Builder lastModified(String lastModified) {
            return lastModified(Output.of(lastModified));
        }

        /**
         * @param size Size (bytes)
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Double> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size Size (bytes)
         * 
         * @return builder
         * 
         */
        public Builder size(Double size) {
            return size(Output.of(size));
        }

        /**
         * @param storageClass Storage class
         * 
         * @return builder
         * 
         */
        public Builder storageClass(@Nullable Output<String> storageClass) {
            $.storageClass = storageClass;
            return this;
        }

        /**
         * @param storageClass Storage class
         * 
         * @return builder
         * 
         */
        public Builder storageClass(String storageClass) {
            return storageClass(Output.of(storageClass));
        }

        /**
         * @param versionId Version ID of the object
         * 
         * @return builder
         * 
         */
        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        /**
         * @param versionId Version ID of the object
         * 
         * @return builder
         * 
         */
        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public StorageObjectArgs build() {
            return $;
        }
    }

}
