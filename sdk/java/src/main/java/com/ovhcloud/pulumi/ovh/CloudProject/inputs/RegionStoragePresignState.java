// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionStoragePresignState extends com.pulumi.resources.ResourceArgs {

    public static final RegionStoragePresignState Empty = new RegionStoragePresignState();

    /**
     * Define, in seconds, for how long your URL will be valid.
     * 
     */
    @Import(name="expire")
    private @Nullable Output<Integer> expire;

    /**
     * @return Define, in seconds, for how long your URL will be valid.
     * 
     */
    public Optional<Output<Integer>> expire() {
        return Optional.ofNullable(this.expire);
    }

    /**
     * The method you want to use to interact with your object. Can be either &#39;GET&#39; or &#39;PUT&#39;.
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return The method you want to use to interact with your object. Can be either &#39;GET&#39; or &#39;PUT&#39;.
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * The name of your S3 storage container/bucket.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of your S3 storage container/bucket.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The name of the object in your S3 bucket.
     * 
     */
    @Import(name="object")
    private @Nullable Output<String> object;

    /**
     * @return The name of the object in your S3 bucket.
     * 
     */
    public Optional<Output<String>> object() {
        return Optional.ofNullable(this.object);
    }

    /**
     * The region in which your storage is located. Must be in **uppercase**. Ex.: &#34;GRA&#34;.
     * 
     */
    @Import(name="regionName")
    private @Nullable Output<String> regionName;

    /**
     * @return The region in which your storage is located. Must be in **uppercase**. Ex.: &#34;GRA&#34;.
     * 
     */
    public Optional<Output<String>> regionName() {
        return Optional.ofNullable(this.regionName);
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Map of signed headers.
     * 
     */
    @Import(name="signedHeaders")
    private @Nullable Output<Map<String,String>> signedHeaders;

    /**
     * @return Map of signed headers.
     * 
     */
    public Optional<Output<Map<String,String>>> signedHeaders() {
        return Optional.ofNullable(this.signedHeaders);
    }

    /**
     * Computed URL result.
     * 
     */
    @Import(name="url")
    private @Nullable Output<String> url;

    /**
     * @return Computed URL result.
     * 
     */
    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    /**
     * Version ID of the object to download or delete
     * 
     */
    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    /**
     * @return Version ID of the object to download or delete
     * 
     */
    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private RegionStoragePresignState() {}

    private RegionStoragePresignState(RegionStoragePresignState $) {
        this.expire = $.expire;
        this.method = $.method;
        this.name = $.name;
        this.object = $.object;
        this.regionName = $.regionName;
        this.serviceName = $.serviceName;
        this.signedHeaders = $.signedHeaders;
        this.url = $.url;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionStoragePresignState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionStoragePresignState $;

        public Builder() {
            $ = new RegionStoragePresignState();
        }

        public Builder(RegionStoragePresignState defaults) {
            $ = new RegionStoragePresignState(Objects.requireNonNull(defaults));
        }

        /**
         * @param expire Define, in seconds, for how long your URL will be valid.
         * 
         * @return builder
         * 
         */
        public Builder expire(@Nullable Output<Integer> expire) {
            $.expire = expire;
            return this;
        }

        /**
         * @param expire Define, in seconds, for how long your URL will be valid.
         * 
         * @return builder
         * 
         */
        public Builder expire(Integer expire) {
            return expire(Output.of(expire));
        }

        /**
         * @param method The method you want to use to interact with your object. Can be either &#39;GET&#39; or &#39;PUT&#39;.
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method The method you want to use to interact with your object. Can be either &#39;GET&#39; or &#39;PUT&#39;.
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param name The name of your S3 storage container/bucket.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of your S3 storage container/bucket.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param object The name of the object in your S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder object(@Nullable Output<String> object) {
            $.object = object;
            return this;
        }

        /**
         * @param object The name of the object in your S3 bucket.
         * 
         * @return builder
         * 
         */
        public Builder object(String object) {
            return object(Output.of(object));
        }

        /**
         * @param regionName The region in which your storage is located. Must be in **uppercase**. Ex.: &#34;GRA&#34;.
         * 
         * @return builder
         * 
         */
        public Builder regionName(@Nullable Output<String> regionName) {
            $.regionName = regionName;
            return this;
        }

        /**
         * @param regionName The region in which your storage is located. Must be in **uppercase**. Ex.: &#34;GRA&#34;.
         * 
         * @return builder
         * 
         */
        public Builder regionName(String regionName) {
            return regionName(Output.of(regionName));
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param signedHeaders Map of signed headers.
         * 
         * @return builder
         * 
         */
        public Builder signedHeaders(@Nullable Output<Map<String,String>> signedHeaders) {
            $.signedHeaders = signedHeaders;
            return this;
        }

        /**
         * @param signedHeaders Map of signed headers.
         * 
         * @return builder
         * 
         */
        public Builder signedHeaders(Map<String,String> signedHeaders) {
            return signedHeaders(Output.of(signedHeaders));
        }

        /**
         * @param url Computed URL result.
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url Computed URL result.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        /**
         * @param versionId Version ID of the object to download or delete
         * 
         * @return builder
         * 
         */
        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        /**
         * @param versionId Version ID of the object to download or delete
         * 
         * @return builder
         * 
         */
        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public RegionStoragePresignState build() {
            return $;
        }
    }

}
