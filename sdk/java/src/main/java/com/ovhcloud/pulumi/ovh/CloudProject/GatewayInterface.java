// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject;

import com.ovhcloud.pulumi.ovh.CloudProject.GatewayInterfaceArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.GatewayInterfaceState;
import com.ovhcloud.pulumi.ovh.Utilities;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Create a new Gateway Interface for existing subnet in the specified public cloud project.
 * 
 * ## Import
 * 
 * A gateway interface can be imported using the `service_name`, `region`, `id` (identifier of the gateway) and `interface_id` properties, separated by a `/`.
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import ovh:CloudProject/gatewayInterface:GatewayInterface gateway service_name/region/id/interface_id
 * ```
 * 
 */
@ResourceType(type="ovh:CloudProject/gatewayInterface:GatewayInterface")
public class GatewayInterface extends com.pulumi.resources.CustomResource {
    /**
     * ID of the interface
     * 
     */
    @Export(name="interfaceId", refs={String.class}, tree="[0]")
    private Output<String> interfaceId;

    /**
     * @return ID of the interface
     * 
     */
    public Output<String> interfaceId() {
        return this.interfaceId;
    }
    /**
     * IP of the interface
     * 
     */
    @Export(name="ip", refs={String.class}, tree="[0]")
    private Output<String> ip;

    /**
     * @return IP of the interface
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }
    /**
     * Network ID of the interface
     * 
     */
    @Export(name="networkId", refs={String.class}, tree="[0]")
    private Output<String> networkId;

    /**
     * @return Network ID of the interface
     * 
     */
    public Output<String> networkId() {
        return this.networkId;
    }
    /**
     * Region of the gateway
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region of the gateway
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * ID of the cloud project
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return ID of the cloud project
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * ID of the subnet to add
     * 
     */
    @Export(name="subnetId", refs={String.class}, tree="[0]")
    private Output<String> subnetId;

    /**
     * @return ID of the subnet to add
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GatewayInterface(java.lang.String name) {
        this(name, GatewayInterfaceArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GatewayInterface(java.lang.String name, GatewayInterfaceArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GatewayInterface(java.lang.String name, GatewayInterfaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:CloudProject/gatewayInterface:GatewayInterface", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GatewayInterface(java.lang.String name, Output<java.lang.String> id, @Nullable GatewayInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:CloudProject/gatewayInterface:GatewayInterface", name, state, makeResourceOptions(options, id), false);
    }

    private static GatewayInterfaceArgs makeArgs(GatewayInterfaceArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GatewayInterfaceArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GatewayInterface get(java.lang.String name, Output<java.lang.String> id, @Nullable GatewayInterfaceState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GatewayInterface(name, id, state, options);
    }
}
