// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dedicated.inputs;

import com.ovhcloud.pulumi.ovh.Dedicated.inputs.ServerReinstallTaskCustomizationsArgs;
import com.ovhcloud.pulumi.ovh.Dedicated.inputs.ServerReinstallTaskStorageArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServerReinstallTaskState extends com.pulumi.resources.ResourceArgs {

    public static final ServerReinstallTaskState Empty = new ServerReinstallTaskState();

    /**
     * If set, reboot the server on the specified boot id during destroy phase.
     * 
     */
    @Import(name="bootidOnDestroy")
    private @Nullable Output<Integer> bootidOnDestroy;

    /**
     * @return If set, reboot the server on the specified boot id during destroy phase.
     * 
     */
    public Optional<Output<Integer>> bootidOnDestroy() {
        return Optional.ofNullable(this.bootidOnDestroy);
    }

    /**
     * Details of this task. (should be `Install asked`)
     * 
     */
    @Import(name="comment")
    private @Nullable Output<String> comment;

    /**
     * @return Details of this task. (should be `Install asked`)
     * 
     */
    public Optional<Output<String>> comment() {
        return Optional.ofNullable(this.comment);
    }

    /**
     * Available attributes and their types are OS-dependant. Example: `hostname`.
     * 
     * &gt; **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view&amp;sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).
     * 
     */
    @Import(name="customizations")
    private @Nullable Output<ServerReinstallTaskCustomizationsArgs> customizations;

    /**
     * @return Available attributes and their types are OS-dependant. Example: `hostname`.
     * 
     * &gt; **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view&amp;sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).
     * 
     */
    public Optional<Output<ServerReinstallTaskCustomizationsArgs>> customizations() {
        return Optional.ofNullable(this.customizations);
    }

    /**
     * Completion date in RFC3339 format.
     * 
     */
    @Import(name="doneDate")
    private @Nullable Output<String> doneDate;

    /**
     * @return Completion date in RFC3339 format.
     * 
     */
    public Optional<Output<String>> doneDate() {
        return Optional.ofNullable(this.doneDate);
    }

    /**
     * Function name (should be `hardInstall`).
     * 
     */
    @Import(name="function")
    private @Nullable Output<String> function;

    /**
     * @return Function name (should be `hardInstall`).
     * 
     */
    public Optional<Output<String>> function() {
        return Optional.ofNullable(this.function);
    }

    /**
     * Last update
     * 
     */
    @Import(name="lastUpdate")
    private @Nullable Output<String> lastUpdate;

    /**
     * @return Last update
     * 
     */
    public Optional<Output<String>> lastUpdate() {
        return Optional.ofNullable(this.lastUpdate);
    }

    /**
     * Operating system to install.
     * 
     */
    @Import(name="os")
    private @Nullable Output<String> os;

    /**
     * @return Operating system to install.
     * 
     */
    public Optional<Output<String>> os() {
        return Optional.ofNullable(this.os);
    }

    /**
     * Arbitrary properties to pass to cloud-init&#39;s config drive datasource. It supports any key with any string value.
     * 
     */
    @Import(name="properties")
    private @Nullable Output<Map<String,String>> properties;

    /**
     * @return Arbitrary properties to pass to cloud-init&#39;s config drive datasource. It supports any key with any string value.
     * 
     */
    public Optional<Output<Map<String,String>>> properties() {
        return Optional.ofNullable(this.properties);
    }

    /**
     * The service_name of your dedicated server.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The service_name of your dedicated server.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Task creation date in RFC3339 format.
     * 
     */
    @Import(name="startDate")
    private @Nullable Output<String> startDate;

    /**
     * @return Task creation date in RFC3339 format.
     * 
     */
    public Optional<Output<String>> startDate() {
        return Optional.ofNullable(this.startDate);
    }

    /**
     * Task status (should be `done`)
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Task status (should be `done`)
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view&amp;sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).
     * 
     */
    @Import(name="storages")
    private @Nullable Output<List<ServerReinstallTaskStorageArgs>> storages;

    /**
     * @return OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view&amp;sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).
     * 
     */
    public Optional<Output<List<ServerReinstallTaskStorageArgs>>> storages() {
        return Optional.ofNullable(this.storages);
    }

    private ServerReinstallTaskState() {}

    private ServerReinstallTaskState(ServerReinstallTaskState $) {
        this.bootidOnDestroy = $.bootidOnDestroy;
        this.comment = $.comment;
        this.customizations = $.customizations;
        this.doneDate = $.doneDate;
        this.function = $.function;
        this.lastUpdate = $.lastUpdate;
        this.os = $.os;
        this.properties = $.properties;
        this.serviceName = $.serviceName;
        this.startDate = $.startDate;
        this.status = $.status;
        this.storages = $.storages;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServerReinstallTaskState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServerReinstallTaskState $;

        public Builder() {
            $ = new ServerReinstallTaskState();
        }

        public Builder(ServerReinstallTaskState defaults) {
            $ = new ServerReinstallTaskState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bootidOnDestroy If set, reboot the server on the specified boot id during destroy phase.
         * 
         * @return builder
         * 
         */
        public Builder bootidOnDestroy(@Nullable Output<Integer> bootidOnDestroy) {
            $.bootidOnDestroy = bootidOnDestroy;
            return this;
        }

        /**
         * @param bootidOnDestroy If set, reboot the server on the specified boot id during destroy phase.
         * 
         * @return builder
         * 
         */
        public Builder bootidOnDestroy(Integer bootidOnDestroy) {
            return bootidOnDestroy(Output.of(bootidOnDestroy));
        }

        /**
         * @param comment Details of this task. (should be `Install asked`)
         * 
         * @return builder
         * 
         */
        public Builder comment(@Nullable Output<String> comment) {
            $.comment = comment;
            return this;
        }

        /**
         * @param comment Details of this task. (should be `Install asked`)
         * 
         * @return builder
         * 
         */
        public Builder comment(String comment) {
            return comment(Output.of(comment));
        }

        /**
         * @param customizations Available attributes and their types are OS-dependant. Example: `hostname`.
         * 
         * &gt; **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view&amp;sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).
         * 
         * @return builder
         * 
         */
        public Builder customizations(@Nullable Output<ServerReinstallTaskCustomizationsArgs> customizations) {
            $.customizations = customizations;
            return this;
        }

        /**
         * @param customizations Available attributes and their types are OS-dependant. Example: `hostname`.
         * 
         * &gt; **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view&amp;sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).
         * 
         * @return builder
         * 
         */
        public Builder customizations(ServerReinstallTaskCustomizationsArgs customizations) {
            return customizations(Output.of(customizations));
        }

        /**
         * @param doneDate Completion date in RFC3339 format.
         * 
         * @return builder
         * 
         */
        public Builder doneDate(@Nullable Output<String> doneDate) {
            $.doneDate = doneDate;
            return this;
        }

        /**
         * @param doneDate Completion date in RFC3339 format.
         * 
         * @return builder
         * 
         */
        public Builder doneDate(String doneDate) {
            return doneDate(Output.of(doneDate));
        }

        /**
         * @param function Function name (should be `hardInstall`).
         * 
         * @return builder
         * 
         */
        public Builder function(@Nullable Output<String> function) {
            $.function = function;
            return this;
        }

        /**
         * @param function Function name (should be `hardInstall`).
         * 
         * @return builder
         * 
         */
        public Builder function(String function) {
            return function(Output.of(function));
        }

        /**
         * @param lastUpdate Last update
         * 
         * @return builder
         * 
         */
        public Builder lastUpdate(@Nullable Output<String> lastUpdate) {
            $.lastUpdate = lastUpdate;
            return this;
        }

        /**
         * @param lastUpdate Last update
         * 
         * @return builder
         * 
         */
        public Builder lastUpdate(String lastUpdate) {
            return lastUpdate(Output.of(lastUpdate));
        }

        /**
         * @param os Operating system to install.
         * 
         * @return builder
         * 
         */
        public Builder os(@Nullable Output<String> os) {
            $.os = os;
            return this;
        }

        /**
         * @param os Operating system to install.
         * 
         * @return builder
         * 
         */
        public Builder os(String os) {
            return os(Output.of(os));
        }

        /**
         * @param properties Arbitrary properties to pass to cloud-init&#39;s config drive datasource. It supports any key with any string value.
         * 
         * @return builder
         * 
         */
        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            $.properties = properties;
            return this;
        }

        /**
         * @param properties Arbitrary properties to pass to cloud-init&#39;s config drive datasource. It supports any key with any string value.
         * 
         * @return builder
         * 
         */
        public Builder properties(Map<String,String> properties) {
            return properties(Output.of(properties));
        }

        /**
         * @param serviceName The service_name of your dedicated server.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The service_name of your dedicated server.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param startDate Task creation date in RFC3339 format.
         * 
         * @return builder
         * 
         */
        public Builder startDate(@Nullable Output<String> startDate) {
            $.startDate = startDate;
            return this;
        }

        /**
         * @param startDate Task creation date in RFC3339 format.
         * 
         * @return builder
         * 
         */
        public Builder startDate(String startDate) {
            return startDate(Output.of(startDate));
        }

        /**
         * @param status Task status (should be `done`)
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Task status (should be `done`)
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param storages OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view&amp;sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).
         * 
         * @return builder
         * 
         */
        public Builder storages(@Nullable Output<List<ServerReinstallTaskStorageArgs>> storages) {
            $.storages = storages;
            return this;
        }

        /**
         * @param storages OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view&amp;sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).
         * 
         * @return builder
         * 
         */
        public Builder storages(List<ServerReinstallTaskStorageArgs> storages) {
            return storages(Output.of(storages));
        }

        /**
         * @param storages OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view&amp;sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).
         * 
         * @return builder
         * 
         */
        public Builder storages(ServerReinstallTaskStorageArgs... storages) {
            return storages(List.of(storages));
        }

        public ServerReinstallTaskState build() {
            return $;
        }
    }

}
