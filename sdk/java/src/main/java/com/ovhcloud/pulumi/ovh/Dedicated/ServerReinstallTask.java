// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dedicated;

import com.ovhcloud.pulumi.ovh.Dedicated.ServerReinstallTaskArgs;
import com.ovhcloud.pulumi.ovh.Dedicated.inputs.ServerReinstallTaskState;
import com.ovhcloud.pulumi.ovh.Dedicated.outputs.ServerReinstallTaskCustomizations;
import com.ovhcloud.pulumi.ovh.Dedicated.outputs.ServerReinstallTaskStorage;
import com.ovhcloud.pulumi.ovh.Utilities;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * Installation task can be imported using the `service_name` (`nsXXXX.ip...`) of the baremetal server, the `operating_system` used and ths `task_id`, separated by &#34;/&#34; E.g.,
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import ovh:Dedicated/serverReinstallTask:ServerReinstallTask ovh_dedicated_server_reinstall_task nsXXXX.ipXXXX/operating_system/12345
 * ```
 * 
 */
@ResourceType(type="ovh:Dedicated/serverReinstallTask:ServerReinstallTask")
public class ServerReinstallTask extends com.pulumi.resources.CustomResource {
    /**
     * If set, reboot the server on the specified boot id during destroy phase.
     * 
     */
    @Export(name="bootidOnDestroy", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> bootidOnDestroy;

    /**
     * @return If set, reboot the server on the specified boot id during destroy phase.
     * 
     */
    public Output<Optional<Integer>> bootidOnDestroy() {
        return Codegen.optional(this.bootidOnDestroy);
    }
    /**
     * Details of this task. (should be `Install asked`)
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output<String> comment;

    /**
     * @return Details of this task. (should be `Install asked`)
     * 
     */
    public Output<String> comment() {
        return this.comment;
    }
    /**
     * Available attributes and their types are OS-dependant. Example: `hostname`.
     * 
     * &gt; **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view&amp;sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).
     * 
     */
    @Export(name="customizations", refs={ServerReinstallTaskCustomizations.class}, tree="[0]")
    private Output</* @Nullable */ ServerReinstallTaskCustomizations> customizations;

    /**
     * @return Available attributes and their types are OS-dependant. Example: `hostname`.
     * 
     * &gt; **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view&amp;sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).
     * 
     */
    public Output<Optional<ServerReinstallTaskCustomizations>> customizations() {
        return Codegen.optional(this.customizations);
    }
    /**
     * Completion date in RFC3339 format.
     * 
     */
    @Export(name="doneDate", refs={String.class}, tree="[0]")
    private Output<String> doneDate;

    /**
     * @return Completion date in RFC3339 format.
     * 
     */
    public Output<String> doneDate() {
        return this.doneDate;
    }
    /**
     * Function name (should be `hardInstall`).
     * 
     */
    @Export(name="function", refs={String.class}, tree="[0]")
    private Output<String> function;

    /**
     * @return Function name (should be `hardInstall`).
     * 
     */
    public Output<String> function() {
        return this.function;
    }
    /**
     * Last update
     * 
     */
    @Export(name="lastUpdate", refs={String.class}, tree="[0]")
    private Output<String> lastUpdate;

    /**
     * @return Last update
     * 
     */
    public Output<String> lastUpdate() {
        return this.lastUpdate;
    }
    /**
     * Operating system to install.
     * 
     */
    @Export(name="os", refs={String.class}, tree="[0]")
    private Output<String> os;

    /**
     * @return Operating system to install.
     * 
     */
    public Output<String> os() {
        return this.os;
    }
    /**
     * Arbitrary properties to pass to cloud-init&#39;s config drive datasource. It supports any key with any string value.
     * 
     */
    @Export(name="properties", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> properties;

    /**
     * @return Arbitrary properties to pass to cloud-init&#39;s config drive datasource. It supports any key with any string value.
     * 
     */
    public Output<Optional<Map<String,String>>> properties() {
        return Codegen.optional(this.properties);
    }
    /**
     * The service_name of your dedicated server.
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return The service_name of your dedicated server.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Task creation date in RFC3339 format.
     * 
     */
    @Export(name="startDate", refs={String.class}, tree="[0]")
    private Output<String> startDate;

    /**
     * @return Task creation date in RFC3339 format.
     * 
     */
    public Output<String> startDate() {
        return this.startDate;
    }
    /**
     * Task status (should be `done`)
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Task status (should be `done`)
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view&amp;sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).
     * 
     */
    @Export(name="storages", refs={List.class,ServerReinstallTaskStorage.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ServerReinstallTaskStorage>> storages;

    /**
     * @return OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view&amp;sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).
     * 
     */
    public Output<Optional<List<ServerReinstallTaskStorage>>> storages() {
        return Codegen.optional(this.storages);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerReinstallTask(java.lang.String name) {
        this(name, ServerReinstallTaskArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerReinstallTask(java.lang.String name, ServerReinstallTaskArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerReinstallTask(java.lang.String name, ServerReinstallTaskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Dedicated/serverReinstallTask:ServerReinstallTask", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServerReinstallTask(java.lang.String name, Output<java.lang.String> id, @Nullable ServerReinstallTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Dedicated/serverReinstallTask:ServerReinstallTask", name, state, makeResourceOptions(options, id), false);
    }

    private static ServerReinstallTaskArgs makeArgs(ServerReinstallTaskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServerReinstallTaskArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerReinstallTask get(java.lang.String name, Output<java.lang.String> id, @Nullable ServerReinstallTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerReinstallTask(name, id, state, options);
    }
}
