// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.outputs;

import com.ovhcloud.pulumi.ovh.CloudProject.outputs.LoadBalancerNetworkPrivateFloatingIp;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.LoadBalancerNetworkPrivateFloatingIpCreate;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.LoadBalancerNetworkPrivateGateway;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.LoadBalancerNetworkPrivateGatewayCreate;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.LoadBalancerNetworkPrivateNetwork;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LoadBalancerNetworkPrivate {
    /**
     * @return Floating IP to associate
     * 
     */
    private @Nullable LoadBalancerNetworkPrivateFloatingIp floatingIp;
    /**
     * @return Floating IP to create
     * 
     */
    private @Nullable LoadBalancerNetworkPrivateFloatingIpCreate floatingIpCreate;
    /**
     * @return Gateway to associate
     * 
     */
    private @Nullable LoadBalancerNetworkPrivateGateway gateway;
    /**
     * @return Gateway to create
     * 
     */
    private @Nullable LoadBalancerNetworkPrivateGatewayCreate gatewayCreate;
    /**
     * @return Network to associate
     * 
     */
    private LoadBalancerNetworkPrivateNetwork network;

    private LoadBalancerNetworkPrivate() {}
    /**
     * @return Floating IP to associate
     * 
     */
    public Optional<LoadBalancerNetworkPrivateFloatingIp> floatingIp() {
        return Optional.ofNullable(this.floatingIp);
    }
    /**
     * @return Floating IP to create
     * 
     */
    public Optional<LoadBalancerNetworkPrivateFloatingIpCreate> floatingIpCreate() {
        return Optional.ofNullable(this.floatingIpCreate);
    }
    /**
     * @return Gateway to associate
     * 
     */
    public Optional<LoadBalancerNetworkPrivateGateway> gateway() {
        return Optional.ofNullable(this.gateway);
    }
    /**
     * @return Gateway to create
     * 
     */
    public Optional<LoadBalancerNetworkPrivateGatewayCreate> gatewayCreate() {
        return Optional.ofNullable(this.gatewayCreate);
    }
    /**
     * @return Network to associate
     * 
     */
    public LoadBalancerNetworkPrivateNetwork network() {
        return this.network;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LoadBalancerNetworkPrivate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable LoadBalancerNetworkPrivateFloatingIp floatingIp;
        private @Nullable LoadBalancerNetworkPrivateFloatingIpCreate floatingIpCreate;
        private @Nullable LoadBalancerNetworkPrivateGateway gateway;
        private @Nullable LoadBalancerNetworkPrivateGatewayCreate gatewayCreate;
        private LoadBalancerNetworkPrivateNetwork network;
        public Builder() {}
        public Builder(LoadBalancerNetworkPrivate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.floatingIp = defaults.floatingIp;
    	      this.floatingIpCreate = defaults.floatingIpCreate;
    	      this.gateway = defaults.gateway;
    	      this.gatewayCreate = defaults.gatewayCreate;
    	      this.network = defaults.network;
        }

        @CustomType.Setter
        public Builder floatingIp(@Nullable LoadBalancerNetworkPrivateFloatingIp floatingIp) {

            this.floatingIp = floatingIp;
            return this;
        }
        @CustomType.Setter
        public Builder floatingIpCreate(@Nullable LoadBalancerNetworkPrivateFloatingIpCreate floatingIpCreate) {

            this.floatingIpCreate = floatingIpCreate;
            return this;
        }
        @CustomType.Setter
        public Builder gateway(@Nullable LoadBalancerNetworkPrivateGateway gateway) {

            this.gateway = gateway;
            return this;
        }
        @CustomType.Setter
        public Builder gatewayCreate(@Nullable LoadBalancerNetworkPrivateGatewayCreate gatewayCreate) {

            this.gatewayCreate = gatewayCreate;
            return this;
        }
        @CustomType.Setter
        public Builder network(LoadBalancerNetworkPrivateNetwork network) {
            if (network == null) {
              throw new MissingRequiredPropertyException("LoadBalancerNetworkPrivate", "network");
            }
            this.network = network;
            return this;
        }
        public LoadBalancerNetworkPrivate build() {
            final var _resultValue = new LoadBalancerNetworkPrivate();
            _resultValue.floatingIp = floatingIp;
            _resultValue.floatingIpCreate = floatingIpCreate;
            _resultValue.gateway = gateway;
            _resultValue.gatewayCreate = gatewayCreate;
            _resultValue.network = network;
            return _resultValue;
        }
    }
}
