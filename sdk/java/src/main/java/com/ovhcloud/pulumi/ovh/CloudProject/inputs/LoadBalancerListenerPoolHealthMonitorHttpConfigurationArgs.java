// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs Empty = new LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs();

    /**
     * Domain name, which be injected into the HTTP Host Header to the backend server for HTTP health check
     * 
     */
    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    /**
     * @return Domain name, which be injected into the HTTP Host Header to the backend server for HTTP health check
     * 
     */
    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * Status codes expected in response from the member to declare it healthy; The list of HTTP status codes expected in response from the member to declare it healthy. Specify one of the following values: * A single value, such as 200; * A list, such as 200, 202; * A range, such as 200-204
     * 
     */
    @Import(name="expectedCodes")
    private @Nullable Output<String> expectedCodes;

    /**
     * @return Status codes expected in response from the member to declare it healthy; The list of HTTP status codes expected in response from the member to declare it healthy. Specify one of the following values: * A single value, such as 200; * A list, such as 200, 202; * A range, such as 200-204
     * 
     */
    public Optional<Output<String>> expectedCodes() {
        return Optional.ofNullable(this.expectedCodes);
    }

    /**
     * HTTP method that the health monitor uses for requests
     * 
     */
    @Import(name="httpMethod")
    private @Nullable Output<String> httpMethod;

    /**
     * @return HTTP method that the health monitor uses for requests
     * 
     */
    public Optional<Output<String>> httpMethod() {
        return Optional.ofNullable(this.httpMethod);
    }

    /**
     * HTTP version that the health monitor uses for requests
     * 
     */
    @Import(name="httpVersion")
    private @Nullable Output<String> httpVersion;

    /**
     * @return HTTP version that the health monitor uses for requests
     * 
     */
    public Optional<Output<String>> httpVersion() {
        return Optional.ofNullable(this.httpVersion);
    }

    /**
     * HTTP URL path of the request sent by the monitor to test the health of a backend member
     * 
     */
    @Import(name="urlPath")
    private @Nullable Output<String> urlPath;

    /**
     * @return HTTP URL path of the request sent by the monitor to test the health of a backend member
     * 
     */
    public Optional<Output<String>> urlPath() {
        return Optional.ofNullable(this.urlPath);
    }

    private LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs() {}

    private LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs(LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs $) {
        this.domainName = $.domainName;
        this.expectedCodes = $.expectedCodes;
        this.httpMethod = $.httpMethod;
        this.httpVersion = $.httpVersion;
        this.urlPath = $.urlPath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs $;

        public Builder() {
            $ = new LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs();
        }

        public Builder(LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs defaults) {
            $ = new LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param domainName Domain name, which be injected into the HTTP Host Header to the backend server for HTTP health check
         * 
         * @return builder
         * 
         */
        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName Domain name, which be injected into the HTTP Host Header to the backend server for HTTP health check
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param expectedCodes Status codes expected in response from the member to declare it healthy; The list of HTTP status codes expected in response from the member to declare it healthy. Specify one of the following values: * A single value, such as 200; * A list, such as 200, 202; * A range, such as 200-204
         * 
         * @return builder
         * 
         */
        public Builder expectedCodes(@Nullable Output<String> expectedCodes) {
            $.expectedCodes = expectedCodes;
            return this;
        }

        /**
         * @param expectedCodes Status codes expected in response from the member to declare it healthy; The list of HTTP status codes expected in response from the member to declare it healthy. Specify one of the following values: * A single value, such as 200; * A list, such as 200, 202; * A range, such as 200-204
         * 
         * @return builder
         * 
         */
        public Builder expectedCodes(String expectedCodes) {
            return expectedCodes(Output.of(expectedCodes));
        }

        /**
         * @param httpMethod HTTP method that the health monitor uses for requests
         * 
         * @return builder
         * 
         */
        public Builder httpMethod(@Nullable Output<String> httpMethod) {
            $.httpMethod = httpMethod;
            return this;
        }

        /**
         * @param httpMethod HTTP method that the health monitor uses for requests
         * 
         * @return builder
         * 
         */
        public Builder httpMethod(String httpMethod) {
            return httpMethod(Output.of(httpMethod));
        }

        /**
         * @param httpVersion HTTP version that the health monitor uses for requests
         * 
         * @return builder
         * 
         */
        public Builder httpVersion(@Nullable Output<String> httpVersion) {
            $.httpVersion = httpVersion;
            return this;
        }

        /**
         * @param httpVersion HTTP version that the health monitor uses for requests
         * 
         * @return builder
         * 
         */
        public Builder httpVersion(String httpVersion) {
            return httpVersion(Output.of(httpVersion));
        }

        /**
         * @param urlPath HTTP URL path of the request sent by the monitor to test the health of a backend member
         * 
         * @return builder
         * 
         */
        public Builder urlPath(@Nullable Output<String> urlPath) {
            $.urlPath = urlPath;
            return this;
        }

        /**
         * @param urlPath HTTP URL path of the request sent by the monitor to test the health of a backend member
         * 
         * @return builder
         * 
         */
        public Builder urlPath(String urlPath) {
            return urlPath(Output.of(urlPath));
        }

        public LoadBalancerListenerPoolHealthMonitorHttpConfigurationArgs build() {
            return $;
        }
    }

}
