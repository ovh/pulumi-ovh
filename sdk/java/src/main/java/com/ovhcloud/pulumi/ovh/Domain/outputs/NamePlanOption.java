// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Domain.outputs;

import com.ovhcloud.pulumi.ovh.Domain.outputs.NamePlanOptionConfiguration;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class NamePlanOption {
    private @Nullable List<NamePlanOptionConfiguration> configurations;
    /**
     * @return Duration selected for the purchase of the product
     * 
     */
    private String duration;
    /**
     * @return Identifier of the option offer
     * 
     */
    private String planCode;
    /**
     * @return Pricing mode selected for the purchase of the product
     * 
     */
    private String pricingMode;
    /**
     * @return Quantity of product desired
     * 
     */
    private Double quantity;

    private NamePlanOption() {}
    public List<NamePlanOptionConfiguration> configurations() {
        return this.configurations == null ? List.of() : this.configurations;
    }
    /**
     * @return Duration selected for the purchase of the product
     * 
     */
    public String duration() {
        return this.duration;
    }
    /**
     * @return Identifier of the option offer
     * 
     */
    public String planCode() {
        return this.planCode;
    }
    /**
     * @return Pricing mode selected for the purchase of the product
     * 
     */
    public String pricingMode() {
        return this.pricingMode;
    }
    /**
     * @return Quantity of product desired
     * 
     */
    public Double quantity() {
        return this.quantity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NamePlanOption defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<NamePlanOptionConfiguration> configurations;
        private String duration;
        private String planCode;
        private String pricingMode;
        private Double quantity;
        public Builder() {}
        public Builder(NamePlanOption defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configurations = defaults.configurations;
    	      this.duration = defaults.duration;
    	      this.planCode = defaults.planCode;
    	      this.pricingMode = defaults.pricingMode;
    	      this.quantity = defaults.quantity;
        }

        @CustomType.Setter
        public Builder configurations(@Nullable List<NamePlanOptionConfiguration> configurations) {

            this.configurations = configurations;
            return this;
        }
        public Builder configurations(NamePlanOptionConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        @CustomType.Setter
        public Builder duration(String duration) {
            if (duration == null) {
              throw new MissingRequiredPropertyException("NamePlanOption", "duration");
            }
            this.duration = duration;
            return this;
        }
        @CustomType.Setter
        public Builder planCode(String planCode) {
            if (planCode == null) {
              throw new MissingRequiredPropertyException("NamePlanOption", "planCode");
            }
            this.planCode = planCode;
            return this;
        }
        @CustomType.Setter
        public Builder pricingMode(String pricingMode) {
            if (pricingMode == null) {
              throw new MissingRequiredPropertyException("NamePlanOption", "pricingMode");
            }
            this.pricingMode = pricingMode;
            return this;
        }
        @CustomType.Setter
        public Builder quantity(Double quantity) {
            if (quantity == null) {
              throw new MissingRequiredPropertyException("NamePlanOption", "quantity");
            }
            this.quantity = quantity;
            return this;
        }
        public NamePlanOption build() {
            final var _resultValue = new NamePlanOption();
            _resultValue.configurations = configurations;
            _resultValue.duration = duration;
            _resultValue.planCode = planCode;
            _resultValue.pricingMode = pricingMode;
            _resultValue.quantity = quantity;
            return _resultValue;
        }
    }
}
