// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RegionLoadBalancerLogSubscriptionState extends com.pulumi.resources.ResourceArgs {

    public static final RegionLoadBalancerLogSubscriptionState Empty = new RegionLoadBalancerLogSubscriptionState();

    /**
     * The date of the subscription creation
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The date of the subscription creation
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * haproxy **Changing this value recreates the resource.**
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return haproxy **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * LDP service name
     * 
     */
    @Import(name="ldpServiceName")
    private @Nullable Output<String> ldpServiceName;

    /**
     * @return LDP service name
     * 
     */
    public Optional<Output<String>> ldpServiceName() {
        return Optional.ofNullable(this.ldpServiceName);
    }

    /**
     * Loadbalancer id to get the logs **Changing this value recreates the resource.**
     * 
     */
    @Import(name="loadbalancerId")
    private @Nullable Output<String> loadbalancerId;

    /**
     * @return Loadbalancer id to get the logs **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> loadbalancerId() {
        return Optional.ofNullable(this.loadbalancerId);
    }

    /**
     * The operation ID
     * 
     */
    @Import(name="operationId")
    private @Nullable Output<String> operationId;

    /**
     * @return The operation ID
     * 
     */
    public Optional<Output<String>> operationId() {
        return Optional.ofNullable(this.operationId);
    }

    /**
     * A valid OVHcloud public cloud region name in which the loadbalancer will be available. Ex.: &#34;GRA11&#34;. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="regionName")
    private @Nullable Output<String> regionName;

    /**
     * @return A valid OVHcloud public cloud region name in which the loadbalancer will be available. Ex.: &#34;GRA11&#34;. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> regionName() {
        return Optional.ofNullable(this.regionName);
    }

    /**
     * The resource name
     * 
     */
    @Import(name="resourceName")
    private @Nullable Output<String> resourceName;

    /**
     * @return The resource name
     * 
     */
    public Optional<Output<String>> resourceName() {
        return Optional.ofNullable(this.resourceName);
    }

    /**
     * The resource type
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The resource type
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Data stream id to use for the subscription **Changing this value recreates the resource.**
     * 
     */
    @Import(name="streamId")
    private @Nullable Output<String> streamId;

    /**
     * @return Data stream id to use for the subscription **Changing this value recreates the resource.**
     * 
     */
    public Optional<Output<String>> streamId() {
        return Optional.ofNullable(this.streamId);
    }

    /**
     * The subscription id
     * 
     */
    @Import(name="subscriptionId")
    private @Nullable Output<String> subscriptionId;

    /**
     * @return The subscription id
     * 
     */
    public Optional<Output<String>> subscriptionId() {
        return Optional.ofNullable(this.subscriptionId);
    }

    /**
     * The last update of the subscription
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return The last update of the subscription
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    private RegionLoadBalancerLogSubscriptionState() {}

    private RegionLoadBalancerLogSubscriptionState(RegionLoadBalancerLogSubscriptionState $) {
        this.createdAt = $.createdAt;
        this.kind = $.kind;
        this.ldpServiceName = $.ldpServiceName;
        this.loadbalancerId = $.loadbalancerId;
        this.operationId = $.operationId;
        this.regionName = $.regionName;
        this.resourceName = $.resourceName;
        this.resourceType = $.resourceType;
        this.serviceName = $.serviceName;
        this.streamId = $.streamId;
        this.subscriptionId = $.subscriptionId;
        this.updatedAt = $.updatedAt;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RegionLoadBalancerLogSubscriptionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RegionLoadBalancerLogSubscriptionState $;

        public Builder() {
            $ = new RegionLoadBalancerLogSubscriptionState();
        }

        public Builder(RegionLoadBalancerLogSubscriptionState defaults) {
            $ = new RegionLoadBalancerLogSubscriptionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt The date of the subscription creation
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The date of the subscription creation
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param kind haproxy **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind haproxy **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param ldpServiceName LDP service name
         * 
         * @return builder
         * 
         */
        public Builder ldpServiceName(@Nullable Output<String> ldpServiceName) {
            $.ldpServiceName = ldpServiceName;
            return this;
        }

        /**
         * @param ldpServiceName LDP service name
         * 
         * @return builder
         * 
         */
        public Builder ldpServiceName(String ldpServiceName) {
            return ldpServiceName(Output.of(ldpServiceName));
        }

        /**
         * @param loadbalancerId Loadbalancer id to get the logs **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder loadbalancerId(@Nullable Output<String> loadbalancerId) {
            $.loadbalancerId = loadbalancerId;
            return this;
        }

        /**
         * @param loadbalancerId Loadbalancer id to get the logs **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder loadbalancerId(String loadbalancerId) {
            return loadbalancerId(Output.of(loadbalancerId));
        }

        /**
         * @param operationId The operation ID
         * 
         * @return builder
         * 
         */
        public Builder operationId(@Nullable Output<String> operationId) {
            $.operationId = operationId;
            return this;
        }

        /**
         * @param operationId The operation ID
         * 
         * @return builder
         * 
         */
        public Builder operationId(String operationId) {
            return operationId(Output.of(operationId));
        }

        /**
         * @param regionName A valid OVHcloud public cloud region name in which the loadbalancer will be available. Ex.: &#34;GRA11&#34;. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder regionName(@Nullable Output<String> regionName) {
            $.regionName = regionName;
            return this;
        }

        /**
         * @param regionName A valid OVHcloud public cloud region name in which the loadbalancer will be available. Ex.: &#34;GRA11&#34;. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder regionName(String regionName) {
            return regionName(Output.of(regionName));
        }

        /**
         * @param resourceName The resource name
         * 
         * @return builder
         * 
         */
        public Builder resourceName(@Nullable Output<String> resourceName) {
            $.resourceName = resourceName;
            return this;
        }

        /**
         * @param resourceName The resource name
         * 
         * @return builder
         * 
         */
        public Builder resourceName(String resourceName) {
            return resourceName(Output.of(resourceName));
        }

        /**
         * @param resourceType The resource type
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The resource type
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used. **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param streamId Data stream id to use for the subscription **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder streamId(@Nullable Output<String> streamId) {
            $.streamId = streamId;
            return this;
        }

        /**
         * @param streamId Data stream id to use for the subscription **Changing this value recreates the resource.**
         * 
         * @return builder
         * 
         */
        public Builder streamId(String streamId) {
            return streamId(Output.of(streamId));
        }

        /**
         * @param subscriptionId The subscription id
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(@Nullable Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The subscription id
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param updatedAt The last update of the subscription
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt The last update of the subscription
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        public RegionLoadBalancerLogSubscriptionState build() {
            return $;
        }
    }

}
