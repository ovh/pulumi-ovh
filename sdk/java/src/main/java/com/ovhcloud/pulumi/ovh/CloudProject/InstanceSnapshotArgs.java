// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceSnapshotArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceSnapshotArgs Empty = new InstanceSnapshotArgs();

    /**
     * Instance ID
     * 
     */
    @Import(name="instanceId", required=true)
    private Output<String> instanceId;

    /**
     * @return Instance ID
     * 
     */
    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * Snapshot name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Snapshot name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Service name
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private InstanceSnapshotArgs() {}

    private InstanceSnapshotArgs(InstanceSnapshotArgs $) {
        this.instanceId = $.instanceId;
        this.name = $.name;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceSnapshotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceSnapshotArgs $;

        public Builder() {
            $ = new InstanceSnapshotArgs();
        }

        public Builder(InstanceSnapshotArgs defaults) {
            $ = new InstanceSnapshotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param instanceId Instance ID
         * 
         * @return builder
         * 
         */
        public Builder instanceId(Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId Instance ID
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param name Snapshot name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Snapshot name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public InstanceSnapshotArgs build() {
            if ($.instanceId == null) {
                throw new MissingRequiredPropertyException("InstanceSnapshotArgs", "instanceId");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("InstanceSnapshotArgs", "serviceName");
            }
            return $;
        }
    }

}
