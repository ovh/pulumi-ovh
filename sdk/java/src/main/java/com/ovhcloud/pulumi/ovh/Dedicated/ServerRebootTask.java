// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.Dedicated;

import com.ovhcloud.pulumi.ovh.Dedicated.ServerRebootTaskArgs;
import com.ovhcloud.pulumi.ovh.Dedicated.inputs.ServerRebootTaskState;
import com.ovhcloud.pulumi.ovh.Utilities;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.Dedicated.DedicatedFunctions;
 * import com.pulumi.ovh.Dedicated.inputs.GetServerBootsArgs;
 * import com.ovhcloud.pulumi.ovh.Dedicated.ServerUpdate;
 * import com.ovhcloud.pulumi.ovh.Dedicated.ServerUpdateArgs;
 * import com.ovhcloud.pulumi.ovh.Dedicated.ServerRebootTask;
 * import com.ovhcloud.pulumi.ovh.Dedicated.ServerRebootTaskArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var rescue = DedicatedFunctions.getServerBoots(GetServerBootsArgs.builder()
 *             .serviceName("nsxxxxxxx.ip-xx-xx-xx.eu")
 *             .bootType("rescue")
 *             .kernel("rescue64-pro")
 *             .build());
 * 
 *         var serverOnRescue = new ServerUpdate("serverOnRescue", ServerUpdateArgs.builder()
 *             .serviceName("nsxxxxxxx.ip-xx-xx-xx.eu")
 *             .bootId(rescue.results()[0])
 *             .monitoring(true)
 *             .state("ok")
 *             .build());
 * 
 *         var serverReboot = new ServerRebootTask("serverReboot", ServerRebootTaskArgs.builder()
 *             .serviceName(rescue.serviceName())
 *             .keepers(serverOnRescue.bootId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="ovh:Dedicated/serverRebootTask:ServerRebootTask")
public class ServerRebootTask extends com.pulumi.resources.CustomResource {
    /**
     * Details of this task. (should be `Reboot asked`)
     * 
     */
    @Export(name="comment", refs={String.class}, tree="[0]")
    private Output<String> comment;

    /**
     * @return Details of this task. (should be `Reboot asked`)
     * 
     */
    public Output<String> comment() {
        return this.comment;
    }
    /**
     * Completion date in RFC3339 format.
     * 
     */
    @Export(name="doneDate", refs={String.class}, tree="[0]")
    private Output<String> doneDate;

    /**
     * @return Completion date in RFC3339 format.
     * 
     */
    public Output<String> doneDate() {
        return this.doneDate;
    }
    /**
     * Function name (should be `hardReboot`).
     * 
     */
    @Export(name="function", refs={String.class}, tree="[0]")
    private Output<String> function;

    /**
     * @return Function name (should be `hardReboot`).
     * 
     */
    public Output<String> function() {
        return this.function;
    }
    /**
     * List of values tracked to trigger reboot, used also to form implicit dependencies.
     * 
     */
    @Export(name="keepers", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> keepers;

    /**
     * @return List of values tracked to trigger reboot, used also to form implicit dependencies.
     * 
     */
    public Output<List<String>> keepers() {
        return this.keepers;
    }
    /**
     * Last update in RFC3339 format.
     * 
     */
    @Export(name="lastUpdate", refs={String.class}, tree="[0]")
    private Output<String> lastUpdate;

    /**
     * @return Last update in RFC3339 format.
     * 
     */
    public Output<String> lastUpdate() {
        return this.lastUpdate;
    }
    /**
     * The service_name of your dedicated server.
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return The service_name of your dedicated server.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Task creation date in RFC3339 format.
     * 
     */
    @Export(name="startDate", refs={String.class}, tree="[0]")
    private Output<String> startDate;

    /**
     * @return Task creation date in RFC3339 format.
     * 
     */
    public Output<String> startDate() {
        return this.startDate;
    }
    /**
     * Task status (should be `done`)
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return Task status (should be `done`)
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ServerRebootTask(java.lang.String name) {
        this(name, ServerRebootTaskArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ServerRebootTask(java.lang.String name, ServerRebootTaskArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ServerRebootTask(java.lang.String name, ServerRebootTaskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Dedicated/serverRebootTask:ServerRebootTask", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ServerRebootTask(java.lang.String name, Output<java.lang.String> id, @Nullable ServerRebootTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:Dedicated/serverRebootTask:ServerRebootTask", name, state, makeResourceOptions(options, id), false);
    }

    private static ServerRebootTaskArgs makeArgs(ServerRebootTaskArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ServerRebootTaskArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ServerRebootTask get(java.lang.String name, Output<java.lang.String> id, @Nullable ServerRebootTaskState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ServerRebootTask(name, id, state, options);
    }
}
