// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StorageEfsShareState extends com.pulumi.resources.ResourceArgs {

    public static final StorageEfsShareState Empty = new StorageEfsShareState();

    /**
     * Share creation date
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Share creation date
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Share description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Share description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * User-defined name used to generate human readable access path for the share
     * 
     */
    @Import(name="mountPointName")
    private @Nullable Output<String> mountPointName;

    /**
     * @return User-defined name used to generate human readable access path for the share
     * 
     */
    public Optional<Output<String>> mountPointName() {
        return Optional.ofNullable(this.mountPointName);
    }

    /**
     * Share name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Share name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Share protocol
     * 
     */
    @Import(name="protocol")
    private @Nullable Output<String> protocol;

    /**
     * @return Share protocol
     * 
     */
    public Optional<Output<String>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    /**
     * Service name
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Share size in Gigabytes
     * 
     */
    @Import(name="size")
    private @Nullable Output<Double> size;

    /**
     * @return Share size in Gigabytes
     * 
     */
    public Optional<Output<Double>> size() {
        return Optional.ofNullable(this.size);
    }

    /**
     * Snapshot ID used to create the share
     * 
     */
    @Import(name="snapshotId")
    private @Nullable Output<String> snapshotId;

    /**
     * @return Snapshot ID used to create the share
     * 
     */
    public Optional<Output<String>> snapshotId() {
        return Optional.ofNullable(this.snapshotId);
    }

    /**
     * Share status
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Share status
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private StorageEfsShareState() {}

    private StorageEfsShareState(StorageEfsShareState $) {
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.mountPointName = $.mountPointName;
        this.name = $.name;
        this.protocol = $.protocol;
        this.serviceName = $.serviceName;
        this.size = $.size;
        this.snapshotId = $.snapshotId;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StorageEfsShareState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StorageEfsShareState $;

        public Builder() {
            $ = new StorageEfsShareState();
        }

        public Builder(StorageEfsShareState defaults) {
            $ = new StorageEfsShareState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Share creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Share creation date
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param description Share description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Share description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param mountPointName User-defined name used to generate human readable access path for the share
         * 
         * @return builder
         * 
         */
        public Builder mountPointName(@Nullable Output<String> mountPointName) {
            $.mountPointName = mountPointName;
            return this;
        }

        /**
         * @param mountPointName User-defined name used to generate human readable access path for the share
         * 
         * @return builder
         * 
         */
        public Builder mountPointName(String mountPointName) {
            return mountPointName(Output.of(mountPointName));
        }

        /**
         * @param name Share name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Share name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protocol Share protocol
         * 
         * @return builder
         * 
         */
        public Builder protocol(@Nullable Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol Share protocol
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param size Share size in Gigabytes
         * 
         * @return builder
         * 
         */
        public Builder size(@Nullable Output<Double> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size Share size in Gigabytes
         * 
         * @return builder
         * 
         */
        public Builder size(Double size) {
            return size(Output.of(size));
        }

        /**
         * @param snapshotId Snapshot ID used to create the share
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(@Nullable Output<String> snapshotId) {
            $.snapshotId = snapshotId;
            return this;
        }

        /**
         * @param snapshotId Snapshot ID used to create the share
         * 
         * @return builder
         * 
         */
        public Builder snapshotId(String snapshotId) {
            return snapshotId(Output.of(snapshotId));
        }

        /**
         * @param status Share status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Share status
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public StorageEfsShareState build() {
            return $;
        }
    }

}
