// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject;

import com.ovhcloud.pulumi.ovh.CloudProject.StorageArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.StorageState;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.StorageEncryption;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.StorageObject;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.StorageReplication;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.StorageVersioning;
import com.ovhcloud.pulumi.ovh.Utilities;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Create S3â„¢* compatible storage container
 * (* S3 is a trademark filed by Amazon Technologies,Inc. OVHcloud&#39;s service is not sponsored by, endorsed by, or otherwise affiliated with Amazon Technologies,Inc.)
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.ovh.CloudProject.Storage;
 * import com.pulumi.ovh.CloudProject.StorageArgs;
 * import com.pulumi.ovh.CloudProject.inputs.StorageVersioningArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var storage = new Storage("storage", StorageArgs.builder()
 *             .regionName("GRA")
 *             .serviceName("<public cloud project ID>")
 *             .versioning(StorageVersioningArgs.builder()
 *                 .status("enabled")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A storage in a public cloud project can be imported using the `service_name`, `region_name` and `name` attributes.
 * 
 * Using the following configuration:
 * 
 * hcl
 * 
 * import {
 * 
 *   id = &#34;&lt;service_name&gt;/&lt;region_name&gt;/&lt;name&gt;&#34;
 * 
 *   to = ovh_cloud_project_storage.storage
 * 
 * }
 * 
 * You can then run:
 * 
 * bash
 * 
 * $ pulumi preview -generate-config-out=storage.tf
 * 
 * $ pulumi up
 * 
 * The file `storage.tf` will then contain the imported resource&#39;s configuration, that can be copied next to the `import` block above.
 * 
 * See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.
 * 
 */
@ResourceType(type="ovh:CloudProject/storage:Storage")
public class Storage extends com.pulumi.resources.CustomResource {
    /**
     * The date and timestamp when the resource was created
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The date and timestamp when the resource was created
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Encryption configuration
     * 
     */
    @Export(name="encryption", refs={StorageEncryption.class}, tree="[0]")
    private Output<StorageEncryption> encryption;

    /**
     * @return Encryption configuration
     * 
     */
    public Output<StorageEncryption> encryption() {
        return this.encryption;
    }
    /**
     * Limit the number of objects returned (1000 maximum, defaults to 1000)
     * 
     */
    @Export(name="limit", refs={Double.class}, tree="[0]")
    private Output<Double> limit;

    /**
     * @return Limit the number of objects returned (1000 maximum, defaults to 1000)
     * 
     */
    public Output<Double> limit() {
        return this.limit;
    }
    /**
     * Key to start with when listing objects
     * 
     */
    @Export(name="marker", refs={String.class}, tree="[0]")
    private Output<String> marker;

    /**
     * @return Key to start with when listing objects
     * 
     */
    public Output<String> marker() {
        return this.marker;
    }
    /**
     * Container name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Container name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Container objects
     * 
     */
    @Export(name="objects", refs={List.class,StorageObject.class}, tree="[0,1]")
    private Output<List<StorageObject>> objects;

    /**
     * @return Container objects
     * 
     */
    public Output<List<StorageObject>> objects() {
        return this.objects;
    }
    /**
     * Container total objects count
     * 
     */
    @Export(name="objectsCount", refs={Double.class}, tree="[0]")
    private Output<Double> objectsCount;

    /**
     * @return Container total objects count
     * 
     */
    public Output<Double> objectsCount() {
        return this.objectsCount;
    }
    /**
     * Container total objects size (bytes)
     * 
     */
    @Export(name="objectsSize", refs={Double.class}, tree="[0]")
    private Output<Double> objectsSize;

    /**
     * @return Container total objects size (bytes)
     * 
     */
    public Output<Double> objectsSize() {
        return this.objectsSize;
    }
    /**
     * Container owner user ID
     * 
     */
    @Export(name="ownerId", refs={Double.class}, tree="[0]")
    private Output<Double> ownerId;

    /**
     * @return Container owner user ID
     * 
     */
    public Output<Double> ownerId() {
        return this.ownerId;
    }
    /**
     * List objects whose key begins with this prefix
     * 
     */
    @Export(name="prefix", refs={String.class}, tree="[0]")
    private Output<String> prefix;

    /**
     * @return List objects whose key begins with this prefix
     * 
     */
    public Output<String> prefix() {
        return this.prefix;
    }
    /**
     * Container region
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Container region
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Region name
     * 
     */
    @Export(name="regionName", refs={String.class}, tree="[0]")
    private Output<String> regionName;

    /**
     * @return Region name
     * 
     */
    public Output<String> regionName() {
        return this.regionName;
    }
    /**
     * Replication configuration
     * 
     */
    @Export(name="replication", refs={StorageReplication.class}, tree="[0]")
    private Output<StorageReplication> replication;

    /**
     * @return Replication configuration
     * 
     */
    public Output<StorageReplication> replication() {
        return this.replication;
    }
    /**
     * Service name
     * 
     */
    @Export(name="serviceName", refs={String.class}, tree="[0]")
    private Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }
    /**
     * Versioning configuration
     * 
     */
    @Export(name="versioning", refs={StorageVersioning.class}, tree="[0]")
    private Output<StorageVersioning> versioning;

    /**
     * @return Versioning configuration
     * 
     */
    public Output<StorageVersioning> versioning() {
        return this.versioning;
    }
    /**
     * Container virtual host
     * 
     */
    @Export(name="virtualHost", refs={String.class}, tree="[0]")
    private Output<String> virtualHost;

    /**
     * @return Container virtual host
     * 
     */
    public Output<String> virtualHost() {
        return this.virtualHost;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Storage(java.lang.String name) {
        this(name, StorageArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Storage(java.lang.String name, StorageArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Storage(java.lang.String name, StorageArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:CloudProject/storage:Storage", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Storage(java.lang.String name, Output<java.lang.String> id, @Nullable StorageState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("ovh:CloudProject/storage:Storage", name, state, makeResourceOptions(options, id), false);
    }

    private static StorageArgs makeArgs(StorageArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? StorageArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Storage get(java.lang.String name, Output<java.lang.String> id, @Nullable StorageState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Storage(name, id, state, options);
    }
}
