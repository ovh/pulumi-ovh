// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProjectDatabase;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class KafkaSchemaRegistryAclArgs extends com.pulumi.resources.ResourceArgs {

    public static final KafkaSchemaRegistryAclArgs Empty = new KafkaSchemaRegistryAclArgs();

    /**
     * Cluster ID.
     * 
     */
    @Import(name="clusterId", required=true)
    private Output<String> clusterId;

    /**
     * @return Cluster ID.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }

    /**
     * Permission to give to this username on this resource. Available permissions:
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return Permission to give to this username on this resource. Available permissions:
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    /**
     * Resource affected by this schema registry ACL.
     * 
     */
    @Import(name="resource", required=true)
    private Output<String> resource;

    /**
     * @return Resource affected by this schema registry ACL.
     * 
     */
    public Output<String> resource() {
        return this.resource;
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Username affected by this schema registry ACL.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return Username affected by this schema registry ACL.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private KafkaSchemaRegistryAclArgs() {}

    private KafkaSchemaRegistryAclArgs(KafkaSchemaRegistryAclArgs $) {
        this.clusterId = $.clusterId;
        this.permission = $.permission;
        this.resource = $.resource;
        this.serviceName = $.serviceName;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KafkaSchemaRegistryAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KafkaSchemaRegistryAclArgs $;

        public Builder() {
            $ = new KafkaSchemaRegistryAclArgs();
        }

        public Builder(KafkaSchemaRegistryAclArgs defaults) {
            $ = new KafkaSchemaRegistryAclArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId Cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId Cluster ID.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param permission Permission to give to this username on this resource. Available permissions:
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission Permission to give to this username on this resource. Available permissions:
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        /**
         * @param resource Resource affected by this schema registry ACL.
         * 
         * @return builder
         * 
         */
        public Builder resource(Output<String> resource) {
            $.resource = resource;
            return this;
        }

        /**
         * @param resource Resource affected by this schema registry ACL.
         * 
         * @return builder
         * 
         */
        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param username Username affected by this schema registry ACL.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username Username affected by this schema registry ACL.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public KafkaSchemaRegistryAclArgs build() {
            if ($.clusterId == null) {
                throw new MissingRequiredPropertyException("KafkaSchemaRegistryAclArgs", "clusterId");
            }
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("KafkaSchemaRegistryAclArgs", "permission");
            }
            if ($.resource == null) {
                throw new MissingRequiredPropertyException("KafkaSchemaRegistryAclArgs", "resource");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("KafkaSchemaRegistryAclArgs", "serviceName");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("KafkaSchemaRegistryAclArgs", "username");
            }
            return $;
        }
    }

}
