// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceNetworkPrivateFloatingIpArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceNetworkPrivateFloatingIpCreateArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceNetworkPrivateGatewayArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceNetworkPrivateGatewayCreateArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceNetworkPrivateNetworkArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceNetworkPrivateNetworkCreateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceNetworkPrivateArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceNetworkPrivateArgs Empty = new InstanceNetworkPrivateArgs();

    /**
     * Existing floating IP
     * 
     */
    @Import(name="floatingIp")
    private @Nullable Output<InstanceNetworkPrivateFloatingIpArgs> floatingIp;

    /**
     * @return Existing floating IP
     * 
     */
    public Optional<Output<InstanceNetworkPrivateFloatingIpArgs>> floatingIp() {
        return Optional.ofNullable(this.floatingIp);
    }

    /**
     * Information to create a new floating IP
     * 
     */
    @Import(name="floatingIpCreate")
    private @Nullable Output<InstanceNetworkPrivateFloatingIpCreateArgs> floatingIpCreate;

    /**
     * @return Information to create a new floating IP
     * 
     */
    public Optional<Output<InstanceNetworkPrivateFloatingIpCreateArgs>> floatingIpCreate() {
        return Optional.ofNullable(this.floatingIpCreate);
    }

    /**
     * Existing gateway
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<InstanceNetworkPrivateGatewayArgs> gateway;

    /**
     * @return Existing gateway
     * 
     */
    public Optional<Output<InstanceNetworkPrivateGatewayArgs>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    /**
     * Information to create a new gateway
     * 
     */
    @Import(name="gatewayCreate")
    private @Nullable Output<InstanceNetworkPrivateGatewayCreateArgs> gatewayCreate;

    /**
     * @return Information to create a new gateway
     * 
     */
    public Optional<Output<InstanceNetworkPrivateGatewayCreateArgs>> gatewayCreate() {
        return Optional.ofNullable(this.gatewayCreate);
    }

    /**
     * Instance IP in the private network
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return Instance IP in the private network
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * Existing private network
     * 
     */
    @Import(name="network")
    private @Nullable Output<InstanceNetworkPrivateNetworkArgs> network;

    /**
     * @return Existing private network
     * 
     */
    public Optional<Output<InstanceNetworkPrivateNetworkArgs>> network() {
        return Optional.ofNullable(this.network);
    }

    /**
     * Information to create a new private network
     * 
     */
    @Import(name="networkCreate")
    private @Nullable Output<InstanceNetworkPrivateNetworkCreateArgs> networkCreate;

    /**
     * @return Information to create a new private network
     * 
     */
    public Optional<Output<InstanceNetworkPrivateNetworkCreateArgs>> networkCreate() {
        return Optional.ofNullable(this.networkCreate);
    }

    private InstanceNetworkPrivateArgs() {}

    private InstanceNetworkPrivateArgs(InstanceNetworkPrivateArgs $) {
        this.floatingIp = $.floatingIp;
        this.floatingIpCreate = $.floatingIpCreate;
        this.gateway = $.gateway;
        this.gatewayCreate = $.gatewayCreate;
        this.ip = $.ip;
        this.network = $.network;
        this.networkCreate = $.networkCreate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceNetworkPrivateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceNetworkPrivateArgs $;

        public Builder() {
            $ = new InstanceNetworkPrivateArgs();
        }

        public Builder(InstanceNetworkPrivateArgs defaults) {
            $ = new InstanceNetworkPrivateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param floatingIp Existing floating IP
         * 
         * @return builder
         * 
         */
        public Builder floatingIp(@Nullable Output<InstanceNetworkPrivateFloatingIpArgs> floatingIp) {
            $.floatingIp = floatingIp;
            return this;
        }

        /**
         * @param floatingIp Existing floating IP
         * 
         * @return builder
         * 
         */
        public Builder floatingIp(InstanceNetworkPrivateFloatingIpArgs floatingIp) {
            return floatingIp(Output.of(floatingIp));
        }

        /**
         * @param floatingIpCreate Information to create a new floating IP
         * 
         * @return builder
         * 
         */
        public Builder floatingIpCreate(@Nullable Output<InstanceNetworkPrivateFloatingIpCreateArgs> floatingIpCreate) {
            $.floatingIpCreate = floatingIpCreate;
            return this;
        }

        /**
         * @param floatingIpCreate Information to create a new floating IP
         * 
         * @return builder
         * 
         */
        public Builder floatingIpCreate(InstanceNetworkPrivateFloatingIpCreateArgs floatingIpCreate) {
            return floatingIpCreate(Output.of(floatingIpCreate));
        }

        /**
         * @param gateway Existing gateway
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<InstanceNetworkPrivateGatewayArgs> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway Existing gateway
         * 
         * @return builder
         * 
         */
        public Builder gateway(InstanceNetworkPrivateGatewayArgs gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param gatewayCreate Information to create a new gateway
         * 
         * @return builder
         * 
         */
        public Builder gatewayCreate(@Nullable Output<InstanceNetworkPrivateGatewayCreateArgs> gatewayCreate) {
            $.gatewayCreate = gatewayCreate;
            return this;
        }

        /**
         * @param gatewayCreate Information to create a new gateway
         * 
         * @return builder
         * 
         */
        public Builder gatewayCreate(InstanceNetworkPrivateGatewayCreateArgs gatewayCreate) {
            return gatewayCreate(Output.of(gatewayCreate));
        }

        /**
         * @param ip Instance IP in the private network
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip Instance IP in the private network
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param network Existing private network
         * 
         * @return builder
         * 
         */
        public Builder network(@Nullable Output<InstanceNetworkPrivateNetworkArgs> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Existing private network
         * 
         * @return builder
         * 
         */
        public Builder network(InstanceNetworkPrivateNetworkArgs network) {
            return network(Output.of(network));
        }

        /**
         * @param networkCreate Information to create a new private network
         * 
         * @return builder
         * 
         */
        public Builder networkCreate(@Nullable Output<InstanceNetworkPrivateNetworkCreateArgs> networkCreate) {
            $.networkCreate = networkCreate;
            return this;
        }

        /**
         * @param networkCreate Information to create a new private network
         * 
         * @return builder
         * 
         */
        public Builder networkCreate(InstanceNetworkPrivateNetworkCreateArgs networkCreate) {
            return networkCreate(Output.of(networkCreate));
        }

        public InstanceNetworkPrivateArgs build() {
            return $;
        }
    }

}
