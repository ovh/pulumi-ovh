// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.IpLoadBalancing.outputs;

import com.ovhcloud.pulumi.ovh.IpLoadBalancing.outputs.GetIpLoadBalancingOrderableZone;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIpLoadBalancingResult {
    private String displayName;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String ipLoadbalancing;
    private String ipv4;
    private String ipv6;
    /**
     * @return The metrics token associated with your IP load balancing This attribute is sensitive.
     * 
     */
    private String metricsToken;
    private String offer;
    /**
     * @return Available additional zone for your Load Balancer
     * 
     */
    private List<GetIpLoadBalancingOrderableZone> orderableZones;
    private String serviceName;
    private String sslConfiguration;
    private String state;
    /**
     * @return The URN of the load balancer, to be used in IAM policies
     * 
     */
    private String urn;
    private Boolean vrackEligibility;
    private String vrackName;
    private List<String> zones;

    private GetIpLoadBalancingResult() {}
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String ipLoadbalancing() {
        return this.ipLoadbalancing;
    }
    public String ipv4() {
        return this.ipv4;
    }
    public String ipv6() {
        return this.ipv6;
    }
    /**
     * @return The metrics token associated with your IP load balancing This attribute is sensitive.
     * 
     */
    public String metricsToken() {
        return this.metricsToken;
    }
    public String offer() {
        return this.offer;
    }
    /**
     * @return Available additional zone for your Load Balancer
     * 
     */
    public List<GetIpLoadBalancingOrderableZone> orderableZones() {
        return this.orderableZones;
    }
    public String serviceName() {
        return this.serviceName;
    }
    public String sslConfiguration() {
        return this.sslConfiguration;
    }
    public String state() {
        return this.state;
    }
    /**
     * @return The URN of the load balancer, to be used in IAM policies
     * 
     */
    public String urn() {
        return this.urn;
    }
    public Boolean vrackEligibility() {
        return this.vrackEligibility;
    }
    public String vrackName() {
        return this.vrackName;
    }
    public List<String> zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpLoadBalancingResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String displayName;
        private String id;
        private String ipLoadbalancing;
        private String ipv4;
        private String ipv6;
        private String metricsToken;
        private String offer;
        private List<GetIpLoadBalancingOrderableZone> orderableZones;
        private String serviceName;
        private String sslConfiguration;
        private String state;
        private String urn;
        private Boolean vrackEligibility;
        private String vrackName;
        private List<String> zones;
        public Builder() {}
        public Builder(GetIpLoadBalancingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.ipLoadbalancing = defaults.ipLoadbalancing;
    	      this.ipv4 = defaults.ipv4;
    	      this.ipv6 = defaults.ipv6;
    	      this.metricsToken = defaults.metricsToken;
    	      this.offer = defaults.offer;
    	      this.orderableZones = defaults.orderableZones;
    	      this.serviceName = defaults.serviceName;
    	      this.sslConfiguration = defaults.sslConfiguration;
    	      this.state = defaults.state;
    	      this.urn = defaults.urn;
    	      this.vrackEligibility = defaults.vrackEligibility;
    	      this.vrackName = defaults.vrackName;
    	      this.zones = defaults.zones;
        }

        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ipLoadbalancing(String ipLoadbalancing) {
            if (ipLoadbalancing == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "ipLoadbalancing");
            }
            this.ipLoadbalancing = ipLoadbalancing;
            return this;
        }
        @CustomType.Setter
        public Builder ipv4(String ipv4) {
            if (ipv4 == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "ipv4");
            }
            this.ipv4 = ipv4;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6(String ipv6) {
            if (ipv6 == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "ipv6");
            }
            this.ipv6 = ipv6;
            return this;
        }
        @CustomType.Setter
        public Builder metricsToken(String metricsToken) {
            if (metricsToken == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "metricsToken");
            }
            this.metricsToken = metricsToken;
            return this;
        }
        @CustomType.Setter
        public Builder offer(String offer) {
            if (offer == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "offer");
            }
            this.offer = offer;
            return this;
        }
        @CustomType.Setter
        public Builder orderableZones(List<GetIpLoadBalancingOrderableZone> orderableZones) {
            if (orderableZones == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "orderableZones");
            }
            this.orderableZones = orderableZones;
            return this;
        }
        public Builder orderableZones(GetIpLoadBalancingOrderableZone... orderableZones) {
            return orderableZones(List.of(orderableZones));
        }
        @CustomType.Setter
        public Builder serviceName(String serviceName) {
            if (serviceName == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "serviceName");
            }
            this.serviceName = serviceName;
            return this;
        }
        @CustomType.Setter
        public Builder sslConfiguration(String sslConfiguration) {
            if (sslConfiguration == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "sslConfiguration");
            }
            this.sslConfiguration = sslConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder urn(String urn) {
            if (urn == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "urn");
            }
            this.urn = urn;
            return this;
        }
        @CustomType.Setter
        public Builder vrackEligibility(Boolean vrackEligibility) {
            if (vrackEligibility == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "vrackEligibility");
            }
            this.vrackEligibility = vrackEligibility;
            return this;
        }
        @CustomType.Setter
        public Builder vrackName(String vrackName) {
            if (vrackName == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "vrackName");
            }
            this.vrackName = vrackName;
            return this;
        }
        @CustomType.Setter
        public Builder zones(List<String> zones) {
            if (zones == null) {
              throw new MissingRequiredPropertyException("GetIpLoadBalancingResult", "zones");
            }
            this.zones = zones;
            return this;
        }
        public Builder zones(String... zones) {
            return zones(List.of(zones));
        }
        public GetIpLoadBalancingResult build() {
            final var _resultValue = new GetIpLoadBalancingResult();
            _resultValue.displayName = displayName;
            _resultValue.id = id;
            _resultValue.ipLoadbalancing = ipLoadbalancing;
            _resultValue.ipv4 = ipv4;
            _resultValue.ipv6 = ipv6;
            _resultValue.metricsToken = metricsToken;
            _resultValue.offer = offer;
            _resultValue.orderableZones = orderableZones;
            _resultValue.serviceName = serviceName;
            _resultValue.sslConfiguration = sslConfiguration;
            _resultValue.state = state;
            _resultValue.urn = urn;
            _resultValue.vrackEligibility = vrackEligibility;
            _resultValue.vrackName = vrackName;
            _resultValue.zones = zones;
            return _resultValue;
        }
    }
}
