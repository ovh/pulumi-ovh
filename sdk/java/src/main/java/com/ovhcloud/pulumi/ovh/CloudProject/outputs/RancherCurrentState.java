// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.outputs;

import com.ovhcloud.pulumi.ovh.CloudProject.outputs.RancherCurrentStateIpRestriction;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.RancherCurrentStateNetworking;
import com.ovhcloud.pulumi.ovh.CloudProject.outputs.RancherCurrentStateUsage;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RancherCurrentState {
    /**
     * @return Bootstrap password of the managed Rancher service, returned only on creation
     * 
     */
    private @Nullable String bootstrapPassword;
    /**
     * @return List of allowed CIDR blocks for a managed Rancher service&#39;s IP restrictions. When empty, any IP is allowed
     * 
     */
    private @Nullable List<RancherCurrentStateIpRestriction> ipRestrictions;
    /**
     * @return Name of the managed Rancher service
     * 
     */
    private @Nullable String name;
    /**
     * @return Networking properties of a managed Rancher service
     * 
     */
    private @Nullable RancherCurrentStateNetworking networking;
    /**
     * @return Plan of the managed Rancher service
     * 
     */
    private @Nullable String plan;
    /**
     * @return Region of the managed Rancher service
     * 
     */
    private @Nullable String region;
    /**
     * @return URL of the managed Rancher service
     * 
     */
    private @Nullable String url;
    /**
     * @return Latest metrics regarding the usage of the managed Rancher service
     * 
     */
    private @Nullable RancherCurrentStateUsage usage;
    /**
     * @return Version of the managed Rancher service
     * 
     */
    private @Nullable String version;

    private RancherCurrentState() {}
    /**
     * @return Bootstrap password of the managed Rancher service, returned only on creation
     * 
     */
    public Optional<String> bootstrapPassword() {
        return Optional.ofNullable(this.bootstrapPassword);
    }
    /**
     * @return List of allowed CIDR blocks for a managed Rancher service&#39;s IP restrictions. When empty, any IP is allowed
     * 
     */
    public List<RancherCurrentStateIpRestriction> ipRestrictions() {
        return this.ipRestrictions == null ? List.of() : this.ipRestrictions;
    }
    /**
     * @return Name of the managed Rancher service
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Networking properties of a managed Rancher service
     * 
     */
    public Optional<RancherCurrentStateNetworking> networking() {
        return Optional.ofNullable(this.networking);
    }
    /**
     * @return Plan of the managed Rancher service
     * 
     */
    public Optional<String> plan() {
        return Optional.ofNullable(this.plan);
    }
    /**
     * @return Region of the managed Rancher service
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return URL of the managed Rancher service
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }
    /**
     * @return Latest metrics regarding the usage of the managed Rancher service
     * 
     */
    public Optional<RancherCurrentStateUsage> usage() {
        return Optional.ofNullable(this.usage);
    }
    /**
     * @return Version of the managed Rancher service
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RancherCurrentState defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String bootstrapPassword;
        private @Nullable List<RancherCurrentStateIpRestriction> ipRestrictions;
        private @Nullable String name;
        private @Nullable RancherCurrentStateNetworking networking;
        private @Nullable String plan;
        private @Nullable String region;
        private @Nullable String url;
        private @Nullable RancherCurrentStateUsage usage;
        private @Nullable String version;
        public Builder() {}
        public Builder(RancherCurrentState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootstrapPassword = defaults.bootstrapPassword;
    	      this.ipRestrictions = defaults.ipRestrictions;
    	      this.name = defaults.name;
    	      this.networking = defaults.networking;
    	      this.plan = defaults.plan;
    	      this.region = defaults.region;
    	      this.url = defaults.url;
    	      this.usage = defaults.usage;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder bootstrapPassword(@Nullable String bootstrapPassword) {

            this.bootstrapPassword = bootstrapPassword;
            return this;
        }
        @CustomType.Setter
        public Builder ipRestrictions(@Nullable List<RancherCurrentStateIpRestriction> ipRestrictions) {

            this.ipRestrictions = ipRestrictions;
            return this;
        }
        public Builder ipRestrictions(RancherCurrentStateIpRestriction... ipRestrictions) {
            return ipRestrictions(List.of(ipRestrictions));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder networking(@Nullable RancherCurrentStateNetworking networking) {

            this.networking = networking;
            return this;
        }
        @CustomType.Setter
        public Builder plan(@Nullable String plan) {

            this.plan = plan;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        @CustomType.Setter
        public Builder usage(@Nullable RancherCurrentStateUsage usage) {

            this.usage = usage;
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {

            this.version = version;
            return this;
        }
        public RancherCurrentState build() {
            final var _resultValue = new RancherCurrentState();
            _resultValue.bootstrapPassword = bootstrapPassword;
            _resultValue.ipRestrictions = ipRestrictions;
            _resultValue.name = name;
            _resultValue.networking = networking;
            _resultValue.plan = plan;
            _resultValue.region = region;
            _resultValue.url = url;
            _resultValue.usage = usage;
            _resultValue.version = version;
            return _resultValue;
        }
    }
}
