// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


public final class GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs Empty = new GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs();

    /**
     * ID of the Datacenter Configuration
     * 
     */
    @Import(name="configDatacenterId", required=true)
    private Double configDatacenterId;

    /**
     * @return ID of the Datacenter Configuration
     * 
     */
    public Double configDatacenterId() {
        return this.configDatacenterId;
    }

    /**
     * ID of the Pop Configuration
     * 
     */
    @Import(name="configPopId", required=true)
    private Double configPopId;

    /**
     * @return ID of the Pop Configuration
     * 
     */
    public Double configPopId() {
        return this.configPopId;
    }

    /**
     * Service name
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return Service name
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    private GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs() {}

    private GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs(GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs $) {
        this.configDatacenterId = $.configDatacenterId;
        this.configPopId = $.configPopId;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs $;

        public Builder() {
            $ = new GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs();
        }

        public Builder(GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs defaults) {
            $ = new GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configDatacenterId ID of the Datacenter Configuration
         * 
         * @return builder
         * 
         */
        public Builder configDatacenterId(Double configDatacenterId) {
            $.configDatacenterId = configDatacenterId;
            return this;
        }

        /**
         * @param configPopId ID of the Pop Configuration
         * 
         * @return builder
         * 
         */
        public Builder configPopId(Double configPopId) {
            $.configPopId = configPopId;
            return this;
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs build() {
            if ($.configDatacenterId == null) {
                throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs", "configDatacenterId");
            }
            if ($.configPopId == null) {
                throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs", "configPopId");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetOvhcloudConnectConfigPopDatacenterExtrasPlainArgs", "serviceName");
            }
            return $;
        }
    }

}
