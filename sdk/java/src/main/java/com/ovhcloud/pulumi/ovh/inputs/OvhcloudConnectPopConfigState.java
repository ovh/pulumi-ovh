// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OvhcloudConnectPopConfigState extends com.pulumi.resources.ResourceArgs {

    public static final OvhcloudConnectPopConfigState Empty = new OvhcloudConnectPopConfigState();

    /**
     * Customer Private AS
     * 
     */
    @Import(name="customerBgpArea")
    private @Nullable Output<Double> customerBgpArea;

    /**
     * @return Customer Private AS
     * 
     */
    public Optional<Output<Double>> customerBgpArea() {
        return Optional.ofNullable(this.customerBgpArea);
    }

    /**
     * ID of the interface
     * 
     */
    @Import(name="interfaceId")
    private @Nullable Output<Double> interfaceId;

    /**
     * @return ID of the interface
     * 
     */
    public Optional<Output<Double>> interfaceId() {
        return Optional.ofNullable(this.interfaceId);
    }

    /**
     * OVH Private AS
     * 
     */
    @Import(name="ovhBgpArea")
    private @Nullable Output<Double> ovhBgpArea;

    /**
     * @return OVH Private AS
     * 
     */
    public Optional<Output<Double>> ovhBgpArea() {
        return Optional.ofNullable(this.ovhBgpArea);
    }

    /**
     * Service name
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Service name
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * Status of the pop configuration
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the pop configuration
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * Subnet should be a /30, first IP for OVH, second IP for customer
     * 
     */
    @Import(name="subnet")
    private @Nullable Output<String> subnet;

    /**
     * @return Subnet should be a /30, first IP for OVH, second IP for customer
     * 
     */
    public Optional<Output<String>> subnet() {
        return Optional.ofNullable(this.subnet);
    }

    /**
     * Type of the pop configuration
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the pop configuration
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private OvhcloudConnectPopConfigState() {}

    private OvhcloudConnectPopConfigState(OvhcloudConnectPopConfigState $) {
        this.customerBgpArea = $.customerBgpArea;
        this.interfaceId = $.interfaceId;
        this.ovhBgpArea = $.ovhBgpArea;
        this.serviceName = $.serviceName;
        this.status = $.status;
        this.subnet = $.subnet;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OvhcloudConnectPopConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OvhcloudConnectPopConfigState $;

        public Builder() {
            $ = new OvhcloudConnectPopConfigState();
        }

        public Builder(OvhcloudConnectPopConfigState defaults) {
            $ = new OvhcloudConnectPopConfigState(Objects.requireNonNull(defaults));
        }

        /**
         * @param customerBgpArea Customer Private AS
         * 
         * @return builder
         * 
         */
        public Builder customerBgpArea(@Nullable Output<Double> customerBgpArea) {
            $.customerBgpArea = customerBgpArea;
            return this;
        }

        /**
         * @param customerBgpArea Customer Private AS
         * 
         * @return builder
         * 
         */
        public Builder customerBgpArea(Double customerBgpArea) {
            return customerBgpArea(Output.of(customerBgpArea));
        }

        /**
         * @param interfaceId ID of the interface
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(@Nullable Output<Double> interfaceId) {
            $.interfaceId = interfaceId;
            return this;
        }

        /**
         * @param interfaceId ID of the interface
         * 
         * @return builder
         * 
         */
        public Builder interfaceId(Double interfaceId) {
            return interfaceId(Output.of(interfaceId));
        }

        /**
         * @param ovhBgpArea OVH Private AS
         * 
         * @return builder
         * 
         */
        public Builder ovhBgpArea(@Nullable Output<Double> ovhBgpArea) {
            $.ovhBgpArea = ovhBgpArea;
            return this;
        }

        /**
         * @param ovhBgpArea OVH Private AS
         * 
         * @return builder
         * 
         */
        public Builder ovhBgpArea(Double ovhBgpArea) {
            return ovhBgpArea(Output.of(ovhBgpArea));
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param status Status of the pop configuration
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the pop configuration
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param subnet Subnet should be a /30, first IP for OVH, second IP for customer
         * 
         * @return builder
         * 
         */
        public Builder subnet(@Nullable Output<String> subnet) {
            $.subnet = subnet;
            return this;
        }

        /**
         * @param subnet Subnet should be a /30, first IP for OVH, second IP for customer
         * 
         * @return builder
         * 
         */
        public Builder subnet(String subnet) {
            return subnet(Output.of(subnet));
        }

        /**
         * @param type Type of the pop configuration
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the pop configuration
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public OvhcloudConnectPopConfigState build() {
            return $;
        }
    }

}
