// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject;

import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceAutoBackupArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceBootFromArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceFlavorArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceGroupArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceNetworkArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceSshKeyArgs;
import com.ovhcloud.pulumi.ovh.CloudProject.inputs.InstanceSshKeyCreateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * Create an autobackup workflow after instance start up.
     * 
     */
    @Import(name="autoBackup")
    private @Nullable Output<InstanceAutoBackupArgs> autoBackup;

    /**
     * @return Create an autobackup workflow after instance start up.
     * 
     */
    public Optional<Output<InstanceAutoBackupArgs>> autoBackup() {
        return Optional.ofNullable(this.autoBackup);
    }

    /**
     * The availability zone where the instance will be created
     * 
     */
    @Import(name="availabilityZone")
    private @Nullable Output<String> availabilityZone;

    /**
     * @return The availability zone where the instance will be created
     * 
     */
    public Optional<Output<String>> availabilityZone() {
        return Optional.ofNullable(this.availabilityZone);
    }

    /**
     * Billing period - hourly or monthly
     * 
     */
    @Import(name="billingPeriod", required=true)
    private Output<String> billingPeriod;

    /**
     * @return Billing period - hourly or monthly
     * 
     */
    public Output<String> billingPeriod() {
        return this.billingPeriod;
    }

    /**
     * Boot the instance from an image or a volume
     * 
     */
    @Import(name="bootFrom", required=true)
    private Output<InstanceBootFromArgs> bootFrom;

    /**
     * @return Boot the instance from an image or a volume
     * 
     */
    public Output<InstanceBootFromArgs> bootFrom() {
        return this.bootFrom;
    }

    /**
     * Create multiple instances
     * 
     */
    @Import(name="bulk")
    private @Nullable Output<Integer> bulk;

    /**
     * @return Create multiple instances
     * 
     */
    public Optional<Output<Integer>> bulk() {
        return Optional.ofNullable(this.bulk);
    }

    /**
     * Flavor information
     * 
     */
    @Import(name="flavor", required=true)
    private Output<InstanceFlavorArgs> flavor;

    /**
     * @return Flavor information
     * 
     */
    public Output<InstanceFlavorArgs> flavor() {
        return this.flavor;
    }

    /**
     * Start instance in group
     * 
     */
    @Import(name="group")
    private @Nullable Output<InstanceGroupArgs> group;

    /**
     * @return Start instance in group
     * 
     */
    public Optional<Output<InstanceGroupArgs>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * Instance name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Instance name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Create network interfaces
     * 
     */
    @Import(name="network", required=true)
    private Output<InstanceNetworkArgs> network;

    /**
     * @return Create network interfaces
     * 
     */
    public Output<InstanceNetworkArgs> network() {
        return this.network;
    }

    /**
     * Instance region
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return Instance region
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    /**
     * Existing SSH Keypair
     * 
     */
    @Import(name="sshKey")
    private @Nullable Output<InstanceSshKeyArgs> sshKey;

    /**
     * @return Existing SSH Keypair
     * 
     */
    public Optional<Output<InstanceSshKeyArgs>> sshKey() {
        return Optional.ofNullable(this.sshKey);
    }

    /**
     * Add existing SSH Key pair into your Public Cloud project and link it to the instance
     * 
     */
    @Import(name="sshKeyCreate")
    private @Nullable Output<InstanceSshKeyCreateArgs> sshKeyCreate;

    /**
     * @return Add existing SSH Key pair into your Public Cloud project and link it to the instance
     * 
     */
    public Optional<Output<InstanceSshKeyCreateArgs>> sshKeyCreate() {
        return Optional.ofNullable(this.sshKeyCreate);
    }

    /**
     * Configuration information or scripts to use upon launch
     * 
     */
    @Import(name="userData")
    private @Nullable Output<String> userData;

    /**
     * @return Configuration information or scripts to use upon launch
     * 
     */
    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    private InstanceArgs() {}

    private InstanceArgs(InstanceArgs $) {
        this.autoBackup = $.autoBackup;
        this.availabilityZone = $.availabilityZone;
        this.billingPeriod = $.billingPeriod;
        this.bootFrom = $.bootFrom;
        this.bulk = $.bulk;
        this.flavor = $.flavor;
        this.group = $.group;
        this.name = $.name;
        this.network = $.network;
        this.region = $.region;
        this.serviceName = $.serviceName;
        this.sshKey = $.sshKey;
        this.sshKeyCreate = $.sshKeyCreate;
        this.userData = $.userData;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceArgs $;

        public Builder() {
            $ = new InstanceArgs();
        }

        public Builder(InstanceArgs defaults) {
            $ = new InstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoBackup Create an autobackup workflow after instance start up.
         * 
         * @return builder
         * 
         */
        public Builder autoBackup(@Nullable Output<InstanceAutoBackupArgs> autoBackup) {
            $.autoBackup = autoBackup;
            return this;
        }

        /**
         * @param autoBackup Create an autobackup workflow after instance start up.
         * 
         * @return builder
         * 
         */
        public Builder autoBackup(InstanceAutoBackupArgs autoBackup) {
            return autoBackup(Output.of(autoBackup));
        }

        /**
         * @param availabilityZone The availability zone where the instance will be created
         * 
         * @return builder
         * 
         */
        public Builder availabilityZone(@Nullable Output<String> availabilityZone) {
            $.availabilityZone = availabilityZone;
            return this;
        }

        /**
         * @param availabilityZone The availability zone where the instance will be created
         * 
         * @return builder
         * 
         */
        public Builder availabilityZone(String availabilityZone) {
            return availabilityZone(Output.of(availabilityZone));
        }

        /**
         * @param billingPeriod Billing period - hourly or monthly
         * 
         * @return builder
         * 
         */
        public Builder billingPeriod(Output<String> billingPeriod) {
            $.billingPeriod = billingPeriod;
            return this;
        }

        /**
         * @param billingPeriod Billing period - hourly or monthly
         * 
         * @return builder
         * 
         */
        public Builder billingPeriod(String billingPeriod) {
            return billingPeriod(Output.of(billingPeriod));
        }

        /**
         * @param bootFrom Boot the instance from an image or a volume
         * 
         * @return builder
         * 
         */
        public Builder bootFrom(Output<InstanceBootFromArgs> bootFrom) {
            $.bootFrom = bootFrom;
            return this;
        }

        /**
         * @param bootFrom Boot the instance from an image or a volume
         * 
         * @return builder
         * 
         */
        public Builder bootFrom(InstanceBootFromArgs bootFrom) {
            return bootFrom(Output.of(bootFrom));
        }

        /**
         * @param bulk Create multiple instances
         * 
         * @return builder
         * 
         */
        public Builder bulk(@Nullable Output<Integer> bulk) {
            $.bulk = bulk;
            return this;
        }

        /**
         * @param bulk Create multiple instances
         * 
         * @return builder
         * 
         */
        public Builder bulk(Integer bulk) {
            return bulk(Output.of(bulk));
        }

        /**
         * @param flavor Flavor information
         * 
         * @return builder
         * 
         */
        public Builder flavor(Output<InstanceFlavorArgs> flavor) {
            $.flavor = flavor;
            return this;
        }

        /**
         * @param flavor Flavor information
         * 
         * @return builder
         * 
         */
        public Builder flavor(InstanceFlavorArgs flavor) {
            return flavor(Output.of(flavor));
        }

        /**
         * @param group Start instance in group
         * 
         * @return builder
         * 
         */
        public Builder group(@Nullable Output<InstanceGroupArgs> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group Start instance in group
         * 
         * @return builder
         * 
         */
        public Builder group(InstanceGroupArgs group) {
            return group(Output.of(group));
        }

        /**
         * @param name Instance name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Instance name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param network Create network interfaces
         * 
         * @return builder
         * 
         */
        public Builder network(Output<InstanceNetworkArgs> network) {
            $.network = network;
            return this;
        }

        /**
         * @param network Create network interfaces
         * 
         * @return builder
         * 
         */
        public Builder network(InstanceNetworkArgs network) {
            return network(Output.of(network));
        }

        /**
         * @param region Instance region
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Instance region
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param sshKey Existing SSH Keypair
         * 
         * @return builder
         * 
         */
        public Builder sshKey(@Nullable Output<InstanceSshKeyArgs> sshKey) {
            $.sshKey = sshKey;
            return this;
        }

        /**
         * @param sshKey Existing SSH Keypair
         * 
         * @return builder
         * 
         */
        public Builder sshKey(InstanceSshKeyArgs sshKey) {
            return sshKey(Output.of(sshKey));
        }

        /**
         * @param sshKeyCreate Add existing SSH Key pair into your Public Cloud project and link it to the instance
         * 
         * @return builder
         * 
         */
        public Builder sshKeyCreate(@Nullable Output<InstanceSshKeyCreateArgs> sshKeyCreate) {
            $.sshKeyCreate = sshKeyCreate;
            return this;
        }

        /**
         * @param sshKeyCreate Add existing SSH Key pair into your Public Cloud project and link it to the instance
         * 
         * @return builder
         * 
         */
        public Builder sshKeyCreate(InstanceSshKeyCreateArgs sshKeyCreate) {
            return sshKeyCreate(Output.of(sshKeyCreate));
        }

        /**
         * @param userData Configuration information or scripts to use upon launch
         * 
         * @return builder
         * 
         */
        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        /**
         * @param userData Configuration information or scripts to use upon launch
         * 
         * @return builder
         * 
         */
        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        public InstanceArgs build() {
            if ($.billingPeriod == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "billingPeriod");
            }
            if ($.bootFrom == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "bootFrom");
            }
            if ($.flavor == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "flavor");
            }
            if ($.network == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "network");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "region");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("InstanceArgs", "serviceName");
            }
            return $;
        }
    }

}
