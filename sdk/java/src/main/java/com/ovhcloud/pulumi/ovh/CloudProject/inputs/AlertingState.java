// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.ovhcloud.pulumi.ovh.CloudProject.inputs.AlertingFormattedMonthlyThresholdArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertingState extends com.pulumi.resources.ResourceArgs {

    public static final AlertingState Empty = new AlertingState();

    /**
     * Alerting creation date
     * 
     */
    @Import(name="creationDate")
    private @Nullable Output<String> creationDate;

    /**
     * @return Alerting creation date
     * 
     */
    public Optional<Output<String>> creationDate() {
        return Optional.ofNullable(this.creationDate);
    }

    /**
     * Delay between two alerts in seconds
     * 
     */
    @Import(name="delay")
    private @Nullable Output<Double> delay;

    /**
     * @return Delay between two alerts in seconds
     * 
     */
    public Optional<Output<Double>> delay() {
        return Optional.ofNullable(this.delay);
    }

    /**
     * Email to contact
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return Email to contact
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * Formatted monthly threshold for this alerting
     * 
     */
    @Import(name="formattedMonthlyThreshold")
    private @Nullable Output<AlertingFormattedMonthlyThresholdArgs> formattedMonthlyThreshold;

    /**
     * @return Formatted monthly threshold for this alerting
     * 
     */
    public Optional<Output<AlertingFormattedMonthlyThresholdArgs>> formattedMonthlyThreshold() {
        return Optional.ofNullable(this.formattedMonthlyThreshold);
    }

    /**
     * Monthly threshold for this alerting in currency
     * 
     */
    @Import(name="monthlyThreshold")
    private @Nullable Output<Double> monthlyThreshold;

    /**
     * @return Monthly threshold for this alerting in currency
     * 
     */
    public Optional<Output<Double>> monthlyThreshold() {
        return Optional.ofNullable(this.monthlyThreshold);
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    private AlertingState() {}

    private AlertingState(AlertingState $) {
        this.creationDate = $.creationDate;
        this.delay = $.delay;
        this.email = $.email;
        this.formattedMonthlyThreshold = $.formattedMonthlyThreshold;
        this.monthlyThreshold = $.monthlyThreshold;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertingState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertingState $;

        public Builder() {
            $ = new AlertingState();
        }

        public Builder(AlertingState defaults) {
            $ = new AlertingState(Objects.requireNonNull(defaults));
        }

        /**
         * @param creationDate Alerting creation date
         * 
         * @return builder
         * 
         */
        public Builder creationDate(@Nullable Output<String> creationDate) {
            $.creationDate = creationDate;
            return this;
        }

        /**
         * @param creationDate Alerting creation date
         * 
         * @return builder
         * 
         */
        public Builder creationDate(String creationDate) {
            return creationDate(Output.of(creationDate));
        }

        /**
         * @param delay Delay between two alerts in seconds
         * 
         * @return builder
         * 
         */
        public Builder delay(@Nullable Output<Double> delay) {
            $.delay = delay;
            return this;
        }

        /**
         * @param delay Delay between two alerts in seconds
         * 
         * @return builder
         * 
         */
        public Builder delay(Double delay) {
            return delay(Output.of(delay));
        }

        /**
         * @param email Email to contact
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email Email to contact
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param formattedMonthlyThreshold Formatted monthly threshold for this alerting
         * 
         * @return builder
         * 
         */
        public Builder formattedMonthlyThreshold(@Nullable Output<AlertingFormattedMonthlyThresholdArgs> formattedMonthlyThreshold) {
            $.formattedMonthlyThreshold = formattedMonthlyThreshold;
            return this;
        }

        /**
         * @param formattedMonthlyThreshold Formatted monthly threshold for this alerting
         * 
         * @return builder
         * 
         */
        public Builder formattedMonthlyThreshold(AlertingFormattedMonthlyThresholdArgs formattedMonthlyThreshold) {
            return formattedMonthlyThreshold(Output.of(formattedMonthlyThreshold));
        }

        /**
         * @param monthlyThreshold Monthly threshold for this alerting in currency
         * 
         * @return builder
         * 
         */
        public Builder monthlyThreshold(@Nullable Output<Double> monthlyThreshold) {
            $.monthlyThreshold = monthlyThreshold;
            return this;
        }

        /**
         * @param monthlyThreshold Monthly threshold for this alerting in currency
         * 
         * @return builder
         * 
         */
        public Builder monthlyThreshold(Double monthlyThreshold) {
            return monthlyThreshold(Output.of(monthlyThreshold));
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public AlertingState build() {
            return $;
        }
    }

}
