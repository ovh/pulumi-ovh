// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.ovhcloud.pulumi.ovh.CloudProject.inputs;

import com.ovhcloud.pulumi.ovh.CloudProject.inputs.GetKubeNodePoolTemplate;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKubeNodePoolPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKubeNodePoolPlainArgs Empty = new GetKubeNodePoolPlainArgs();

    /**
     * The id of the managed kubernetes cluster.
     * 
     */
    @Import(name="kubeId", required=true)
    private String kubeId;

    /**
     * @return The id of the managed kubernetes cluster.
     * 
     */
    public String kubeId() {
        return this.kubeId;
    }

    /**
     * The name of the node pool.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the node pool.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    @Import(name="serviceName", required=true)
    private String serviceName;

    /**
     * @return The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    @Import(name="template")
    private @Nullable GetKubeNodePoolTemplate template;

    public Optional<GetKubeNodePoolTemplate> template() {
        return Optional.ofNullable(this.template);
    }

    private GetKubeNodePoolPlainArgs() {}

    private GetKubeNodePoolPlainArgs(GetKubeNodePoolPlainArgs $) {
        this.kubeId = $.kubeId;
        this.name = $.name;
        this.serviceName = $.serviceName;
        this.template = $.template;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKubeNodePoolPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKubeNodePoolPlainArgs $;

        public Builder() {
            $ = new GetKubeNodePoolPlainArgs();
        }

        public Builder(GetKubeNodePoolPlainArgs defaults) {
            $ = new GetKubeNodePoolPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param kubeId The id of the managed kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder kubeId(String kubeId) {
            $.kubeId = kubeId;
            return this;
        }

        /**
         * @param name The name of the node pool.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param serviceName The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        public Builder template(@Nullable GetKubeNodePoolTemplate template) {
            $.template = template;
            return this;
        }

        public GetKubeNodePoolPlainArgs build() {
            if ($.kubeId == null) {
                throw new MissingRequiredPropertyException("GetKubeNodePoolPlainArgs", "kubeId");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetKubeNodePoolPlainArgs", "name");
            }
            if ($.serviceName == null) {
                throw new MissingRequiredPropertyException("GetKubeNodePoolPlainArgs", "serviceName");
            }
            return $;
        }
    }

}
