# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetDedicatedServerOrderableBandwidthVrackResult',
    'AwaitableGetDedicatedServerOrderableBandwidthVrackResult',
    'get_dedicated_server_orderable_bandwidth_vrack',
    'get_dedicated_server_orderable_bandwidth_vrack_output',
]

@pulumi.output_type
class GetDedicatedServerOrderableBandwidthVrackResult:
    """
    A collection of values returned by getDedicatedServerOrderableBandwidthVrack.
    """
    def __init__(__self__, id=None, orderable=None, service_name=None, vracks=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if orderable and not isinstance(orderable, bool):
            raise TypeError("Expected argument 'orderable' to be a bool")
        pulumi.set(__self__, "orderable", orderable)
        if service_name and not isinstance(service_name, str):
            raise TypeError("Expected argument 'service_name' to be a str")
        pulumi.set(__self__, "service_name", service_name)
        if vracks and not isinstance(vracks, list):
            raise TypeError("Expected argument 'vracks' to be a list")
        pulumi.set(__self__, "vracks", vracks)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def orderable(self) -> _builtins.bool:
        """
        Wether or not additional bandwidth is orderable.
        """
        return pulumi.get(self, "orderable")

    @_builtins.property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> _builtins.str:
        return pulumi.get(self, "service_name")

    @_builtins.property
    @pulumi.getter
    def vracks(self) -> Sequence[_builtins.int]:
        """
        The list of orderable vrack bandwidth in mbps.
        """
        return pulumi.get(self, "vracks")


class AwaitableGetDedicatedServerOrderableBandwidthVrackResult(GetDedicatedServerOrderableBandwidthVrackResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDedicatedServerOrderableBandwidthVrackResult(
            id=self.id,
            orderable=self.orderable,
            service_name=self.service_name,
            vracks=self.vracks)


def get_dedicated_server_orderable_bandwidth_vrack(service_name: Optional[_builtins.str] = None,
                                                   opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDedicatedServerOrderableBandwidthVrackResult:
    """
    Use this data source to get the list of orderable additional vrack bandwidth for a dedicated server associated with your OVHcloud Account.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    bp = ovh.get_dedicated_server_orderable_bandwidth_vrack(service_name="myserver")
    ```


    :param _builtins.str service_name: The internal name of your dedicated server.
    """
    __args__ = dict()
    __args__['serviceName'] = service_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ovh:index/getDedicatedServerOrderableBandwidthVrack:getDedicatedServerOrderableBandwidthVrack', __args__, opts=opts, typ=GetDedicatedServerOrderableBandwidthVrackResult).value

    return AwaitableGetDedicatedServerOrderableBandwidthVrackResult(
        id=pulumi.get(__ret__, 'id'),
        orderable=pulumi.get(__ret__, 'orderable'),
        service_name=pulumi.get(__ret__, 'service_name'),
        vracks=pulumi.get(__ret__, 'vracks'))
def get_dedicated_server_orderable_bandwidth_vrack_output(service_name: Optional[pulumi.Input[_builtins.str]] = None,
                                                          opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetDedicatedServerOrderableBandwidthVrackResult]:
    """
    Use this data source to get the list of orderable additional vrack bandwidth for a dedicated server associated with your OVHcloud Account.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    bp = ovh.get_dedicated_server_orderable_bandwidth_vrack(service_name="myserver")
    ```


    :param _builtins.str service_name: The internal name of your dedicated server.
    """
    __args__ = dict()
    __args__['serviceName'] = service_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ovh:index/getDedicatedServerOrderableBandwidthVrack:getDedicatedServerOrderableBandwidthVrack', __args__, opts=opts, typ=GetDedicatedServerOrderableBandwidthVrackResult)
    return __ret__.apply(lambda __response__: GetDedicatedServerOrderableBandwidthVrackResult(
        id=pulumi.get(__response__, 'id'),
        orderable=pulumi.get(__response__, 'orderable'),
        service_name=pulumi.get(__response__, 'service_name'),
        vracks=pulumi.get(__response__, 'vracks')))
