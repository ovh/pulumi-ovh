# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetOvhcloudConnectDatacentersResult',
    'AwaitableGetOvhcloudConnectDatacentersResult',
    'get_ovhcloud_connect_datacenters',
    'get_ovhcloud_connect_datacenters_output',
]

@pulumi.output_type
class GetOvhcloudConnectDatacentersResult:
    """
    A collection of values returned by getOvhcloudConnectDatacenters.
    """
    def __init__(__self__, datacenters=None, id=None, service_name=None):
        if datacenters and not isinstance(datacenters, list):
            raise TypeError("Expected argument 'datacenters' to be a list")
        pulumi.set(__self__, "datacenters", datacenters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if service_name and not isinstance(service_name, str):
            raise TypeError("Expected argument 'service_name' to be a str")
        pulumi.set(__self__, "service_name", service_name)

    @property
    @pulumi.getter
    def datacenters(self) -> Sequence['outputs.GetOvhcloudConnectDatacentersDatacenterResult']:
        return pulumi.get(self, "datacenters")

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> builtins.str:
        """
        Service name
        """
        return pulumi.get(self, "service_name")


class AwaitableGetOvhcloudConnectDatacentersResult(GetOvhcloudConnectDatacentersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOvhcloudConnectDatacentersResult(
            datacenters=self.datacenters,
            id=self.id,
            service_name=self.service_name)


def get_ovhcloud_connect_datacenters(service_name: Optional[builtins.str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOvhcloudConnectDatacentersResult:
    """
    Use this data source to retrieve information about Datacenters for an Ovhcloud Connect product.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    dcs = ovh.get_ovhcloud_connect_datacenters(service_name="XXX")
    ```


    :param builtins.str service_name: Service name
    """
    __args__ = dict()
    __args__['serviceName'] = service_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ovh:index/getOvhcloudConnectDatacenters:getOvhcloudConnectDatacenters', __args__, opts=opts, typ=GetOvhcloudConnectDatacentersResult).value

    return AwaitableGetOvhcloudConnectDatacentersResult(
        datacenters=pulumi.get(__ret__, 'datacenters'),
        id=pulumi.get(__ret__, 'id'),
        service_name=pulumi.get(__ret__, 'service_name'))
def get_ovhcloud_connect_datacenters_output(service_name: Optional[pulumi.Input[builtins.str]] = None,
                                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOvhcloudConnectDatacentersResult]:
    """
    Use this data source to retrieve information about Datacenters for an Ovhcloud Connect product.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    dcs = ovh.get_ovhcloud_connect_datacenters(service_name="XXX")
    ```


    :param builtins.str service_name: Service name
    """
    __args__ = dict()
    __args__['serviceName'] = service_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ovh:index/getOvhcloudConnectDatacenters:getOvhcloudConnectDatacenters', __args__, opts=opts, typ=GetOvhcloudConnectDatacentersResult)
    return __ret__.apply(lambda __response__: GetOvhcloudConnectDatacentersResult(
        datacenters=pulumi.get(__response__, 'datacenters'),
        id=pulumi.get(__response__, 'id'),
        service_name=pulumi.get(__response__, 'service_name')))
