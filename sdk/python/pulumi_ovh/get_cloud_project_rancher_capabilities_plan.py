# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetCloudProjectRancherCapabilitiesPlanResult',
    'AwaitableGetCloudProjectRancherCapabilitiesPlanResult',
    'get_cloud_project_rancher_capabilities_plan',
    'get_cloud_project_rancher_capabilities_plan_output',
]

@pulumi.output_type
class GetCloudProjectRancherCapabilitiesPlanResult:
    """
    A collection of values returned by getCloudProjectRancherCapabilitiesPlan.
    """
    def __init__(__self__, id=None, plans=None, project_id=None, rancher_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if plans and not isinstance(plans, list):
            raise TypeError("Expected argument 'plans' to be a list")
        pulumi.set(__self__, "plans", plans)
        if project_id and not isinstance(project_id, str):
            raise TypeError("Expected argument 'project_id' to be a str")
        pulumi.set(__self__, "project_id", project_id)
        if rancher_id and not isinstance(rancher_id, str):
            raise TypeError("Expected argument 'rancher_id' to be a str")
        pulumi.set(__self__, "rancher_id", rancher_id)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def plans(self) -> Sequence['outputs.GetCloudProjectRancherCapabilitiesPlanPlanResult']:
        return pulumi.get(self, "plans")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> builtins.str:
        """
        Project ID
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="rancherId")
    def rancher_id(self) -> builtins.str:
        """
        Rancher ID
        """
        return pulumi.get(self, "rancher_id")


class AwaitableGetCloudProjectRancherCapabilitiesPlanResult(GetCloudProjectRancherCapabilitiesPlanResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudProjectRancherCapabilitiesPlanResult(
            id=self.id,
            plans=self.plans,
            project_id=self.project_id,
            rancher_id=self.rancher_id)


def get_cloud_project_rancher_capabilities_plan(project_id: Optional[builtins.str] = None,
                                                rancher_id: Optional[builtins.str] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudProjectRancherCapabilitiesPlanResult:
    """
    List available and current plans for the given managed Rancher service

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    plans = ovh.get_cloud_project_rancher_capabilities_plan(project_id="XXX",
        rancher_id="YYY")
    ```


    :param builtins.str project_id: Project ID
    :param builtins.str rancher_id: Rancher ID
    """
    __args__ = dict()
    __args__['projectId'] = project_id
    __args__['rancherId'] = rancher_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ovh:index/getCloudProjectRancherCapabilitiesPlan:getCloudProjectRancherCapabilitiesPlan', __args__, opts=opts, typ=GetCloudProjectRancherCapabilitiesPlanResult).value

    return AwaitableGetCloudProjectRancherCapabilitiesPlanResult(
        id=pulumi.get(__ret__, 'id'),
        plans=pulumi.get(__ret__, 'plans'),
        project_id=pulumi.get(__ret__, 'project_id'),
        rancher_id=pulumi.get(__ret__, 'rancher_id'))
def get_cloud_project_rancher_capabilities_plan_output(project_id: Optional[pulumi.Input[builtins.str]] = None,
                                                       rancher_id: Optional[pulumi.Input[builtins.str]] = None,
                                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCloudProjectRancherCapabilitiesPlanResult]:
    """
    List available and current plans for the given managed Rancher service

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    plans = ovh.get_cloud_project_rancher_capabilities_plan(project_id="XXX",
        rancher_id="YYY")
    ```


    :param builtins.str project_id: Project ID
    :param builtins.str rancher_id: Rancher ID
    """
    __args__ = dict()
    __args__['projectId'] = project_id
    __args__['rancherId'] = rancher_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ovh:index/getCloudProjectRancherCapabilitiesPlan:getCloudProjectRancherCapabilitiesPlan', __args__, opts=opts, typ=GetCloudProjectRancherCapabilitiesPlanResult)
    return __ret__.apply(lambda __response__: GetCloudProjectRancherCapabilitiesPlanResult(
        id=pulumi.get(__response__, 'id'),
        plans=pulumi.get(__response__, 'plans'),
        project_id=pulumi.get(__response__, 'project_id'),
        rancher_id=pulumi.get(__response__, 'rancher_id')))
