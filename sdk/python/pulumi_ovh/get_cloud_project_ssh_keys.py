# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins
import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetCloudProjectSshKeysResult',
    'AwaitableGetCloudProjectSshKeysResult',
    'get_cloud_project_ssh_keys',
    'get_cloud_project_ssh_keys_output',
]

@pulumi.output_type
class GetCloudProjectSshKeysResult:
    """
    A collection of values returned by getCloudProjectSshKeys.
    """
    def __init__(__self__, id=None, region=None, service_name=None, ssh_keys=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if region and not isinstance(region, str):
            raise TypeError("Expected argument 'region' to be a str")
        pulumi.set(__self__, "region", region)
        if service_name and not isinstance(service_name, str):
            raise TypeError("Expected argument 'service_name' to be a str")
        pulumi.set(__self__, "service_name", service_name)
        if ssh_keys and not isinstance(ssh_keys, list):
            raise TypeError("Expected argument 'ssh_keys' to be a list")
        pulumi.set(__self__, "ssh_keys", ssh_keys)

    @property
    @pulumi.getter
    def id(self) -> builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def region(self) -> builtins.str:
        """
        Region
        """
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> builtins.str:
        """
        Service name
        """
        return pulumi.get(self, "service_name")

    @property
    @pulumi.getter(name="sshKeys")
    def ssh_keys(self) -> Sequence['outputs.GetCloudProjectSshKeysSshKeyResult']:
        return pulumi.get(self, "ssh_keys")


class AwaitableGetCloudProjectSshKeysResult(GetCloudProjectSshKeysResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudProjectSshKeysResult(
            id=self.id,
            region=self.region,
            service_name=self.service_name,
            ssh_keys=self.ssh_keys)


def get_cloud_project_ssh_keys(region: Optional[builtins.str] = None,
                               service_name: Optional[builtins.str] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudProjectSshKeysResult:
    """
    Get SSH keys in a Public Cloud project.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    keys = ovh.get_cloud_project_ssh_keys(service_name="XXX")
    ```


    :param builtins.str region: Region
    :param builtins.str service_name: Service name
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['serviceName'] = service_name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('ovh:index/getCloudProjectSshKeys:getCloudProjectSshKeys', __args__, opts=opts, typ=GetCloudProjectSshKeysResult).value

    return AwaitableGetCloudProjectSshKeysResult(
        id=pulumi.get(__ret__, 'id'),
        region=pulumi.get(__ret__, 'region'),
        service_name=pulumi.get(__ret__, 'service_name'),
        ssh_keys=pulumi.get(__ret__, 'ssh_keys'))
def get_cloud_project_ssh_keys_output(region: Optional[pulumi.Input[Optional[builtins.str]]] = None,
                                      service_name: Optional[pulumi.Input[builtins.str]] = None,
                                      opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetCloudProjectSshKeysResult]:
    """
    Get SSH keys in a Public Cloud project.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_ovh as ovh

    keys = ovh.get_cloud_project_ssh_keys(service_name="XXX")
    ```


    :param builtins.str region: Region
    :param builtins.str service_name: Service name
    """
    __args__ = dict()
    __args__['region'] = region
    __args__['serviceName'] = service_name
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('ovh:index/getCloudProjectSshKeys:getCloudProjectSshKeys', __args__, opts=opts, typ=GetCloudProjectSshKeysResult)
    return __ret__.apply(lambda __response__: GetCloudProjectSshKeysResult(
        id=pulumi.get(__response__, 'id'),
        region=pulumi.get(__response__, 'region'),
        service_name=pulumi.get(__response__, 'service_name'),
        ssh_keys=pulumi.get(__response__, 'ssh_keys')))
