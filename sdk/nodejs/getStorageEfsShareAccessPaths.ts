// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * List access paths for a share belonging to an EFS service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const efs = ovh.getStorageEfs({
 *     serviceName: "XXX",
 * });
 * const accessPaths = efs.then(efs => ovh.getStorageEfsShareAccessPaths({
 *     serviceName: efs.serviceName,
 *     shareId: "XXX",
 * }));
 * ```
 */
export function getStorageEfsShareAccessPaths(args: GetStorageEfsShareAccessPathsArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageEfsShareAccessPathsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getStorageEfsShareAccessPaths:getStorageEfsShareAccessPaths", {
        "serviceName": args.serviceName,
        "shareId": args.shareId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStorageEfsShareAccessPaths.
 */
export interface GetStorageEfsShareAccessPathsArgs {
    /**
     * Service name
     */
    serviceName: string;
    /**
     * Share ID
     */
    shareId: string;
}

/**
 * A collection of values returned by getStorageEfsShareAccessPaths.
 */
export interface GetStorageEfsShareAccessPathsResult {
    readonly accessPaths: outputs.GetStorageEfsShareAccessPathsAccessPath[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Service name
     */
    readonly serviceName: string;
    /**
     * Share ID
     */
    readonly shareId: string;
}
/**
 * List access paths for a share belonging to an EFS service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const efs = ovh.getStorageEfs({
 *     serviceName: "XXX",
 * });
 * const accessPaths = efs.then(efs => ovh.getStorageEfsShareAccessPaths({
 *     serviceName: efs.serviceName,
 *     shareId: "XXX",
 * }));
 * ```
 */
export function getStorageEfsShareAccessPathsOutput(args: GetStorageEfsShareAccessPathsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStorageEfsShareAccessPathsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ovh:index/getStorageEfsShareAccessPaths:getStorageEfsShareAccessPaths", {
        "serviceName": args.serviceName,
        "shareId": args.shareId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStorageEfsShareAccessPaths.
 */
export interface GetStorageEfsShareAccessPathsOutputArgs {
    /**
     * Service name
     */
    serviceName: pulumi.Input<string>;
    /**
     * Share ID
     */
    shareId: pulumi.Input<string>;
}
