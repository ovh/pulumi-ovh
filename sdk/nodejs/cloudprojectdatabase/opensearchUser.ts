// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class OpensearchUser extends pulumi.CustomResource {
    /**
     * Get an existing OpensearchUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpensearchUserState, opts?: pulumi.CustomResourceOptions): OpensearchUser {
        return new OpensearchUser(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:CloudProjectDatabase/opensearchUser:OpensearchUser';

    /**
     * Returns true if the given object is an instance of OpensearchUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpensearchUser {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpensearchUser.__pulumiType;
    }

    /**
     * Acls of the user
     */
    public readonly acls!: pulumi.Output<outputs.CloudProjectDatabase.OpensearchUserAcl[] | undefined>;
    /**
     * Id of the database cluster
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Date of the creation of the user
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Name of the user
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Password of the user
     */
    public /*out*/ readonly password!: pulumi.Output<string>;
    /**
     * Arbitrary string to change to trigger a password update
     */
    public readonly passwordReset!: pulumi.Output<string | undefined>;
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Current status of the user
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a OpensearchUser resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpensearchUserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpensearchUserArgs | OpensearchUserState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpensearchUserState | undefined;
            resourceInputs["acls"] = state ? state.acls : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["passwordReset"] = state ? state.passwordReset : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as OpensearchUserArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["acls"] = args ? args.acls : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passwordReset"] = args ? args.passwordReset : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["password"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OpensearchUser.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OpensearchUser resources.
 */
export interface OpensearchUserState {
    /**
     * Acls of the user
     */
    acls?: pulumi.Input<pulumi.Input<inputs.CloudProjectDatabase.OpensearchUserAcl>[]>;
    /**
     * Id of the database cluster
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Date of the creation of the user
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Name of the user
     */
    name?: pulumi.Input<string>;
    /**
     * Password of the user
     */
    password?: pulumi.Input<string>;
    /**
     * Arbitrary string to change to trigger a password update
     */
    passwordReset?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
    /**
     * Current status of the user
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OpensearchUser resource.
 */
export interface OpensearchUserArgs {
    /**
     * Acls of the user
     */
    acls?: pulumi.Input<pulumi.Input<inputs.CloudProjectDatabase.OpensearchUserAcl>[]>;
    /**
     * Id of the database cluster
     */
    clusterId: pulumi.Input<string>;
    /**
     * Name of the user
     */
    name?: pulumi.Input<string>;
    /**
     * Arbitrary string to change to trigger a password update
     */
    passwordReset?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
