// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export namespace Cloud {
}

export namespace CloudProject {
    export interface AlertingFormattedMonthlyThreshold {
        /**
         * Currency of the monthly threshold
         */
        currencyCode?: pulumi.Input<string>;
        /**
         * Text representation of the monthly threshold
         */
        text?: pulumi.Input<string>;
        /**
         * Value of the monthly threshold
         */
        value?: pulumi.Input<number>;
    }

    export interface ContainerRegistryPlan {
        /**
         * Plan code from the catalog
         */
        code?: pulumi.Input<string>;
        /**
         * Plan creation date
         */
        createdAt?: pulumi.Input<string>;
        /**
         * Features of the plan
         */
        features?: pulumi.Input<pulumi.Input<inputs.CloudProject.ContainerRegistryPlanFeature>[]>;
        /**
         * Plan ID
         */
        id?: pulumi.Input<string>;
        /**
         * Registry name
         */
        name?: pulumi.Input<string>;
        /**
         * Container registry limits
         */
        registryLimits?: pulumi.Input<pulumi.Input<inputs.CloudProject.ContainerRegistryPlanRegistryLimit>[]>;
        /**
         * Registry last update date
         */
        updatedAt?: pulumi.Input<string>;
    }

    export interface ContainerRegistryPlanFeature {
        /**
         * Vulnerability scanning
         */
        vulnerability?: pulumi.Input<boolean>;
    }

    export interface ContainerRegistryPlanRegistryLimit {
        /**
         * Docker image storage limits in bytes
         */
        imageStorage?: pulumi.Input<number>;
        /**
         * Parallel requests on Docker image API (/v2 Docker registry API)
         */
        parallelRequest?: pulumi.Input<number>;
    }

    export interface DatabaseEndpoint {
        /**
         * Type of component the URI relates to.
         */
        component?: pulumi.Input<string>;
        /**
         * Domain of the cluster.
         */
        domain?: pulumi.Input<string>;
        /**
         * Path of the endpoint.
         */
        path?: pulumi.Input<string>;
        /**
         * Connection port for the endpoint.
         */
        port?: pulumi.Input<number>;
        /**
         * Scheme used to generate the URI.
         */
        scheme?: pulumi.Input<string>;
        /**
         * Defines whether the endpoint uses SSL.
         */
        ssl?: pulumi.Input<boolean>;
        /**
         * SSL mode used to connect to the service if the SSL is enabled.
         */
        sslMode?: pulumi.Input<string>;
        /**
         * URI of the endpoint.
         */
        uri?: pulumi.Input<string>;
    }

    export interface DatabaseIpRestriction {
        /**
         * Description of the IP restriction
         */
        description?: pulumi.Input<string>;
        /**
         * Authorized IP
         */
        ip?: pulumi.Input<string>;
        /**
         * Current status of the cluster.
         */
        status?: pulumi.Input<string>;
    }

    export interface DatabaseNode {
        /**
         * Private network id in which the node should be deployed. It's the regional openstackId of the private network
         */
        networkId?: pulumi.Input<string>;
        /**
         * Public cloud region in which the node should be deployed. Ex: "GRA'.
         */
        region: pulumi.Input<string>;
        /**
         * Private subnet ID in which the node is.
         */
        subnetId?: pulumi.Input<string>;
    }

    export interface GatewayExternalInformation {
        /**
         * List of external ips of the gateway.
         */
        ips?: pulumi.Input<pulumi.Input<inputs.CloudProject.GatewayExternalInformationIp>[]>;
        /**
         * ID of the private network.
         */
        networkId?: pulumi.Input<string>;
    }

    export interface GatewayExternalInformationIp {
        /**
         * IP of the interface.
         */
        ip?: pulumi.Input<string>;
        /**
         * ID of the subnet.
         */
        subnetId?: pulumi.Input<string>;
    }

    export interface GatewayInterface {
        /**
         * ID of the interface.
         */
        id?: pulumi.Input<string>;
        /**
         * IP of the interface.
         */
        ip?: pulumi.Input<string>;
        /**
         * ID of the private network.
         */
        networkId?: pulumi.Input<string>;
        /**
         * ID of the subnet.
         */
        subnetId?: pulumi.Input<string>;
    }

    export interface GetKubeCustomization {
        /**
         * Kubernetes API server customization
         *
         * @deprecated Use customizationApiserver instead
         */
        apiservers?: inputs.CloudProject.GetKubeCustomizationApiserver[];
    }

    export interface GetKubeCustomizationArgs {
        /**
         * Kubernetes API server customization
         *
         * @deprecated Use customizationApiserver instead
         */
        apiservers?: pulumi.Input<pulumi.Input<inputs.CloudProject.GetKubeCustomizationApiserverArgs>[]>;
    }

    export interface GetKubeCustomizationApiserver {
        /**
         * Kubernetes API server admission plugins customization
         */
        admissionplugins?: inputs.CloudProject.GetKubeCustomizationApiserverAdmissionplugin[];
    }

    export interface GetKubeCustomizationApiserverArgs {
        /**
         * Kubernetes API server admission plugins customization
         */
        admissionplugins?: pulumi.Input<pulumi.Input<inputs.CloudProject.GetKubeCustomizationApiserverAdmissionpluginArgs>[]>;
    }

    export interface GetKubeCustomizationApiserverAdmissionplugin {
        /**
         * Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.
         */
        disableds?: string[];
        /**
         * Array of admission plugins enabled, default is ["NodeRestriction","AlwaysPulImages"] and only these admission plugins can be enabled at this time.
         */
        enableds?: string[];
    }

    export interface GetKubeCustomizationApiserverAdmissionpluginArgs {
        /**
         * Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.
         */
        disableds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Array of admission plugins enabled, default is ["NodeRestriction","AlwaysPulImages"] and only these admission plugins can be enabled at this time.
         */
        enableds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface GetKubeCustomizationKubeProxy {
        /**
         * Kubernetes cluster kube-proxy customization of iptables specific config.
         */
        iptables?: inputs.CloudProject.GetKubeCustomizationKubeProxyIptables;
        /**
         * Kubernetes cluster kube-proxy customization of IPVS specific config (durations format is [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        ipvs?: inputs.CloudProject.GetKubeCustomizationKubeProxyIpvs;
    }

    export interface GetKubeCustomizationKubeProxyArgs {
        /**
         * Kubernetes cluster kube-proxy customization of iptables specific config.
         */
        iptables?: pulumi.Input<inputs.CloudProject.GetKubeCustomizationKubeProxyIptablesArgs>;
        /**
         * Kubernetes cluster kube-proxy customization of IPVS specific config (durations format is [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        ipvs?: pulumi.Input<inputs.CloudProject.GetKubeCustomizationKubeProxyIpvsArgs>;
    }

    export interface GetKubeCustomizationKubeProxyIptables {
        /**
         * Minimum period that IPVS rules are refreshed in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        minSyncPeriod?: string;
        /**
         * Minimum period that IPVS rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format.
         */
        syncPeriod?: string;
    }

    export interface GetKubeCustomizationKubeProxyIptablesArgs {
        /**
         * Minimum period that IPVS rules are refreshed in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        minSyncPeriod?: pulumi.Input<string>;
        /**
         * Minimum period that IPVS rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format.
         */
        syncPeriod?: pulumi.Input<string>;
    }

    export interface GetKubeCustomizationKubeProxyIpvs {
        /**
         * Minimum period that IPVS rules are refreshed in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        minSyncPeriod?: string;
        /**
         * IPVS scheduler.
         */
        scheduler?: string;
        /**
         * Minimum period that IPVS rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format.
         */
        syncPeriod?: string;
        /**
         * Timeout value used for IPVS TCP sessions after receiving a FIN in RFC3339 duration.
         */
        tcpFinTimeout?: string;
        /**
         * Timeout value used for idle IPVS TCP sessions in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        tcpTimeout?: string;
        /**
         * timeout value used for IPVS UDP packets in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        udpTimeout?: string;
    }

    export interface GetKubeCustomizationKubeProxyIpvsArgs {
        /**
         * Minimum period that IPVS rules are refreshed in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        minSyncPeriod?: pulumi.Input<string>;
        /**
         * IPVS scheduler.
         */
        scheduler?: pulumi.Input<string>;
        /**
         * Minimum period that IPVS rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format.
         */
        syncPeriod?: pulumi.Input<string>;
        /**
         * Timeout value used for IPVS TCP sessions after receiving a FIN in RFC3339 duration.
         */
        tcpFinTimeout?: pulumi.Input<string>;
        /**
         * Timeout value used for idle IPVS TCP sessions in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        tcpTimeout?: pulumi.Input<string>;
        /**
         * timeout value used for IPVS UDP packets in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration.
         */
        udpTimeout?: pulumi.Input<string>;
    }

    export interface GetKubeNodePoolTemplate {
        /**
         * metadata
         */
        metadata?: inputs.CloudProject.GetKubeNodePoolTemplateMetadata;
        /**
         * spec
         */
        spec?: inputs.CloudProject.GetKubeNodePoolTemplateSpec;
    }

    export interface GetKubeNodePoolTemplateArgs {
        /**
         * metadata
         */
        metadata?: pulumi.Input<inputs.CloudProject.GetKubeNodePoolTemplateMetadataArgs>;
        /**
         * spec
         */
        spec?: pulumi.Input<inputs.CloudProject.GetKubeNodePoolTemplateSpecArgs>;
    }

    export interface GetKubeNodePoolTemplateMetadata {
        /**
         * annotations
         */
        annotations?: {[key: string]: string};
        /**
         * finalizers
         */
        finalizers?: string[];
        /**
         * labels
         */
        labels?: {[key: string]: string};
    }

    export interface GetKubeNodePoolTemplateMetadataArgs {
        /**
         * annotations
         */
        annotations?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * finalizers
         */
        finalizers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * labels
         */
        labels?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    export interface GetKubeNodePoolTemplateSpec {
        /**
         * taints
         */
        taints?: {[key: string]: string}[];
        /**
         * unschedulable
         */
        unschedulable?: boolean;
    }

    export interface GetKubeNodePoolTemplateSpecArgs {
        /**
         * taints
         */
        taints?: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * unschedulable
         */
        unschedulable?: pulumi.Input<boolean>;
    }

    export interface InstanceAddress {
        /**
         * IP address
         */
        ip?: pulumi.Input<string>;
        /**
         * IP version
         */
        version?: pulumi.Input<number>;
    }

    export interface InstanceAttachedVolume {
        /**
         * Instance id
         */
        id?: pulumi.Input<string>;
    }

    export interface InstanceAutoBackup {
        /**
         * Unix cron pattern
         */
        cron: pulumi.Input<string>;
        /**
         * Number of backup to keep
         */
        rotation: pulumi.Input<number>;
    }

    export interface InstanceBootFrom {
        /**
         * Instance image id. Images can be retrieved using `GET /cloud/project/{serviceName}/image`
         */
        imageId?: pulumi.Input<string>;
        /**
         * Instance volume id
         */
        volumeId?: pulumi.Input<string>;
    }

    export interface InstanceFlavor {
        /**
         * Flavor ID. Flavors can be retrieved using `GET /cloud/project/{serviceName}/flavor`
         */
        flavorId: pulumi.Input<string>;
    }

    export interface InstanceGroup {
        /**
         * Group id
         */
        groupId?: pulumi.Input<string>;
    }

    export interface InstanceNetwork {
        /**
         * Set the new instance as public boolean
         */
        public?: pulumi.Input<boolean>;
    }

    export interface InstanceSshKey {
        /**
         * SSH Keypair name
         */
        name: pulumi.Input<string>;
    }

    export interface InstanceSshKeyCreate {
        /**
         * SSH Key pair name
         */
        name: pulumi.Input<string>;
        /**
         * SSH Public key
         */
        publicKey: pulumi.Input<string>;
    }

    export interface KubeCustomization {
        /**
         * Kubernetes API server customization
         *
         * @deprecated Use customizationApiserver instead
         */
        apiservers?: pulumi.Input<pulumi.Input<inputs.CloudProject.KubeCustomizationApiserver>[]>;
    }

    export interface KubeCustomizationApiserver {
        /**
         * Kubernetes API server admission plugins customization
         */
        admissionplugins?: pulumi.Input<pulumi.Input<inputs.CloudProject.KubeCustomizationApiserverAdmissionplugin>[]>;
    }

    export interface KubeCustomizationApiserverAdmissionplugin {
        /**
         * Array of admission plugins disabled, default is [] and only AlwaysPulImages can be disabled at this time.
         */
        disableds?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Array of admission plugins enabled, default is ["NodeRestriction","AlwaysPulImages"] and only these admission plugins can be enabled at this time.
         */
        enableds?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface KubeCustomizationKubeProxy {
        /**
         * Kubernetes cluster kube-proxy customization of iptables specific config (durations format is RFC3339 duration, e.g. `PT60S`)
         */
        iptables?: pulumi.Input<inputs.CloudProject.KubeCustomizationKubeProxyIptables>;
        /**
         * Kubernetes cluster kube-proxy customization of IPVS specific config (durations format is [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration, e.g. `PT60S`)
         */
        ipvs?: pulumi.Input<inputs.CloudProject.KubeCustomizationKubeProxyIpvs>;
    }

    export interface KubeCustomizationKubeProxyIptables {
        /**
         * Period that iptables rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format (e.g. `PT60S`). Must be greater than 0.
         */
        minSyncPeriod?: pulumi.Input<string>;
        /**
         * Minimum period that iptables rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format (e.g. `PT60S`).
         */
        syncPeriod?: pulumi.Input<string>;
    }

    export interface KubeCustomizationKubeProxyIpvs {
        /**
         * Minimum period that IPVS rules are refreshed in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration (e.g. `PT60S`).
         */
        minSyncPeriod?: pulumi.Input<string>;
        /**
         * IPVS scheduler.
         */
        scheduler?: pulumi.Input<string>;
        /**
         * Minimum period that IPVS rules are refreshed, in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration format (e.g. `PT60S`).
         */
        syncPeriod?: pulumi.Input<string>;
        /**
         * Timeout value used for IPVS TCP sessions after receiving a FIN in RFC3339 duration (e.g. `PT60S`). The default value is `PT0S`, which preserves the current timeout value on the system.
         */
        tcpFinTimeout?: pulumi.Input<string>;
        /**
         * Timeout value used for idle IPVS TCP sessions in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration (e.g. `PT60S`). The default value is `PT0S`, which preserves the current timeout value on the system.
         */
        tcpTimeout?: pulumi.Input<string>;
        /**
         * timeout value used for IPVS UDP packets in [RFC3339](https://www.rfc-editor.org/rfc/rfc3339) duration (e.g. `PT60S`). The default value is `PT0S`, which preserves the current timeout value on the system.
         */
        udpTimeout?: pulumi.Input<string>;
    }

    export interface KubeKubeconfigAttribute {
        /**
         * The kubernetes API server client certificate.
         */
        clientCertificate?: pulumi.Input<string>;
        /**
         * The kubernetes API server client key.
         */
        clientKey?: pulumi.Input<string>;
        /**
         * The kubernetes API server CA certificate.
         */
        clusterCaCertificate?: pulumi.Input<string>;
        /**
         * The kubernetes API server URL.
         */
        host?: pulumi.Input<string>;
    }

    export interface KubeNodePoolTemplate {
        /**
         * metadata
         */
        metadata: pulumi.Input<inputs.CloudProject.KubeNodePoolTemplateMetadata>;
        /**
         * spec
         */
        spec: pulumi.Input<inputs.CloudProject.KubeNodePoolTemplateSpec>;
    }

    export interface KubeNodePoolTemplateMetadata {
        /**
         * annotations
         */
        annotations: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * finalizers
         */
        finalizers: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * labels
         */
        labels: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    }

    export interface KubeNodePoolTemplateSpec {
        /**
         * taints
         */
        taints: pulumi.Input<pulumi.Input<{[key: string]: pulumi.Input<string>}>[]>;
        /**
         * unschedulable
         */
        unschedulable: pulumi.Input<boolean>;
    }

    export interface KubePrivateNetworkConfiguration {
        /**
         * If defined, all egress traffic will be routed towards this IP address, which should belong to the private network. Empty string means disabled.
         */
        defaultVrackGateway: pulumi.Input<string>;
        /**
         * Defines whether routing should default to using the nodes' private interface, instead of their public interface. Default is false.
         *
         * In order to use the gateway IP advertised by the private network subnet DHCP, the following configuration shall be used.
         *
         * ```typescript
         * import * as pulumi from "@pulumi/pulumi";
         * ```
         */
        privateNetworkRoutingAsDefault: pulumi.Input<boolean>;
    }

    export interface LoadBalancerFloatingIp {
        /**
         * ID of the resource
         */
        id?: pulumi.Input<string>;
        /**
         * IP Address of the resource
         */
        ip?: pulumi.Input<string>;
    }

    export interface LoadBalancerListener {
        /**
         * The allowed CIDRs
         */
        allowedCidrs?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The description of the listener
         */
        description?: pulumi.Input<string>;
        /**
         * Name of the listener
         */
        name?: pulumi.Input<string>;
        /**
         * Listener pool
         */
        pool?: pulumi.Input<inputs.CloudProject.LoadBalancerListenerPool>;
        /**
         * Listener port
         */
        port: pulumi.Input<number>;
        /**
         * Protocol for the listener
         */
        protocol: pulumi.Input<string>;
        /**
         * Secret ID to get certificate for SSL listener creation
         */
        secretId?: pulumi.Input<string>;
        /**
         * Timeout client data of the listener
         */
        timeoutClientData?: pulumi.Input<number>;
        /**
         * Timeout member data of the listener
         */
        timeoutMemberData?: pulumi.Input<number>;
        /**
         * TLS versions of the listener
         */
        tlsVersions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface LoadBalancerListenerPool {
        /**
         * Pool algorithm to split traffic between members
         */
        algorithm?: pulumi.Input<string>;
        /**
         * Pool health monitor
         */
        healthMonitor?: pulumi.Input<inputs.CloudProject.LoadBalancerListenerPoolHealthMonitor>;
        /**
         * Pool members
         */
        members?: pulumi.Input<pulumi.Input<inputs.CloudProject.LoadBalancerListenerPoolMember>[]>;
        /**
         * Name of the pool
         */
        name?: pulumi.Input<string>;
        /**
         * Protocol for the pool
         */
        protocol?: pulumi.Input<string>;
        /**
         * Pool session persistence
         */
        sessionPersistence?: pulumi.Input<inputs.CloudProject.LoadBalancerListenerPoolSessionPersistence>;
    }

    export interface LoadBalancerListenerPoolHealthMonitor {
        /**
         * Duration between sending probes to members, in seconds
         */
        delay?: pulumi.Input<number>;
        /**
         * Monitor HTTP configuration
         */
        httpConfiguration?: pulumi.Input<inputs.CloudProject.LoadBalancerListenerPoolHealthMonitorHttpConfiguration>;
        /**
         * Number of successful checks before changing the operating status of the member to ONLINE
         */
        maxRetries?: pulumi.Input<number>;
        /**
         * Number of allowed check failures before changing the operating status of the member to ERROR
         */
        maxRetriesDown?: pulumi.Input<number>;
        /**
         * Type of the monitor
         */
        monitorType?: pulumi.Input<string>;
        /**
         * The name of the resource
         */
        name?: pulumi.Input<string>;
        /**
         * The operating status of the resource
         */
        operatingStatus?: pulumi.Input<string>;
        /**
         * The provisioning status of the resource
         */
        provisioningStatus?: pulumi.Input<string>;
        /**
         * Maximum time, in seconds, that a monitor waits to connect before it times out. This value must be less than the delay value
         */
        timeout?: pulumi.Input<number>;
    }

    export interface LoadBalancerListenerPoolHealthMonitorHttpConfiguration {
        /**
         * Domain name, which be injected into the HTTP Host Header to the backend server for HTTP health check
         */
        domainName?: pulumi.Input<string>;
        /**
         * Status codes expected in response from the member to declare it healthy; The list of HTTP status codes expected in response from the member to declare it healthy. Specify one of the following values: * A single value, such as 200; * A list, such as 200, 202; * A range, such as 200-204
         */
        expectedCodes?: pulumi.Input<string>;
        /**
         * HTTP method that the health monitor uses for requests
         */
        httpMethod?: pulumi.Input<string>;
        /**
         * HTTP version that the health monitor uses for requests
         */
        httpVersion?: pulumi.Input<string>;
        /**
         * HTTP URL path of the request sent by the monitor to test the health of a backend member
         */
        urlPath?: pulumi.Input<string>;
    }

    export interface LoadBalancerListenerPoolMember {
        /**
         * IP address of the resource
         */
        address?: pulumi.Input<string>;
        /**
         * Name of the member
         */
        name?: pulumi.Input<string>;
        /**
         * Protocol port number for the resource
         */
        protocolPort?: pulumi.Input<number>;
        /**
         * Weight of a member determines the portion of requests or connections it services compared to the other members of the pool. Between 1 and 256.
         */
        weight?: pulumi.Input<number>;
    }

    export interface LoadBalancerListenerPoolSessionPersistence {
        /**
         * Cookie name, only applicable to session persistence through cookie
         */
        cookieName?: pulumi.Input<string>;
        /**
         * Type of session persistence
         */
        type?: pulumi.Input<string>;
    }

    export interface LoadBalancerNetwork {
        /**
         * Information to private network
         */
        private: pulumi.Input<inputs.CloudProject.LoadBalancerNetworkPrivate>;
    }

    export interface LoadBalancerNetworkPrivate {
        /**
         * Floating IP to associate
         */
        floatingIp?: pulumi.Input<inputs.CloudProject.LoadBalancerNetworkPrivateFloatingIp>;
        /**
         * Floating IP to create
         */
        floatingIpCreate?: pulumi.Input<inputs.CloudProject.LoadBalancerNetworkPrivateFloatingIpCreate>;
        /**
         * Gateway to associate
         */
        gateway?: pulumi.Input<inputs.CloudProject.LoadBalancerNetworkPrivateGateway>;
        /**
         * Gateway to create
         */
        gatewayCreate?: pulumi.Input<inputs.CloudProject.LoadBalancerNetworkPrivateGatewayCreate>;
        /**
         * Network to associate
         */
        network: pulumi.Input<inputs.CloudProject.LoadBalancerNetworkPrivateNetwork>;
    }

    export interface LoadBalancerNetworkPrivateFloatingIp {
        /**
         * ID of the floatingIp
         */
        id?: pulumi.Input<string>;
    }

    export interface LoadBalancerNetworkPrivateFloatingIpCreate {
        /**
         * Description for the floatingIp
         */
        description?: pulumi.Input<string>;
    }

    export interface LoadBalancerNetworkPrivateGateway {
        /**
         * ID of the gateway
         */
        id?: pulumi.Input<string>;
    }

    export interface LoadBalancerNetworkPrivateGatewayCreate {
        /**
         * Model of the gateway
         */
        model?: pulumi.Input<string>;
        /**
         * Name of the gateway
         */
        name?: pulumi.Input<string>;
    }

    export interface LoadBalancerNetworkPrivateNetwork {
        /**
         * Private network ID
         */
        id: pulumi.Input<string>;
        /**
         * Subnet ID
         */
        subnetId: pulumi.Input<string>;
    }

    export interface NetworkPrivateRegionsAttribute {
        openstackid?: pulumi.Input<string>;
        region?: pulumi.Input<string>;
        /**
         * the status of the network. should be normally set to 'ACTIVE'.
         */
        status: pulumi.Input<string>;
    }

    export interface NetworkPrivateRegionsStatus {
        region?: pulumi.Input<string>;
        /**
         * the status of the network. should be normally set to 'ACTIVE'.
         */
        status: pulumi.Input<string>;
    }

    export interface NetworkPrivateSubnetIpPool {
        /**
         * Enable DHCP. Changing this forces a new resource to be created. Defaults to false.
         */
        dhcp?: pulumi.Input<boolean>;
        /**
         * Last ip for this region. Changing this value recreates the subnet.
         */
        end?: pulumi.Input<string>;
        /**
         * Global network in CIDR format. Changing this value recreates the subnet
         */
        network?: pulumi.Input<string>;
        /**
         * The region in which the network subnet will be created. Ex.: "GRA1". Changing this value recreates the resource.
         */
        region?: pulumi.Input<string>;
        /**
         * First ip for this region. Changing this value recreates the subnet.
         */
        start?: pulumi.Input<string>;
    }

    export interface NetworkPrivateSubnetV2AllocationPool {
        end: pulumi.Input<string>;
        start: pulumi.Input<string>;
    }

    export interface NetworkPrivateSubnetV2HostRoute {
        destination: pulumi.Input<string>;
        nexthop: pulumi.Input<string>;
    }

    export interface ProjectOrder {
        /**
         * date
         */
        date?: pulumi.Input<string>;
        /**
         * Information about a Bill entry
         */
        details?: pulumi.Input<pulumi.Input<inputs.CloudProject.ProjectOrderDetail>[]>;
        /**
         * expiration date
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * order id, the same as the `id`
         */
        orderId?: pulumi.Input<number>;
    }

    export interface ProjectOrderDetail {
        /**
         * A description associated with the user.
         */
        description?: pulumi.Input<string>;
        /**
         * expiration date
         */
        domain?: pulumi.Input<string>;
        /**
         * order detail id
         */
        orderDetailId?: pulumi.Input<number>;
        /**
         * quantity
         */
        quantity?: pulumi.Input<string>;
    }

    export interface ProjectPlan {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.CloudProject.ProjectPlanConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code. This value must be adapted depending on your `OVH_ENDPOINT` value. It's `project.2018` for `ovh-{eu,ca}` and `project` when using `ovh-us`.
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface ProjectPlanConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }

    export interface ProjectPlanOption {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.CloudProject.ProjectPlanOptionConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface ProjectPlanOptionConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }

    export interface RancherCurrentState {
        /**
         * Bootstrap password of the managed Rancher service, returned only on creation
         */
        bootstrapPassword?: pulumi.Input<string>;
        /**
         * List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed
         */
        ipRestrictions?: pulumi.Input<pulumi.Input<inputs.CloudProject.RancherCurrentStateIpRestriction>[]>;
        /**
         * Name of the managed Rancher service
         */
        name?: pulumi.Input<string>;
        /**
         * Networking properties of a managed Rancher service
         */
        networking?: pulumi.Input<inputs.CloudProject.RancherCurrentStateNetworking>;
        /**
         * Plan of the managed Rancher service
         */
        plan?: pulumi.Input<string>;
        /**
         * Region of the managed Rancher service
         */
        region?: pulumi.Input<string>;
        /**
         * URL of the managed Rancher service
         */
        url?: pulumi.Input<string>;
        /**
         * Latest metrics regarding the usage of the managed Rancher service
         */
        usage?: pulumi.Input<inputs.CloudProject.RancherCurrentStateUsage>;
        /**
         * Version of the managed Rancher service
         */
        version?: pulumi.Input<string>;
    }

    export interface RancherCurrentStateIpRestriction {
        /**
         * Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Description of the allowed CIDR block
         */
        description?: pulumi.Input<string>;
    }

    export interface RancherCurrentStateNetworking {
        /**
         * Specifies the CIDR ranges for egress IP addresses used by Rancher. Ensure these ranges are allowed in any IP restrictions for services that Rancher will access.
         */
        egressCidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RancherCurrentStateUsage {
        /**
         * Date of the sample
         */
        datetime?: pulumi.Input<string>;
        /**
         * Total number of vCPUs orchestrated by the managed Rancher service through the downstream clusters
         */
        orchestratedVcpus?: pulumi.Input<number>;
    }

    export interface RancherCurrentTask {
        /**
         * Identifier of the current task
         */
        id?: pulumi.Input<string>;
        /**
         * Link to the task details
         */
        link?: pulumi.Input<string>;
        /**
         * Current global status of the current task
         */
        status?: pulumi.Input<string>;
        /**
         * Type of the current task
         */
        type?: pulumi.Input<string>;
    }

    export interface RancherTargetSpec {
        /**
         * List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed
         */
        ipRestrictions?: pulumi.Input<pulumi.Input<inputs.CloudProject.RancherTargetSpecIpRestriction>[]>;
        /**
         * Name of the managed Rancher service
         */
        name: pulumi.Input<string>;
        /**
         * Plan of the managed Rancher service. Available plans for an existing managed Rancher can be retrieved using GET /rancher/rancherID/capabilities/plan
         */
        plan: pulumi.Input<string>;
        /**
         * Version of the managed Rancher service. Available versions for an existing managed Rancher can be retrieved using ovh*cloud*project*rancher*version datasource. Default is the latest version.
         */
        version?: pulumi.Input<string>;
    }

    export interface RancherTargetSpecIpRestriction {
        /**
         * Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)
         */
        cidrBlock?: pulumi.Input<string>;
        /**
         * Description of the allowed CIDR block
         */
        description?: pulumi.Input<string>;
    }

    export interface RegionNetworkSubnet {
        /**
         * List of IP pools allocated in subnet
         */
        allocationPools?: pulumi.Input<pulumi.Input<inputs.CloudProject.RegionNetworkSubnetAllocationPool>[]>;
        /**
         * Subnet range in CIDR notation
         */
        cidr: pulumi.Input<string>;
        /**
         * DNS nameservers
         */
        dnsNameServers?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Enable DHCP for the subnet
         */
        enableDhcp: pulumi.Input<boolean>;
        /**
         * Set a gateway ip for the subnet
         */
        enableGatewayIp: pulumi.Input<boolean>;
        /**
         * Gateway IP
         */
        gatewayIp?: pulumi.Input<string>;
        /**
         * Host routes
         */
        hostRoutes?: pulumi.Input<pulumi.Input<inputs.CloudProject.RegionNetworkSubnetHostRoute>[]>;
        /**
         * IP version
         */
        ipVersion: pulumi.Input<number>;
        /**
         * Subnet name
         */
        name?: pulumi.Input<string>;
        /**
         * Use default DNS
         */
        useDefaultPublicDnsresolver?: pulumi.Input<boolean>;
    }

    export interface RegionNetworkSubnetAllocationPool {
        /**
         * Last IP for the pool (eg: 192.168.1.24)
         */
        end?: pulumi.Input<string>;
        /**
         * First IP for the pool (eg: 192.168.1.12)
         */
        start?: pulumi.Input<string>;
    }

    export interface RegionNetworkSubnetHostRoute {
        /**
         * Host route destination (eg: 192.168.1.0/24)
         */
        destination?: pulumi.Input<string>;
        /**
         * Host route next hop (eg: 192.168.1.254)
         */
        nextHop?: pulumi.Input<string>;
    }

    export interface StorageEncryption {
        /**
         * Encryption algorithm
         */
        sseAlgorithm?: pulumi.Input<string>;
    }

    export interface StorageObject {
        /**
         * ETag
         */
        etag?: pulumi.Input<string>;
        /**
         * Whether this object is a delete marker
         */
        isDeleteMarker?: pulumi.Input<boolean>;
        /**
         * Whether this is the latest version of the object
         */
        isLatest?: pulumi.Input<boolean>;
        /**
         * Key
         */
        key?: pulumi.Input<string>;
        /**
         * Last modification date
         */
        lastModified?: pulumi.Input<string>;
        /**
         * Size (bytes)
         */
        size?: pulumi.Input<number>;
        /**
         * Storage class
         */
        storageClass?: pulumi.Input<string>;
        /**
         * Version ID of the object
         */
        versionId?: pulumi.Input<string>;
    }

    export interface StorageReplication {
        /**
         * Replication rules
         */
        rules?: pulumi.Input<pulumi.Input<inputs.CloudProject.StorageReplicationRule>[]>;
    }

    export interface StorageReplicationRule {
        /**
         * Delete marker replication
         */
        deleteMarkerReplication?: pulumi.Input<string>;
        /**
         * Rule destination configuration
         */
        destination?: pulumi.Input<inputs.CloudProject.StorageReplicationRuleDestination>;
        /**
         * Rule filters
         */
        filter?: pulumi.Input<inputs.CloudProject.StorageReplicationRuleFilter>;
        /**
         * Rule ID
         */
        id?: pulumi.Input<string>;
        /**
         * Rule priority
         */
        priority?: pulumi.Input<number>;
        /**
         * Rule status
         */
        status?: pulumi.Input<string>;
    }

    export interface StorageReplicationRuleDestination {
        /**
         * Destination bucket name
         */
        name: pulumi.Input<string>;
        /**
         * Destination region
         */
        region: pulumi.Input<string>;
        /**
         * Destination storage class
         */
        storageClass?: pulumi.Input<string>;
    }

    export interface StorageReplicationRuleFilter {
        /**
         * Prefix filter
         */
        prefix?: pulumi.Input<string>;
        /**
         * Tags filter
         */
        tags?: pulumi.Input<pulumi.Input<inputs.CloudProject.StorageReplicationRuleFilterTag>[]>;
    }

    export interface StorageReplicationRuleFilterTag {
        /**
         * Tag key
         */
        key: pulumi.Input<string>;
        /**
         * Tag value
         */
        value: pulumi.Input<string>;
    }

    export interface StorageVersioning {
        /**
         * Versioning status
         */
        status?: pulumi.Input<string>;
    }

    export interface UserRole {
        /**
         * A description associated with the user.
         */
        description?: pulumi.Input<string>;
        /**
         * id of the role
         */
        id?: pulumi.Input<string>;
        /**
         * name of the role
         */
        name?: pulumi.Input<string>;
        /**
         * list of permissions associated with the role
         */
        permissions?: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface VolumeSubOperation {
        /**
         * Affected resource of the sub-operation
         */
        resourceId?: pulumi.Input<string>;
        /**
         * The started date of the sub-operation
         */
        resourceType?: pulumi.Input<string>;
    }
}

export namespace CloudProjectDatabase {
    export interface OpensearchUserAcl {
        /**
         * Pattern of the ACL.
         */
        pattern: pulumi.Input<string>;
        /**
         * Permission of the ACL Available permission:
         */
        permission: pulumi.Input<string>;
    }

    export interface PrometheusTarget {
        /**
         * Host of the endpoint
         */
        host?: pulumi.Input<string>;
        /**
         * Connection port for the endpoint
         */
        port?: pulumi.Input<number>;
    }
}

export namespace Dbaas {
    export interface LogsInputConfiguration {
        /**
         * Flowgger configuration
         */
        flowgger?: pulumi.Input<inputs.Dbaas.LogsInputConfigurationFlowgger>;
        /**
         * Logstash configuration
         */
        logstash?: pulumi.Input<inputs.Dbaas.LogsInputConfigurationLogstash>;
    }

    export interface LogsInputConfigurationFlowgger {
        /**
         * Type of format to decode. One of "RFC5424", "LTSV", "GELF", "CAPNP"
         */
        logFormat: pulumi.Input<string>;
        /**
         * Indicates how messages are delimited. One of "LINE", "NUL", "SYSLEN", "CAPNP"
         */
        logFraming: pulumi.Input<string>;
    }

    export interface LogsInputConfigurationLogstash {
        /**
         * The filter section of logstash.conf
         */
        filterSection?: pulumi.Input<string>;
        /**
         * The filter section of logstash.conf
         */
        inputSection: pulumi.Input<string>;
        /**
         * The list of customs Grok patterns
         */
        patternSection?: pulumi.Input<string>;
    }
}

export namespace Dedicated {
    export interface ServerCustomizations {
        /**
         * Config Drive UserData
         */
        configDriveUserData?: pulumi.Input<string>;
        /**
         * Path of the EFI bootloader
         */
        efiBootloaderPath?: pulumi.Input<string>;
        /**
         * Custom hostname
         */
        hostname?: pulumi.Input<string>;
        /**
         * Image HTTP Headers
         */
        httpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Image checksum
         */
        imageCheckSum?: pulumi.Input<string>;
        /**
         * Checksum type
         */
        imageCheckSumType?: pulumi.Input<string>;
        /**
         * Image Type
         */
        imageType?: pulumi.Input<string>;
        /**
         * Image URL
         */
        imageUrl?: pulumi.Input<string>;
        /**
         * Display Language
         */
        language?: pulumi.Input<string>;
        /**
         * Post-Installation Script
         */
        postInstallationScript?: pulumi.Input<string>;
        /**
         * Post-Installation Script File Extension
         */
        postInstallationScriptExtension?: pulumi.Input<string>;
        /**
         * SSH Public Key
         */
        sshKey?: pulumi.Input<string>;
    }

    export interface ServerIam {
        /**
         * Resource display name
         */
        displayName?: pulumi.Input<string>;
        /**
         * Unique identifier of the resource in the IAM
         */
        id?: pulumi.Input<string>;
        /**
         * Resource tags. Tags that were internally computed are prefixed with `ovh:`
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * URN of the private database, used when writing IAM policies
         */
        urn?: pulumi.Input<string>;
    }

    export interface ServerNetworkingInterface {
        /**
         * Interface Mac address
         */
        macs: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Interface type
         */
        type: pulumi.Input<string>;
    }

    export interface ServerOrder {
        date?: pulumi.Input<string>;
        details?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerOrderDetail>[]>;
        expirationDate?: pulumi.Input<string>;
        orderId?: pulumi.Input<number>;
    }

    export interface ServerOrderDetail {
        description?: pulumi.Input<string>;
        /**
         * Product type of item in order
         */
        detailType?: pulumi.Input<string>;
        domain?: pulumi.Input<string>;
        orderDetailId?: pulumi.Input<number>;
        quantity?: pulumi.Input<string>;
    }

    export interface ServerPlan {
        configurations?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerPlanConfiguration>[]>;
        /**
         * Duration selected for the purchase of the product
         */
        duration: pulumi.Input<string>;
        /**
         * Cart item to be linked
         */
        itemId?: pulumi.Input<number>;
        /**
         * Identifier of the option offer
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing mode selected for the purchase of the product
         */
        pricingMode: pulumi.Input<string>;
        /**
         * Quantity of product desired
         */
        quantity?: pulumi.Input<number>;
    }

    export interface ServerPlanConfiguration {
        /**
         * Label for your configuration item
         */
        label: pulumi.Input<string>;
        /**
         * Value or resource URL on API.OVH.COM of your configuration item
         */
        value: pulumi.Input<string>;
    }

    export interface ServerPlanOption {
        configurations?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerPlanOptionConfiguration>[]>;
        /**
         * Duration selected for the purchase of the product
         */
        duration: pulumi.Input<string>;
        /**
         * Identifier of the option offer
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing mode selected for the purchase of the product
         */
        pricingMode: pulumi.Input<string>;
        /**
         * Quantity of product desired
         */
        quantity: pulumi.Input<number>;
    }

    export interface ServerPlanOptionConfiguration {
        /**
         * Label for your configuration item
         */
        label: pulumi.Input<string>;
        /**
         * Value or resource URL on API.OVH.COM of your configuration item
         */
        value: pulumi.Input<string>;
    }

    export interface ServerReinstallTaskCustomizations {
        /**
         * Config Drive UserData
         */
        configDriveUserData?: pulumi.Input<string>;
        /**
         * EFI bootloader path
         */
        efiBootloaderPath?: pulumi.Input<string>;
        /**
         * Custom hostname
         */
        hostname?: pulumi.Input<string>;
        /**
         * Image HTTP Headers
         */
        httpHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Image checksum
         */
        imageCheckSum?: pulumi.Input<string>;
        /**
         * Checksum type
         */
        imageCheckSumType?: pulumi.Input<string>;
        /**
         * Image Type
         */
        imageType?: pulumi.Input<string>;
        /**
         * Image URL
         */
        imageUrl?: pulumi.Input<string>;
        /**
         * Display Language
         */
        language?: pulumi.Input<string>;
        /**
         * Post-Installation Script
         */
        postInstallationScript?: pulumi.Input<string>;
        /**
         * Post-Installation Script File Extension
         */
        postInstallationScriptExtension?: pulumi.Input<string>;
        /**
         * SSH Public Key
         */
        sshKey?: pulumi.Input<string>;
    }

    export interface ServerReinstallTaskStorage {
        /**
         * Disk group id to install the OS to (default is 0, meaning automatic).
         */
        diskGroupId?: pulumi.Input<number>;
        /**
         * Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode).
         */
        hardwareRaids?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerReinstallTaskStorageHardwareRaid>[]>;
        /**
         * Partitioning configuration
         */
        partitionings?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerReinstallTaskStoragePartitioning>[]>;
    }

    export interface ServerReinstallTaskStorageHardwareRaid {
        /**
         * Number of arrays (default is 1)
         */
        arrays?: pulumi.Input<number>;
        /**
         * Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)
         */
        disks?: pulumi.Input<number>;
        /**
         * Hardware raid type (default is 1)
         */
        raidLevel?: pulumi.Input<number>;
        /**
         * Number of disks in the disk group involved in the spare (default is 0)
         */
        spares?: pulumi.Input<number>;
    }

    export interface ServerReinstallTaskStoragePartitioning {
        /**
         * Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
         */
        disks?: pulumi.Input<number>;
        /**
         * Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme). Accept multiple values (multiple partitions):
         */
        layouts?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerReinstallTaskStoragePartitioningLayout>[]>;
        /**
         * Partitioning scheme (if applicable with selected operating system)
         */
        schemeName?: pulumi.Input<string>;
    }

    export interface ServerReinstallTaskStoragePartitioningLayout {
        /**
         * Partition extras parameters (when applicable)
         */
        extras?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerReinstallTaskStoragePartitioningLayoutExtra>[]>;
        /**
         * File system type
         */
        fileSystem: pulumi.Input<string>;
        /**
         * Mount point
         */
        mountPoint: pulumi.Input<string>;
        /**
         * Software raid type (default is 1)
         */
        raidLevel?: pulumi.Input<number>;
        /**
         * Partition size in MiB (default value is 0 which means to fill the disk with that partition)
         */
        size?: pulumi.Input<number>;
    }

    export interface ServerReinstallTaskStoragePartitioningLayoutExtra {
        /**
         * LVM-specific parameters (when applicable)
         */
        lvs?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerReinstallTaskStoragePartitioningLayoutExtraLv>[]>;
        /**
         * ZFS-specific parameters (when applicable)
         */
        zps?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerReinstallTaskStoragePartitioningLayoutExtraZp>[]>;
    }

    export interface ServerReinstallTaskStoragePartitioningLayoutExtraLv {
        /**
         * Logical volume name
         */
        name?: pulumi.Input<string>;
    }

    export interface ServerReinstallTaskStoragePartitioningLayoutExtraZp {
        /**
         * zpool name (generated automatically if not specified, note that multiple ZFS partitions with same zpool names will be configured as multiple datasets belonging to the same zpool if compatible)
         */
        name?: pulumi.Input<string>;
    }

    export interface ServerStorage {
        /**
         * Disk group id (default is 0, meaning automatic)
         */
        diskGroupId?: pulumi.Input<number>;
        /**
         * Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode)
         */
        hardwareRaids?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerStorageHardwareRaid>[]>;
        /**
         * Partitioning configuration
         */
        partitioning?: pulumi.Input<inputs.Dedicated.ServerStoragePartitioning>;
    }

    export interface ServerStorageHardwareRaid {
        /**
         * Number of arrays (default is 1)
         */
        arrays?: pulumi.Input<number>;
        /**
         * Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)
         */
        disks?: pulumi.Input<number>;
        /**
         * Hardware raid type (default is 1)
         */
        raidLevel?: pulumi.Input<number>;
        /**
         * Number of disks in the disk group involved in the spare (default is 0)
         */
        spares?: pulumi.Input<number>;
    }

    export interface ServerStoragePartitioning {
        /**
         * Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
         */
        disks?: pulumi.Input<number>;
        /**
         * Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme)
         */
        layouts?: pulumi.Input<pulumi.Input<inputs.Dedicated.ServerStoragePartitioningLayout>[]>;
        /**
         * Partitioning scheme (if applicable with selected operating system)
         */
        schemeName?: pulumi.Input<string>;
    }

    export interface ServerStoragePartitioningLayout {
        /**
         * Partition extras parameters
         */
        extras?: pulumi.Input<inputs.Dedicated.ServerStoragePartitioningLayoutExtras>;
        /**
         * File system type
         */
        fileSystem: pulumi.Input<string>;
        /**
         * Mount point
         */
        mountPoint: pulumi.Input<string>;
        /**
         * Software raid type (default is 1)
         */
        raidLevel?: pulumi.Input<number>;
        /**
         * Partition size in MiB (default value is 0 which means to fill the disk with that partition)
         */
        size?: pulumi.Input<number>;
    }

    export interface ServerStoragePartitioningLayoutExtras {
        /**
         * LVM-specific parameters
         */
        lv?: pulumi.Input<inputs.Dedicated.ServerStoragePartitioningLayoutExtrasLv>;
        /**
         * ZFS-specific parameters
         */
        zp?: pulumi.Input<inputs.Dedicated.ServerStoragePartitioningLayoutExtrasZp>;
    }

    export interface ServerStoragePartitioningLayoutExtrasLv {
        /**
         * Dedicated server name
         */
        name?: pulumi.Input<string>;
    }

    export interface ServerStoragePartitioningLayoutExtrasZp {
        /**
         * Dedicated server name
         */
        name?: pulumi.Input<string>;
    }
}

export namespace Domain {
    export interface DSRecordsDsRecord {
        /**
         * The record algorithm (`RSASHA1`, `RSASHA1_NSEC3_SHA1`, `RSASHA256`, `RSASHA512`, `ECDSAP256SHA256`, `ECDSAP384SHA384`, `ED25519`)
         */
        algorithm: pulumi.Input<string>;
        /**
         * The record flag (`ZONE_SIGNING_KEY`, `KEY_SIGNING_KEY`)
         */
        flags: pulumi.Input<string>;
        /**
         * The record base64 encoded public key
         */
        publicKey: pulumi.Input<string>;
        /**
         * The record tag
         */
        tag: pulumi.Input<number>;
    }

    export interface NameCurrentState {
        /**
         * Domain additional states
         */
        additionalStates?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * The domain DNS configuration
         */
        dnsConfiguration?: pulumi.Input<inputs.Domain.NameCurrentStateDnsConfiguration>;
        /**
         * Extension of the domain name
         */
        extension?: pulumi.Input<string>;
        /**
         * Domain main state
         */
        mainState?: pulumi.Input<string>;
        /**
         * Domain name
         */
        name?: pulumi.Input<string>;
        /**
         * Domain protection state
         */
        protectionState?: pulumi.Input<string>;
        /**
         * Domain suspension state
         */
        suspensionState?: pulumi.Input<string>;
    }

    export interface NameCurrentStateDnsConfiguration {
        /**
         * The type of DNS configuration of the domain
         */
        configurationType?: pulumi.Input<string>;
        /**
         * Whether the registry supports IPv6 or not
         */
        glueRecordIpv6supported?: pulumi.Input<boolean>;
        /**
         * Whether the registry accepts hosts or not
         */
        hostSupported?: pulumi.Input<boolean>;
        /**
         * The maximum number of name servers allowed by the registry
         */
        maxDns?: pulumi.Input<number>;
        /**
         * The minimum number of name servers allowed by the registry
         */
        minDns?: pulumi.Input<number>;
        /**
         * The name servers used by the domain name
         */
        nameServers?: pulumi.Input<pulumi.Input<inputs.Domain.NameCurrentStateDnsConfigurationNameServer>[]>;
    }

    export interface NameCurrentStateDnsConfigurationNameServer {
        /**
         * The IPv4 associated to the name server
         */
        ipv4?: pulumi.Input<string>;
        /**
         * The IPv6 associated to the name server
         */
        ipv6?: pulumi.Input<string>;
        /**
         * The host name
         */
        nameServer?: pulumi.Input<string>;
        /**
         * The type of name server
         */
        nameServerType?: pulumi.Input<string>;
    }

    export interface NameCurrentTask {
        /**
         * Identifier of the current task
         */
        id?: pulumi.Input<string>;
        /**
         * Link to the task details
         */
        link?: pulumi.Input<string>;
        /**
         * Current global status of the current task
         */
        status?: pulumi.Input<string>;
        /**
         * Type of the current task
         */
        type?: pulumi.Input<string>;
    }

    export interface NameIam {
        /**
         * Resource display name
         */
        displayName?: pulumi.Input<string>;
        /**
         * Unique identifier of the resource
         */
        id?: pulumi.Input<string>;
        /**
         * Resource tags. Tags that were internally computed are prefixed with ovh:
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Unique resource name used in policies
         */
        urn?: pulumi.Input<string>;
    }

    export interface NameOrder {
        date?: pulumi.Input<string>;
        details?: pulumi.Input<pulumi.Input<inputs.Domain.NameOrderDetail>[]>;
        expirationDate?: pulumi.Input<string>;
        orderId?: pulumi.Input<number>;
    }

    export interface NameOrderDetail {
        description?: pulumi.Input<string>;
        /**
         * Product type of item in order
         */
        detailType?: pulumi.Input<string>;
        domain?: pulumi.Input<string>;
        orderDetailId?: pulumi.Input<number>;
        quantity?: pulumi.Input<string>;
    }

    export interface NamePlan {
        configurations?: pulumi.Input<pulumi.Input<inputs.Domain.NamePlanConfiguration>[]>;
        /**
         * Duration selected for the purchase of the product (defaults to "P1Y")
         */
        duration: pulumi.Input<string>;
        /**
         * Cart item to be linked
         */
        itemId?: pulumi.Input<number>;
        /**
         * Identifier of the option offer
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing mode selected for the purchase of the product
         */
        pricingMode: pulumi.Input<string>;
        /**
         * Quantity of product desired
         */
        quantity?: pulumi.Input<number>;
    }

    export interface NamePlanConfiguration {
        /**
         * Label for your configuration item
         */
        label: pulumi.Input<string>;
        /**
         * Value or resource URL on API.OVH.COM of your configuration item
         */
        value: pulumi.Input<string>;
    }

    export interface NamePlanOption {
        configurations?: pulumi.Input<pulumi.Input<inputs.Domain.NamePlanOptionConfiguration>[]>;
        /**
         * Duration selected for the purchase of the product
         */
        duration: pulumi.Input<string>;
        /**
         * Identifier of the option offer
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing mode selected for the purchase of the product
         */
        pricingMode: pulumi.Input<string>;
        /**
         * Quantity of product desired
         */
        quantity: pulumi.Input<number>;
    }

    export interface NamePlanOptionConfiguration {
        /**
         * Label for your configuration item
         */
        label: pulumi.Input<string>;
        /**
         * Value or resource URL on API.OVH.COM of your configuration item
         */
        value: pulumi.Input<string>;
    }

    export interface NameServersServer {
        /**
         * The server hostname
         */
        host: pulumi.Input<string>;
        /**
         * The server IP
         */
        ip?: pulumi.Input<string>;
    }

    export interface NameTargetSpec {
        /**
         * The domain DNS configuration
         */
        dnsConfiguration?: pulumi.Input<inputs.Domain.NameTargetSpecDnsConfiguration>;
    }

    export interface NameTargetSpecDnsConfiguration {
        /**
         * The name servers to update
         */
        nameServers?: pulumi.Input<pulumi.Input<inputs.Domain.NameTargetSpecDnsConfigurationNameServer>[]>;
    }

    export interface NameTargetSpecDnsConfigurationNameServer {
        /**
         * The IPv4 associated to the name server
         */
        ipv4?: pulumi.Input<string>;
        /**
         * The IPv6 associated to the name server
         */
        ipv6?: pulumi.Input<string>;
        /**
         * The host name
         */
        nameServer?: pulumi.Input<string>;
    }

    export interface ZoneOrder {
        /**
         * date
         */
        date?: pulumi.Input<string>;
        /**
         * Information about a Bill entry
         */
        details?: pulumi.Input<pulumi.Input<inputs.Domain.ZoneOrderDetail>[]>;
        /**
         * expiration date
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * order id
         */
        orderId?: pulumi.Input<number>;
    }

    export interface ZoneOrderDetail {
        /**
         * description
         */
        description?: pulumi.Input<string>;
        /**
         * expiration date
         */
        domain?: pulumi.Input<string>;
        /**
         * order detail id
         */
        orderDetailId?: pulumi.Input<number>;
        /**
         * quantity
         */
        quantity?: pulumi.Input<string>;
    }

    export interface ZonePlan {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product. 2 configurations are required : one for `zone` and one for `template`
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Domain.ZonePlanConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface ZonePlanConfiguration {
        /**
         * Identifier of the resource : `zone` or `template`
         */
        label: pulumi.Input<string>;
        /**
         * For `zone`, the value is the zone name `myzone.example.com`. For `template`, the value can be `basic`, `minimized` or `redirect` which is the same as `minimized` with additional entries for a redirect configuration.
         */
        value: pulumi.Input<string>;
    }

    export interface ZonePlanOption {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Domain.ZonePlanOptionConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface ZonePlanOptionConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }
}

export namespace Hosting {
    export interface PrivateDatabaseOrder {
        /**
         * date
         */
        date?: pulumi.Input<string>;
        /**
         * Information about a Bill entry
         */
        details?: pulumi.Input<pulumi.Input<inputs.Hosting.PrivateDatabaseOrderDetail>[]>;
        /**
         * expiration date
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * order id
         */
        orderId?: pulumi.Input<number>;
    }

    export interface PrivateDatabaseOrderDetail {
        /**
         * Custom description on your privatedatabase order.
         */
        description?: pulumi.Input<string>;
        /**
         * expiration date
         */
        domain?: pulumi.Input<string>;
        /**
         * order detail id
         */
        orderDetailId?: pulumi.Input<number>;
        /**
         * quantity
         */
        quantity?: pulumi.Input<string>;
    }

    export interface PrivateDatabasePlan {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Hosting.PrivateDatabasePlanConfiguration>[]>;
        /**
         * duration.
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code.
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface PrivateDatabasePlanConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         *
         * Plan order valid values can be found on OVHcloud [APIv6](https://api.ovh.com/console/#/hosting/privateDatabase/availableOrderCapacities~GET)
         */
        value: pulumi.Input<string>;
    }

    export interface PrivateDatabasePlanOption {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Hosting.PrivateDatabasePlanOptionConfiguration>[]>;
        /**
         * Service duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface PrivateDatabasePlanOptionConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }
}

export namespace Iam {
}

export namespace Ip {
    export interface IpServiceOrder {
        /**
         * date
         */
        date?: pulumi.Input<string>;
        /**
         * Information about a Bill entry
         */
        details?: pulumi.Input<pulumi.Input<inputs.Ip.IpServiceOrderDetail>[]>;
        /**
         * expiration date
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * order id
         */
        orderId?: pulumi.Input<number>;
    }

    export interface IpServiceOrderDetail {
        /**
         * Custom description on your ip.
         */
        description?: pulumi.Input<string>;
        /**
         * expiration date
         */
        domain?: pulumi.Input<string>;
        /**
         * order detail id
         */
        orderDetailId?: pulumi.Input<number>;
        /**
         * quantity
         */
        quantity?: pulumi.Input<string>;
    }

    export interface IpServicePlan {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Ip.IpServicePlanConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface IpServicePlanConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }

    export interface IpServicePlanOption {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product. The list of available configurations can be retrieved using call [GET /order/cart/{cartId}/item/{itemId}/requiredConfiguration](https://eu.api.ovh.com/console/?section=%2Forder&branch=v1#get-/order/cart/-cartId-/item/-itemId-/requiredConfiguration)
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Ip.IpServicePlanOptionConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface IpServicePlanOptionConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }

    export interface IpServiceRoutedTo {
        /**
         * service name
         */
        serviceName?: pulumi.Input<string>;
    }

    export interface MoveRoutedTo {
        /**
         * Name of the service to route the IP to. IP will be parked if this value is an empty string
         */
        serviceName: pulumi.Input<string>;
    }
}

export namespace IpLoadBalancing {
    export interface HttpFarmProbe {
        /**
         * Force use of SSL (TLS)
         */
        forceSsl?: pulumi.Input<boolean>;
        /**
         * probe interval, Value between 30 and 3600 seconds, default 30
         */
        interval?: pulumi.Input<number>;
        /**
         * What to match `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)
         */
        match?: pulumi.Input<string>;
        /**
         * HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)
         */
        method?: pulumi.Input<string>;
        /**
         * Negate probe result
         */
        negate?: pulumi.Input<boolean>;
        /**
         * Pattern to match against `match`
         */
        pattern?: pulumi.Input<string>;
        /**
         * Port for backends to receive traffic on.
         */
        port?: pulumi.Input<number>;
        /**
         * Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`
         */
        type: pulumi.Input<string>;
        /**
         * URL for HTTP probe type.
         */
        url?: pulumi.Input<string>;
    }

    export interface HttpRouteAction {
        /**
         * HTTP status code for "redirect" and "reject" actions
         */
        status?: pulumi.Input<number>;
        /**
         * Farm ID for "farm" action type or URL template for "redirect" action. You may use ${uri}, ${protocol}, ${host}, ${port} and ${path} variables in redirect target
         */
        target?: pulumi.Input<string>;
        /**
         * Action to trigger if all the rules of this route matches
         */
        type: pulumi.Input<string>;
    }

    export interface HttpRouteRule {
        /**
         * Name of the field to match like "protocol" or "host" "/ipLoadbalancing/{serviceName}/route/availableRules" for a list of available rules
         */
        field?: pulumi.Input<string>;
        /**
         * Matching operator. Not all operators are available for all fields. See "availableRules"
         */
        match?: pulumi.Input<string>;
        /**
         * Invert the matching operator effect
         */
        negate?: pulumi.Input<boolean>;
        /**
         * Value to match against this match. Interpretation if this field depends on the match and field
         */
        pattern?: pulumi.Input<string>;
        /**
         * Id of your rule
         */
        ruleId?: pulumi.Input<number>;
        /**
         * Name of sub-field, if applicable. This may be a Cookie or Header name for instance
         */
        subField?: pulumi.Input<string>;
    }

    export interface LoadBalancerOrder {
        /**
         * date
         */
        date?: pulumi.Input<string>;
        /**
         * Information about a Bill entry
         */
        details?: pulumi.Input<pulumi.Input<inputs.IpLoadBalancing.LoadBalancerOrderDetail>[]>;
        /**
         * expiration date
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * order id
         */
        orderId?: pulumi.Input<number>;
    }

    export interface LoadBalancerOrderDetail {
        /**
         * description
         */
        description?: pulumi.Input<string>;
        /**
         * expiration date
         */
        domain?: pulumi.Input<string>;
        /**
         * order detail id
         */
        orderDetailId?: pulumi.Input<number>;
        /**
         * quantity
         */
        quantity?: pulumi.Input<string>;
    }

    export interface LoadBalancerOrderableZone {
        /**
         * The zone three letter code
         */
        name?: pulumi.Input<string>;
        /**
         * The billing planCode for this zone
         */
        planCode?: pulumi.Input<string>;
    }

    export interface LoadBalancerPlan {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.IpLoadBalancing.LoadBalancerPlanConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface LoadBalancerPlanConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }

    export interface LoadBalancerPlanOption {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.IpLoadBalancing.LoadBalancerPlanOptionConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface LoadBalancerPlanOptionConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }

    export interface TcpFarmProbe {
        /**
         * Force use of SSL (TLS)
         */
        forceSsl?: pulumi.Input<boolean>;
        /**
         * probe interval, Value between 30 and 3600 seconds, default 30
         */
        interval?: pulumi.Input<number>;
        /**
         * What to match `pattern` against (`contains`, `default`, `internal`, `matches`, `status`)
         */
        match?: pulumi.Input<string>;
        /**
         * HTTP probe method (`GET`, `HEAD`, `OPTIONS`, `internal`)
         */
        method?: pulumi.Input<string>;
        /**
         * Negate probe result
         */
        negate?: pulumi.Input<boolean>;
        /**
         * Pattern to match against `match`
         */
        pattern?: pulumi.Input<string>;
        /**
         * Port for backends to receive traffic on.
         */
        port?: pulumi.Input<number>;
        /**
         * Valid values : `http`, `internal`, `mysql`, `oco`, `pgsql`, `smtp`, `tcp`
         */
        type: pulumi.Input<string>;
        /**
         * URL for HTTP probe type.
         */
        url?: pulumi.Input<string>;
    }

    export interface TcpRouteAction {
        /**
         * Farm ID for "farm" action type, empty for others.
         */
        target?: pulumi.Input<string>;
        /**
         * Action to trigger if all the rules of this route matches
         */
        type: pulumi.Input<string>;
    }

    export interface TcpRouteRule {
        /**
         * Name of the field to match like "protocol" or "host" "/ipLoadbalancing/{serviceName}/route/availableRules" for a list of available rules
         */
        field?: pulumi.Input<string>;
        /**
         * Matching operator. Not all operators are available for all fields. See "availableRules"
         */
        match?: pulumi.Input<string>;
        /**
         * Invert the matching operator effect
         */
        negate?: pulumi.Input<boolean>;
        /**
         * Value to match against this match. Interpretation if this field depends on the match and field
         */
        pattern?: pulumi.Input<string>;
        /**
         * Id of your rule
         */
        ruleId?: pulumi.Input<number>;
        /**
         * Name of sub-field, if applicable. This may be a Cookie or Header name for instance
         */
        subField?: pulumi.Input<string>;
    }
}

export namespace Me {
}

export namespace OVHcloud {
}

export namespace Okms {
    export interface OkmsIam {
        /**
         * (String) Resource display name
         */
        displayName?: pulumi.Input<string>;
        /**
         * (String) Unique identifier of the resource
         */
        id?: pulumi.Input<string>;
        /**
         * (Map of String) Resource tags. Tags that were internally computed are prefixed with ovh:
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * (String) Unique resource name used in policies
         */
        urn?: pulumi.Input<string>;
    }

    export interface ServiceKeyJWKIam {
        /**
         * Resource display name
         */
        displayName?: pulumi.Input<string>;
        /**
         * Unique identifier of the resource
         */
        id?: pulumi.Input<string>;
        /**
         * Resource tags. Tags that were internally computed are prefixed with ovh:
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * Unique resource name used in policies
         */
        urn?: pulumi.Input<string>;
    }

    export interface ServiceKeyJWKKey {
        /**
         * The algorithm intended to be used with the key
         */
        alg?: pulumi.Input<string>;
        /**
         * The cryptographic curve used with the key
         */
        crv?: pulumi.Input<string>;
        /**
         * The RSA or EC private exponent
         */
        d?: pulumi.Input<string>;
        /**
         * The RSA private key's first factor CRT exponent
         */
        dp?: pulumi.Input<string>;
        /**
         * The RSA private key's second factor CRT exponent
         */
        dq?: pulumi.Input<string>;
        /**
         * The exponent value for the RSA public key
         */
        e?: pulumi.Input<string>;
        /**
         * The value of the symmetric (or other single-valued) key
         */
        k?: pulumi.Input<string>;
        /**
         * The operation for which the key is intended to be used
         */
        keyOps: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * key ID parameter used to match a specific key
         */
        kid?: pulumi.Input<string>;
        /**
         * Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC
         */
        kty: pulumi.Input<string>;
        /**
         * The modulus value for the RSA public key
         */
        n?: pulumi.Input<string>;
        /**
         * The first prime factor of the RSA private key
         */
        p?: pulumi.Input<string>;
        /**
         * The second prime factor of the RSA private key
         */
        q?: pulumi.Input<string>;
        /**
         * The CRT coefficient of the second factor of the RSA private key
         */
        qi?: pulumi.Input<string>;
        /**
         * The intended use of the public key
         */
        use?: pulumi.Input<string>;
        /**
         * The x coordinate for the Elliptic Curve point
         */
        x?: pulumi.Input<string>;
        /**
         * The y coordinate for the Elliptic Curve point
         */
        y?: pulumi.Input<string>;
    }
}

export namespace Order {
}

export namespace VMware {
}

export namespace Vps {
    export interface VpsIam {
        /**
         * Custom display name
         */
        displayName?: pulumi.Input<string>;
        /**
         * Unique identifier of the resource in the IAM
         */
        id?: pulumi.Input<string>;
        /**
         * Resource tags. Tags that were internally computed are prefixed with `ovh:`
         */
        tags?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
        /**
         * URN of the private database, used when writing IAM policies
         */
        urn?: pulumi.Input<string>;
    }

    export interface VpsModel {
        /**
         * All options the VPS can have (additionalDisk┃automatedBackup┃cpanel┃ftpbackup┃plesk┃snapshot┃veeam┃windows)
         */
        availableOptions?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Datacenters where this model is available
         */
        datacenters?: pulumi.Input<pulumi.Input<string>[]>;
        /**
         * Disk capacity of this VPS
         */
        disk?: pulumi.Input<number>;
        /**
         * Maximum number of additional IPs
         */
        maximumAdditionnalIp?: pulumi.Input<number>;
        /**
         * RAM of the VPS
         */
        memory?: pulumi.Input<number>;
        /**
         * Name of the VPS
         */
        name?: pulumi.Input<string>;
        /**
         * Description of this VPS offer
         */
        offer?: pulumi.Input<string>;
        /**
         * Number of vcores
         */
        vcore?: pulumi.Input<number>;
        /**
         * All versions that VPS can have (2013v1┃2014v1┃2015v1┃2017v1┃2017v2┃2017v3┃2018v1┃2018v2┃2019v1)
         */
        version?: pulumi.Input<string>;
    }

    export interface VpsOrder {
        date?: pulumi.Input<string>;
        details?: pulumi.Input<pulumi.Input<inputs.Vps.VpsOrderDetail>[]>;
        expirationDate?: pulumi.Input<string>;
        orderId?: pulumi.Input<number>;
    }

    export interface VpsOrderDetail {
        description?: pulumi.Input<string>;
        /**
         * Product type of item in order
         */
        detailType?: pulumi.Input<string>;
        domain?: pulumi.Input<string>;
        orderDetailId?: pulumi.Input<number>;
        quantity?: pulumi.Input<string>;
    }

    export interface VpsPlan {
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Vps.VpsPlanConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Cart item to be linked
         */
        itemId?: pulumi.Input<number>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
        /**
         * Quantity of product desired
         */
        quantity?: pulumi.Input<number>;
    }

    export interface VpsPlanConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in api.ovh.com
         */
        value: pulumi.Input<string>;
    }

    export interface VpsPlanOption {
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Vps.VpsPlanOptionConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
        /**
         * Quantity of product desired
         */
        quantity: pulumi.Input<number>;
    }

    export interface VpsPlanOptionConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in api.ovh.com
         */
        value: pulumi.Input<string>;
    }
}

export namespace Vrack {
    export interface VrackOrder {
        /**
         * date
         */
        date?: pulumi.Input<string>;
        /**
         * Information about a Bill entry
         */
        details?: pulumi.Input<pulumi.Input<inputs.Vrack.VrackOrderDetail>[]>;
        /**
         * expiration date
         */
        expirationDate?: pulumi.Input<string>;
        /**
         * order id
         */
        orderId?: pulumi.Input<number>;
    }

    export interface VrackOrderDetail {
        /**
         * yourvrackdescription
         */
        description?: pulumi.Input<string>;
        /**
         * expiration date
         */
        domain?: pulumi.Input<string>;
        /**
         * order detail id
         */
        orderDetailId?: pulumi.Input<number>;
        /**
         * quantity
         */
        quantity?: pulumi.Input<string>;
    }

    export interface VrackPlan {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Vrack.VrackPlanConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface VrackPlanConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }

    export interface VrackPlanOption {
        /**
         * Catalog name
         */
        catalogName?: pulumi.Input<string>;
        /**
         * Representation of a configuration item for personalizing product
         */
        configurations?: pulumi.Input<pulumi.Input<inputs.Vrack.VrackPlanOptionConfiguration>[]>;
        /**
         * duration
         */
        duration: pulumi.Input<string>;
        /**
         * Plan code
         */
        planCode: pulumi.Input<string>;
        /**
         * Pricing model identifier
         */
        pricingMode: pulumi.Input<string>;
    }

    export interface VrackPlanOptionConfiguration {
        /**
         * Identifier of the resource
         */
        label: pulumi.Input<string>;
        /**
         * Path to the resource in API.OVH.COM
         */
        value: pulumi.Input<string>;
    }
}
