// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetVpsArgs, GetVpsResult, GetVpsOutputArgs } from "./getVps";
export const getVps: typeof import("./getVps").getVps = null as any;
export const getVpsOutput: typeof import("./getVps").getVpsOutput = null as any;
utilities.lazyLoad(exports, ["getVps","getVpsOutput"], () => require("./getVps"));

export { GetVpssResult } from "./getVpss";
export const getVpss: typeof import("./getVpss").getVpss = null as any;
export const getVpssOutput: typeof import("./getVpss").getVpssOutput = null as any;
utilities.lazyLoad(exports, ["getVpss","getVpssOutput"], () => require("./getVpss"));

export { VpsArgs, VpsState } from "./vps";
export type Vps = import("./vps").Vps;
export const Vps: typeof import("./vps").Vps = null as any;
utilities.lazyLoad(exports, ["Vps"], () => require("./vps"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "ovh:Vps/vps:Vps":
                return new Vps(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("ovh", "Vps/vps", _module)
