// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 */
export class Name extends pulumi.CustomResource {
    /**
     * Get an existing Name resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NameState, opts?: pulumi.CustomResourceOptions): Name {
        return new Name(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:Domain/name:Name';

    /**
     * Returns true if the given object is an instance of Name.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Name {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Name.__pulumiType;
    }

    /**
     * Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
     */
    public readonly checksum!: pulumi.Output<string>;
    /**
     * Current state of the domain name
     */
    public /*out*/ readonly currentState!: pulumi.Output<outputs.Domain.NameCurrentState>;
    /**
     * Ongoing asynchronous tasks related to the domain name resource
     */
    public /*out*/ readonly currentTasks!: pulumi.Output<outputs.Domain.NameCurrentTask[]>;
    /**
     * Domain name
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * IAM resource metadata
     */
    public /*out*/ readonly iam!: pulumi.Output<outputs.Domain.NameIam>;
    /**
     * Details about an Order
     */
    public /*out*/ readonly order!: pulumi.Output<outputs.Domain.NameOrder>;
    /**
     * OVH subsidiaries
     */
    public readonly ovhSubsidiary!: pulumi.Output<string | undefined>;
    public readonly planOptions!: pulumi.Output<outputs.Domain.NamePlanOption[]>;
    public readonly plans!: pulumi.Output<outputs.Domain.NamePlan[]>;
    /**
     * Reflects the readiness of the domain name resource. A new target specification request will be accepted only in `READY`, `UPDATING` or `ERROR` status
     */
    public /*out*/ readonly resourceStatus!: pulumi.Output<string>;
    /**
     * Latest target specification of the domain name resource.
     */
    public readonly targetSpec!: pulumi.Output<outputs.Domain.NameTargetSpec>;

    /**
     * Create a Name resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NameArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NameArgs | NameState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NameState | undefined;
            resourceInputs["checksum"] = state ? state.checksum : undefined;
            resourceInputs["currentState"] = state ? state.currentState : undefined;
            resourceInputs["currentTasks"] = state ? state.currentTasks : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["iam"] = state ? state.iam : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["ovhSubsidiary"] = state ? state.ovhSubsidiary : undefined;
            resourceInputs["planOptions"] = state ? state.planOptions : undefined;
            resourceInputs["plans"] = state ? state.plans : undefined;
            resourceInputs["resourceStatus"] = state ? state.resourceStatus : undefined;
            resourceInputs["targetSpec"] = state ? state.targetSpec : undefined;
        } else {
            const args = argsOrState as NameArgs | undefined;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            resourceInputs["checksum"] = args ? args.checksum : undefined;
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["ovhSubsidiary"] = args ? args.ovhSubsidiary : undefined;
            resourceInputs["planOptions"] = args ? args.planOptions : undefined;
            resourceInputs["plans"] = args ? args.plans : undefined;
            resourceInputs["targetSpec"] = args ? args.targetSpec : undefined;
            resourceInputs["currentState"] = undefined /*out*/;
            resourceInputs["currentTasks"] = undefined /*out*/;
            resourceInputs["iam"] = undefined /*out*/;
            resourceInputs["order"] = undefined /*out*/;
            resourceInputs["resourceStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Name.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Name resources.
 */
export interface NameState {
    /**
     * Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
     */
    checksum?: pulumi.Input<string>;
    /**
     * Current state of the domain name
     */
    currentState?: pulumi.Input<inputs.Domain.NameCurrentState>;
    /**
     * Ongoing asynchronous tasks related to the domain name resource
     */
    currentTasks?: pulumi.Input<pulumi.Input<inputs.Domain.NameCurrentTask>[]>;
    /**
     * Domain name
     */
    domainName?: pulumi.Input<string>;
    /**
     * IAM resource metadata
     */
    iam?: pulumi.Input<inputs.Domain.NameIam>;
    /**
     * Details about an Order
     */
    order?: pulumi.Input<inputs.Domain.NameOrder>;
    /**
     * OVH subsidiaries
     */
    ovhSubsidiary?: pulumi.Input<string>;
    planOptions?: pulumi.Input<pulumi.Input<inputs.Domain.NamePlanOption>[]>;
    plans?: pulumi.Input<pulumi.Input<inputs.Domain.NamePlan>[]>;
    /**
     * Reflects the readiness of the domain name resource. A new target specification request will be accepted only in `READY`, `UPDATING` or `ERROR` status
     */
    resourceStatus?: pulumi.Input<string>;
    /**
     * Latest target specification of the domain name resource.
     */
    targetSpec?: pulumi.Input<inputs.Domain.NameTargetSpec>;
}

/**
 * The set of arguments for constructing a Name resource.
 */
export interface NameArgs {
    /**
     * Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
     */
    checksum?: pulumi.Input<string>;
    /**
     * Domain name
     */
    domainName: pulumi.Input<string>;
    /**
     * OVH subsidiaries
     */
    ovhSubsidiary?: pulumi.Input<string>;
    planOptions?: pulumi.Input<pulumi.Input<inputs.Domain.NamePlanOption>[]>;
    plans?: pulumi.Input<pulumi.Input<inputs.Domain.NamePlan>[]>;
    /**
     * Latest target specification of the domain name resource.
     */
    targetSpec?: pulumi.Input<inputs.Domain.NameTargetSpec>;
}
