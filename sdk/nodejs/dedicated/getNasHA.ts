// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getNasHA(args: GetNasHAArgs, opts?: pulumi.InvokeOptions): Promise<GetNasHAResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:Dedicated/getNasHA:getNasHA", {
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getNasHA.
 */
export interface GetNasHAArgs {
    serviceName: string;
}

/**
 * A collection of values returned by getNasHA.
 */
export interface GetNasHAResult {
    readonly NasHAURN: string;
    readonly canCreatePartition: boolean;
    readonly customName: string;
    readonly datacenter: string;
    readonly diskType: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ip: string;
    readonly monitored: boolean;
    readonly partitionsLists: string[];
    readonly serviceName: string;
    readonly zpoolCapacity: number;
    readonly zpoolSize: number;
}
export function getNasHAOutput(args: GetNasHAOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetNasHAResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ovh:Dedicated/getNasHA:getNasHA", {
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getNasHA.
 */
export interface GetNasHAOutputArgs {
    serviceName: pulumi.Input<string>;
}
