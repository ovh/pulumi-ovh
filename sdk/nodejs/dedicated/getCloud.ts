// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get information about a Managed VMware service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@pulumi/ovh";
 *
 * const pcc = ovh.Dedicated.getCloud({
 *     serviceName: "<Dedicated Cloud service name>",
 * });
 * ```
 */
export function getCloud(args: GetCloudArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:Dedicated/getCloud:getCloud", {
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloud.
 */
export interface GetCloudArgs {
    /**
     * Domain of the service
     */
    serviceName: string;
}

/**
 * A collection of values returned by getCloud.
 */
export interface GetCloudResult {
    /**
     * Advanced security state
     */
    readonly advancedSecurity: boolean;
    /**
     * The current bandwidth of your VMware on OVHcloud
     */
    readonly bandwidth: string;
    /**
     * Billing type of your VMware on OVHcloud
     */
    readonly billingType: string;
    /**
     * Can the PCC be migrated to VCD
     */
    readonly canMigrateToVcd: boolean;
    /**
     * Url to the VMware on OVHcloud certified interface
     */
    readonly certifiedInterfaceUrl: string;
    /**
     * The current version of your VMware on OVHcloud
     */
    readonly commercialRange: string;
    /**
     * Description of your VMware on OVHcloud
     */
    readonly description: string;
    /**
     * Generation of your VMware on OVHcloud
     */
    readonly generation: string;
    /**
     * IAM resource metadata
     */
    readonly iam: outputs.Dedicated.GetCloudIam;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Datacenter where your VMware on OVHcloud is physically located
     */
    readonly location: string;
    /**
     * The management interface name
     */
    readonly managementInterface: string;
    /**
     * The reference universe information for your VMware on OVHcloud
     */
    readonly productReference: string;
    /**
     * Domain of the service
     */
    readonly serviceName: string;
    /**
     * Name of the current service pack
     */
    readonly servicePackName: string;
    /**
     * SPLA licensing state
     */
    readonly spla: boolean;
    /**
     * Enable SSL v3 support. Warning : this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy
     */
    readonly sslV3: boolean;
    /**
     * Current state of your VMware on OVHcloud
     */
    readonly state: string;
    /**
     * Access policy of your VMware on OVHcloud : opened to every IPs or filtered
     */
    readonly userAccessPolicy: string;
    /**
     * The maximum amount of connected users allowed on the VMware on OVHcloud management interface
     */
    readonly userLimitConcurrentSession: number;
    /**
     * Which user will be disconnected first in case of quota of maximum connection is reached
     */
    readonly userLogoutPolicy: string;
    /**
     * The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout
     */
    readonly userSessionTimeout: number;
    /**
     * Url to the VMware on OVHcloud vScope interface
     */
    readonly vScopeUrl: string;
    /**
     * Version of the management interface
     */
    readonly version: outputs.Dedicated.GetCloudVersion;
    /**
     * Url to the VMware on OVHcloud web interface
     */
    readonly webInterfaceUrl: string;
}
/**
 * Get information about a Managed VMware service.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@pulumi/ovh";
 *
 * const pcc = ovh.Dedicated.getCloud({
 *     serviceName: "<Dedicated Cloud service name>",
 * });
 * ```
 */
export function getCloudOutput(args: GetCloudOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ovh:Dedicated/getCloud:getCloud", {
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloud.
 */
export interface GetCloudOutputArgs {
    /**
     * Domain of the service
     */
    serviceName: pulumi.Input<string>;
}
