// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates a datacenter configuration for an Ovhcloud Connect product.
 *
 * For the `datacenterId` in the `Required` section, you will need to choose an available datacenter from the data-source `ovh.getOvhcloudConnectDatacenters`.
 */
export class OvhcloudConnectPopDatacenterConfig extends pulumi.CustomResource {
    /**
     * Get an existing OvhcloudConnectPopDatacenterConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OvhcloudConnectPopDatacenterConfigState, opts?: pulumi.CustomResourceOptions): OvhcloudConnectPopDatacenterConfig {
        return new OvhcloudConnectPopDatacenterConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/ovhcloudConnectPopDatacenterConfig:OvhcloudConnectPopDatacenterConfig';

    /**
     * Returns true if the given object is an instance of OvhcloudConnectPopDatacenterConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OvhcloudConnectPopDatacenterConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OvhcloudConnectPopDatacenterConfig.__pulumiType;
    }

    /**
     * ID of the pop configuration
     */
    public readonly configPopId!: pulumi.Output<number>;
    /**
     * ID of the datacenter linked
     */
    public readonly datacenterId!: pulumi.Output<number>;
    /**
     * OVH Private AS
     */
    public readonly ovhBgpArea!: pulumi.Output<number>;
    /**
     * Service name
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Status of the pop configuration
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Subnet should be a /28 min
     */
    public readonly subnet!: pulumi.Output<string>;

    /**
     * Create a OvhcloudConnectPopDatacenterConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OvhcloudConnectPopDatacenterConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OvhcloudConnectPopDatacenterConfigArgs | OvhcloudConnectPopDatacenterConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OvhcloudConnectPopDatacenterConfigState | undefined;
            resourceInputs["configPopId"] = state ? state.configPopId : undefined;
            resourceInputs["datacenterId"] = state ? state.datacenterId : undefined;
            resourceInputs["ovhBgpArea"] = state ? state.ovhBgpArea : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
        } else {
            const args = argsOrState as OvhcloudConnectPopDatacenterConfigArgs | undefined;
            if ((!args || args.configPopId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configPopId'");
            }
            if ((!args || args.datacenterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'datacenterId'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["configPopId"] = args ? args.configPopId : undefined;
            resourceInputs["datacenterId"] = args ? args.datacenterId : undefined;
            resourceInputs["ovhBgpArea"] = args ? args.ovhBgpArea : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OvhcloudConnectPopDatacenterConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OvhcloudConnectPopDatacenterConfig resources.
 */
export interface OvhcloudConnectPopDatacenterConfigState {
    /**
     * ID of the pop configuration
     */
    configPopId?: pulumi.Input<number>;
    /**
     * ID of the datacenter linked
     */
    datacenterId?: pulumi.Input<number>;
    /**
     * OVH Private AS
     */
    ovhBgpArea?: pulumi.Input<number>;
    /**
     * Service name
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Status of the pop configuration
     */
    status?: pulumi.Input<string>;
    /**
     * Subnet should be a /28 min
     */
    subnet?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OvhcloudConnectPopDatacenterConfig resource.
 */
export interface OvhcloudConnectPopDatacenterConfigArgs {
    /**
     * ID of the pop configuration
     */
    configPopId: pulumi.Input<number>;
    /**
     * ID of the datacenter linked
     */
    datacenterId: pulumi.Input<number>;
    /**
     * OVH Private AS
     */
    ovhBgpArea?: pulumi.Input<number>;
    /**
     * Service name
     */
    serviceName: pulumi.Input<string>;
    /**
     * Subnet should be a /28 min
     */
    subnet?: pulumi.Input<string>;
}
