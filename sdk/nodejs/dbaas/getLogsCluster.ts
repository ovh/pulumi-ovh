// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getLogsCluster(args: GetLogsClusterArgs, opts?: pulumi.InvokeOptions): Promise<GetLogsClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:Dbaas/getLogsCluster:getLogsCluster", {
        "clusterId": args.clusterId,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogsCluster.
 */
export interface GetLogsClusterArgs {
    clusterId?: string;
    serviceName: string;
}

/**
 * A collection of values returned by getLogsCluster.
 */
export interface GetLogsClusterResult {
    readonly archiveAllowedNetworks: string[];
    readonly clusterId: string;
    readonly clusterType: string;
    readonly dedicatedInputPem: string;
    readonly directInputAllowedNetworks: string[];
    readonly directInputPem: string;
    readonly hostname: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isDefault: boolean;
    readonly isUnlocked: boolean;
    readonly queryAllowedNetworks: string[];
    readonly region: string;
    readonly serviceName: string;
    readonly urn: string;
}
export function getLogsClusterOutput(args: GetLogsClusterOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLogsClusterResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ovh:Dbaas/getLogsCluster:getLogsCluster", {
        "clusterId": args.clusterId,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getLogsCluster.
 */
export interface GetLogsClusterOutputArgs {
    clusterId?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
