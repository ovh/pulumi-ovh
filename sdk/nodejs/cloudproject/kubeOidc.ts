// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class KubeOidc extends pulumi.CustomResource {
    /**
     * Get an existing KubeOidc resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KubeOidcState, opts?: pulumi.CustomResourceOptions): KubeOidc {
        return new KubeOidc(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:CloudProject/kubeOidc:KubeOidc';

    /**
     * Returns true if the given object is an instance of KubeOidc.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KubeOidc {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KubeOidc.__pulumiType;
    }

    public readonly clientId!: pulumi.Output<string>;
    public readonly issuerUrl!: pulumi.Output<string>;
    public readonly kubeId!: pulumi.Output<string>;
    public readonly oidcCaContent!: pulumi.Output<string | undefined>;
    public readonly oidcGroupsClaims!: pulumi.Output<string[] | undefined>;
    public readonly oidcGroupsPrefix!: pulumi.Output<string | undefined>;
    public readonly oidcRequiredClaims!: pulumi.Output<string[] | undefined>;
    public readonly oidcSigningAlgs!: pulumi.Output<string[] | undefined>;
    public readonly oidcUsernameClaim!: pulumi.Output<string | undefined>;
    public readonly oidcUsernamePrefix!: pulumi.Output<string | undefined>;
    public readonly serviceName!: pulumi.Output<string>;

    /**
     * Create a KubeOidc resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KubeOidcArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KubeOidcArgs | KubeOidcState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KubeOidcState | undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["issuerUrl"] = state ? state.issuerUrl : undefined;
            resourceInputs["kubeId"] = state ? state.kubeId : undefined;
            resourceInputs["oidcCaContent"] = state ? state.oidcCaContent : undefined;
            resourceInputs["oidcGroupsClaims"] = state ? state.oidcGroupsClaims : undefined;
            resourceInputs["oidcGroupsPrefix"] = state ? state.oidcGroupsPrefix : undefined;
            resourceInputs["oidcRequiredClaims"] = state ? state.oidcRequiredClaims : undefined;
            resourceInputs["oidcSigningAlgs"] = state ? state.oidcSigningAlgs : undefined;
            resourceInputs["oidcUsernameClaim"] = state ? state.oidcUsernameClaim : undefined;
            resourceInputs["oidcUsernamePrefix"] = state ? state.oidcUsernamePrefix : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
        } else {
            const args = argsOrState as KubeOidcArgs | undefined;
            if ((!args || args.clientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clientId'");
            }
            if ((!args || args.issuerUrl === undefined) && !opts.urn) {
                throw new Error("Missing required property 'issuerUrl'");
            }
            if ((!args || args.kubeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'kubeId'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["issuerUrl"] = args ? args.issuerUrl : undefined;
            resourceInputs["kubeId"] = args ? args.kubeId : undefined;
            resourceInputs["oidcCaContent"] = args ? args.oidcCaContent : undefined;
            resourceInputs["oidcGroupsClaims"] = args ? args.oidcGroupsClaims : undefined;
            resourceInputs["oidcGroupsPrefix"] = args ? args.oidcGroupsPrefix : undefined;
            resourceInputs["oidcRequiredClaims"] = args ? args.oidcRequiredClaims : undefined;
            resourceInputs["oidcSigningAlgs"] = args ? args.oidcSigningAlgs : undefined;
            resourceInputs["oidcUsernameClaim"] = args ? args.oidcUsernameClaim : undefined;
            resourceInputs["oidcUsernamePrefix"] = args ? args.oidcUsernamePrefix : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KubeOidc.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KubeOidc resources.
 */
export interface KubeOidcState {
    clientId?: pulumi.Input<string>;
    issuerUrl?: pulumi.Input<string>;
    kubeId?: pulumi.Input<string>;
    oidcCaContent?: pulumi.Input<string>;
    oidcGroupsClaims?: pulumi.Input<pulumi.Input<string>[]>;
    oidcGroupsPrefix?: pulumi.Input<string>;
    oidcRequiredClaims?: pulumi.Input<pulumi.Input<string>[]>;
    oidcSigningAlgs?: pulumi.Input<pulumi.Input<string>[]>;
    oidcUsernameClaim?: pulumi.Input<string>;
    oidcUsernamePrefix?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KubeOidc resource.
 */
export interface KubeOidcArgs {
    clientId: pulumi.Input<string>;
    issuerUrl: pulumi.Input<string>;
    kubeId: pulumi.Input<string>;
    oidcCaContent?: pulumi.Input<string>;
    oidcGroupsClaims?: pulumi.Input<pulumi.Input<string>[]>;
    oidcGroupsPrefix?: pulumi.Input<string>;
    oidcRequiredClaims?: pulumi.Input<pulumi.Input<string>[]>;
    oidcSigningAlgs?: pulumi.Input<pulumi.Input<string>[]>;
    oidcUsernameClaim?: pulumi.Input<string>;
    oidcUsernamePrefix?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
