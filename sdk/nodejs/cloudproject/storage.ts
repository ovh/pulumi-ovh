// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const storage = new ovh.cloudproject.Storage("storage", {
 *     regionName: "GRA",
 *     serviceName: "<public cloud project ID>",
 *     versioning: {
 *         status: "enabled",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * A storage in a public cloud project can be imported using the `service_name`, `region_name` and `name` attributes. Using the following configuration:
 *
 * terraform
 *
 * import {
 *
 *   id = "<service_name>/<region_name>/<name>"
 *
 *   to = ovh_cloud_project_storage.storage
 *
 * }
 *
 * You can then run:
 *
 * bash
 *
 * $ pulumi preview -generate-config-out=storage.tf
 *
 * $ pulumi up
 *
 * The file `storage.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.
 */
export class Storage extends pulumi.CustomResource {
    /**
     * Get an existing Storage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageState, opts?: pulumi.CustomResourceOptions): Storage {
        return new Storage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:CloudProject/storage:Storage';

    /**
     * Returns true if the given object is an instance of Storage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Storage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Storage.__pulumiType;
    }

    /**
     * The date and timestamp when the resource was created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Encryption configuration
     */
    public readonly encryption!: pulumi.Output<outputs.CloudProject.StorageEncryption>;
    /**
     * Limit the number of objects returned (1000 maximum, defaults to 1000)
     */
    public readonly limit!: pulumi.Output<number>;
    /**
     * Key to start with when listing objects
     */
    public readonly marker!: pulumi.Output<string>;
    /**
     * Container name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Container objects
     */
    public /*out*/ readonly objects!: pulumi.Output<outputs.CloudProject.StorageObject[]>;
    /**
     * Container total objects count
     */
    public /*out*/ readonly objectsCount!: pulumi.Output<number>;
    /**
     * Container total objects size (bytes)
     */
    public /*out*/ readonly objectsSize!: pulumi.Output<number>;
    /**
     * Container owner user ID
     */
    public readonly ownerId!: pulumi.Output<number>;
    /**
     * List objects whose key begins with this prefix
     */
    public readonly prefix!: pulumi.Output<string>;
    /**
     * Container region
     */
    public /*out*/ readonly region!: pulumi.Output<string>;
    /**
     * Region name
     */
    public readonly regionName!: pulumi.Output<string>;
    /**
     * Replication configuration
     */
    public readonly replication!: pulumi.Output<outputs.CloudProject.StorageReplication>;
    /**
     * Service name
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Versioning configuration
     */
    public readonly versioning!: pulumi.Output<outputs.CloudProject.StorageVersioning>;
    /**
     * Container virtual host
     */
    public /*out*/ readonly virtualHost!: pulumi.Output<string>;

    /**
     * Create a Storage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageArgs | StorageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageState | undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["encryption"] = state ? state.encryption : undefined;
            resourceInputs["limit"] = state ? state.limit : undefined;
            resourceInputs["marker"] = state ? state.marker : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["objects"] = state ? state.objects : undefined;
            resourceInputs["objectsCount"] = state ? state.objectsCount : undefined;
            resourceInputs["objectsSize"] = state ? state.objectsSize : undefined;
            resourceInputs["ownerId"] = state ? state.ownerId : undefined;
            resourceInputs["prefix"] = state ? state.prefix : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["regionName"] = state ? state.regionName : undefined;
            resourceInputs["replication"] = state ? state.replication : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["versioning"] = state ? state.versioning : undefined;
            resourceInputs["virtualHost"] = state ? state.virtualHost : undefined;
        } else {
            const args = argsOrState as StorageArgs | undefined;
            if ((!args || args.regionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'regionName'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["encryption"] = args ? args.encryption : undefined;
            resourceInputs["limit"] = args ? args.limit : undefined;
            resourceInputs["marker"] = args ? args.marker : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["ownerId"] = args ? args.ownerId : undefined;
            resourceInputs["prefix"] = args ? args.prefix : undefined;
            resourceInputs["regionName"] = args ? args.regionName : undefined;
            resourceInputs["replication"] = args ? args.replication : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["versioning"] = args ? args.versioning : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["objects"] = undefined /*out*/;
            resourceInputs["objectsCount"] = undefined /*out*/;
            resourceInputs["objectsSize"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["virtualHost"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Storage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Storage resources.
 */
export interface StorageState {
    /**
     * The date and timestamp when the resource was created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Encryption configuration
     */
    encryption?: pulumi.Input<inputs.CloudProject.StorageEncryption>;
    /**
     * Limit the number of objects returned (1000 maximum, defaults to 1000)
     */
    limit?: pulumi.Input<number>;
    /**
     * Key to start with when listing objects
     */
    marker?: pulumi.Input<string>;
    /**
     * Container name
     */
    name?: pulumi.Input<string>;
    /**
     * Container objects
     */
    objects?: pulumi.Input<pulumi.Input<inputs.CloudProject.StorageObject>[]>;
    /**
     * Container total objects count
     */
    objectsCount?: pulumi.Input<number>;
    /**
     * Container total objects size (bytes)
     */
    objectsSize?: pulumi.Input<number>;
    /**
     * Container owner user ID
     */
    ownerId?: pulumi.Input<number>;
    /**
     * List objects whose key begins with this prefix
     */
    prefix?: pulumi.Input<string>;
    /**
     * Container region
     */
    region?: pulumi.Input<string>;
    /**
     * Region name
     */
    regionName?: pulumi.Input<string>;
    /**
     * Replication configuration
     */
    replication?: pulumi.Input<inputs.CloudProject.StorageReplication>;
    /**
     * Service name
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Versioning configuration
     */
    versioning?: pulumi.Input<inputs.CloudProject.StorageVersioning>;
    /**
     * Container virtual host
     */
    virtualHost?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Storage resource.
 */
export interface StorageArgs {
    /**
     * Encryption configuration
     */
    encryption?: pulumi.Input<inputs.CloudProject.StorageEncryption>;
    /**
     * Limit the number of objects returned (1000 maximum, defaults to 1000)
     */
    limit?: pulumi.Input<number>;
    /**
     * Key to start with when listing objects
     */
    marker?: pulumi.Input<string>;
    /**
     * Container name
     */
    name?: pulumi.Input<string>;
    /**
     * Container owner user ID
     */
    ownerId?: pulumi.Input<number>;
    /**
     * List objects whose key begins with this prefix
     */
    prefix?: pulumi.Input<string>;
    /**
     * Region name
     */
    regionName: pulumi.Input<string>;
    /**
     * Replication configuration
     */
    replication?: pulumi.Input<inputs.CloudProject.StorageReplication>;
    /**
     * Service name
     */
    serviceName: pulumi.Input<string>;
    /**
     * Versioning configuration
     */
    versioning?: pulumi.Input<inputs.CloudProject.StorageVersioning>;
}
