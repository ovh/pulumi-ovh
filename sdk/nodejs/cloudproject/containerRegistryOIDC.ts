// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ContainerRegistryOIDC extends pulumi.CustomResource {
    /**
     * Get an existing ContainerRegistryOIDC resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerRegistryOIDCState, opts?: pulumi.CustomResourceOptions): ContainerRegistryOIDC {
        return new ContainerRegistryOIDC(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:CloudProject/containerRegistryOIDC:ContainerRegistryOIDC';

    /**
     * Returns true if the given object is an instance of ContainerRegistryOIDC.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContainerRegistryOIDC {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContainerRegistryOIDC.__pulumiType;
    }

    public readonly deleteUsers!: pulumi.Output<boolean | undefined>;
    public readonly oidcAdminGroup!: pulumi.Output<string | undefined>;
    public readonly oidcAutoOnboard!: pulumi.Output<boolean | undefined>;
    public readonly oidcClientId!: pulumi.Output<string>;
    public readonly oidcClientSecret!: pulumi.Output<string>;
    public readonly oidcEndpoint!: pulumi.Output<string>;
    public readonly oidcGroupsClaim!: pulumi.Output<string | undefined>;
    public readonly oidcName!: pulumi.Output<string>;
    public readonly oidcScope!: pulumi.Output<string>;
    public readonly oidcUserClaim!: pulumi.Output<string | undefined>;
    public readonly oidcVerifyCert!: pulumi.Output<boolean | undefined>;
    public readonly registryId!: pulumi.Output<string>;
    public readonly serviceName!: pulumi.Output<string>;

    /**
     * Create a ContainerRegistryOIDC resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ContainerRegistryOIDCArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContainerRegistryOIDCArgs | ContainerRegistryOIDCState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContainerRegistryOIDCState | undefined;
            resourceInputs["deleteUsers"] = state ? state.deleteUsers : undefined;
            resourceInputs["oidcAdminGroup"] = state ? state.oidcAdminGroup : undefined;
            resourceInputs["oidcAutoOnboard"] = state ? state.oidcAutoOnboard : undefined;
            resourceInputs["oidcClientId"] = state ? state.oidcClientId : undefined;
            resourceInputs["oidcClientSecret"] = state ? state.oidcClientSecret : undefined;
            resourceInputs["oidcEndpoint"] = state ? state.oidcEndpoint : undefined;
            resourceInputs["oidcGroupsClaim"] = state ? state.oidcGroupsClaim : undefined;
            resourceInputs["oidcName"] = state ? state.oidcName : undefined;
            resourceInputs["oidcScope"] = state ? state.oidcScope : undefined;
            resourceInputs["oidcUserClaim"] = state ? state.oidcUserClaim : undefined;
            resourceInputs["oidcVerifyCert"] = state ? state.oidcVerifyCert : undefined;
            resourceInputs["registryId"] = state ? state.registryId : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
        } else {
            const args = argsOrState as ContainerRegistryOIDCArgs | undefined;
            if ((!args || args.oidcClientId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oidcClientId'");
            }
            if ((!args || args.oidcClientSecret === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oidcClientSecret'");
            }
            if ((!args || args.oidcEndpoint === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oidcEndpoint'");
            }
            if ((!args || args.oidcName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oidcName'");
            }
            if ((!args || args.oidcScope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'oidcScope'");
            }
            if ((!args || args.registryId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'registryId'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            resourceInputs["deleteUsers"] = args ? args.deleteUsers : undefined;
            resourceInputs["oidcAdminGroup"] = args ? args.oidcAdminGroup : undefined;
            resourceInputs["oidcAutoOnboard"] = args ? args.oidcAutoOnboard : undefined;
            resourceInputs["oidcClientId"] = args ? args.oidcClientId : undefined;
            resourceInputs["oidcClientSecret"] = args?.oidcClientSecret ? pulumi.secret(args.oidcClientSecret) : undefined;
            resourceInputs["oidcEndpoint"] = args ? args.oidcEndpoint : undefined;
            resourceInputs["oidcGroupsClaim"] = args ? args.oidcGroupsClaim : undefined;
            resourceInputs["oidcName"] = args ? args.oidcName : undefined;
            resourceInputs["oidcScope"] = args ? args.oidcScope : undefined;
            resourceInputs["oidcUserClaim"] = args ? args.oidcUserClaim : undefined;
            resourceInputs["oidcVerifyCert"] = args ? args.oidcVerifyCert : undefined;
            resourceInputs["registryId"] = args ? args.registryId : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["oidcClientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ContainerRegistryOIDC.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ContainerRegistryOIDC resources.
 */
export interface ContainerRegistryOIDCState {
    deleteUsers?: pulumi.Input<boolean>;
    oidcAdminGroup?: pulumi.Input<string>;
    oidcAutoOnboard?: pulumi.Input<boolean>;
    oidcClientId?: pulumi.Input<string>;
    oidcClientSecret?: pulumi.Input<string>;
    oidcEndpoint?: pulumi.Input<string>;
    oidcGroupsClaim?: pulumi.Input<string>;
    oidcName?: pulumi.Input<string>;
    oidcScope?: pulumi.Input<string>;
    oidcUserClaim?: pulumi.Input<string>;
    oidcVerifyCert?: pulumi.Input<boolean>;
    registryId?: pulumi.Input<string>;
    serviceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ContainerRegistryOIDC resource.
 */
export interface ContainerRegistryOIDCArgs {
    deleteUsers?: pulumi.Input<boolean>;
    oidcAdminGroup?: pulumi.Input<string>;
    oidcAutoOnboard?: pulumi.Input<boolean>;
    oidcClientId: pulumi.Input<string>;
    oidcClientSecret: pulumi.Input<string>;
    oidcEndpoint: pulumi.Input<string>;
    oidcGroupsClaim?: pulumi.Input<string>;
    oidcName: pulumi.Input<string>;
    oidcScope: pulumi.Input<string>;
    oidcUserClaim?: pulumi.Input<string>;
    oidcVerifyCert?: pulumi.Input<boolean>;
    registryId: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
}
