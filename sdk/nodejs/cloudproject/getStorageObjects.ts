// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Get objects of S3™* compatible storage containers. \* S3 is a trademark filed by Amazon Technologies,Inc. OVHcloud's service is not sponsored by, endorsed by, or otherwise affiliated with Amazon Technologies,Inc.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@pulumi/ovh";
 *
 * const objects = ovh.CloudProject.getStorageObjects({
 *     name: "<bucket name>",
 *     regionName: "GRA",
 *     serviceName: "<public cloud project ID>",
 * });
 * ```
 */
export function getStorageObjects(args: GetStorageObjectsArgs, opts?: pulumi.InvokeOptions): Promise<GetStorageObjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:CloudProject/getStorageObjects:getStorageObjects", {
        "keyMarker": args.keyMarker,
        "limit": args.limit,
        "name": args.name,
        "prefix": args.prefix,
        "regionName": args.regionName,
        "serviceName": args.serviceName,
        "versionIdMarker": args.versionIdMarker,
        "withVersions": args.withVersions,
    }, opts);
}

/**
 * A collection of arguments for invoking getStorageObjects.
 */
export interface GetStorageObjectsArgs {
    /**
     * Key to start with when listing objects
     */
    keyMarker?: string;
    /**
     * Limit the number of objects returned (1000 maximum, defaults to 1000)
     */
    limit?: number;
    /**
     * Name
     */
    name: string;
    /**
     * List objects whose key begins with this prefix
     */
    prefix?: string;
    /**
     * Region name
     */
    regionName: string;
    /**
     * Service name
     */
    serviceName: string;
    /**
     * Version ID to start listing from
     */
    versionIdMarker?: string;
    /**
     * List object versions
     */
    withVersions?: boolean;
}

/**
 * A collection of values returned by getStorageObjects.
 */
export interface GetStorageObjectsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Key to start with when listing objects
     */
    readonly keyMarker?: string;
    /**
     * Limit the number of objects returned (1000 maximum, defaults to 1000)
     */
    readonly limit?: number;
    /**
     * Name
     */
    readonly name: string;
    readonly objects: outputs.CloudProject.GetStorageObjectsObject[];
    /**
     * List objects whose key begins with this prefix
     */
    readonly prefix?: string;
    /**
     * Region name
     */
    readonly regionName: string;
    /**
     * Service name
     */
    readonly serviceName: string;
    /**
     * Version ID to start listing from
     */
    readonly versionIdMarker?: string;
    /**
     * List object versions
     */
    readonly withVersions?: boolean;
}
/**
 * Get objects of S3™* compatible storage containers. \* S3 is a trademark filed by Amazon Technologies,Inc. OVHcloud's service is not sponsored by, endorsed by, or otherwise affiliated with Amazon Technologies,Inc.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@pulumi/ovh";
 *
 * const objects = ovh.CloudProject.getStorageObjects({
 *     name: "<bucket name>",
 *     regionName: "GRA",
 *     serviceName: "<public cloud project ID>",
 * });
 * ```
 */
export function getStorageObjectsOutput(args: GetStorageObjectsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStorageObjectsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ovh:CloudProject/getStorageObjects:getStorageObjects", {
        "keyMarker": args.keyMarker,
        "limit": args.limit,
        "name": args.name,
        "prefix": args.prefix,
        "regionName": args.regionName,
        "serviceName": args.serviceName,
        "versionIdMarker": args.versionIdMarker,
        "withVersions": args.withVersions,
    }, opts);
}

/**
 * A collection of arguments for invoking getStorageObjects.
 */
export interface GetStorageObjectsOutputArgs {
    /**
     * Key to start with when listing objects
     */
    keyMarker?: pulumi.Input<string>;
    /**
     * Limit the number of objects returned (1000 maximum, defaults to 1000)
     */
    limit?: pulumi.Input<number>;
    /**
     * Name
     */
    name: pulumi.Input<string>;
    /**
     * List objects whose key begins with this prefix
     */
    prefix?: pulumi.Input<string>;
    /**
     * Region name
     */
    regionName: pulumi.Input<string>;
    /**
     * Service name
     */
    serviceName: pulumi.Input<string>;
    /**
     * Version ID to start listing from
     */
    versionIdMarker?: pulumi.Input<string>;
    /**
     * List object versions
     */
    withVersions?: pulumi.Input<boolean>;
}
