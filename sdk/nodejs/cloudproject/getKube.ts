// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getKube(args: GetKubeArgs, opts?: pulumi.InvokeOptions): Promise<GetKubeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:CloudProject/getKube:getKube", {
        "customizationApiservers": args.customizationApiservers,
        "customizationKubeProxy": args.customizationKubeProxy,
        "customizations": args.customizations,
        "kubeId": args.kubeId,
        "kubeProxyMode": args.kubeProxyMode,
        "name": args.name,
        "region": args.region,
        "serviceName": args.serviceName,
        "updatePolicy": args.updatePolicy,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getKube.
 */
export interface GetKubeArgs {
    customizationApiservers?: inputs.CloudProject.GetKubeCustomizationApiserver[];
    customizationKubeProxy?: inputs.CloudProject.GetKubeCustomizationKubeProxy;
    /**
     * @deprecated Use customizationApiserver instead
     */
    customizations?: inputs.CloudProject.GetKubeCustomization[];
    kubeId: string;
    kubeProxyMode?: string;
    name?: string;
    region?: string;
    serviceName: string;
    updatePolicy?: string;
    version?: string;
}

/**
 * A collection of values returned by getKube.
 */
export interface GetKubeResult {
    readonly controlPlaneIsUpToDate: boolean;
    readonly customizationApiservers: outputs.CloudProject.GetKubeCustomizationApiserver[];
    readonly customizationKubeProxy?: outputs.CloudProject.GetKubeCustomizationKubeProxy;
    /**
     * @deprecated Use customizationApiserver instead
     */
    readonly customizations: outputs.CloudProject.GetKubeCustomization[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isUpToDate: boolean;
    readonly kubeId: string;
    readonly kubeProxyMode?: string;
    readonly loadBalancersSubnetId: string;
    readonly name?: string;
    readonly nextUpgradeVersions: string[];
    readonly nodesSubnetId: string;
    readonly nodesUrl: string;
    readonly privateNetworkId: string;
    readonly region?: string;
    readonly serviceName: string;
    readonly status: string;
    readonly updatePolicy?: string;
    readonly url: string;
    readonly version?: string;
}
export function getKubeOutput(args: GetKubeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetKubeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ovh:CloudProject/getKube:getKube", {
        "customizationApiservers": args.customizationApiservers,
        "customizationKubeProxy": args.customizationKubeProxy,
        "customizations": args.customizations,
        "kubeId": args.kubeId,
        "kubeProxyMode": args.kubeProxyMode,
        "name": args.name,
        "region": args.region,
        "serviceName": args.serviceName,
        "updatePolicy": args.updatePolicy,
        "version": args.version,
    }, opts);
}

/**
 * A collection of arguments for invoking getKube.
 */
export interface GetKubeOutputArgs {
    customizationApiservers?: pulumi.Input<pulumi.Input<inputs.CloudProject.GetKubeCustomizationApiserverArgs>[]>;
    customizationKubeProxy?: pulumi.Input<inputs.CloudProject.GetKubeCustomizationKubeProxyArgs>;
    /**
     * @deprecated Use customizationApiserver instead
     */
    customizations?: pulumi.Input<pulumi.Input<inputs.CloudProject.GetKubeCustomizationArgs>[]>;
    kubeId: pulumi.Input<string>;
    kubeProxyMode?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    serviceName: pulumi.Input<string>;
    updatePolicy?: pulumi.Input<string>;
    version?: pulumi.Input<string>;
}
