// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get available regions and their availability zones
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const paris = ovh.getLocation({
 *     name: "eu-west-par",
 * });
 * ```
 */
export function getLocation(args: GetLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetLocationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getLocation:getLocation", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getLocation.
 */
export interface GetLocationArgs {
    /**
     * Name
     */
    name: string;
}

/**
 * A collection of values returned by getLocation.
 */
export interface GetLocationResult {
    /**
     * List of availability zones for the region
     */
    readonly availabilityZones: string[];
    /**
     * Cardinal direction where the region is located
     */
    readonly cardinalPoint: string;
    /**
     * ISO code of the city
     */
    readonly cityCode: string;
    /**
     * Geographical latitude of the city
     */
    readonly cityLatitude: number;
    /**
     * Geographical longitude of the city
     */
    readonly cityLongitude: number;
    /**
     * Full name of the city
     */
    readonly cityName: string;
    /**
     * Region's short code
     */
    readonly code: string;
    /**
     * ISO code of the country
     */
    readonly countryCode: string;
    /**
     * Full name of the country
     */
    readonly countryName: string;
    /**
     * Short code representing the geographical area
     */
    readonly geographyCode: string;
    /**
     * Name of the geographical area
     */
    readonly geographyName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Location of the region
     */
    readonly location: string;
    /**
     * Name
     */
    readonly name: string;
    /**
     * Year the region was opened
     */
    readonly openingYear: number;
    /**
     * Specific typology of the region
     */
    readonly specificType: string;
    /**
     * General typology of the region
     */
    readonly type: string;
}
/**
 * Get available regions and their availability zones
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const paris = ovh.getLocation({
 *     name: "eu-west-par",
 * });
 * ```
 */
export function getLocationOutput(args: GetLocationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetLocationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ovh:index/getLocation:getLocation", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getLocation.
 */
export interface GetLocationOutputArgs {
    /**
     * Name
     */
    name: pulumi.Input<string>;
}
