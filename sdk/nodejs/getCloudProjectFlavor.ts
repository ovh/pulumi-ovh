// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieves the given flavor in a public cloud project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const flavor = ovh.getCloudProjectFlavor({
 *     serviceName: "YYYY",
 *     id: "XXXX",
 * });
 * ```
 */
export function getCloudProjectFlavor(args: GetCloudProjectFlavorArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudProjectFlavorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("ovh:index/getCloudProjectFlavor:getCloudProjectFlavor", {
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudProjectFlavor.
 */
export interface GetCloudProjectFlavorArgs {
    /**
     * Flavor id
     */
    id: string;
    /**
     * Service name
     */
    serviceName: string;
}

/**
 * A collection of values returned by getCloudProjectFlavor.
 */
export interface GetCloudProjectFlavorResult {
    /**
     * Available in stock
     */
    readonly available: boolean;
    /**
     * Capabilities of the flavor
     */
    readonly capabilities: outputs.GetCloudProjectFlavorCapability[];
    /**
     * Number of disks
     */
    readonly disk: number;
    /**
     * Flavor id
     */
    readonly id: string;
    /**
     * Max capacity of inbound traffic in Mbit/s
     */
    readonly inboundBandwidth: number;
    /**
     * Flavor name
     */
    readonly name: string;
    /**
     * OS to install on
     */
    readonly osType: string;
    /**
     * Max capacity of outbound traffic in Mbit/s
     */
    readonly outboundBandwidth: number;
    /**
     * Plan codes to order instances
     */
    readonly planCodes: outputs.GetCloudProjectFlavorPlanCodes;
    /**
     * Number instance you can spawn with your actual quota
     */
    readonly quota: number;
    /**
     * Ram quantity (Gio)
     */
    readonly ram: number;
    /**
     * Flavor region
     */
    readonly region: string;
    /**
     * Service name
     */
    readonly serviceName: string;
    /**
     * Flavor type
     */
    readonly type: string;
    /**
     * Number of VCPUs
     */
    readonly vcpus: number;
}
/**
 * Retrieves the given flavor in a public cloud project.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const flavor = ovh.getCloudProjectFlavor({
 *     serviceName: "YYYY",
 *     id: "XXXX",
 * });
 * ```
 */
export function getCloudProjectFlavorOutput(args: GetCloudProjectFlavorOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCloudProjectFlavorResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("ovh:index/getCloudProjectFlavor:getCloudProjectFlavor", {
        "id": args.id,
        "serviceName": args.serviceName,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudProjectFlavor.
 */
export interface GetCloudProjectFlavorOutputArgs {
    /**
     * Flavor id
     */
    id: pulumi.Input<string>;
    /**
     * Service name
     */
    serviceName: pulumi.Input<string>;
}
