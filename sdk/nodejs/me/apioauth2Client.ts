// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Creates an OAuth2 service account.
 *
 * ## Example Usage
 *
 * An OAuth2 client for an app hosted at `my-app.com`, that uses the authorization code flow to authenticate.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const myOauth2ClientAuthCode = new ovh.me.APIOAuth2Client("myOauth2ClientAuthCode", {
 *     callbackUrls: ["https://my-app.com/callback"],
 *     description: "An OAuth2 client using the authorization code flow for my-app.com",
 *     flow: "AUTHORIZATION_CODE",
 * });
 * ```
 *
 * An OAuth2 client for an app hosted at `my-app.com`, that uses the client credentials flow to authenticate.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const myOauth2ClientClientCreds = new ovh.me.APIOAuth2Client("myOauth2ClientClientCreds", {
 *     description: "An OAuth2 client using the client credentials flow for my app",
 *     flow: "CLIENT_CREDENTIALS",
 * });
 * ```
 *
 * ## Import
 *
 * OAuth2 clients can be imported using their `client_id`:
 *
 * bash
 *
 * ```sh
 * $ pulumi import ovh:Me/aPIOAuth2Client:APIOAuth2Client my_oauth2_client client_id
 * ```
 *
 * Because the client_secret is only available for resources created using terraform, OAuth2 clients can also be imported using a `client_id` and a `client_secret` with a pipe separator:
 *
 * bash
 *
 * ```sh
 * $ pulumi import ovh:Me/aPIOAuth2Client:APIOAuth2Client my_oauth2_client 'client_id|client_secret'
 * ```
 */
export class APIOAuth2Client extends pulumi.CustomResource {
    /**
     * Get an existing APIOAuth2Client resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: APIOAuth2ClientState, opts?: pulumi.CustomResourceOptions): APIOAuth2Client {
        return new APIOAuth2Client(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:Me/aPIOAuth2Client:APIOAuth2Client';

    /**
     * Returns true if the given object is an instance of APIOAuth2Client.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is APIOAuth2Client {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === APIOAuth2Client.__pulumiType;
    }

    /**
     * List of callback urls when configuring the `AUTHORIZATION_CODE` flow.
     */
    public readonly callbackUrls!: pulumi.Output<string[] | undefined>;
    /**
     * Client ID of the created service account.
     */
    public /*out*/ readonly clientId!: pulumi.Output<string>;
    /**
     * Client secret of the created service account.
     */
    public /*out*/ readonly clientSecret!: pulumi.Output<string>;
    /**
     * OAuth2 client description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * The OAuth2 flow to use. `AUTHORIZATION_CODE` or `CLIENT_CREDENTIALS` are supported at the moment.
     */
    public readonly flow!: pulumi.Output<string>;
    /**
     * URN that will allow you to associate this oauth2 client with an access policy
     */
    public /*out*/ readonly identity!: pulumi.Output<string>;
    /**
     * OAuth2 client name.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a APIOAuth2Client resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: APIOAuth2ClientArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: APIOAuth2ClientArgs | APIOAuth2ClientState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as APIOAuth2ClientState | undefined;
            resourceInputs["callbackUrls"] = state ? state.callbackUrls : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["flow"] = state ? state.flow : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as APIOAuth2ClientArgs | undefined;
            if ((!args || args.description === undefined) && !opts.urn) {
                throw new Error("Missing required property 'description'");
            }
            if ((!args || args.flow === undefined) && !opts.urn) {
                throw new Error("Missing required property 'flow'");
            }
            resourceInputs["callbackUrls"] = args ? args.callbackUrls : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["flow"] = args ? args.flow : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["clientId"] = undefined /*out*/;
            resourceInputs["clientSecret"] = undefined /*out*/;
            resourceInputs["identity"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(APIOAuth2Client.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering APIOAuth2Client resources.
 */
export interface APIOAuth2ClientState {
    /**
     * List of callback urls when configuring the `AUTHORIZATION_CODE` flow.
     */
    callbackUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Client ID of the created service account.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Client secret of the created service account.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * OAuth2 client description.
     */
    description?: pulumi.Input<string>;
    /**
     * The OAuth2 flow to use. `AUTHORIZATION_CODE` or `CLIENT_CREDENTIALS` are supported at the moment.
     */
    flow?: pulumi.Input<string>;
    /**
     * URN that will allow you to associate this oauth2 client with an access policy
     */
    identity?: pulumi.Input<string>;
    /**
     * OAuth2 client name.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a APIOAuth2Client resource.
 */
export interface APIOAuth2ClientArgs {
    /**
     * List of callback urls when configuring the `AUTHORIZATION_CODE` flow.
     */
    callbackUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OAuth2 client description.
     */
    description: pulumi.Input<string>;
    /**
     * The OAuth2 flow to use. `AUTHORIZATION_CODE` or `CLIENT_CREDENTIALS` are supported at the moment.
     */
    flow: pulumi.Input<string>;
    /**
     * OAuth2 client name.
     */
    name?: pulumi.Input<string>;
}
