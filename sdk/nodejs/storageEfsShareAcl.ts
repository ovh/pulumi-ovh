// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Creates an ACL rule for an EFS share.
 *
 * Please take a look at the list of available `accessLevel` values in the `Required` section in order to know the list of supported access level configurations.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as ovh from "@ovhcloud/pulumi-ovh";
 *
 * const efs = ovh.getStorageEfs({
 *     serviceName: "XXX",
 * });
 * const share = new ovh.StorageEfsShare("share", {
 *     serviceName: efs.then(efs => efs.serviceName),
 *     name: "share",
 *     description: "My share",
 *     protocol: "NFS",
 *     size: 100,
 * });
 * const acl = new ovh.StorageEfsShareAcl("acl", {
 *     serviceName: efs.then(efs => efs.serviceName),
 *     shareId: share.id,
 *     accessLevel: "ro",
 *     accessTo: "10.0.0.1",
 * });
 * ```
 */
export class StorageEfsShareAcl extends pulumi.CustomResource {
    /**
     * Get an existing StorageEfsShareAcl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageEfsShareAclState, opts?: pulumi.CustomResourceOptions): StorageEfsShareAcl {
        return new StorageEfsShareAcl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'ovh:index/storageEfsShareAcl:StorageEfsShareAcl';

    /**
     * Returns true if the given object is an instance of StorageEfsShareAcl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageEfsShareAcl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageEfsShareAcl.__pulumiType;
    }

    /**
     * Rule access level
     */
    public readonly accessLevel!: pulumi.Output<string>;
    /**
     * Rule destination
     */
    public readonly accessTo!: pulumi.Output<string>;
    /**
     * Rule access type
     */
    public /*out*/ readonly accessType!: pulumi.Output<string>;
    /**
     * Rule creation date
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * Service name
     */
    public readonly serviceName!: pulumi.Output<string>;
    /**
     * Share ID
     */
    public readonly shareId!: pulumi.Output<string>;
    /**
     * Rule status
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a StorageEfsShareAcl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StorageEfsShareAclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageEfsShareAclArgs | StorageEfsShareAclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageEfsShareAclState | undefined;
            resourceInputs["accessLevel"] = state ? state.accessLevel : undefined;
            resourceInputs["accessTo"] = state ? state.accessTo : undefined;
            resourceInputs["accessType"] = state ? state.accessType : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["serviceName"] = state ? state.serviceName : undefined;
            resourceInputs["shareId"] = state ? state.shareId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as StorageEfsShareAclArgs | undefined;
            if ((!args || args.accessLevel === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessLevel'");
            }
            if ((!args || args.accessTo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessTo'");
            }
            if ((!args || args.serviceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceName'");
            }
            if ((!args || args.shareId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'shareId'");
            }
            resourceInputs["accessLevel"] = args ? args.accessLevel : undefined;
            resourceInputs["accessTo"] = args ? args.accessTo : undefined;
            resourceInputs["serviceName"] = args ? args.serviceName : undefined;
            resourceInputs["shareId"] = args ? args.shareId : undefined;
            resourceInputs["accessType"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageEfsShareAcl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StorageEfsShareAcl resources.
 */
export interface StorageEfsShareAclState {
    /**
     * Rule access level
     */
    accessLevel?: pulumi.Input<string>;
    /**
     * Rule destination
     */
    accessTo?: pulumi.Input<string>;
    /**
     * Rule access type
     */
    accessType?: pulumi.Input<string>;
    /**
     * Rule creation date
     */
    createdAt?: pulumi.Input<string>;
    /**
     * Service name
     */
    serviceName?: pulumi.Input<string>;
    /**
     * Share ID
     */
    shareId?: pulumi.Input<string>;
    /**
     * Rule status
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StorageEfsShareAcl resource.
 */
export interface StorageEfsShareAclArgs {
    /**
     * Rule access level
     */
    accessLevel: pulumi.Input<string>;
    /**
     * Rule destination
     */
    accessTo: pulumi.Input<string>;
    /**
     * Service name
     */
    serviceName: pulumi.Input<string>;
    /**
     * Share ID
     */
    shareId: pulumi.Input<string>;
}
