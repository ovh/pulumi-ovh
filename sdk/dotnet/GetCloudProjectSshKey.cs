// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    public static class GetCloudProjectSshKey
    {
        /// <summary>
        /// Retrieve information about a SSH key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var key = Ovh.GetCloudProjectSshKey.Invoke(new()
        ///     {
        ///         ServiceName = "XXX",
        ///         Id = "YYY",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudProjectSshKeyResult> InvokeAsync(GetCloudProjectSshKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudProjectSshKeyResult>("ovh:index/getCloudProjectSshKey:getCloudProjectSshKey", args ?? new GetCloudProjectSshKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about a SSH key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var key = Ovh.GetCloudProjectSshKey.Invoke(new()
        ///     {
        ///         ServiceName = "XXX",
        ///         Id = "YYY",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudProjectSshKeyResult> Invoke(GetCloudProjectSshKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudProjectSshKeyResult>("ovh:index/getCloudProjectSshKey:getCloudProjectSshKey", args ?? new GetCloudProjectSshKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve information about a SSH key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var key = Ovh.GetCloudProjectSshKey.Invoke(new()
        ///     {
        ///         ServiceName = "XXX",
        ///         Id = "YYY",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudProjectSshKeyResult> Invoke(GetCloudProjectSshKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudProjectSshKeyResult>("ovh:index/getCloudProjectSshKey:getCloudProjectSshKey", args ?? new GetCloudProjectSshKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudProjectSshKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// SSH key ID
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetCloudProjectSshKeyArgs()
        {
        }
        public static new GetCloudProjectSshKeyArgs Empty => new GetCloudProjectSshKeyArgs();
    }

    public sealed class GetCloudProjectSshKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// SSH key ID
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetCloudProjectSshKeyInvokeArgs()
        {
        }
        public static new GetCloudProjectSshKeyInvokeArgs Empty => new GetCloudProjectSshKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudProjectSshKeyResult
    {
        /// <summary>
        /// SSH key fingerprint
        /// </summary>
        public readonly string FingerPrint;
        /// <summary>
        /// SSH key ID
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// SSH key name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// SSH public key
        /// </summary>
        public readonly string PublicKey;
        /// <summary>
        /// SSH key regions
        /// </summary>
        public readonly ImmutableArray<string> Regions;
        /// <summary>
        /// Service name
        /// </summary>
        public readonly string ServiceName;

        [OutputConstructor]
        private GetCloudProjectSshKeyResult(
            string fingerPrint,

            string id,

            string name,

            string publicKey,

            ImmutableArray<string> regions,

            string serviceName)
        {
            FingerPrint = fingerPrint;
            Id = id;
            Name = name;
            PublicKey = publicKey;
            Regions = regions;
            ServiceName = serviceName;
        }
    }
}
