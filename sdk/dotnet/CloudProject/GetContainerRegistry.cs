// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    public static class GetContainerRegistry
    {
        public static Task<GetContainerRegistryResult> InvokeAsync(GetContainerRegistryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetContainerRegistryResult>("ovh:CloudProject/getContainerRegistry:getContainerRegistry", args ?? new GetContainerRegistryArgs(), options.WithDefaults());

        public static Output<GetContainerRegistryResult> Invoke(GetContainerRegistryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerRegistryResult>("ovh:CloudProject/getContainerRegistry:getContainerRegistry", args ?? new GetContainerRegistryInvokeArgs(), options.WithDefaults());

        public static Output<GetContainerRegistryResult> Invoke(GetContainerRegistryInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetContainerRegistryResult>("ovh:CloudProject/getContainerRegistry:getContainerRegistry", args ?? new GetContainerRegistryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetContainerRegistryArgs : global::Pulumi.InvokeArgs
    {
        [Input("registryId", required: true)]
        public string RegistryId { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetContainerRegistryArgs()
        {
        }
        public static new GetContainerRegistryArgs Empty => new GetContainerRegistryArgs();
    }

    public sealed class GetContainerRegistryInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("registryId", required: true)]
        public Input<string> RegistryId { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetContainerRegistryInvokeArgs()
        {
        }
        public static new GetContainerRegistryInvokeArgs Empty => new GetContainerRegistryInvokeArgs();
    }


    [OutputType]
    public sealed class GetContainerRegistryResult
    {
        public readonly string CreatedAt;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string ProjectId;
        public readonly string Region;
        public readonly string RegistryId;
        public readonly string ServiceName;
        public readonly int Size;
        public readonly string Status;
        public readonly string UpdatedAt;
        public readonly string Url;
        public readonly string Version;

        [OutputConstructor]
        private GetContainerRegistryResult(
            string createdAt,

            string id,

            string name,

            string projectId,

            string region,

            string registryId,

            string serviceName,

            int size,

            string status,

            string updatedAt,

            string url,

            string version)
        {
            CreatedAt = createdAt;
            Id = id;
            Name = name;
            ProjectId = projectId;
            Region = region;
            RegistryId = registryId;
            ServiceName = serviceName;
            Size = size;
            Status = status;
            UpdatedAt = updatedAt;
            Url = url;
            Version = version;
        }
    }
}
