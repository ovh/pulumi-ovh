// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    public static class GetRegionLoadBalancerLogSubscriptions
    {
        public static Task<GetRegionLoadBalancerLogSubscriptionsResult> InvokeAsync(GetRegionLoadBalancerLogSubscriptionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRegionLoadBalancerLogSubscriptionsResult>("ovh:CloudProject/getRegionLoadBalancerLogSubscriptions:getRegionLoadBalancerLogSubscriptions", args ?? new GetRegionLoadBalancerLogSubscriptionsArgs(), options.WithDefaults());

        public static Output<GetRegionLoadBalancerLogSubscriptionsResult> Invoke(GetRegionLoadBalancerLogSubscriptionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionLoadBalancerLogSubscriptionsResult>("ovh:CloudProject/getRegionLoadBalancerLogSubscriptions:getRegionLoadBalancerLogSubscriptions", args ?? new GetRegionLoadBalancerLogSubscriptionsInvokeArgs(), options.WithDefaults());

        public static Output<GetRegionLoadBalancerLogSubscriptionsResult> Invoke(GetRegionLoadBalancerLogSubscriptionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRegionLoadBalancerLogSubscriptionsResult>("ovh:CloudProject/getRegionLoadBalancerLogSubscriptions:getRegionLoadBalancerLogSubscriptions", args ?? new GetRegionLoadBalancerLogSubscriptionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRegionLoadBalancerLogSubscriptionsArgs : global::Pulumi.InvokeArgs
    {
        [Input("kind")]
        public string? Kind { get; set; }

        [Input("loadbalancerId", required: true)]
        public string LoadbalancerId { get; set; } = null!;

        [Input("regionName", required: true)]
        public string RegionName { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetRegionLoadBalancerLogSubscriptionsArgs()
        {
        }
        public static new GetRegionLoadBalancerLogSubscriptionsArgs Empty => new GetRegionLoadBalancerLogSubscriptionsArgs();
    }

    public sealed class GetRegionLoadBalancerLogSubscriptionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("loadbalancerId", required: true)]
        public Input<string> LoadbalancerId { get; set; } = null!;

        [Input("regionName", required: true)]
        public Input<string> RegionName { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetRegionLoadBalancerLogSubscriptionsInvokeArgs()
        {
        }
        public static new GetRegionLoadBalancerLogSubscriptionsInvokeArgs Empty => new GetRegionLoadBalancerLogSubscriptionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRegionLoadBalancerLogSubscriptionsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Kind;
        public readonly string LoadbalancerId;
        public readonly string RegionName;
        public readonly string ServiceName;
        public readonly ImmutableArray<string> SubscriptionIds;

        [OutputConstructor]
        private GetRegionLoadBalancerLogSubscriptionsResult(
            string id,

            string? kind,

            string loadbalancerId,

            string regionName,

            string serviceName,

            ImmutableArray<string> subscriptionIds)
        {
            Id = id;
            Kind = kind;
            LoadbalancerId = loadbalancerId;
            RegionName = regionName;
            ServiceName = serviceName;
            SubscriptionIds = subscriptionIds;
        }
    }
}
