// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    public static class GetFlavors
    {
        /// <summary>
        /// Retrieves the available flavors on the given public cloud project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var flavors = Ovh.CloudProject.GetFlavors.Invoke(new()
        ///     {
        ///         ServiceName = "YYYY",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetFlavorsResult> InvokeAsync(GetFlavorsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFlavorsResult>("ovh:CloudProject/getFlavors:getFlavors", args ?? new GetFlavorsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the available flavors on the given public cloud project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var flavors = Ovh.CloudProject.GetFlavors.Invoke(new()
        ///     {
        ///         ServiceName = "YYYY",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFlavorsResult> Invoke(GetFlavorsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlavorsResult>("ovh:CloudProject/getFlavors:getFlavors", args ?? new GetFlavorsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the available flavors on the given public cloud project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var flavors = Ovh.CloudProject.GetFlavors.Invoke(new()
        ///     {
        ///         ServiceName = "YYYY",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetFlavorsResult> Invoke(GetFlavorsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetFlavorsResult>("ovh:CloudProject/getFlavors:getFlavors", args ?? new GetFlavorsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFlavorsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Flavor region
        /// </summary>
        [Input("region")]
        public string? Region { get; set; }

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetFlavorsArgs()
        {
        }
        public static new GetFlavorsArgs Empty => new GetFlavorsArgs();
    }

    public sealed class GetFlavorsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Flavor region
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetFlavorsInvokeArgs()
        {
        }
        public static new GetFlavorsInvokeArgs Empty => new GetFlavorsInvokeArgs();
    }


    [OutputType]
    public sealed class GetFlavorsResult
    {
        public readonly ImmutableArray<Outputs.GetFlavorsFlavorResult> Flavors;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Flavor region
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Service name
        /// </summary>
        public readonly string ServiceName;

        [OutputConstructor]
        private GetFlavorsResult(
            ImmutableArray<Outputs.GetFlavorsFlavorResult> flavors,

            string id,

            string region,

            string serviceName)
        {
            Flavors = flavors;
            Id = id;
            Region = region;
            ServiceName = serviceName;
        }
    }
}
