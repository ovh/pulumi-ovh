// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    /// <summary>
    /// Creates an alert on a public cloud project.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var myAlert = new Ovh.CloudProject.Alerting("myAlert", new()
    ///     {
    ///         Delay = 3600,
    ///         Email = "aaa.bbb@domain.com",
    ///         MonthlyThreshold = 1000,
    ///         ServiceName = "XXX",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OvhResourceType("ovh:CloudProject/alerting:Alerting")]
    public partial class Alerting : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Alerting creation date
        /// </summary>
        [Output("creationDate")]
        public Output<string> CreationDate { get; private set; } = null!;

        /// <summary>
        /// Delay between two alerts in seconds
        /// </summary>
        [Output("delay")]
        public Output<double> Delay { get; private set; } = null!;

        /// <summary>
        /// Email to contact
        /// </summary>
        [Output("email")]
        public Output<string> Email { get; private set; } = null!;

        /// <summary>
        /// Formatted monthly threshold for this alerting
        /// </summary>
        [Output("formattedMonthlyThreshold")]
        public Output<Outputs.AlertingFormattedMonthlyThreshold> FormattedMonthlyThreshold { get; private set; } = null!;

        /// <summary>
        /// Monthly threshold for this alerting in currency
        /// </summary>
        [Output("monthlyThreshold")]
        public Output<double> MonthlyThreshold { get; private set; } = null!;

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;


        /// <summary>
        /// Create a Alerting resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Alerting(string name, AlertingArgs args, CustomResourceOptions? options = null)
            : base("ovh:CloudProject/alerting:Alerting", name, args ?? new AlertingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Alerting(string name, Input<string> id, AlertingState? state = null, CustomResourceOptions? options = null)
            : base("ovh:CloudProject/alerting:Alerting", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Alerting resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Alerting Get(string name, Input<string> id, AlertingState? state = null, CustomResourceOptions? options = null)
        {
            return new Alerting(name, id, state, options);
        }
    }

    public sealed class AlertingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Delay between two alerts in seconds
        /// </summary>
        [Input("delay", required: true)]
        public Input<double> Delay { get; set; } = null!;

        /// <summary>
        /// Email to contact
        /// </summary>
        [Input("email", required: true)]
        public Input<string> Email { get; set; } = null!;

        /// <summary>
        /// Monthly threshold for this alerting in currency
        /// </summary>
        [Input("monthlyThreshold", required: true)]
        public Input<double> MonthlyThreshold { get; set; } = null!;

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public AlertingArgs()
        {
        }
        public static new AlertingArgs Empty => new AlertingArgs();
    }

    public sealed class AlertingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alerting creation date
        /// </summary>
        [Input("creationDate")]
        public Input<string>? CreationDate { get; set; }

        /// <summary>
        /// Delay between two alerts in seconds
        /// </summary>
        [Input("delay")]
        public Input<double>? Delay { get; set; }

        /// <summary>
        /// Email to contact
        /// </summary>
        [Input("email")]
        public Input<string>? Email { get; set; }

        /// <summary>
        /// Formatted monthly threshold for this alerting
        /// </summary>
        [Input("formattedMonthlyThreshold")]
        public Input<Inputs.AlertingFormattedMonthlyThresholdGetArgs>? FormattedMonthlyThreshold { get; set; }

        /// <summary>
        /// Monthly threshold for this alerting in currency
        /// </summary>
        [Input("monthlyThreshold")]
        public Input<double>? MonthlyThreshold { get; set; }

        /// <summary>
        /// The id of the public cloud project. If omitted,
        /// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        public AlertingState()
        {
        }
        public static new AlertingState Empty => new AlertingState();
    }
}
