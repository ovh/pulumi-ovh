// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject.Outputs
{

    [OutputType]
    public sealed class GetFlavorsFlavorResult
    {
        /// <summary>
        /// Available in stock
        /// </summary>
        public readonly bool Available;
        /// <summary>
        /// Capabilities of the flavor
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFlavorsFlavorCapabilityResult> Capabilities;
        /// <summary>
        /// Number of disks
        /// </summary>
        public readonly double Disk;
        /// <summary>
        /// Flavor id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max capacity of inbound traffic in Mbit/s
        /// </summary>
        public readonly double InboundBandwidth;
        /// <summary>
        /// Flavor name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// OS to install on
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// Max capacity of outbound traffic in Mbit/s
        /// </summary>
        public readonly double OutboundBandwidth;
        /// <summary>
        /// Plan codes to order instances
        /// </summary>
        public readonly Outputs.GetFlavorsFlavorPlanCodesResult PlanCodes;
        /// <summary>
        /// Number instance you can spawn with your actual quota
        /// </summary>
        public readonly double Quota;
        /// <summary>
        /// Ram quantity (Gio)
        /// </summary>
        public readonly double Ram;
        /// <summary>
        /// Flavor region
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Flavor type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Number of VCPUs
        /// </summary>
        public readonly double Vcpus;

        [OutputConstructor]
        private GetFlavorsFlavorResult(
            bool available,

            ImmutableArray<Outputs.GetFlavorsFlavorCapabilityResult> capabilities,

            double disk,

            string id,

            double inboundBandwidth,

            string name,

            string osType,

            double outboundBandwidth,

            Outputs.GetFlavorsFlavorPlanCodesResult planCodes,

            double quota,

            double ram,

            string region,

            string type,

            double vcpus)
        {
            Available = available;
            Capabilities = capabilities;
            Disk = disk;
            Id = id;
            InboundBandwidth = inboundBandwidth;
            Name = name;
            OsType = osType;
            OutboundBandwidth = outboundBandwidth;
            PlanCodes = planCodes;
            Quota = quota;
            Ram = ram;
            Region = region;
            Type = type;
            Vcpus = vcpus;
        }
    }
}
