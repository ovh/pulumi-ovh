// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    /// <summary>
    /// Create a new Gateway Interface for existing subnet in the specified public cloud project.
    /// 
    /// ## Import
    /// 
    /// A gateway interface can be imported using the `service_name`, `region`, `id` (identifier of the gateway) and `interface_id` properties, separated by a `/`.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import ovh:CloudProject/gatewayInterface:GatewayInterface gateway service_name/region/id/interface_id
    /// ```
    /// </summary>
    [OvhResourceType("ovh:CloudProject/gatewayInterface:GatewayInterface")]
    public partial class GatewayInterface : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the interface
        /// </summary>
        [Output("interfaceId")]
        public Output<string> InterfaceId { get; private set; } = null!;

        /// <summary>
        /// IP of the interface
        /// </summary>
        [Output("ip")]
        public Output<string> Ip { get; private set; } = null!;

        /// <summary>
        /// Network ID of the interface
        /// </summary>
        [Output("networkId")]
        public Output<string> NetworkId { get; private set; } = null!;

        /// <summary>
        /// Region of the gateway
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// ID of the cloud project
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// ID of the subnet to add
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;


        /// <summary>
        /// Create a GatewayInterface resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GatewayInterface(string name, GatewayInterfaceArgs args, CustomResourceOptions? options = null)
            : base("ovh:CloudProject/gatewayInterface:GatewayInterface", name, args ?? new GatewayInterfaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GatewayInterface(string name, Input<string> id, GatewayInterfaceState? state = null, CustomResourceOptions? options = null)
            : base("ovh:CloudProject/gatewayInterface:GatewayInterface", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GatewayInterface resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GatewayInterface Get(string name, Input<string> id, GatewayInterfaceState? state = null, CustomResourceOptions? options = null)
        {
            return new GatewayInterface(name, id, state, options);
        }
    }

    public sealed class GatewayInterfaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the interface
        /// </summary>
        [Input("interfaceId")]
        public Input<string>? InterfaceId { get; set; }

        /// <summary>
        /// Region of the gateway
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// ID of the cloud project
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// ID of the subnet to add
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        public GatewayInterfaceArgs()
        {
        }
        public static new GatewayInterfaceArgs Empty => new GatewayInterfaceArgs();
    }

    public sealed class GatewayInterfaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the interface
        /// </summary>
        [Input("interfaceId")]
        public Input<string>? InterfaceId { get; set; }

        /// <summary>
        /// IP of the interface
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// Network ID of the interface
        /// </summary>
        [Input("networkId")]
        public Input<string>? NetworkId { get; set; }

        /// <summary>
        /// Region of the gateway
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// ID of the cloud project
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// ID of the subnet to add
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        public GatewayInterfaceState()
        {
        }
        public static new GatewayInterfaceState Empty => new GatewayInterfaceState();
    }
}
