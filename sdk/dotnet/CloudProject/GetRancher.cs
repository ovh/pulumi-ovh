// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    public static class GetRancher
    {
        public static Task<GetRancherResult> InvokeAsync(GetRancherArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRancherResult>("ovh:CloudProject/getRancher:getRancher", args ?? new GetRancherArgs(), options.WithDefaults());

        public static Output<GetRancherResult> Invoke(GetRancherInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRancherResult>("ovh:CloudProject/getRancher:getRancher", args ?? new GetRancherInvokeArgs(), options.WithDefaults());

        public static Output<GetRancherResult> Invoke(GetRancherInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRancherResult>("ovh:CloudProject/getRancher:getRancher", args ?? new GetRancherInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRancherArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        public GetRancherArgs()
        {
        }
        public static new GetRancherArgs Empty => new GetRancherArgs();
    }

    public sealed class GetRancherInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        public GetRancherInvokeArgs()
        {
        }
        public static new GetRancherInvokeArgs Empty => new GetRancherInvokeArgs();
    }


    [OutputType]
    public sealed class GetRancherResult
    {
        public readonly string CreatedAt;
        public readonly Outputs.GetRancherCurrentStateResult CurrentState;
        public readonly ImmutableArray<Outputs.GetRancherCurrentTaskResult> CurrentTasks;
        public readonly string Id;
        public readonly string ProjectId;
        public readonly string ResourceStatus;
        public readonly Outputs.GetRancherTargetSpecResult TargetSpec;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetRancherResult(
            string createdAt,

            Outputs.GetRancherCurrentStateResult currentState,

            ImmutableArray<Outputs.GetRancherCurrentTaskResult> currentTasks,

            string id,

            string projectId,

            string resourceStatus,

            Outputs.GetRancherTargetSpecResult targetSpec,

            string updatedAt)
        {
            CreatedAt = createdAt;
            CurrentState = currentState;
            CurrentTasks = currentTasks;
            Id = id;
            ProjectId = projectId;
            ResourceStatus = resourceStatus;
            TargetSpec = targetSpec;
            UpdatedAt = updatedAt;
        }
    }
}
