// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject.Inputs
{

    public sealed class LoadBalancerListenerPoolHealthMonitorGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Duration between sending probes to members, in seconds
        /// </summary>
        [Input("delay")]
        public Input<double>? Delay { get; set; }

        /// <summary>
        /// Monitor HTTP configuration
        /// </summary>
        [Input("httpConfiguration")]
        public Input<Inputs.LoadBalancerListenerPoolHealthMonitorHttpConfigurationGetArgs>? HttpConfiguration { get; set; }

        /// <summary>
        /// Number of successful checks before changing the operating status of the member to ONLINE
        /// </summary>
        [Input("maxRetries")]
        public Input<double>? MaxRetries { get; set; }

        /// <summary>
        /// Number of allowed check failures before changing the operating status of the member to ERROR
        /// </summary>
        [Input("maxRetriesDown")]
        public Input<double>? MaxRetriesDown { get; set; }

        /// <summary>
        /// Type of the monitor
        /// </summary>
        [Input("monitorType")]
        public Input<string>? MonitorType { get; set; }

        /// <summary>
        /// The name of the resource
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The operating status of the resource
        /// </summary>
        [Input("operatingStatus")]
        public Input<string>? OperatingStatus { get; set; }

        /// <summary>
        /// The provisioning status of the resource
        /// </summary>
        [Input("provisioningStatus")]
        public Input<string>? ProvisioningStatus { get; set; }

        /// <summary>
        /// Maximum time, in seconds, that a monitor waits to connect before it times out. This value must be less than the delay value
        /// </summary>
        [Input("timeout")]
        public Input<double>? Timeout { get; set; }

        public LoadBalancerListenerPoolHealthMonitorGetArgs()
        {
        }
        public static new LoadBalancerListenerPoolHealthMonitorGetArgs Empty => new LoadBalancerListenerPoolHealthMonitorGetArgs();
    }
}
