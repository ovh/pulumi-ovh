// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject.Inputs
{

    public sealed class RancherCurrentStateGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("bootstrapPassword")]
        private Input<string>? _bootstrapPassword;

        /// <summary>
        /// Bootstrap password of the managed Rancher service, returned only on creation
        /// </summary>
        public Input<string>? BootstrapPassword
        {
            get => _bootstrapPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _bootstrapPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("ipRestrictions")]
        private InputList<Inputs.RancherCurrentStateIpRestrictionGetArgs>? _ipRestrictions;

        /// <summary>
        /// List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed
        /// </summary>
        public InputList<Inputs.RancherCurrentStateIpRestrictionGetArgs> IpRestrictions
        {
            get => _ipRestrictions ?? (_ipRestrictions = new InputList<Inputs.RancherCurrentStateIpRestrictionGetArgs>());
            set => _ipRestrictions = value;
        }

        /// <summary>
        /// Name of the managed Rancher service
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Networking properties of a managed Rancher service
        /// </summary>
        [Input("networking")]
        public Input<Inputs.RancherCurrentStateNetworkingGetArgs>? Networking { get; set; }

        /// <summary>
        /// Plan of the managed Rancher service
        /// </summary>
        [Input("plan")]
        public Input<string>? Plan { get; set; }

        /// <summary>
        /// Region of the managed Rancher service
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// URL of the managed Rancher service
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        /// <summary>
        /// Latest metrics regarding the usage of the managed Rancher service
        /// </summary>
        [Input("usage")]
        public Input<Inputs.RancherCurrentStateUsageGetArgs>? Usage { get; set; }

        /// <summary>
        /// Version of the managed Rancher service
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public RancherCurrentStateGetArgs()
        {
        }
        public static new RancherCurrentStateGetArgs Empty => new RancherCurrentStateGetArgs();
    }
}
