// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    public static class GetUserS3Credentials
    {
        public static Task<GetUserS3CredentialsResult> InvokeAsync(GetUserS3CredentialsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserS3CredentialsResult>("ovh:CloudProject/getUserS3Credentials:getUserS3Credentials", args ?? new GetUserS3CredentialsArgs(), options.WithDefaults());

        public static Output<GetUserS3CredentialsResult> Invoke(GetUserS3CredentialsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserS3CredentialsResult>("ovh:CloudProject/getUserS3Credentials:getUserS3Credentials", args ?? new GetUserS3CredentialsInvokeArgs(), options.WithDefaults());

        public static Output<GetUserS3CredentialsResult> Invoke(GetUserS3CredentialsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserS3CredentialsResult>("ovh:CloudProject/getUserS3Credentials:getUserS3Credentials", args ?? new GetUserS3CredentialsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserS3CredentialsArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetUserS3CredentialsArgs()
        {
        }
        public static new GetUserS3CredentialsArgs Empty => new GetUserS3CredentialsArgs();
    }

    public sealed class GetUserS3CredentialsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetUserS3CredentialsInvokeArgs()
        {
        }
        public static new GetUserS3CredentialsInvokeArgs Empty => new GetUserS3CredentialsInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserS3CredentialsResult
    {
        public readonly ImmutableArray<string> AccessKeyIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ServiceName;
        public readonly string UserId;

        [OutputConstructor]
        private GetUserS3CredentialsResult(
            ImmutableArray<string> accessKeyIds,

            string id,

            string serviceName,

            string userId)
        {
            AccessKeyIds = accessKeyIds;
            Id = id;
            ServiceName = serviceName;
            UserId = userId;
        }
    }
}
