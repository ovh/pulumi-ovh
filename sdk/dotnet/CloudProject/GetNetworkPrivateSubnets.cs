// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    public static class GetNetworkPrivateSubnets
    {
        /// <summary>
        /// List public cloud project subnets of a private network.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var privateNetworkPrivateSubnets = Ovh.CloudProject.GetNetworkPrivateSubnets.Invoke(new()
        ///     {
        ///         ServiceName = "XXXXXX",
        ///         NetworkId = "XXXXXX",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["private"] = privateNetworkPrivateSubnets,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetNetworkPrivateSubnetsResult> InvokeAsync(GetNetworkPrivateSubnetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetworkPrivateSubnetsResult>("ovh:CloudProject/getNetworkPrivateSubnets:getNetworkPrivateSubnets", args ?? new GetNetworkPrivateSubnetsArgs(), options.WithDefaults());

        /// <summary>
        /// List public cloud project subnets of a private network.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var privateNetworkPrivateSubnets = Ovh.CloudProject.GetNetworkPrivateSubnets.Invoke(new()
        ///     {
        ///         ServiceName = "XXXXXX",
        ///         NetworkId = "XXXXXX",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["private"] = privateNetworkPrivateSubnets,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkPrivateSubnetsResult> Invoke(GetNetworkPrivateSubnetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkPrivateSubnetsResult>("ovh:CloudProject/getNetworkPrivateSubnets:getNetworkPrivateSubnets", args ?? new GetNetworkPrivateSubnetsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// List public cloud project subnets of a private network.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var privateNetworkPrivateSubnets = Ovh.CloudProject.GetNetworkPrivateSubnets.Invoke(new()
        ///     {
        ///         ServiceName = "XXXXXX",
        ///         NetworkId = "XXXXXX",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["private"] = privateNetworkPrivateSubnets,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetNetworkPrivateSubnetsResult> Invoke(GetNetworkPrivateSubnetsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetworkPrivateSubnetsResult>("ovh:CloudProject/getNetworkPrivateSubnets:getNetworkPrivateSubnets", args ?? new GetNetworkPrivateSubnetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetworkPrivateSubnetsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the network
        /// </summary>
        [Input("networkId", required: true)]
        public string NetworkId { get; set; } = null!;

        /// <summary>
        /// The ID of the public cloud project.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetNetworkPrivateSubnetsArgs()
        {
        }
        public static new GetNetworkPrivateSubnetsArgs Empty => new GetNetworkPrivateSubnetsArgs();
    }

    public sealed class GetNetworkPrivateSubnetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// ID of the network
        /// </summary>
        [Input("networkId", required: true)]
        public Input<string> NetworkId { get; set; } = null!;

        /// <summary>
        /// The ID of the public cloud project.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetNetworkPrivateSubnetsInvokeArgs()
        {
        }
        public static new GetNetworkPrivateSubnetsInvokeArgs Empty => new GetNetworkPrivateSubnetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetworkPrivateSubnetsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// ID of the network
        /// </summary>
        public readonly string NetworkId;
        /// <summary>
        /// ID of the public cloud project
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// List of subnets
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNetworkPrivateSubnetsSubnetResult> Subnets;

        [OutputConstructor]
        private GetNetworkPrivateSubnetsResult(
            string id,

            string networkId,

            string serviceName,

            ImmutableArray<Outputs.GetNetworkPrivateSubnetsSubnetResult> subnets)
        {
            Id = id;
            NetworkId = networkId;
            ServiceName = serviceName;
            Subnets = subnets;
        }
    }
}
