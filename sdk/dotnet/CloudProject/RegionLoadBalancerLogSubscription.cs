// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    [OvhResourceType("ovh:CloudProject/regionLoadBalancerLogSubscription:RegionLoadBalancerLogSubscription")]
    public partial class RegionLoadBalancerLogSubscription : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Creation date of the subscription
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Log kind name of this subscription
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Name of the destination log service
        /// </summary>
        [Output("ldpServiceName")]
        public Output<string> LdpServiceName { get; private set; } = null!;

        /// <summary>
        /// ID representing the loadbalancer of the resource
        /// </summary>
        [Output("loadbalancerId")]
        public Output<string> LoadbalancerId { get; private set; } = null!;

        /// <summary>
        /// Identifier of the operation
        /// </summary>
        [Output("operationId")]
        public Output<string> OperationId { get; private set; } = null!;

        /// <summary>
        /// Region name of the resource representing the name of the region.
        /// </summary>
        [Output("regionName")]
        public Output<string> RegionName { get; private set; } = null!;

        /// <summary>
        /// Name of subscribed resource, where the logs come from
        /// </summary>
        [Output("resourceName")]
        public Output<string> ResourceName { get; private set; } = null!;

        /// <summary>
        /// Type of subscribed resource, where the logs come from
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// Service name of the resource representing the id of the cloud project.
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// ID representing the stream of the resource
        /// </summary>
        [Output("streamId")]
        public Output<string> StreamId { get; private set; } = null!;

        /// <summary>
        /// Id of the subscription
        /// </summary>
        [Output("subscriptionId")]
        public Output<string> SubscriptionId { get; private set; } = null!;

        /// <summary>
        /// Last update date of the subscription
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a RegionLoadBalancerLogSubscription resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RegionLoadBalancerLogSubscription(string name, RegionLoadBalancerLogSubscriptionArgs args, CustomResourceOptions? options = null)
            : base("ovh:CloudProject/regionLoadBalancerLogSubscription:RegionLoadBalancerLogSubscription", name, args ?? new RegionLoadBalancerLogSubscriptionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RegionLoadBalancerLogSubscription(string name, Input<string> id, RegionLoadBalancerLogSubscriptionState? state = null, CustomResourceOptions? options = null)
            : base("ovh:CloudProject/regionLoadBalancerLogSubscription:RegionLoadBalancerLogSubscription", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RegionLoadBalancerLogSubscription resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RegionLoadBalancerLogSubscription Get(string name, Input<string> id, RegionLoadBalancerLogSubscriptionState? state = null, CustomResourceOptions? options = null)
        {
            return new RegionLoadBalancerLogSubscription(name, id, state, options);
        }
    }

    public sealed class RegionLoadBalancerLogSubscriptionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Log kind name of this subscription
        /// </summary>
        [Input("kind", required: true)]
        public Input<string> Kind { get; set; } = null!;

        /// <summary>
        /// ID representing the loadbalancer of the resource
        /// </summary>
        [Input("loadbalancerId", required: true)]
        public Input<string> LoadbalancerId { get; set; } = null!;

        /// <summary>
        /// Region name of the resource representing the name of the region.
        /// </summary>
        [Input("regionName", required: true)]
        public Input<string> RegionName { get; set; } = null!;

        /// <summary>
        /// Service name of the resource representing the id of the cloud project.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// ID representing the stream of the resource
        /// </summary>
        [Input("streamId", required: true)]
        public Input<string> StreamId { get; set; } = null!;

        public RegionLoadBalancerLogSubscriptionArgs()
        {
        }
        public static new RegionLoadBalancerLogSubscriptionArgs Empty => new RegionLoadBalancerLogSubscriptionArgs();
    }

    public sealed class RegionLoadBalancerLogSubscriptionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Creation date of the subscription
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Log kind name of this subscription
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        /// <summary>
        /// Name of the destination log service
        /// </summary>
        [Input("ldpServiceName")]
        public Input<string>? LdpServiceName { get; set; }

        /// <summary>
        /// ID representing the loadbalancer of the resource
        /// </summary>
        [Input("loadbalancerId")]
        public Input<string>? LoadbalancerId { get; set; }

        /// <summary>
        /// Identifier of the operation
        /// </summary>
        [Input("operationId")]
        public Input<string>? OperationId { get; set; }

        /// <summary>
        /// Region name of the resource representing the name of the region.
        /// </summary>
        [Input("regionName")]
        public Input<string>? RegionName { get; set; }

        /// <summary>
        /// Name of subscribed resource, where the logs come from
        /// </summary>
        [Input("resourceName")]
        public Input<string>? ResourceName { get; set; }

        /// <summary>
        /// Type of subscribed resource, where the logs come from
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        /// <summary>
        /// Service name of the resource representing the id of the cloud project.
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// ID representing the stream of the resource
        /// </summary>
        [Input("streamId")]
        public Input<string>? StreamId { get; set; }

        /// <summary>
        /// Id of the subscription
        /// </summary>
        [Input("subscriptionId")]
        public Input<string>? SubscriptionId { get; set; }

        /// <summary>
        /// Last update date of the subscription
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public RegionLoadBalancerLogSubscriptionState()
        {
        }
        public static new RegionLoadBalancerLogSubscriptionState Empty => new RegionLoadBalancerLogSubscriptionState();
    }
}
