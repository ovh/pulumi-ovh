// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    public static class GetKubeNodePool
    {
        public static Task<GetKubeNodePoolResult> InvokeAsync(GetKubeNodePoolArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKubeNodePoolResult>("ovh:CloudProject/getKubeNodePool:getKubeNodePool", args ?? new GetKubeNodePoolArgs(), options.WithDefaults());

        public static Output<GetKubeNodePoolResult> Invoke(GetKubeNodePoolInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubeNodePoolResult>("ovh:CloudProject/getKubeNodePool:getKubeNodePool", args ?? new GetKubeNodePoolInvokeArgs(), options.WithDefaults());

        public static Output<GetKubeNodePoolResult> Invoke(GetKubeNodePoolInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubeNodePoolResult>("ovh:CloudProject/getKubeNodePool:getKubeNodePool", args ?? new GetKubeNodePoolInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubeNodePoolArgs : global::Pulumi.InvokeArgs
    {
        [Input("kubeId", required: true)]
        public string KubeId { get; set; } = null!;

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("template")]
        public Inputs.GetKubeNodePoolTemplateArgs? Template { get; set; }

        public GetKubeNodePoolArgs()
        {
        }
        public static new GetKubeNodePoolArgs Empty => new GetKubeNodePoolArgs();
    }

    public sealed class GetKubeNodePoolInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("kubeId", required: true)]
        public Input<string> KubeId { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("template")]
        public Input<Inputs.GetKubeNodePoolTemplateInputArgs>? Template { get; set; }

        public GetKubeNodePoolInvokeArgs()
        {
        }
        public static new GetKubeNodePoolInvokeArgs Empty => new GetKubeNodePoolInvokeArgs();
    }


    [OutputType]
    public sealed class GetKubeNodePoolResult
    {
        public readonly bool AntiAffinity;
        public readonly bool Autoscale;
        public readonly int AutoscalingScaleDownUnneededTimeSeconds;
        public readonly int AutoscalingScaleDownUnreadyTimeSeconds;
        public readonly double AutoscalingScaleDownUtilizationThreshold;
        public readonly int AvailableNodes;
        public readonly string CreatedAt;
        public readonly int CurrentNodes;
        public readonly int DesiredNodes;
        public readonly string Flavor;
        public readonly string FlavorName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string KubeId;
        public readonly int MaxNodes;
        public readonly int MinNodes;
        public readonly bool MonthlyBilled;
        public readonly string Name;
        public readonly string ProjectId;
        public readonly string ServiceName;
        public readonly string SizeStatus;
        public readonly string Status;
        public readonly Outputs.GetKubeNodePoolTemplateResult? Template;
        public readonly int UpToDateNodes;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetKubeNodePoolResult(
            bool antiAffinity,

            bool autoscale,

            int autoscalingScaleDownUnneededTimeSeconds,

            int autoscalingScaleDownUnreadyTimeSeconds,

            double autoscalingScaleDownUtilizationThreshold,

            int availableNodes,

            string createdAt,

            int currentNodes,

            int desiredNodes,

            string flavor,

            string flavorName,

            string id,

            string kubeId,

            int maxNodes,

            int minNodes,

            bool monthlyBilled,

            string name,

            string projectId,

            string serviceName,

            string sizeStatus,

            string status,

            Outputs.GetKubeNodePoolTemplateResult? template,

            int upToDateNodes,

            string updatedAt)
        {
            AntiAffinity = antiAffinity;
            Autoscale = autoscale;
            AutoscalingScaleDownUnneededTimeSeconds = autoscalingScaleDownUnneededTimeSeconds;
            AutoscalingScaleDownUnreadyTimeSeconds = autoscalingScaleDownUnreadyTimeSeconds;
            AutoscalingScaleDownUtilizationThreshold = autoscalingScaleDownUtilizationThreshold;
            AvailableNodes = availableNodes;
            CreatedAt = createdAt;
            CurrentNodes = currentNodes;
            DesiredNodes = desiredNodes;
            Flavor = flavor;
            FlavorName = flavorName;
            Id = id;
            KubeId = kubeId;
            MaxNodes = maxNodes;
            MinNodes = minNodes;
            MonthlyBilled = monthlyBilled;
            Name = name;
            ProjectId = projectId;
            ServiceName = serviceName;
            SizeStatus = sizeStatus;
            Status = status;
            Template = template;
            UpToDateNodes = upToDateNodes;
            UpdatedAt = updatedAt;
        }
    }
}
