// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.CloudProject
{
    public static class GetKube
    {
        public static Task<GetKubeResult> InvokeAsync(GetKubeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKubeResult>("ovh:CloudProject/getKube:getKube", args ?? new GetKubeArgs(), options.WithDefaults());

        public static Output<GetKubeResult> Invoke(GetKubeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubeResult>("ovh:CloudProject/getKube:getKube", args ?? new GetKubeInvokeArgs(), options.WithDefaults());

        public static Output<GetKubeResult> Invoke(GetKubeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetKubeResult>("ovh:CloudProject/getKube:getKube", args ?? new GetKubeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKubeArgs : global::Pulumi.InvokeArgs
    {
        [Input("customizationApiservers")]
        private List<Inputs.GetKubeCustomizationApiserverArgs>? _customizationApiservers;
        public List<Inputs.GetKubeCustomizationApiserverArgs> CustomizationApiservers
        {
            get => _customizationApiservers ?? (_customizationApiservers = new List<Inputs.GetKubeCustomizationApiserverArgs>());
            set => _customizationApiservers = value;
        }

        [Input("customizationKubeProxy")]
        public Inputs.GetKubeCustomizationKubeProxyArgs? CustomizationKubeProxy { get; set; }

        [Input("customizations")]
        private List<Inputs.GetKubeCustomizationArgs>? _customizations;
        [Obsolete(@"Use customization_apiserver instead")]
        public List<Inputs.GetKubeCustomizationArgs> Customizations
        {
            get => _customizations ?? (_customizations = new List<Inputs.GetKubeCustomizationArgs>());
            set => _customizations = value;
        }

        [Input("kubeId", required: true)]
        public string KubeId { get; set; } = null!;

        [Input("kubeProxyMode")]
        public string? KubeProxyMode { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("updatePolicy")]
        public string? UpdatePolicy { get; set; }

        [Input("version")]
        public string? Version { get; set; }

        public GetKubeArgs()
        {
        }
        public static new GetKubeArgs Empty => new GetKubeArgs();
    }

    public sealed class GetKubeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("customizationApiservers")]
        private InputList<Inputs.GetKubeCustomizationApiserverInputArgs>? _customizationApiservers;
        public InputList<Inputs.GetKubeCustomizationApiserverInputArgs> CustomizationApiservers
        {
            get => _customizationApiservers ?? (_customizationApiservers = new InputList<Inputs.GetKubeCustomizationApiserverInputArgs>());
            set => _customizationApiservers = value;
        }

        [Input("customizationKubeProxy")]
        public Input<Inputs.GetKubeCustomizationKubeProxyInputArgs>? CustomizationKubeProxy { get; set; }

        [Input("customizations")]
        private InputList<Inputs.GetKubeCustomizationInputArgs>? _customizations;
        [Obsolete(@"Use customization_apiserver instead")]
        public InputList<Inputs.GetKubeCustomizationInputArgs> Customizations
        {
            get => _customizations ?? (_customizations = new InputList<Inputs.GetKubeCustomizationInputArgs>());
            set => _customizations = value;
        }

        [Input("kubeId", required: true)]
        public Input<string> KubeId { get; set; } = null!;

        [Input("kubeProxyMode")]
        public Input<string>? KubeProxyMode { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("updatePolicy")]
        public Input<string>? UpdatePolicy { get; set; }

        [Input("version")]
        public Input<string>? Version { get; set; }

        public GetKubeInvokeArgs()
        {
        }
        public static new GetKubeInvokeArgs Empty => new GetKubeInvokeArgs();
    }


    [OutputType]
    public sealed class GetKubeResult
    {
        public readonly bool ControlPlaneIsUpToDate;
        public readonly ImmutableArray<Outputs.GetKubeCustomizationApiserverResult> CustomizationApiservers;
        public readonly Outputs.GetKubeCustomizationKubeProxyResult? CustomizationKubeProxy;
        public readonly ImmutableArray<Outputs.GetKubeCustomizationResult> Customizations;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool IsUpToDate;
        public readonly string KubeId;
        public readonly string? KubeProxyMode;
        public readonly string LoadBalancersSubnetId;
        public readonly string? Name;
        public readonly ImmutableArray<string> NextUpgradeVersions;
        public readonly string NodesSubnetId;
        public readonly string NodesUrl;
        public readonly string PrivateNetworkId;
        public readonly string? Region;
        public readonly string ServiceName;
        public readonly string Status;
        public readonly string? UpdatePolicy;
        public readonly string Url;
        public readonly string? Version;

        [OutputConstructor]
        private GetKubeResult(
            bool controlPlaneIsUpToDate,

            ImmutableArray<Outputs.GetKubeCustomizationApiserverResult> customizationApiservers,

            Outputs.GetKubeCustomizationKubeProxyResult? customizationKubeProxy,

            ImmutableArray<Outputs.GetKubeCustomizationResult> customizations,

            string id,

            bool isUpToDate,

            string kubeId,

            string? kubeProxyMode,

            string loadBalancersSubnetId,

            string? name,

            ImmutableArray<string> nextUpgradeVersions,

            string nodesSubnetId,

            string nodesUrl,

            string privateNetworkId,

            string? region,

            string serviceName,

            string status,

            string? updatePolicy,

            string url,

            string? version)
        {
            ControlPlaneIsUpToDate = controlPlaneIsUpToDate;
            CustomizationApiservers = customizationApiservers;
            CustomizationKubeProxy = customizationKubeProxy;
            Customizations = customizations;
            Id = id;
            IsUpToDate = isUpToDate;
            KubeId = kubeId;
            KubeProxyMode = kubeProxyMode;
            LoadBalancersSubnetId = loadBalancersSubnetId;
            Name = name;
            NextUpgradeVersions = nextUpgradeVersions;
            NodesSubnetId = nodesSubnetId;
            NodesUrl = nodesUrl;
            PrivateNetworkId = privateNetworkId;
            Region = region;
            ServiceName = serviceName;
            Status = status;
            UpdatePolicy = updatePolicy;
            Url = url;
            Version = version;
        }
    }
}
