// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Order
{
    public static class GetCartProductPlan
    {
        public static Task<GetCartProductPlanResult> InvokeAsync(GetCartProductPlanArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCartProductPlanResult>("ovh:Order/getCartProductPlan:getCartProductPlan", args ?? new GetCartProductPlanArgs(), options.WithDefaults());

        public static Output<GetCartProductPlanResult> Invoke(GetCartProductPlanInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCartProductPlanResult>("ovh:Order/getCartProductPlan:getCartProductPlan", args ?? new GetCartProductPlanInvokeArgs(), options.WithDefaults());

        public static Output<GetCartProductPlanResult> Invoke(GetCartProductPlanInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCartProductPlanResult>("ovh:Order/getCartProductPlan:getCartProductPlan", args ?? new GetCartProductPlanInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCartProductPlanArgs : global::Pulumi.InvokeArgs
    {
        [Input("cartId", required: true)]
        public string CartId { get; set; } = null!;

        [Input("catalogName")]
        public string? CatalogName { get; set; }

        [Input("planCode", required: true)]
        public string PlanCode { get; set; } = null!;

        [Input("priceCapacity", required: true)]
        public string PriceCapacity { get; set; } = null!;

        [Input("product", required: true)]
        public string Product { get; set; } = null!;

        public GetCartProductPlanArgs()
        {
        }
        public static new GetCartProductPlanArgs Empty => new GetCartProductPlanArgs();
    }

    public sealed class GetCartProductPlanInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("cartId", required: true)]
        public Input<string> CartId { get; set; } = null!;

        [Input("catalogName")]
        public Input<string>? CatalogName { get; set; }

        [Input("planCode", required: true)]
        public Input<string> PlanCode { get; set; } = null!;

        [Input("priceCapacity", required: true)]
        public Input<string> PriceCapacity { get; set; } = null!;

        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        public GetCartProductPlanInvokeArgs()
        {
        }
        public static new GetCartProductPlanInvokeArgs Empty => new GetCartProductPlanInvokeArgs();
    }


    [OutputType]
    public sealed class GetCartProductPlanResult
    {
        public readonly string CartId;
        public readonly string? CatalogName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string PlanCode;
        public readonly string PriceCapacity;
        public readonly ImmutableArray<Outputs.GetCartProductPlanPriceResult> Prices;
        public readonly string Product;
        public readonly string ProductName;
        public readonly string ProductType;
        public readonly ImmutableArray<Outputs.GetCartProductPlanSelectedPriceResult> SelectedPrices;

        [OutputConstructor]
        private GetCartProductPlanResult(
            string cartId,

            string? catalogName,

            string id,

            string planCode,

            string priceCapacity,

            ImmutableArray<Outputs.GetCartProductPlanPriceResult> prices,

            string product,

            string productName,

            string productType,

            ImmutableArray<Outputs.GetCartProductPlanSelectedPriceResult> selectedPrices)
        {
            CartId = cartId;
            CatalogName = catalogName;
            Id = id;
            PlanCode = planCode;
            PriceCapacity = priceCapacity;
            Prices = prices;
            Product = product;
            ProductName = productName;
            ProductType = productType;
            SelectedPrices = selectedPrices;
        }
    }
}
