// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Okms.Outputs
{

    [OutputType]
    public sealed class GetOkmsServiceKeyJwkKeyResult
    {
        /// <summary>
        /// The algorithm intended to be used with the key
        /// </summary>
        public readonly string Alg;
        /// <summary>
        /// The cryptographic curve used with the key
        /// </summary>
        public readonly string Crv;
        /// <summary>
        /// The exponent value for the RSA public key
        /// </summary>
        public readonly string E;
        /// <summary>
        /// The operation for which the key is intended to be used
        /// </summary>
        public readonly ImmutableArray<string> KeyOps;
        /// <summary>
        /// key ID parameter used to match a specific key
        /// </summary>
        public readonly string Kid;
        /// <summary>
        /// Key type parameter identifies the cryptographic algorithm family used with the key, such as RSA or EC
        /// </summary>
        public readonly string Kty;
        /// <summary>
        /// The modulus value for the RSA public key
        /// </summary>
        public readonly string N;
        /// <summary>
        /// The intended use of the public key
        /// </summary>
        public readonly string Use;
        /// <summary>
        /// The x coordinate for the Elliptic Curve point
        /// </summary>
        public readonly string X;
        /// <summary>
        /// The y coordinate for the Elliptic Curve point
        /// </summary>
        public readonly string Y;

        [OutputConstructor]
        private GetOkmsServiceKeyJwkKeyResult(
            string alg,

            string crv,

            string e,

            ImmutableArray<string> keyOps,

            string kid,

            string kty,

            string n,

            string use,

            string x,

            string y)
        {
            Alg = alg;
            Crv = crv;
            E = e;
            KeyOps = keyOps;
            Kid = kid;
            Kty = kty;
            N = n;
            Use = use;
            X = x;
            Y = y;
        }
    }
}
