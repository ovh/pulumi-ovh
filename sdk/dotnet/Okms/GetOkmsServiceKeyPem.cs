// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Okms
{
    public static class GetOkmsServiceKeyPem
    {
        /// <summary>
        /// Use this data source to retrieve information about a KMS service key, in the PEM format.
        /// </summary>
        public static Task<GetOkmsServiceKeyPemResult> InvokeAsync(GetOkmsServiceKeyPemArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetOkmsServiceKeyPemResult>("ovh:Okms/getOkmsServiceKeyPem:getOkmsServiceKeyPem", args ?? new GetOkmsServiceKeyPemArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about a KMS service key, in the PEM format.
        /// </summary>
        public static Output<GetOkmsServiceKeyPemResult> Invoke(GetOkmsServiceKeyPemInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetOkmsServiceKeyPemResult>("ovh:Okms/getOkmsServiceKeyPem:getOkmsServiceKeyPem", args ?? new GetOkmsServiceKeyPemInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about a KMS service key, in the PEM format.
        /// </summary>
        public static Output<GetOkmsServiceKeyPemResult> Invoke(GetOkmsServiceKeyPemInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetOkmsServiceKeyPemResult>("ovh:Okms/getOkmsServiceKeyPem:getOkmsServiceKeyPem", args ?? new GetOkmsServiceKeyPemInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetOkmsServiceKeyPemArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("okmsId", required: true)]
        public string OkmsId { get; set; } = null!;

        public GetOkmsServiceKeyPemArgs()
        {
        }
        public static new GetOkmsServiceKeyPemArgs Empty => new GetOkmsServiceKeyPemArgs();
    }

    public sealed class GetOkmsServiceKeyPemInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("okmsId", required: true)]
        public Input<string> OkmsId { get; set; } = null!;

        public GetOkmsServiceKeyPemInvokeArgs()
        {
        }
        public static new GetOkmsServiceKeyPemInvokeArgs Empty => new GetOkmsServiceKeyPemInvokeArgs();
    }


    [OutputType]
    public sealed class GetOkmsServiceKeyPemResult
    {
        public readonly string CreatedAt;
        public readonly string Curve;
        public readonly Outputs.GetOkmsServiceKeyPemIamResult Iam;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetOkmsServiceKeyPemKeysPemResult> KeysPems;
        public readonly string Name;
        public readonly string OkmsId;
        public readonly ImmutableArray<string> Operations;
        public readonly double Size;
        public readonly string State;
        public readonly string Type;

        [OutputConstructor]
        private GetOkmsServiceKeyPemResult(
            string createdAt,

            string curve,

            Outputs.GetOkmsServiceKeyPemIamResult iam,

            string id,

            ImmutableArray<Outputs.GetOkmsServiceKeyPemKeysPemResult> keysPems,

            string name,

            string okmsId,

            ImmutableArray<string> operations,

            double size,

            string state,

            string type)
        {
            CreatedAt = createdAt;
            Curve = curve;
            Iam = iam;
            Id = id;
            KeysPems = keysPems;
            Name = name;
            OkmsId = okmsId;
            Operations = operations;
            Size = size;
            State = state;
            Type = type;
        }
    }
}
