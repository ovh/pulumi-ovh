// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.VMware
{
    public static class GetCloudDirectorBackup
    {
        /// <summary>
        /// Get information about a VMware Cloud Director Backup service
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var backup = Ovh.VMware.GetCloudDirectorBackup.Invoke(new()
        ///     {
        ///         BackupId = "&lt;VCD backup ID&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudDirectorBackupResult> InvokeAsync(GetCloudDirectorBackupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudDirectorBackupResult>("ovh:VMware/getCloudDirectorBackup:getCloudDirectorBackup", args ?? new GetCloudDirectorBackupArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a VMware Cloud Director Backup service
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var backup = Ovh.VMware.GetCloudDirectorBackup.Invoke(new()
        ///     {
        ///         BackupId = "&lt;VCD backup ID&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudDirectorBackupResult> Invoke(GetCloudDirectorBackupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudDirectorBackupResult>("ovh:VMware/getCloudDirectorBackup:getCloudDirectorBackup", args ?? new GetCloudDirectorBackupInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get information about a VMware Cloud Director Backup service
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var backup = Ovh.VMware.GetCloudDirectorBackup.Invoke(new()
        ///     {
        ///         BackupId = "&lt;VCD backup ID&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudDirectorBackupResult> Invoke(GetCloudDirectorBackupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudDirectorBackupResult>("ovh:VMware/getCloudDirectorBackup:getCloudDirectorBackup", args ?? new GetCloudDirectorBackupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudDirectorBackupArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Backup ID
        /// </summary>
        [Input("backupId", required: true)]
        public string BackupId { get; set; } = null!;

        public GetCloudDirectorBackupArgs()
        {
        }
        public static new GetCloudDirectorBackupArgs Empty => new GetCloudDirectorBackupArgs();
    }

    public sealed class GetCloudDirectorBackupInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Backup ID
        /// </summary>
        [Input("backupId", required: true)]
        public Input<string> BackupId { get; set; } = null!;

        public GetCloudDirectorBackupInvokeArgs()
        {
        }
        public static new GetCloudDirectorBackupInvokeArgs Empty => new GetCloudDirectorBackupInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudDirectorBackupResult
    {
        /// <summary>
        /// Backup ID
        /// </summary>
        public readonly string BackupId;
        /// <summary>
        /// Datetime when backup was enabled
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// VMware Cloud Director Backup service current state
        /// </summary>
        public readonly Outputs.GetCloudDirectorBackupCurrentStateResult CurrentState;
        /// <summary>
        /// Asynchronous operations ongoing on the VMware Cloud Director organization backup service
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudDirectorBackupCurrentTaskResult> CurrentTasks;
        /// <summary>
        /// IAM resource metadata
        /// </summary>
        public readonly Outputs.GetCloudDirectorBackupIamResult Iam;
        /// <summary>
        /// Unique identifier of the VMware Cloud Director backup
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Reflects the readiness of the VMware Cloud Director organization backup service
        /// </summary>
        public readonly string ResourceStatus;
        /// <summary>
        /// VMware Cloud Director Backup target spec
        /// </summary>
        public readonly Outputs.GetCloudDirectorBackupTargetSpecResult TargetSpec;
        /// <summary>
        /// Datetime when backup is modified
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetCloudDirectorBackupResult(
            string backupId,

            string createdAt,

            Outputs.GetCloudDirectorBackupCurrentStateResult currentState,

            ImmutableArray<Outputs.GetCloudDirectorBackupCurrentTaskResult> currentTasks,

            Outputs.GetCloudDirectorBackupIamResult iam,

            string id,

            string resourceStatus,

            Outputs.GetCloudDirectorBackupTargetSpecResult targetSpec,

            string updatedAt)
        {
            BackupId = backupId;
            CreatedAt = createdAt;
            CurrentState = currentState;
            CurrentTasks = currentTasks;
            Iam = iam;
            Id = id;
            ResourceStatus = resourceStatus;
            TargetSpec = targetSpec;
            UpdatedAt = updatedAt;
        }
    }
}
