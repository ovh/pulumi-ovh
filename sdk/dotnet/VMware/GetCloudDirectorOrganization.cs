// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.VMware
{
    public static class GetCloudDirectorOrganization
    {
        /// <summary>
        /// Get VMware Cloud Director organization details
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var organization = Ovh.VMware.GetCloudDirectorOrganization.Invoke(new()
        ///     {
        ///         OrganizationId = "&lt;VCD organization ID&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudDirectorOrganizationResult> InvokeAsync(GetCloudDirectorOrganizationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudDirectorOrganizationResult>("ovh:VMware/getCloudDirectorOrganization:getCloudDirectorOrganization", args ?? new GetCloudDirectorOrganizationArgs(), options.WithDefaults());

        /// <summary>
        /// Get VMware Cloud Director organization details
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var organization = Ovh.VMware.GetCloudDirectorOrganization.Invoke(new()
        ///     {
        ///         OrganizationId = "&lt;VCD organization ID&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudDirectorOrganizationResult> Invoke(GetCloudDirectorOrganizationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudDirectorOrganizationResult>("ovh:VMware/getCloudDirectorOrganization:getCloudDirectorOrganization", args ?? new GetCloudDirectorOrganizationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Get VMware Cloud Director organization details
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var organization = Ovh.VMware.GetCloudDirectorOrganization.Invoke(new()
        ///     {
        ///         OrganizationId = "&lt;VCD organization ID&gt;",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudDirectorOrganizationResult> Invoke(GetCloudDirectorOrganizationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudDirectorOrganizationResult>("ovh:VMware/getCloudDirectorOrganization:getCloudDirectorOrganization", args ?? new GetCloudDirectorOrganizationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudDirectorOrganizationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public string OrganizationId { get; set; } = null!;

        public GetCloudDirectorOrganizationArgs()
        {
        }
        public static new GetCloudDirectorOrganizationArgs Empty => new GetCloudDirectorOrganizationArgs();
    }

    public sealed class GetCloudDirectorOrganizationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Organization ID
        /// </summary>
        [Input("organizationId", required: true)]
        public Input<string> OrganizationId { get; set; } = null!;

        public GetCloudDirectorOrganizationInvokeArgs()
        {
        }
        public static new GetCloudDirectorOrganizationInvokeArgs Empty => new GetCloudDirectorOrganizationInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudDirectorOrganizationResult
    {
        /// <summary>
        /// Current state of VMware Cloud Director organization service
        /// </summary>
        public readonly Outputs.GetCloudDirectorOrganizationCurrentStateResult CurrentState;
        /// <summary>
        /// Asynchronous operations ongoing on the VMware Cloud Director organization
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudDirectorOrganizationCurrentTaskResult> CurrentTasks;
        /// <summary>
        /// IAM resource metadata
        /// </summary>
        public readonly Outputs.GetCloudDirectorOrganizationIamResult Iam;
        /// <summary>
        /// Unique identifier
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Organization ID
        /// </summary>
        public readonly string OrganizationId;
        /// <summary>
        /// Reflects the readiness of the VMware Cloud Director organization.
        /// </summary>
        public readonly string ResourceStatus;
        /// <summary>
        /// Target specification of VMware Cloud Director organization service
        /// </summary>
        public readonly Outputs.GetCloudDirectorOrganizationTargetSpecResult TargetSpec;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetCloudDirectorOrganizationResult(
            Outputs.GetCloudDirectorOrganizationCurrentStateResult currentState,

            ImmutableArray<Outputs.GetCloudDirectorOrganizationCurrentTaskResult> currentTasks,

            Outputs.GetCloudDirectorOrganizationIamResult iam,

            string id,

            string organizationId,

            string resourceStatus,

            Outputs.GetCloudDirectorOrganizationTargetSpecResult targetSpec,

            string updatedAt)
        {
            CurrentState = currentState;
            CurrentTasks = currentTasks;
            Iam = iam;
            Id = id;
            OrganizationId = organizationId;
            ResourceStatus = resourceStatus;
            TargetSpec = targetSpec;
            UpdatedAt = updatedAt;
        }
    }
}
