// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Vps.Outputs
{

    [OutputType]
    public sealed class VpsModel
    {
        /// <summary>
        /// All options the VPS can have (additionalDisk┃automatedBackup┃cpanel┃ftpbackup┃plesk┃snapshot┃veeam┃windows)
        /// </summary>
        public readonly ImmutableArray<string> AvailableOptions;
        /// <summary>
        /// Datacenters where this model is available
        /// </summary>
        public readonly ImmutableArray<string> Datacenters;
        /// <summary>
        /// Disk capacity of this VPS
        /// </summary>
        public readonly double? Disk;
        /// <summary>
        /// Maximum number of additional IPs
        /// </summary>
        public readonly double? MaximumAdditionnalIp;
        /// <summary>
        /// RAM of the VPS
        /// </summary>
        public readonly double? Memory;
        /// <summary>
        /// Name of the VPS
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// Description of this VPS offer
        /// </summary>
        public readonly string? Offer;
        /// <summary>
        /// Number of vcores
        /// </summary>
        public readonly double? Vcore;
        /// <summary>
        /// All versions that VPS can have (2013v1┃2014v1┃2015v1┃2017v1┃2017v2┃2017v3┃2018v1┃2018v2┃2019v1)
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private VpsModel(
            ImmutableArray<string> availableOptions,

            ImmutableArray<string> datacenters,

            double? disk,

            double? maximumAdditionnalIp,

            double? memory,

            string? name,

            string? offer,

            double? vcore,

            string? version)
        {
            AvailableOptions = availableOptions;
            Datacenters = datacenters;
            Disk = disk;
            MaximumAdditionnalIp = maximumAdditionnalIp;
            Memory = memory;
            Name = name;
            Offer = offer;
            Vcore = vcore;
            Version = version;
        }
    }
}
