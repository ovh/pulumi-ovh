// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Iam
{
    /// <summary>
    /// Create am IAM permissions group.
    /// </summary>
    [OvhResourceType("ovh:Iam/permissionsGroup:PermissionsGroup")]
    public partial class PermissionsGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set of actions allowed by the permissions group.
        /// </summary>
        [Output("allows")]
        public Output<ImmutableArray<string>> Allows { get; private set; } = null!;

        /// <summary>
        /// Creation date of this group.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Set of actions that will be denied no matter what permissions group exists.
        /// </summary>
        [Output("denies")]
        public Output<ImmutableArray<string>> Denies { get; private set; } = null!;

        /// <summary>
        /// Group description.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Set of actions that will be subtracted from the `allow` list.
        /// </summary>
        [Output("excepts")]
        public Output<ImmutableArray<string>> Excepts { get; private set; } = null!;

        /// <summary>
        /// Name of the permissions group.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Owner of the permissions group.
        /// </summary>
        [Output("owner")]
        public Output<string> Owner { get; private set; } = null!;

        /// <summary>
        /// Date of the last update of this group.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// URN of the permissions group.
        /// </summary>
        [Output("urn")]
        public Output<string> Urn { get; private set; } = null!;


        /// <summary>
        /// Create a PermissionsGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PermissionsGroup(string name, PermissionsGroupArgs args, CustomResourceOptions? options = null)
            : base("ovh:Iam/permissionsGroup:PermissionsGroup", name, args ?? new PermissionsGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PermissionsGroup(string name, Input<string> id, PermissionsGroupState? state = null, CustomResourceOptions? options = null)
            : base("ovh:Iam/permissionsGroup:PermissionsGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PermissionsGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PermissionsGroup Get(string name, Input<string> id, PermissionsGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new PermissionsGroup(name, id, state, options);
        }
    }

    public sealed class PermissionsGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("allows")]
        private InputList<string>? _allows;

        /// <summary>
        /// Set of actions allowed by the permissions group.
        /// </summary>
        public InputList<string> Allows
        {
            get => _allows ?? (_allows = new InputList<string>());
            set => _allows = value;
        }

        [Input("denies")]
        private InputList<string>? _denies;

        /// <summary>
        /// Set of actions that will be denied no matter what permissions group exists.
        /// </summary>
        public InputList<string> Denies
        {
            get => _denies ?? (_denies = new InputList<string>());
            set => _denies = value;
        }

        /// <summary>
        /// Group description.
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("excepts")]
        private InputList<string>? _excepts;

        /// <summary>
        /// Set of actions that will be subtracted from the `allow` list.
        /// </summary>
        public InputList<string> Excepts
        {
            get => _excepts ?? (_excepts = new InputList<string>());
            set => _excepts = value;
        }

        /// <summary>
        /// Name of the permissions group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Date of the last update of this group.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public PermissionsGroupArgs()
        {
        }
        public static new PermissionsGroupArgs Empty => new PermissionsGroupArgs();
    }

    public sealed class PermissionsGroupState : global::Pulumi.ResourceArgs
    {
        [Input("allows")]
        private InputList<string>? _allows;

        /// <summary>
        /// Set of actions allowed by the permissions group.
        /// </summary>
        public InputList<string> Allows
        {
            get => _allows ?? (_allows = new InputList<string>());
            set => _allows = value;
        }

        /// <summary>
        /// Creation date of this group.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        [Input("denies")]
        private InputList<string>? _denies;

        /// <summary>
        /// Set of actions that will be denied no matter what permissions group exists.
        /// </summary>
        public InputList<string> Denies
        {
            get => _denies ?? (_denies = new InputList<string>());
            set => _denies = value;
        }

        /// <summary>
        /// Group description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("excepts")]
        private InputList<string>? _excepts;

        /// <summary>
        /// Set of actions that will be subtracted from the `allow` list.
        /// </summary>
        public InputList<string> Excepts
        {
            get => _excepts ?? (_excepts = new InputList<string>());
            set => _excepts = value;
        }

        /// <summary>
        /// Name of the permissions group.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Owner of the permissions group.
        /// </summary>
        [Input("owner")]
        public Input<string>? Owner { get; set; }

        /// <summary>
        /// Date of the last update of this group.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// URN of the permissions group.
        /// </summary>
        [Input("urn")]
        public Input<string>? Urn { get; set; }

        public PermissionsGroupState()
        {
        }
        public static new PermissionsGroupState Empty => new PermissionsGroupState();
    }
}
