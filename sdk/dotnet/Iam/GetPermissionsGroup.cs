// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Iam
{
    public static class GetPermissionsGroup
    {
        public static Task<GetPermissionsGroupResult> InvokeAsync(GetPermissionsGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPermissionsGroupResult>("ovh:Iam/getPermissionsGroup:getPermissionsGroup", args ?? new GetPermissionsGroupArgs(), options.WithDefaults());

        public static Output<GetPermissionsGroupResult> Invoke(GetPermissionsGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPermissionsGroupResult>("ovh:Iam/getPermissionsGroup:getPermissionsGroup", args ?? new GetPermissionsGroupInvokeArgs(), options.WithDefaults());

        public static Output<GetPermissionsGroupResult> Invoke(GetPermissionsGroupInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPermissionsGroupResult>("ovh:Iam/getPermissionsGroup:getPermissionsGroup", args ?? new GetPermissionsGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPermissionsGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("allows")]
        private List<string>? _allows;
        public List<string> Allows
        {
            get => _allows ?? (_allows = new List<string>());
            set => _allows = value;
        }

        [Input("denies")]
        private List<string>? _denies;
        public List<string> Denies
        {
            get => _denies ?? (_denies = new List<string>());
            set => _denies = value;
        }

        [Input("description")]
        public string? Description { get; set; }

        [Input("excepts")]
        private List<string>? _excepts;
        public List<string> Excepts
        {
            get => _excepts ?? (_excepts = new List<string>());
            set => _excepts = value;
        }

        [Input("updatedAt")]
        public string? UpdatedAt { get; set; }

        [Input("urn", required: true)]
        public string Urn { get; set; } = null!;

        public GetPermissionsGroupArgs()
        {
        }
        public static new GetPermissionsGroupArgs Empty => new GetPermissionsGroupArgs();
    }

    public sealed class GetPermissionsGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("allows")]
        private InputList<string>? _allows;
        public InputList<string> Allows
        {
            get => _allows ?? (_allows = new InputList<string>());
            set => _allows = value;
        }

        [Input("denies")]
        private InputList<string>? _denies;
        public InputList<string> Denies
        {
            get => _denies ?? (_denies = new InputList<string>());
            set => _denies = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("excepts")]
        private InputList<string>? _excepts;
        public InputList<string> Excepts
        {
            get => _excepts ?? (_excepts = new InputList<string>());
            set => _excepts = value;
        }

        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        [Input("urn", required: true)]
        public Input<string> Urn { get; set; } = null!;

        public GetPermissionsGroupInvokeArgs()
        {
        }
        public static new GetPermissionsGroupInvokeArgs Empty => new GetPermissionsGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetPermissionsGroupResult
    {
        public readonly ImmutableArray<string> Allows;
        public readonly string CreatedAt;
        public readonly ImmutableArray<string> Denies;
        public readonly string? Description;
        public readonly ImmutableArray<string> Excepts;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Owner;
        public readonly string UpdatedAt;
        public readonly string Urn;

        [OutputConstructor]
        private GetPermissionsGroupResult(
            ImmutableArray<string> allows,

            string createdAt,

            ImmutableArray<string> denies,

            string? description,

            ImmutableArray<string> excepts,

            string id,

            string name,

            string owner,

            string updatedAt,

            string urn)
        {
            Allows = allows;
            CreatedAt = createdAt;
            Denies = denies;
            Description = description;
            Excepts = excepts;
            Id = id;
            Name = name;
            Owner = owner;
            UpdatedAt = updatedAt;
            Urn = urn;
        }
    }
}
