// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.IpLoadBalancing
{
    public static class GetVrackNetwork
    {
        public static Task<GetVrackNetworkResult> InvokeAsync(GetVrackNetworkArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVrackNetworkResult>("ovh:IpLoadBalancing/getVrackNetwork:getVrackNetwork", args ?? new GetVrackNetworkArgs(), options.WithDefaults());

        public static Output<GetVrackNetworkResult> Invoke(GetVrackNetworkInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVrackNetworkResult>("ovh:IpLoadBalancing/getVrackNetwork:getVrackNetwork", args ?? new GetVrackNetworkInvokeArgs(), options.WithDefaults());

        public static Output<GetVrackNetworkResult> Invoke(GetVrackNetworkInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVrackNetworkResult>("ovh:IpLoadBalancing/getVrackNetwork:getVrackNetwork", args ?? new GetVrackNetworkInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVrackNetworkArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("vrackNetworkId", required: true)]
        public int VrackNetworkId { get; set; }

        public GetVrackNetworkArgs()
        {
        }
        public static new GetVrackNetworkArgs Empty => new GetVrackNetworkArgs();
    }

    public sealed class GetVrackNetworkInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("vrackNetworkId", required: true)]
        public Input<int> VrackNetworkId { get; set; } = null!;

        public GetVrackNetworkInvokeArgs()
        {
        }
        public static new GetVrackNetworkInvokeArgs Empty => new GetVrackNetworkInvokeArgs();
    }


    [OutputType]
    public sealed class GetVrackNetworkResult
    {
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string NatIp;
        public readonly string ServiceName;
        public readonly string Subnet;
        public readonly int Vlan;
        public readonly int VrackNetworkId;

        [OutputConstructor]
        private GetVrackNetworkResult(
            string displayName,

            string id,

            string natIp,

            string serviceName,

            string subnet,

            int vlan,

            int vrackNetworkId)
        {
            DisplayName = displayName;
            Id = id;
            NatIp = natIp;
            ServiceName = serviceName;
            Subnet = subnet;
            Vlan = vlan;
            VrackNetworkId = vrackNetworkId;
        }
    }
}
