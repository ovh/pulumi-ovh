// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    public static class GetCloudProjectFlavor
    {
        /// <summary>
        /// Retrieves the given flavor in a public cloud project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var flavor = Ovh.GetCloudProjectFlavor.Invoke(new()
        ///     {
        ///         ServiceName = "YYYY",
        ///         Id = "XXXX",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetCloudProjectFlavorResult> InvokeAsync(GetCloudProjectFlavorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudProjectFlavorResult>("ovh:index/getCloudProjectFlavor:getCloudProjectFlavor", args ?? new GetCloudProjectFlavorArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the given flavor in a public cloud project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var flavor = Ovh.GetCloudProjectFlavor.Invoke(new()
        ///     {
        ///         ServiceName = "YYYY",
        ///         Id = "XXXX",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudProjectFlavorResult> Invoke(GetCloudProjectFlavorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudProjectFlavorResult>("ovh:index/getCloudProjectFlavor:getCloudProjectFlavor", args ?? new GetCloudProjectFlavorInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieves the given flavor in a public cloud project.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var flavor = Ovh.GetCloudProjectFlavor.Invoke(new()
        ///     {
        ///         ServiceName = "YYYY",
        ///         Id = "XXXX",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetCloudProjectFlavorResult> Invoke(GetCloudProjectFlavorInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudProjectFlavorResult>("ovh:index/getCloudProjectFlavor:getCloudProjectFlavor", args ?? new GetCloudProjectFlavorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudProjectFlavorArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Flavor id
        /// </summary>
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public GetCloudProjectFlavorArgs()
        {
        }
        public static new GetCloudProjectFlavorArgs Empty => new GetCloudProjectFlavorArgs();
    }

    public sealed class GetCloudProjectFlavorInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Flavor id
        /// </summary>
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public GetCloudProjectFlavorInvokeArgs()
        {
        }
        public static new GetCloudProjectFlavorInvokeArgs Empty => new GetCloudProjectFlavorInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudProjectFlavorResult
    {
        /// <summary>
        /// Available in stock
        /// </summary>
        public readonly bool Available;
        /// <summary>
        /// Capabilities of the flavor
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudProjectFlavorCapabilityResult> Capabilities;
        /// <summary>
        /// Number of disks
        /// </summary>
        public readonly double Disk;
        /// <summary>
        /// Flavor id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Max capacity of inbound traffic in Mbit/s
        /// </summary>
        public readonly double InboundBandwidth;
        /// <summary>
        /// Flavor name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// OS to install on
        /// </summary>
        public readonly string OsType;
        /// <summary>
        /// Max capacity of outbound traffic in Mbit/s
        /// </summary>
        public readonly double OutboundBandwidth;
        /// <summary>
        /// Plan codes to order instances
        /// </summary>
        public readonly Outputs.GetCloudProjectFlavorPlanCodesResult PlanCodes;
        /// <summary>
        /// Number instance you can spawn with your actual quota
        /// </summary>
        public readonly double Quota;
        /// <summary>
        /// Ram quantity (Gio)
        /// </summary>
        public readonly double Ram;
        /// <summary>
        /// Flavor region
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Service name
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Flavor type
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Number of VCPUs
        /// </summary>
        public readonly double Vcpus;

        [OutputConstructor]
        private GetCloudProjectFlavorResult(
            bool available,

            ImmutableArray<Outputs.GetCloudProjectFlavorCapabilityResult> capabilities,

            double disk,

            string id,

            double inboundBandwidth,

            string name,

            string osType,

            double outboundBandwidth,

            Outputs.GetCloudProjectFlavorPlanCodesResult planCodes,

            double quota,

            double ram,

            string region,

            string serviceName,

            string type,

            double vcpus)
        {
            Available = available;
            Capabilities = capabilities;
            Disk = disk;
            Id = id;
            InboundBandwidth = inboundBandwidth;
            Name = name;
            OsType = osType;
            OutboundBandwidth = outboundBandwidth;
            PlanCodes = planCodes;
            Quota = quota;
            Ram = ram;
            Region = region;
            ServiceName = serviceName;
            Type = type;
            Vcpus = vcpus;
        }
    }
}
