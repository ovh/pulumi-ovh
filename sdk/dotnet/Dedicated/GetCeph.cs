// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Dedicated
{
    public static class GetCeph
    {
        public static Task<GetCephResult> InvokeAsync(GetCephArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCephResult>("ovh:Dedicated/getCeph:getCeph", args ?? new GetCephArgs(), options.WithDefaults());

        public static Output<GetCephResult> Invoke(GetCephInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCephResult>("ovh:Dedicated/getCeph:getCeph", args ?? new GetCephInvokeArgs(), options.WithDefaults());

        public static Output<GetCephResult> Invoke(GetCephInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCephResult>("ovh:Dedicated/getCeph:getCeph", args ?? new GetCephInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCephArgs : global::Pulumi.InvokeArgs
    {
        [Input("cephVersion")]
        public string? CephVersion { get; set; }

        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("status")]
        public string? Status { get; set; }

        public GetCephArgs()
        {
        }
        public static new GetCephArgs Empty => new GetCephArgs();
    }

    public sealed class GetCephInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("cephVersion")]
        public Input<string>? CephVersion { get; set; }

        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("status")]
        public Input<string>? Status { get; set; }

        public GetCephInvokeArgs()
        {
        }
        public static new GetCephInvokeArgs Empty => new GetCephInvokeArgs();
    }


    [OutputType]
    public sealed class GetCephResult
    {
        public readonly string CephURN;
        public readonly ImmutableArray<string> CephMons;
        public readonly string CephVersion;
        public readonly string CrushTunables;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Label;
        public readonly string Region;
        public readonly string ServiceName;
        public readonly double Size;
        public readonly string State;
        public readonly string Status;

        [OutputConstructor]
        private GetCephResult(
            string CephURN,

            ImmutableArray<string> cephMons,

            string cephVersion,

            string crushTunables,

            string id,

            string label,

            string region,

            string serviceName,

            double size,

            string state,

            string status)
        {
            this.CephURN = CephURN;
            CephMons = cephMons;
            CephVersion = cephVersion;
            CrushTunables = crushTunables;
            Id = id;
            Label = label;
            Region = region;
            ServiceName = serviceName;
            Size = size;
            State = state;
            Status = status;
        }
    }
}
