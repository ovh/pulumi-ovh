// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    /// <summary>
    /// Create a dynhost record for a given domain zone.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dynhostRecord = new Ovh.DomainZoneDynhostRecord("dynhost_record", new()
    ///     {
    ///         ZoneName = "mydomain.ovh",
    ///         SubDomain = "dynhost",
    ///         Ip = "1.2.3.4",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OvhResourceType("ovh:index/domainZoneDynhostRecord:DomainZoneDynhostRecord")]
    public partial class DomainZoneDynhostRecord : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Record IP
        /// </summary>
        [Output("ip")]
        public Output<string> Ip { get; private set; } = null!;

        /// <summary>
        /// Record sub-domain
        /// </summary>
        [Output("subDomain")]
        public Output<string> SubDomain { get; private set; } = null!;

        /// <summary>
        /// Record TTL (Time to Live)
        /// </summary>
        [Output("ttl")]
        public Output<double> Ttl { get; private set; } = null!;

        /// <summary>
        /// Record zone
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;

        /// <summary>
        /// Zone name
        /// </summary>
        [Output("zoneName")]
        public Output<string> ZoneName { get; private set; } = null!;


        /// <summary>
        /// Create a DomainZoneDynhostRecord resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DomainZoneDynhostRecord(string name, DomainZoneDynhostRecordArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/domainZoneDynhostRecord:DomainZoneDynhostRecord", name, args ?? new DomainZoneDynhostRecordArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DomainZoneDynhostRecord(string name, Input<string> id, DomainZoneDynhostRecordState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/domainZoneDynhostRecord:DomainZoneDynhostRecord", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DomainZoneDynhostRecord resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DomainZoneDynhostRecord Get(string name, Input<string> id, DomainZoneDynhostRecordState? state = null, CustomResourceOptions? options = null)
        {
            return new DomainZoneDynhostRecord(name, id, state, options);
        }
    }

    public sealed class DomainZoneDynhostRecordArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Record IP
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// Record sub-domain
        /// </summary>
        [Input("subDomain")]
        public Input<string>? SubDomain { get; set; }

        /// <summary>
        /// Zone name
        /// </summary>
        [Input("zoneName", required: true)]
        public Input<string> ZoneName { get; set; } = null!;

        public DomainZoneDynhostRecordArgs()
        {
        }
        public static new DomainZoneDynhostRecordArgs Empty => new DomainZoneDynhostRecordArgs();
    }

    public sealed class DomainZoneDynhostRecordState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Record IP
        /// </summary>
        [Input("ip")]
        public Input<string>? Ip { get; set; }

        /// <summary>
        /// Record sub-domain
        /// </summary>
        [Input("subDomain")]
        public Input<string>? SubDomain { get; set; }

        /// <summary>
        /// Record TTL (Time to Live)
        /// </summary>
        [Input("ttl")]
        public Input<double>? Ttl { get; set; }

        /// <summary>
        /// Record zone
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        /// <summary>
        /// Zone name
        /// </summary>
        [Input("zoneName")]
        public Input<string>? ZoneName { get; set; }

        public DomainZoneDynhostRecordState()
        {
        }
        public static new DomainZoneDynhostRecordState Empty => new DomainZoneDynhostRecordState();
    }
}
