// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Vrack
{
    /// <summary>
    /// Attach a vrackServices to the vrack.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vrackVrackservices = new Ovh.Vrack.Vrackservices("vrackVrackservices", new()
    ///     {
    ///         ServiceName = "&lt;vRack service name&gt;",
    ///         VrackServices = "&lt;vrackServices service name&gt;",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Attachment of a vrackServices and a vRack can be imported using the `service_name` (vRack identifier) and the `vrack_services` (vrackServices service name), separated by "/" E.g.,
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import ovh:Vrack/vrackservices:Vrackservices myattach "&lt;service_name&gt;/&lt;vrackServices service name&gt;"
    /// ```
    /// </summary>
    [OvhResourceType("ovh:Vrack/vrackservices:Vrackservices")]
    public partial class Vrackservices : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The internal name of your vrack
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Your vrackServices service name.
        /// </summary>
        [Output("vrackServices")]
        public Output<string> VrackServices { get; private set; } = null!;


        /// <summary>
        /// Create a Vrackservices resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Vrackservices(string name, VrackservicesArgs args, CustomResourceOptions? options = null)
            : base("ovh:Vrack/vrackservices:Vrackservices", name, args ?? new VrackservicesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Vrackservices(string name, Input<string> id, VrackservicesState? state = null, CustomResourceOptions? options = null)
            : base("ovh:Vrack/vrackservices:Vrackservices", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Vrackservices resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Vrackservices Get(string name, Input<string> id, VrackservicesState? state = null, CustomResourceOptions? options = null)
        {
            return new Vrackservices(name, id, state, options);
        }
    }

    public sealed class VrackservicesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The internal name of your vrack
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Your vrackServices service name.
        /// </summary>
        [Input("vrackServices", required: true)]
        public Input<string> VrackServices { get; set; } = null!;

        public VrackservicesArgs()
        {
        }
        public static new VrackservicesArgs Empty => new VrackservicesArgs();
    }

    public sealed class VrackservicesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The internal name of your vrack
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Your vrackServices service name.
        /// </summary>
        [Input("vrackServices")]
        public Input<string>? VrackServices { get; set; }

        public VrackservicesState()
        {
        }
        public static new VrackservicesState Empty => new VrackservicesState();
    }
}
