// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Vrack
{
    /// <summary>
    /// Move a Dedicated Cloud Datacenter to a vrack.
    /// 
    /// ## Example Usage
    /// 
    /// &gt; **WARNING** You have to import the resource first as it cannot be created, see Import section below.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var vrack_dedicatedCloudDatacenter = new Ovh.Vrack.DedicatedCloudDatacenter("vrack-dedicatedCloudDatacenter", new()
    ///     {
    ///         ServiceName = "&lt;vRack service name&gt;",
    ///         Datacenter = "&lt;Dedicated Cloud Datacenter service name&gt;",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// A Datacenter will always be in a vRack, first import the resource, this will move the Dedicated Cloud Datacenter to the vRack target.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import ovh:Vrack/dedicatedCloudDatacenter:DedicatedCloudDatacenter vrack-dedicatedCloudDatacenter "&lt;vRack service name&gt;/&lt;Dedicated Cloud Datacener service name&gt;/&lt;vRack target service name&gt;"
    /// ```
    /// </summary>
    [OvhResourceType("ovh:Vrack/dedicatedCloudDatacenter:DedicatedCloudDatacenter")]
    public partial class DedicatedCloudDatacenter : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Your Dedicated Cloud Datacenter.
        /// </summary>
        [Output("datacenter")]
        public Output<string> Datacenter { get; private set; } = null!;

        /// <summary>
        /// Your dedicatedCloud name
        /// </summary>
        [Output("dedicatedCloud")]
        public Output<string> DedicatedCloud { get; private set; } = null!;

        /// <summary>
        /// The internal name of your vrack
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// The internal name of your target vrack
        /// </summary>
        [Output("targetServiceName")]
        public Output<string> TargetServiceName { get; private set; } = null!;


        /// <summary>
        /// Create a DedicatedCloudDatacenter resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DedicatedCloudDatacenter(string name, DedicatedCloudDatacenterArgs args, CustomResourceOptions? options = null)
            : base("ovh:Vrack/dedicatedCloudDatacenter:DedicatedCloudDatacenter", name, args ?? new DedicatedCloudDatacenterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DedicatedCloudDatacenter(string name, Input<string> id, DedicatedCloudDatacenterState? state = null, CustomResourceOptions? options = null)
            : base("ovh:Vrack/dedicatedCloudDatacenter:DedicatedCloudDatacenter", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DedicatedCloudDatacenter resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DedicatedCloudDatacenter Get(string name, Input<string> id, DedicatedCloudDatacenterState? state = null, CustomResourceOptions? options = null)
        {
            return new DedicatedCloudDatacenter(name, id, state, options);
        }
    }

    public sealed class DedicatedCloudDatacenterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Your Dedicated Cloud Datacenter.
        /// </summary>
        [Input("datacenter", required: true)]
        public Input<string> Datacenter { get; set; } = null!;

        /// <summary>
        /// The internal name of your vrack
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public DedicatedCloudDatacenterArgs()
        {
        }
        public static new DedicatedCloudDatacenterArgs Empty => new DedicatedCloudDatacenterArgs();
    }

    public sealed class DedicatedCloudDatacenterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Your Dedicated Cloud Datacenter.
        /// </summary>
        [Input("datacenter")]
        public Input<string>? Datacenter { get; set; }

        /// <summary>
        /// Your dedicatedCloud name
        /// </summary>
        [Input("dedicatedCloud")]
        public Input<string>? DedicatedCloud { get; set; }

        /// <summary>
        /// The internal name of your vrack
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// The internal name of your target vrack
        /// </summary>
        [Input("targetServiceName")]
        public Input<string>? TargetServiceName { get; set; }

        public DedicatedCloudDatacenterState()
        {
        }
        public static new DedicatedCloudDatacenterState Empty => new DedicatedCloudDatacenterState();
    }
}
