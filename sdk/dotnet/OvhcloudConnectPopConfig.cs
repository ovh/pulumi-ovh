// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    /// <summary>
    /// Creates a pop configuration for an Ovhcloud Connect product.
    /// 
    /// Please take a look at the list of available `types` in the `Required` section in order to know the list of available type configurations.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var occ = Ovh.OVHcloud.Connect.Invoke(new()
    ///     {
    ///         ServiceName = "XXX",
    ///     });
    /// 
    ///     var pop = new Ovh.OvhcloudConnectPopConfig("pop", new()
    ///     {
    ///         ServiceName = occ.Apply(connectResult =&gt; connectResult.ServiceName),
    ///         InterfaceId = occ.Apply(connectResult =&gt; connectResult.InterfaceLists[0]),
    ///         Type = "l3",
    ///         CustomerBgpArea = 65400,
    ///         OvhBgpArea = 65401,
    ///         Subnet = "I.I.I.I/30",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OvhResourceType("ovh:index/ovhcloudConnectPopConfig:OvhcloudConnectPopConfig")]
    public partial class OvhcloudConnectPopConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Customer Private AS
        /// </summary>
        [Output("customerBgpArea")]
        public Output<double> CustomerBgpArea { get; private set; } = null!;

        /// <summary>
        /// ID of the interface
        /// </summary>
        [Output("interfaceId")]
        public Output<double> InterfaceId { get; private set; } = null!;

        /// <summary>
        /// OVH Private AS
        /// </summary>
        [Output("ovhBgpArea")]
        public Output<double> OvhBgpArea { get; private set; } = null!;

        /// <summary>
        /// Service name
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Status of the pop configuration
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Subnet should be a /30, first IP for OVH, second IP for customer
        /// </summary>
        [Output("subnet")]
        public Output<string> Subnet { get; private set; } = null!;

        /// <summary>
        /// Type of the pop configuration
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a OvhcloudConnectPopConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OvhcloudConnectPopConfig(string name, OvhcloudConnectPopConfigArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/ovhcloudConnectPopConfig:OvhcloudConnectPopConfig", name, args ?? new OvhcloudConnectPopConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OvhcloudConnectPopConfig(string name, Input<string> id, OvhcloudConnectPopConfigState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/ovhcloudConnectPopConfig:OvhcloudConnectPopConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OvhcloudConnectPopConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OvhcloudConnectPopConfig Get(string name, Input<string> id, OvhcloudConnectPopConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new OvhcloudConnectPopConfig(name, id, state, options);
        }
    }

    public sealed class OvhcloudConnectPopConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Customer Private AS
        /// </summary>
        [Input("customerBgpArea")]
        public Input<double>? CustomerBgpArea { get; set; }

        /// <summary>
        /// ID of the interface
        /// </summary>
        [Input("interfaceId", required: true)]
        public Input<double> InterfaceId { get; set; } = null!;

        /// <summary>
        /// OVH Private AS
        /// </summary>
        [Input("ovhBgpArea")]
        public Input<double>? OvhBgpArea { get; set; }

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Subnet should be a /30, first IP for OVH, second IP for customer
        /// </summary>
        [Input("subnet")]
        public Input<string>? Subnet { get; set; }

        /// <summary>
        /// Type of the pop configuration
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public OvhcloudConnectPopConfigArgs()
        {
        }
        public static new OvhcloudConnectPopConfigArgs Empty => new OvhcloudConnectPopConfigArgs();
    }

    public sealed class OvhcloudConnectPopConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Customer Private AS
        /// </summary>
        [Input("customerBgpArea")]
        public Input<double>? CustomerBgpArea { get; set; }

        /// <summary>
        /// ID of the interface
        /// </summary>
        [Input("interfaceId")]
        public Input<double>? InterfaceId { get; set; }

        /// <summary>
        /// OVH Private AS
        /// </summary>
        [Input("ovhBgpArea")]
        public Input<double>? OvhBgpArea { get; set; }

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Status of the pop configuration
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Subnet should be a /30, first IP for OVH, second IP for customer
        /// </summary>
        [Input("subnet")]
        public Input<string>? Subnet { get; set; }

        /// <summary>
        /// Type of the pop configuration
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public OvhcloudConnectPopConfigState()
        {
        }
        public static new OvhcloudConnectPopConfigState Empty => new OvhcloudConnectPopConfigState();
    }
}
