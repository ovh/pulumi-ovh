// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Dbaas
{
    /// <summary>
    /// Creates a DBaaS Logs Opensearch output alias.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @alias = new Ovh.Dbaas.LogsOutputOpenSearchAlias("alias", new()
    ///     {
    ///         Description = "my opensearch alias",
    ///         ServiceName = "....",
    ///         Suffix = "alias",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OvhResourceType("ovh:Dbaas/logsOutputOpenSearchAlias:LogsOutputOpenSearchAlias")]
    public partial class LogsOutputOpenSearchAlias : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Alias Id
        /// </summary>
        [Output("aliasId")]
        public Output<string> AliasId { get; private set; } = null!;

        /// <summary>
        /// Alias creation
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Current alias size (in bytes)
        /// </summary>
        [Output("currentSize")]
        public Output<int> CurrentSize { get; private set; } = null!;

        /// <summary>
        /// Index description
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// List of attached indexes id
        /// </summary>
        [Output("indexes")]
        public Output<ImmutableArray<string>> Indexes { get; private set; } = null!;

        /// <summary>
        /// Indicates if you are allowed to edit entry
        /// </summary>
        [Output("isEditable")]
        public Output<bool> IsEditable { get; private set; } = null!;

        /// <summary>
        /// Alias name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Number of indices linked
        /// </summary>
        [Output("nbIndex")]
        public Output<int> NbIndex { get; private set; } = null!;

        /// <summary>
        /// Number of streams linked
        /// </summary>
        [Output("nbStream")]
        public Output<int> NbStream { get; private set; } = null!;

        /// <summary>
        /// The service name
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// List of attached streams id
        /// </summary>
        [Output("streams")]
        public Output<ImmutableArray<string>> Streams { get; private set; } = null!;

        /// <summary>
        /// Index suffix
        /// </summary>
        [Output("suffix")]
        public Output<string> Suffix { get; private set; } = null!;

        /// <summary>
        /// Input last update
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a LogsOutputOpenSearchAlias resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogsOutputOpenSearchAlias(string name, LogsOutputOpenSearchAliasArgs args, CustomResourceOptions? options = null)
            : base("ovh:Dbaas/logsOutputOpenSearchAlias:LogsOutputOpenSearchAlias", name, args ?? new LogsOutputOpenSearchAliasArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogsOutputOpenSearchAlias(string name, Input<string> id, LogsOutputOpenSearchAliasState? state = null, CustomResourceOptions? options = null)
            : base("ovh:Dbaas/logsOutputOpenSearchAlias:LogsOutputOpenSearchAlias", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogsOutputOpenSearchAlias resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogsOutputOpenSearchAlias Get(string name, Input<string> id, LogsOutputOpenSearchAliasState? state = null, CustomResourceOptions? options = null)
        {
            return new LogsOutputOpenSearchAlias(name, id, state, options);
        }
    }

    public sealed class LogsOutputOpenSearchAliasArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Index description
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("indexes")]
        private InputList<string>? _indexes;

        /// <summary>
        /// List of attached indexes id
        /// </summary>
        public InputList<string> Indexes
        {
            get => _indexes ?? (_indexes = new InputList<string>());
            set => _indexes = value;
        }

        /// <summary>
        /// Number of indices linked
        /// </summary>
        [Input("nbIndex")]
        public Input<int>? NbIndex { get; set; }

        /// <summary>
        /// Number of streams linked
        /// </summary>
        [Input("nbStream")]
        public Input<int>? NbStream { get; set; }

        /// <summary>
        /// The service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("streams")]
        private InputList<string>? _streams;

        /// <summary>
        /// List of attached streams id
        /// </summary>
        public InputList<string> Streams
        {
            get => _streams ?? (_streams = new InputList<string>());
            set => _streams = value;
        }

        /// <summary>
        /// Index suffix
        /// </summary>
        [Input("suffix", required: true)]
        public Input<string> Suffix { get; set; } = null!;

        public LogsOutputOpenSearchAliasArgs()
        {
        }
        public static new LogsOutputOpenSearchAliasArgs Empty => new LogsOutputOpenSearchAliasArgs();
    }

    public sealed class LogsOutputOpenSearchAliasState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alias Id
        /// </summary>
        [Input("aliasId")]
        public Input<string>? AliasId { get; set; }

        /// <summary>
        /// Alias creation
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Current alias size (in bytes)
        /// </summary>
        [Input("currentSize")]
        public Input<int>? CurrentSize { get; set; }

        /// <summary>
        /// Index description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("indexes")]
        private InputList<string>? _indexes;

        /// <summary>
        /// List of attached indexes id
        /// </summary>
        public InputList<string> Indexes
        {
            get => _indexes ?? (_indexes = new InputList<string>());
            set => _indexes = value;
        }

        /// <summary>
        /// Indicates if you are allowed to edit entry
        /// </summary>
        [Input("isEditable")]
        public Input<bool>? IsEditable { get; set; }

        /// <summary>
        /// Alias name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Number of indices linked
        /// </summary>
        [Input("nbIndex")]
        public Input<int>? NbIndex { get; set; }

        /// <summary>
        /// Number of streams linked
        /// </summary>
        [Input("nbStream")]
        public Input<int>? NbStream { get; set; }

        /// <summary>
        /// The service name
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        [Input("streams")]
        private InputList<string>? _streams;

        /// <summary>
        /// List of attached streams id
        /// </summary>
        public InputList<string> Streams
        {
            get => _streams ?? (_streams = new InputList<string>());
            set => _streams = value;
        }

        /// <summary>
        /// Index suffix
        /// </summary>
        [Input("suffix")]
        public Input<string>? Suffix { get; set; }

        /// <summary>
        /// Input last update
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public LogsOutputOpenSearchAliasState()
        {
        }
        public static new LogsOutputOpenSearchAliasState Empty => new LogsOutputOpenSearchAliasState();
    }
}
