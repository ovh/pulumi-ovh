// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Dbaas
{
    /// <summary>
    /// Reference a DBaaS logs role.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var ro = new Ovh.Dbaas.LogsRole("ro", new()
    ///     {
    ///         Description = "Devops - RO",
    ///         ServiceName = "ldp-xx-xxxxx",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// OVHcloud DBaaS Log Role can be imported using the `service_name` and `role_id` of the role, separated by "/" E.g.,
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import ovh:Dbaas/logsRole:LogsRole ovh_dbaas_logs_role.ro ldp-ra-XX/dc145bc2-eb01-4efe-a802-XXXXXX
    /// ```
    /// </summary>
    [OvhResourceType("ovh:Dbaas/logsRole:LogsRole")]
    public partial class LogsRole : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Role creation date
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The role description
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// The role name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// number of member for the role
        /// </summary>
        [Output("nbMember")]
        public Output<int> NbMember { get; private set; } = null!;

        /// <summary>
        /// number of configured permission for the role
        /// </summary>
        [Output("nbPermission")]
        public Output<int> NbPermission { get; private set; } = null!;

        /// <summary>
        /// Role identifier
        /// </summary>
        [Output("roleId")]
        public Output<string> RoleId { get; private set; } = null!;

        /// <summary>
        /// The service name
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Role last update date
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;


        /// <summary>
        /// Create a LogsRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogsRole(string name, LogsRoleArgs args, CustomResourceOptions? options = null)
            : base("ovh:Dbaas/logsRole:LogsRole", name, args ?? new LogsRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogsRole(string name, Input<string> id, LogsRoleState? state = null, CustomResourceOptions? options = null)
            : base("ovh:Dbaas/logsRole:LogsRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogsRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogsRole Get(string name, Input<string> id, LogsRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new LogsRole(name, id, state, options);
        }
    }

    public sealed class LogsRoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The role description
        /// </summary>
        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        /// <summary>
        /// The role name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public LogsRoleArgs()
        {
        }
        public static new LogsRoleArgs Empty => new LogsRoleArgs();
    }

    public sealed class LogsRoleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Role creation date
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The role description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The role name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// number of member for the role
        /// </summary>
        [Input("nbMember")]
        public Input<int>? NbMember { get; set; }

        /// <summary>
        /// number of configured permission for the role
        /// </summary>
        [Input("nbPermission")]
        public Input<int>? NbPermission { get; set; }

        /// <summary>
        /// Role identifier
        /// </summary>
        [Input("roleId")]
        public Input<string>? RoleId { get; set; }

        /// <summary>
        /// The service name
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Role last update date
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        public LogsRoleState()
        {
        }
        public static new LogsRoleState Empty => new LogsRoleState();
    }
}
