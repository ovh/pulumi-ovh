// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.OVHcloud
{
    public static class Connect
    {
        /// <summary>
        /// Use this data source to retrieve information about an Ovhcloud Connect product
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var occ = Ovh.OVHcloud.Connect.Invoke(new()
        ///     {
        ///         ServiceName = "XXX",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<ConnectResult> InvokeAsync(ConnectArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ConnectResult>("ovh:OVHcloud/connect:Connect", args ?? new ConnectArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an Ovhcloud Connect product
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var occ = Ovh.OVHcloud.Connect.Invoke(new()
        ///     {
        ///         ServiceName = "XXX",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<ConnectResult> Invoke(ConnectInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ConnectResult>("ovh:OVHcloud/connect:Connect", args ?? new ConnectInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to retrieve information about an Ovhcloud Connect product
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var occ = Ovh.OVHcloud.Connect.Invoke(new()
        ///     {
        ///         ServiceName = "XXX",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<ConnectResult> Invoke(ConnectInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<ConnectResult>("ovh:OVHcloud/connect:Connect", args ?? new ConnectInvokeArgs(), options.WithDefaults());
    }


    public sealed class ConnectArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The uuid of the Ovhcloud connect.
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        public ConnectArgs()
        {
        }
        public static new ConnectArgs Empty => new ConnectArgs();
    }

    public sealed class ConnectInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The uuid of the Ovhcloud connect.
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        public ConnectInvokeArgs()
        {
        }
        public static new ConnectInvokeArgs Empty => new ConnectInvokeArgs();
    }


    [OutputType]
    public sealed class ConnectResult
    {
        /// <summary>
        /// Service bandwidth
        /// </summary>
        public readonly string Bandwidth;
        /// <summary>
        /// Service description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// IAM resource information
        /// </summary>
        public readonly Outputs.ConnectIamResult Iam;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of interfaces linked to a service
        /// </summary>
        public readonly ImmutableArray<double> InterfaceLists;
        /// <summary>
        /// Pop reference where the service is delivered
        /// </summary>
        public readonly string Pop;
        /// <summary>
        /// Port quantity
        /// </summary>
        public readonly string PortQuantity;
        /// <summary>
        /// Product name of the service
        /// </summary>
        public readonly string Product;
        /// <summary>
        /// Service provider
        /// </summary>
        public readonly string ProviderName;
        /// <summary>
        /// Service name
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Service status
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// uuid of the Ovhcloud Connect service
        /// </summary>
        public readonly string Uuid;
        /// <summary>
        /// vrack linked to the service
        /// </summary>
        public readonly string Vrack;

        [OutputConstructor]
        private ConnectResult(
            string bandwidth,

            string description,

            Outputs.ConnectIamResult iam,

            string id,

            ImmutableArray<double> interfaceLists,

            string pop,

            string portQuantity,

            string product,

            string providerName,

            string serviceName,

            string status,

            string uuid,

            string vrack)
        {
            Bandwidth = bandwidth;
            Description = description;
            Iam = iam;
            Id = id;
            InterfaceLists = interfaceLists;
            Pop = pop;
            PortQuantity = portQuantity;
            Product = product;
            ProviderName = providerName;
            ServiceName = serviceName;
            Status = status;
            Uuid = uuid;
            Vrack = vrack;
        }
    }
}
