// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    /// <summary>
    /// Creates a datacenter configuration for an Ovhcloud Connect product.
    /// 
    /// For the `datacenter_id` in the `Required` section, you will need to choose an available datacenter from the data-source `ovh.getOvhcloudConnectDatacenters`.
    /// </summary>
    [OvhResourceType("ovh:index/ovhcloudConnectPopDatacenterConfig:OvhcloudConnectPopDatacenterConfig")]
    public partial class OvhcloudConnectPopDatacenterConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the pop configuration
        /// </summary>
        [Output("configPopId")]
        public Output<double> ConfigPopId { get; private set; } = null!;

        /// <summary>
        /// ID of the datacenter linked
        /// </summary>
        [Output("datacenterId")]
        public Output<double> DatacenterId { get; private set; } = null!;

        /// <summary>
        /// OVH Private AS
        /// </summary>
        [Output("ovhBgpArea")]
        public Output<double> OvhBgpArea { get; private set; } = null!;

        /// <summary>
        /// Service name
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Status of the pop configuration
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Subnet should be a /28 min
        /// </summary>
        [Output("subnet")]
        public Output<string> Subnet { get; private set; } = null!;


        /// <summary>
        /// Create a OvhcloudConnectPopDatacenterConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OvhcloudConnectPopDatacenterConfig(string name, OvhcloudConnectPopDatacenterConfigArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/ovhcloudConnectPopDatacenterConfig:OvhcloudConnectPopDatacenterConfig", name, args ?? new OvhcloudConnectPopDatacenterConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OvhcloudConnectPopDatacenterConfig(string name, Input<string> id, OvhcloudConnectPopDatacenterConfigState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/ovhcloudConnectPopDatacenterConfig:OvhcloudConnectPopDatacenterConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OvhcloudConnectPopDatacenterConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OvhcloudConnectPopDatacenterConfig Get(string name, Input<string> id, OvhcloudConnectPopDatacenterConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new OvhcloudConnectPopDatacenterConfig(name, id, state, options);
        }
    }

    public sealed class OvhcloudConnectPopDatacenterConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the pop configuration
        /// </summary>
        [Input("configPopId", required: true)]
        public Input<double> ConfigPopId { get; set; } = null!;

        /// <summary>
        /// ID of the datacenter linked
        /// </summary>
        [Input("datacenterId", required: true)]
        public Input<double> DatacenterId { get; set; } = null!;

        /// <summary>
        /// OVH Private AS
        /// </summary>
        [Input("ovhBgpArea")]
        public Input<double>? OvhBgpArea { get; set; }

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Subnet should be a /28 min
        /// </summary>
        [Input("subnet")]
        public Input<string>? Subnet { get; set; }

        public OvhcloudConnectPopDatacenterConfigArgs()
        {
        }
        public static new OvhcloudConnectPopDatacenterConfigArgs Empty => new OvhcloudConnectPopDatacenterConfigArgs();
    }

    public sealed class OvhcloudConnectPopDatacenterConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the pop configuration
        /// </summary>
        [Input("configPopId")]
        public Input<double>? ConfigPopId { get; set; }

        /// <summary>
        /// ID of the datacenter linked
        /// </summary>
        [Input("datacenterId")]
        public Input<double>? DatacenterId { get; set; }

        /// <summary>
        /// OVH Private AS
        /// </summary>
        [Input("ovhBgpArea")]
        public Input<double>? OvhBgpArea { get; set; }

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Status of the pop configuration
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Subnet should be a /28 min
        /// </summary>
        [Input("subnet")]
        public Input<string>? Subnet { get; set; }

        public OvhcloudConnectPopDatacenterConfigState()
        {
        }
        public static new OvhcloudConnectPopDatacenterConfigState Empty => new OvhcloudConnectPopDatacenterConfigState();
    }
}
