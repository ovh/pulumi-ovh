// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    public static class GetVrackNetworks
    {
        public static Task<GetVrackNetworksResult> InvokeAsync(GetVrackNetworksArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetVrackNetworksResult>("ovh:index/getVrackNetworks:getVrackNetworks", args ?? new GetVrackNetworksArgs(), options.WithDefaults());

        public static Output<GetVrackNetworksResult> Invoke(GetVrackNetworksInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetVrackNetworksResult>("ovh:index/getVrackNetworks:getVrackNetworks", args ?? new GetVrackNetworksInvokeArgs(), options.WithDefaults());

        public static Output<GetVrackNetworksResult> Invoke(GetVrackNetworksInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetVrackNetworksResult>("ovh:index/getVrackNetworks:getVrackNetworks", args ?? new GetVrackNetworksInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetVrackNetworksArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        [Input("subnet")]
        public string? Subnet { get; set; }

        [Input("vlanId")]
        public int? VlanId { get; set; }

        public GetVrackNetworksArgs()
        {
        }
        public static new GetVrackNetworksArgs Empty => new GetVrackNetworksArgs();
    }

    public sealed class GetVrackNetworksInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        [Input("subnet")]
        public Input<string>? Subnet { get; set; }

        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public GetVrackNetworksInvokeArgs()
        {
        }
        public static new GetVrackNetworksInvokeArgs Empty => new GetVrackNetworksInvokeArgs();
    }


    [OutputType]
    public sealed class GetVrackNetworksResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<int> Results;
        public readonly string ServiceName;
        public readonly string? Subnet;
        public readonly int? VlanId;

        [OutputConstructor]
        private GetVrackNetworksResult(
            string id,

            ImmutableArray<int> results,

            string serviceName,

            string? subnet,

            int? vlanId)
        {
            Id = id;
            Results = results;
            ServiceName = serviceName;
            Subnet = subnet;
            VlanId = vlanId;
        }
    }
}
