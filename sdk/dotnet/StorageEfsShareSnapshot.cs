// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// using Time = Pulumi.Time;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var efs = Ovh.GetStorageEfs.Invoke(new()
    ///     {
    ///         ServiceName = "XXX",
    ///     });
    /// 
    ///     // This resource will destroy (at least) 10 seconds after ovh_storage_efs_share_snapshot resource
    ///     var share = new Ovh.StorageEfsShare("share", new()
    ///     {
    ///         ServiceName = efs.Apply(getStorageEfsResult =&gt; getStorageEfsResult.ServiceName),
    ///         Name = "share",
    ///         Description = "My share",
    ///         Protocol = "NFS",
    ///         Size = 100,
    ///     });
    /// 
    ///     // This resource adds a delay between ovh_storage_efs_share_snapshot and ovh_storage_efs_share resources destruction
    ///     var wait10Seconds = new Time.Index.Sleep("wait_10_seconds", new()
    ///     {
    ///         DestroyDuration = "10s",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             share,
    ///         },
    ///     });
    /// 
    ///     var snapshot = new Ovh.StorageEfsShareSnapshot("snapshot", new()
    ///     {
    ///         ServiceName = efs.Apply(getStorageEfsResult =&gt; getStorageEfsResult.ServiceName),
    ///         ShareId = share.Id,
    ///         Name = "snapshot",
    ///         Description = "My snapshot",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             wait10Seconds,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OvhResourceType("ovh:index/storageEfsShareSnapshot:StorageEfsShareSnapshot")]
    public partial class StorageEfsShareSnapshot : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Snapshot creation date
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Snapshot description
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// Snapshot name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Snapshot path
        /// </summary>
        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        /// <summary>
        /// Service name
        /// </summary>
        [Output("serviceName")]
        public Output<string> ServiceName { get; private set; } = null!;

        /// <summary>
        /// Share ID
        /// </summary>
        [Output("shareId")]
        public Output<string> ShareId { get; private set; } = null!;

        /// <summary>
        /// Snapshot status
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Snapshot type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a StorageEfsShareSnapshot resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StorageEfsShareSnapshot(string name, StorageEfsShareSnapshotArgs args, CustomResourceOptions? options = null)
            : base("ovh:index/storageEfsShareSnapshot:StorageEfsShareSnapshot", name, args ?? new StorageEfsShareSnapshotArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StorageEfsShareSnapshot(string name, Input<string> id, StorageEfsShareSnapshotState? state = null, CustomResourceOptions? options = null)
            : base("ovh:index/storageEfsShareSnapshot:StorageEfsShareSnapshot", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StorageEfsShareSnapshot resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StorageEfsShareSnapshot Get(string name, Input<string> id, StorageEfsShareSnapshotState? state = null, CustomResourceOptions? options = null)
        {
            return new StorageEfsShareSnapshot(name, id, state, options);
        }
    }

    public sealed class StorageEfsShareSnapshotArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Snapshot description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Snapshot name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Share ID
        /// </summary>
        [Input("shareId", required: true)]
        public Input<string> ShareId { get; set; } = null!;

        public StorageEfsShareSnapshotArgs()
        {
        }
        public static new StorageEfsShareSnapshotArgs Empty => new StorageEfsShareSnapshotArgs();
    }

    public sealed class StorageEfsShareSnapshotState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Snapshot creation date
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Snapshot description
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Snapshot name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Snapshot path
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName")]
        public Input<string>? ServiceName { get; set; }

        /// <summary>
        /// Share ID
        /// </summary>
        [Input("shareId")]
        public Input<string>? ShareId { get; set; }

        /// <summary>
        /// Snapshot status
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// Snapshot type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public StorageEfsShareSnapshotState()
        {
        }
        public static new StorageEfsShareSnapshotState Empty => new StorageEfsShareSnapshotState();
    }
}
