// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh
{
    public static class GetStorageEfsShareAccessPaths
    {
        /// <summary>
        /// List access paths for a share belonging to an EFS service.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var efs = Ovh.GetStorageEfs.Invoke(new()
        ///     {
        ///         ServiceName = "XXX",
        ///     });
        /// 
        ///     var accessPaths = Ovh.GetStorageEfsShareAccessPaths.Invoke(new()
        ///     {
        ///         ServiceName = efs.Apply(getStorageEfsResult =&gt; getStorageEfsResult.ServiceName),
        ///         ShareId = "XXX",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetStorageEfsShareAccessPathsResult> InvokeAsync(GetStorageEfsShareAccessPathsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStorageEfsShareAccessPathsResult>("ovh:index/getStorageEfsShareAccessPaths:getStorageEfsShareAccessPaths", args ?? new GetStorageEfsShareAccessPathsArgs(), options.WithDefaults());

        /// <summary>
        /// List access paths for a share belonging to an EFS service.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var efs = Ovh.GetStorageEfs.Invoke(new()
        ///     {
        ///         ServiceName = "XXX",
        ///     });
        /// 
        ///     var accessPaths = Ovh.GetStorageEfsShareAccessPaths.Invoke(new()
        ///     {
        ///         ServiceName = efs.Apply(getStorageEfsResult =&gt; getStorageEfsResult.ServiceName),
        ///         ShareId = "XXX",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStorageEfsShareAccessPathsResult> Invoke(GetStorageEfsShareAccessPathsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageEfsShareAccessPathsResult>("ovh:index/getStorageEfsShareAccessPaths:getStorageEfsShareAccessPaths", args ?? new GetStorageEfsShareAccessPathsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// List access paths for a share belonging to an EFS service.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Ovh = Pulumi.Ovh;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var efs = Ovh.GetStorageEfs.Invoke(new()
        ///     {
        ///         ServiceName = "XXX",
        ///     });
        /// 
        ///     var accessPaths = Ovh.GetStorageEfsShareAccessPaths.Invoke(new()
        ///     {
        ///         ServiceName = efs.Apply(getStorageEfsResult =&gt; getStorageEfsResult.ServiceName),
        ///         ShareId = "XXX",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetStorageEfsShareAccessPathsResult> Invoke(GetStorageEfsShareAccessPathsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageEfsShareAccessPathsResult>("ovh:index/getStorageEfsShareAccessPaths:getStorageEfsShareAccessPaths", args ?? new GetStorageEfsShareAccessPathsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStorageEfsShareAccessPathsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public string ServiceName { get; set; } = null!;

        /// <summary>
        /// Share ID
        /// </summary>
        [Input("shareId", required: true)]
        public string ShareId { get; set; } = null!;

        public GetStorageEfsShareAccessPathsArgs()
        {
        }
        public static new GetStorageEfsShareAccessPathsArgs Empty => new GetStorageEfsShareAccessPathsArgs();
    }

    public sealed class GetStorageEfsShareAccessPathsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Service name
        /// </summary>
        [Input("serviceName", required: true)]
        public Input<string> ServiceName { get; set; } = null!;

        /// <summary>
        /// Share ID
        /// </summary>
        [Input("shareId", required: true)]
        public Input<string> ShareId { get; set; } = null!;

        public GetStorageEfsShareAccessPathsInvokeArgs()
        {
        }
        public static new GetStorageEfsShareAccessPathsInvokeArgs Empty => new GetStorageEfsShareAccessPathsInvokeArgs();
    }


    [OutputType]
    public sealed class GetStorageEfsShareAccessPathsResult
    {
        public readonly ImmutableArray<Outputs.GetStorageEfsShareAccessPathsAccessPathResult> AccessPaths;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Service name
        /// </summary>
        public readonly string ServiceName;
        /// <summary>
        /// Share ID
        /// </summary>
        public readonly string ShareId;

        [OutputConstructor]
        private GetStorageEfsShareAccessPathsResult(
            ImmutableArray<Outputs.GetStorageEfsShareAccessPathsAccessPathResult> accessPaths,

            string id,

            string serviceName,

            string shareId)
        {
            AccessPaths = accessPaths;
            Id = id;
            ServiceName = serviceName;
            ShareId = shareId;
        }
    }
}
