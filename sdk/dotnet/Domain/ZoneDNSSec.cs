// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Domain
{
    /// <summary>
    /// Enable / disable DNSSEC on a domain zone.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var dnssec = new Ovh.Domain.ZoneDNSSec("dnssec", new()
    ///     {
    ///         ZoneName = "mysite.ovh",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OvhResourceType("ovh:Domain/zoneDNSSec:ZoneDNSSec")]
    public partial class ZoneDNSSec : global::Pulumi.CustomResource
    {
        /// <summary>
        /// DNSSEC status (`disableInProgress`, `disabled`, `enableInProgress` or `enabled`)
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The name of the domain zone
        /// </summary>
        [Output("zoneName")]
        public Output<string> ZoneName { get; private set; } = null!;


        /// <summary>
        /// Create a ZoneDNSSec resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZoneDNSSec(string name, ZoneDNSSecArgs args, CustomResourceOptions? options = null)
            : base("ovh:Domain/zoneDNSSec:ZoneDNSSec", name, args ?? new ZoneDNSSecArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZoneDNSSec(string name, Input<string> id, ZoneDNSSecState? state = null, CustomResourceOptions? options = null)
            : base("ovh:Domain/zoneDNSSec:ZoneDNSSec", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZoneDNSSec resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZoneDNSSec Get(string name, Input<string> id, ZoneDNSSecState? state = null, CustomResourceOptions? options = null)
        {
            return new ZoneDNSSec(name, id, state, options);
        }
    }

    public sealed class ZoneDNSSecArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the domain zone
        /// </summary>
        [Input("zoneName", required: true)]
        public Input<string> ZoneName { get; set; } = null!;

        public ZoneDNSSecArgs()
        {
        }
        public static new ZoneDNSSecArgs Empty => new ZoneDNSSecArgs();
    }

    public sealed class ZoneDNSSecState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// DNSSEC status (`disableInProgress`, `disabled`, `enableInProgress` or `enabled`)
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The name of the domain zone
        /// </summary>
        [Input("zoneName")]
        public Input<string>? ZoneName { get; set; }

        public ZoneDNSSecState()
        {
        }
        public static new ZoneDNSSecState Empty => new ZoneDNSSecState();
    }
}
