// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Domain.Inputs
{

    public sealed class NameCurrentStateDnsConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of DNS configuration of the domain
        /// </summary>
        [Input("configurationType")]
        public Input<string>? ConfigurationType { get; set; }

        /// <summary>
        /// Whether the registry supports IPv6 or not
        /// </summary>
        [Input("glueRecordIpv6supported")]
        public Input<bool>? GlueRecordIpv6supported { get; set; }

        /// <summary>
        /// Whether the registry accepts hosts or not
        /// </summary>
        [Input("hostSupported")]
        public Input<bool>? HostSupported { get; set; }

        /// <summary>
        /// The maximum number of name servers allowed by the registry
        /// </summary>
        [Input("maxDns")]
        public Input<double>? MaxDns { get; set; }

        /// <summary>
        /// The minimum number of name servers allowed by the registry
        /// </summary>
        [Input("minDns")]
        public Input<double>? MinDns { get; set; }

        [Input("nameServers")]
        private InputList<Inputs.NameCurrentStateDnsConfigurationNameServerGetArgs>? _nameServers;

        /// <summary>
        /// The name servers used by the domain name
        /// </summary>
        public InputList<Inputs.NameCurrentStateDnsConfigurationNameServerGetArgs> NameServers
        {
            get => _nameServers ?? (_nameServers = new InputList<Inputs.NameCurrentStateDnsConfigurationNameServerGetArgs>());
            set => _nameServers = value;
        }

        public NameCurrentStateDnsConfigurationGetArgs()
        {
        }
        public static new NameCurrentStateDnsConfigurationGetArgs Empty => new NameCurrentStateDnsConfigurationGetArgs();
    }
}
