// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Domain
{
    /// <summary>
    /// ## Example Usage
    /// </summary>
    [OvhResourceType("ovh:Domain/name:Name")]
    public partial class Name : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
        /// </summary>
        [Output("checksum")]
        public Output<string> Checksum { get; private set; } = null!;

        /// <summary>
        /// Current state of the domain name
        /// </summary>
        [Output("currentState")]
        public Output<Outputs.NameCurrentState> CurrentState { get; private set; } = null!;

        /// <summary>
        /// Ongoing asynchronous tasks related to the domain name resource
        /// </summary>
        [Output("currentTasks")]
        public Output<ImmutableArray<Outputs.NameCurrentTask>> CurrentTasks { get; private set; } = null!;

        /// <summary>
        /// Domain name
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// IAM resource metadata
        /// </summary>
        [Output("iam")]
        public Output<Outputs.NameIam> Iam { get; private set; } = null!;

        /// <summary>
        /// Details about an Order
        /// </summary>
        [Output("order")]
        public Output<Outputs.NameOrder> Order { get; private set; } = null!;

        /// <summary>
        /// OVH subsidiaries
        /// </summary>
        [Output("ovhSubsidiary")]
        public Output<string?> OvhSubsidiary { get; private set; } = null!;

        [Output("planOptions")]
        public Output<ImmutableArray<Outputs.NamePlanOption>> PlanOptions { get; private set; } = null!;

        [Output("plans")]
        public Output<ImmutableArray<Outputs.NamePlan>> Plans { get; private set; } = null!;

        /// <summary>
        /// Reflects the readiness of the domain name resource. A new target specification request will be accepted only in `READY`, `UPDATING` or `ERROR` status
        /// </summary>
        [Output("resourceStatus")]
        public Output<string> ResourceStatus { get; private set; } = null!;

        /// <summary>
        /// Latest target specification of the domain name resource.
        /// </summary>
        [Output("targetSpec")]
        public Output<Outputs.NameTargetSpec> TargetSpec { get; private set; } = null!;


        /// <summary>
        /// Create a Name resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Name(string name, NameArgs args, CustomResourceOptions? options = null)
            : base("ovh:Domain/name:Name", name, args ?? new NameArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Name(string name, Input<string> id, NameState? state = null, CustomResourceOptions? options = null)
            : base("ovh:Domain/name:Name", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Name resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Name Get(string name, Input<string> id, NameState? state = null, CustomResourceOptions? options = null)
        {
            return new Name(name, id, state, options);
        }
    }

    public sealed class NameArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
        /// </summary>
        [Input("checksum")]
        public Input<string>? Checksum { get; set; }

        /// <summary>
        /// Domain name
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// OVH subsidiaries
        /// </summary>
        [Input("ovhSubsidiary")]
        public Input<string>? OvhSubsidiary { get; set; }

        [Input("planOptions")]
        private InputList<Inputs.NamePlanOptionArgs>? _planOptions;
        public InputList<Inputs.NamePlanOptionArgs> PlanOptions
        {
            get => _planOptions ?? (_planOptions = new InputList<Inputs.NamePlanOptionArgs>());
            set => _planOptions = value;
        }

        [Input("plans")]
        private InputList<Inputs.NamePlanArgs>? _plans;
        public InputList<Inputs.NamePlanArgs> Plans
        {
            get => _plans ?? (_plans = new InputList<Inputs.NamePlanArgs>());
            set => _plans = value;
        }

        /// <summary>
        /// Latest target specification of the domain name resource.
        /// </summary>
        [Input("targetSpec")]
        public Input<Inputs.NameTargetSpecArgs>? TargetSpec { get; set; }

        public NameArgs()
        {
        }
        public static new NameArgs Empty => new NameArgs();
    }

    public sealed class NameState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Computed hash used to control concurrent modification requests. Here, it represents the current target specification value
        /// </summary>
        [Input("checksum")]
        public Input<string>? Checksum { get; set; }

        /// <summary>
        /// Current state of the domain name
        /// </summary>
        [Input("currentState")]
        public Input<Inputs.NameCurrentStateGetArgs>? CurrentState { get; set; }

        [Input("currentTasks")]
        private InputList<Inputs.NameCurrentTaskGetArgs>? _currentTasks;

        /// <summary>
        /// Ongoing asynchronous tasks related to the domain name resource
        /// </summary>
        public InputList<Inputs.NameCurrentTaskGetArgs> CurrentTasks
        {
            get => _currentTasks ?? (_currentTasks = new InputList<Inputs.NameCurrentTaskGetArgs>());
            set => _currentTasks = value;
        }

        /// <summary>
        /// Domain name
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// IAM resource metadata
        /// </summary>
        [Input("iam")]
        public Input<Inputs.NameIamGetArgs>? Iam { get; set; }

        /// <summary>
        /// Details about an Order
        /// </summary>
        [Input("order")]
        public Input<Inputs.NameOrderGetArgs>? Order { get; set; }

        /// <summary>
        /// OVH subsidiaries
        /// </summary>
        [Input("ovhSubsidiary")]
        public Input<string>? OvhSubsidiary { get; set; }

        [Input("planOptions")]
        private InputList<Inputs.NamePlanOptionGetArgs>? _planOptions;
        public InputList<Inputs.NamePlanOptionGetArgs> PlanOptions
        {
            get => _planOptions ?? (_planOptions = new InputList<Inputs.NamePlanOptionGetArgs>());
            set => _planOptions = value;
        }

        [Input("plans")]
        private InputList<Inputs.NamePlanGetArgs>? _plans;
        public InputList<Inputs.NamePlanGetArgs> Plans
        {
            get => _plans ?? (_plans = new InputList<Inputs.NamePlanGetArgs>());
            set => _plans = value;
        }

        /// <summary>
        /// Reflects the readiness of the domain name resource. A new target specification request will be accepted only in `READY`, `UPDATING` or `ERROR` status
        /// </summary>
        [Input("resourceStatus")]
        public Input<string>? ResourceStatus { get; set; }

        /// <summary>
        /// Latest target specification of the domain name resource.
        /// </summary>
        [Input("targetSpec")]
        public Input<Inputs.NameTargetSpecGetArgs>? TargetSpec { get; set; }

        public NameState()
        {
        }
        public static new NameState Empty => new NameState();
    }
}
