// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Domain
{
    public static class GetZone
    {
        public static Task<GetZoneResult> InvokeAsync(GetZoneArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetZoneResult>("ovh:Domain/getZone:getZone", args ?? new GetZoneArgs(), options.WithDefaults());

        public static Output<GetZoneResult> Invoke(GetZoneInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneResult>("ovh:Domain/getZone:getZone", args ?? new GetZoneInvokeArgs(), options.WithDefaults());

        public static Output<GetZoneResult> Invoke(GetZoneInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetZoneResult>("ovh:Domain/getZone:getZone", args ?? new GetZoneInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetZoneArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetZoneArgs()
        {
        }
        public static new GetZoneArgs Empty => new GetZoneArgs();
    }

    public sealed class GetZoneInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetZoneInvokeArgs()
        {
        }
        public static new GetZoneInvokeArgs Empty => new GetZoneInvokeArgs();
    }


    [OutputType]
    public sealed class GetZoneResult
    {
        public readonly string ZoneURN;
        public readonly bool DnssecSupported;
        public readonly bool HasDnsAnycast;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LastUpdate;
        public readonly string Name;
        public readonly ImmutableArray<string> NameServers;

        [OutputConstructor]
        private GetZoneResult(
            string ZoneURN,

            bool dnssecSupported,

            bool hasDnsAnycast,

            string id,

            string lastUpdate,

            string name,

            ImmutableArray<string> nameServers)
        {
            this.ZoneURN = ZoneURN;
            DnssecSupported = dnssecSupported;
            HasDnsAnycast = hasDnsAnycast;
            Id = id;
            LastUpdate = lastUpdate;
            Name = name;
            NameServers = nameServers;
        }
    }
}
