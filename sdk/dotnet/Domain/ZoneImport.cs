// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Ovh.Domain
{
    /// <summary>
    /// Handle a whole DNS zone using a zone file.
    /// 
    /// &gt; __WARNING__ This resource and resource `ovh.Domain.ZoneRecord` should not be used together as `ovh.Domain.ZoneImport` controls the whole DNS zone at once.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using System.Linq;
    /// using Pulumi;
    /// using Ovh = Pulumi.Ovh;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var import = new Ovh.Domain.ZoneImport("import", new()
    ///     {
    ///         ZoneName = "mysite.ovh",
    ///         ZoneFile = File.ReadAllText("./example.zone"),
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [OvhResourceType("ovh:Domain/zoneImport:ZoneImport")]
    public partial class ZoneImport : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Zone file exported from the API
        /// </summary>
        [Output("exportedContent")]
        public Output<string> ExportedContent { get; private set; } = null!;

        /// <summary>
        /// Content of the zone file to import
        /// </summary>
        [Output("zoneFile")]
        public Output<string> ZoneFile { get; private set; } = null!;

        /// <summary>
        /// The name of the domain zone
        /// </summary>
        [Output("zoneName")]
        public Output<string> ZoneName { get; private set; } = null!;


        /// <summary>
        /// Create a ZoneImport resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ZoneImport(string name, ZoneImportArgs args, CustomResourceOptions? options = null)
            : base("ovh:Domain/zoneImport:ZoneImport", name, args ?? new ZoneImportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ZoneImport(string name, Input<string> id, ZoneImportState? state = null, CustomResourceOptions? options = null)
            : base("ovh:Domain/zoneImport:ZoneImport", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/ovh/pulumi-ovh",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ZoneImport resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ZoneImport Get(string name, Input<string> id, ZoneImportState? state = null, CustomResourceOptions? options = null)
        {
            return new ZoneImport(name, id, state, options);
        }
    }

    public sealed class ZoneImportArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Content of the zone file to import
        /// </summary>
        [Input("zoneFile", required: true)]
        public Input<string> ZoneFile { get; set; } = null!;

        /// <summary>
        /// The name of the domain zone
        /// </summary>
        [Input("zoneName", required: true)]
        public Input<string> ZoneName { get; set; } = null!;

        public ZoneImportArgs()
        {
        }
        public static new ZoneImportArgs Empty => new ZoneImportArgs();
    }

    public sealed class ZoneImportState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Zone file exported from the API
        /// </summary>
        [Input("exportedContent")]
        public Input<string>? ExportedContent { get; set; }

        /// <summary>
        /// Content of the zone file to import
        /// </summary>
        [Input("zoneFile")]
        public Input<string>? ZoneFile { get; set; }

        /// <summary>
        /// The name of the domain zone
        /// </summary>
        [Input("zoneName")]
        public Input<string>? ZoneName { get; set; }

        public ZoneImportState()
        {
        }
        public static new ZoneImportState Empty => new ZoneImportState();
    }
}
