// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmware

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get VMware Cloud Director organization details
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vmware"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vmware.GetCloudDirectorOrganization(ctx, &vmware.GetCloudDirectorOrganizationArgs{
//				OrganizationId: "<VCD organization ID>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloudDirectorOrganization(ctx *pulumi.Context, args *GetCloudDirectorOrganizationArgs, opts ...pulumi.InvokeOption) (*GetCloudDirectorOrganizationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCloudDirectorOrganizationResult
	err := ctx.Invoke("ovh:VMware/getCloudDirectorOrganization:getCloudDirectorOrganization", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudDirectorOrganization.
type GetCloudDirectorOrganizationArgs struct {
	// Organization ID
	OrganizationId string `pulumi:"organizationId"`
}

// A collection of values returned by getCloudDirectorOrganization.
type GetCloudDirectorOrganizationResult struct {
	// Current state of VMware Cloud Director organization service
	CurrentState GetCloudDirectorOrganizationCurrentState `pulumi:"currentState"`
	// Asynchronous operations ongoing on the VMware Cloud Director organization
	CurrentTasks []GetCloudDirectorOrganizationCurrentTask `pulumi:"currentTasks"`
	// IAM resource metadata
	Iam GetCloudDirectorOrganizationIam `pulumi:"iam"`
	// Unique identifier
	Id string `pulumi:"id"`
	// Organization ID
	OrganizationId string `pulumi:"organizationId"`
	// Reflects the readiness of the VMware Cloud Director organization.
	ResourceStatus string `pulumi:"resourceStatus"`
	// Target specification of VMware Cloud Director organization service
	TargetSpec GetCloudDirectorOrganizationTargetSpec `pulumi:"targetSpec"`
	UpdatedAt  string                                 `pulumi:"updatedAt"`
}

func GetCloudDirectorOrganizationOutput(ctx *pulumi.Context, args GetCloudDirectorOrganizationOutputArgs, opts ...pulumi.InvokeOption) GetCloudDirectorOrganizationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCloudDirectorOrganizationResultOutput, error) {
			args := v.(GetCloudDirectorOrganizationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:VMware/getCloudDirectorOrganization:getCloudDirectorOrganization", args, GetCloudDirectorOrganizationResultOutput{}, options).(GetCloudDirectorOrganizationResultOutput), nil
		}).(GetCloudDirectorOrganizationResultOutput)
}

// A collection of arguments for invoking getCloudDirectorOrganization.
type GetCloudDirectorOrganizationOutputArgs struct {
	// Organization ID
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
}

func (GetCloudDirectorOrganizationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudDirectorOrganizationArgs)(nil)).Elem()
}

// A collection of values returned by getCloudDirectorOrganization.
type GetCloudDirectorOrganizationResultOutput struct{ *pulumi.OutputState }

func (GetCloudDirectorOrganizationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudDirectorOrganizationResult)(nil)).Elem()
}

func (o GetCloudDirectorOrganizationResultOutput) ToGetCloudDirectorOrganizationResultOutput() GetCloudDirectorOrganizationResultOutput {
	return o
}

func (o GetCloudDirectorOrganizationResultOutput) ToGetCloudDirectorOrganizationResultOutputWithContext(ctx context.Context) GetCloudDirectorOrganizationResultOutput {
	return o
}

// Current state of VMware Cloud Director organization service
func (o GetCloudDirectorOrganizationResultOutput) CurrentState() GetCloudDirectorOrganizationCurrentStateOutput {
	return o.ApplyT(func(v GetCloudDirectorOrganizationResult) GetCloudDirectorOrganizationCurrentState {
		return v.CurrentState
	}).(GetCloudDirectorOrganizationCurrentStateOutput)
}

// Asynchronous operations ongoing on the VMware Cloud Director organization
func (o GetCloudDirectorOrganizationResultOutput) CurrentTasks() GetCloudDirectorOrganizationCurrentTaskArrayOutput {
	return o.ApplyT(func(v GetCloudDirectorOrganizationResult) []GetCloudDirectorOrganizationCurrentTask {
		return v.CurrentTasks
	}).(GetCloudDirectorOrganizationCurrentTaskArrayOutput)
}

// IAM resource metadata
func (o GetCloudDirectorOrganizationResultOutput) Iam() GetCloudDirectorOrganizationIamOutput {
	return o.ApplyT(func(v GetCloudDirectorOrganizationResult) GetCloudDirectorOrganizationIam { return v.Iam }).(GetCloudDirectorOrganizationIamOutput)
}

// Unique identifier
func (o GetCloudDirectorOrganizationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudDirectorOrganizationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Organization ID
func (o GetCloudDirectorOrganizationResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudDirectorOrganizationResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// Reflects the readiness of the VMware Cloud Director organization.
func (o GetCloudDirectorOrganizationResultOutput) ResourceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudDirectorOrganizationResult) string { return v.ResourceStatus }).(pulumi.StringOutput)
}

// Target specification of VMware Cloud Director organization service
func (o GetCloudDirectorOrganizationResultOutput) TargetSpec() GetCloudDirectorOrganizationTargetSpecOutput {
	return o.ApplyT(func(v GetCloudDirectorOrganizationResult) GetCloudDirectorOrganizationTargetSpec { return v.TargetSpec }).(GetCloudDirectorOrganizationTargetSpecOutput)
}

func (o GetCloudDirectorOrganizationResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudDirectorOrganizationResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudDirectorOrganizationResultOutput{})
}
