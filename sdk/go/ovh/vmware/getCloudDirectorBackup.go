// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vmware

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a VMware Cloud Director Backup service
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/vmware"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := vmware.GetCloudDirectorBackup(ctx, &vmware.GetCloudDirectorBackupArgs{
//				BackupId: "<VCD backup ID>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloudDirectorBackup(ctx *pulumi.Context, args *GetCloudDirectorBackupArgs, opts ...pulumi.InvokeOption) (*GetCloudDirectorBackupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCloudDirectorBackupResult
	err := ctx.Invoke("ovh:VMware/getCloudDirectorBackup:getCloudDirectorBackup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudDirectorBackup.
type GetCloudDirectorBackupArgs struct {
	// Backup ID
	BackupId string `pulumi:"backupId"`
}

// A collection of values returned by getCloudDirectorBackup.
type GetCloudDirectorBackupResult struct {
	// Backup ID
	BackupId string `pulumi:"backupId"`
	// Datetime when backup was enabled
	CreatedAt string `pulumi:"createdAt"`
	// VMware Cloud Director Backup service current state
	CurrentState GetCloudDirectorBackupCurrentState `pulumi:"currentState"`
	// Asynchronous operations ongoing on the VMware Cloud Director organization backup service
	CurrentTasks []GetCloudDirectorBackupCurrentTask `pulumi:"currentTasks"`
	// IAM resource metadata
	Iam GetCloudDirectorBackupIam `pulumi:"iam"`
	// Unique identifier of the VMware Cloud Director backup
	Id string `pulumi:"id"`
	// Reflects the readiness of the VMware Cloud Director organization backup service
	ResourceStatus string `pulumi:"resourceStatus"`
	// VMware Cloud Director Backup target spec
	TargetSpec GetCloudDirectorBackupTargetSpec `pulumi:"targetSpec"`
	// Datetime when backup is modified
	UpdatedAt string `pulumi:"updatedAt"`
}

func GetCloudDirectorBackupOutput(ctx *pulumi.Context, args GetCloudDirectorBackupOutputArgs, opts ...pulumi.InvokeOption) GetCloudDirectorBackupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCloudDirectorBackupResultOutput, error) {
			args := v.(GetCloudDirectorBackupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:VMware/getCloudDirectorBackup:getCloudDirectorBackup", args, GetCloudDirectorBackupResultOutput{}, options).(GetCloudDirectorBackupResultOutput), nil
		}).(GetCloudDirectorBackupResultOutput)
}

// A collection of arguments for invoking getCloudDirectorBackup.
type GetCloudDirectorBackupOutputArgs struct {
	// Backup ID
	BackupId pulumi.StringInput `pulumi:"backupId"`
}

func (GetCloudDirectorBackupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudDirectorBackupArgs)(nil)).Elem()
}

// A collection of values returned by getCloudDirectorBackup.
type GetCloudDirectorBackupResultOutput struct{ *pulumi.OutputState }

func (GetCloudDirectorBackupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudDirectorBackupResult)(nil)).Elem()
}

func (o GetCloudDirectorBackupResultOutput) ToGetCloudDirectorBackupResultOutput() GetCloudDirectorBackupResultOutput {
	return o
}

func (o GetCloudDirectorBackupResultOutput) ToGetCloudDirectorBackupResultOutputWithContext(ctx context.Context) GetCloudDirectorBackupResultOutput {
	return o
}

// Backup ID
func (o GetCloudDirectorBackupResultOutput) BackupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudDirectorBackupResult) string { return v.BackupId }).(pulumi.StringOutput)
}

// Datetime when backup was enabled
func (o GetCloudDirectorBackupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudDirectorBackupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// VMware Cloud Director Backup service current state
func (o GetCloudDirectorBackupResultOutput) CurrentState() GetCloudDirectorBackupCurrentStateOutput {
	return o.ApplyT(func(v GetCloudDirectorBackupResult) GetCloudDirectorBackupCurrentState { return v.CurrentState }).(GetCloudDirectorBackupCurrentStateOutput)
}

// Asynchronous operations ongoing on the VMware Cloud Director organization backup service
func (o GetCloudDirectorBackupResultOutput) CurrentTasks() GetCloudDirectorBackupCurrentTaskArrayOutput {
	return o.ApplyT(func(v GetCloudDirectorBackupResult) []GetCloudDirectorBackupCurrentTask { return v.CurrentTasks }).(GetCloudDirectorBackupCurrentTaskArrayOutput)
}

// IAM resource metadata
func (o GetCloudDirectorBackupResultOutput) Iam() GetCloudDirectorBackupIamOutput {
	return o.ApplyT(func(v GetCloudDirectorBackupResult) GetCloudDirectorBackupIam { return v.Iam }).(GetCloudDirectorBackupIamOutput)
}

// Unique identifier of the VMware Cloud Director backup
func (o GetCloudDirectorBackupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudDirectorBackupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Reflects the readiness of the VMware Cloud Director organization backup service
func (o GetCloudDirectorBackupResultOutput) ResourceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudDirectorBackupResult) string { return v.ResourceStatus }).(pulumi.StringOutput)
}

// VMware Cloud Director Backup target spec
func (o GetCloudDirectorBackupResultOutput) TargetSpec() GetCloudDirectorBackupTargetSpecOutput {
	return o.ApplyT(func(v GetCloudDirectorBackupResult) GetCloudDirectorBackupTargetSpec { return v.TargetSpec }).(GetCloudDirectorBackupTargetSpecOutput)
}

// Datetime when backup is modified
func (o GetCloudDirectorBackupResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudDirectorBackupResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudDirectorBackupResultOutput{})
}
