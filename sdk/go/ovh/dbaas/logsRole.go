// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbaas

import (
	"context"
	"reflect"

	"errors"
	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Reference a DBaaS logs role.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dbaas"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dbaas.NewLogsRole(ctx, "ro", &dbaas.LogsRoleArgs{
//				Description: pulumi.String("Devops - RO"),
//				ServiceName: pulumi.String("ldp-xx-xxxxx"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// OVHcloud DBaaS Log Role can be imported using the `service_name` and `role_id` of the role, separated by "/" E.g.,
//
// bash
//
// ```sh
// $ pulumi import ovh:Dbaas/logsRole:LogsRole ovh_dbaas_logs_role.ro ldp-ra-XX/dc145bc2-eb01-4efe-a802-XXXXXX
// ```
type LogsRole struct {
	pulumi.CustomResourceState

	// Role creation date
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The role description
	Description pulumi.StringOutput `pulumi:"description"`
	// The role name
	Name pulumi.StringOutput `pulumi:"name"`
	// number of member for the role
	NbMember pulumi.IntOutput `pulumi:"nbMember"`
	// number of configured permission for the role
	NbPermission pulumi.IntOutput `pulumi:"nbPermission"`
	// Role identifier
	RoleId pulumi.StringOutput `pulumi:"roleId"`
	// The service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Role last update date
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewLogsRole registers a new resource with the given unique name, arguments, and options.
func NewLogsRole(ctx *pulumi.Context,
	name string, args *LogsRoleArgs, opts ...pulumi.ResourceOption) (*LogsRole, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogsRole
	err := ctx.RegisterResource("ovh:Dbaas/logsRole:LogsRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogsRole gets an existing LogsRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogsRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogsRoleState, opts ...pulumi.ResourceOption) (*LogsRole, error) {
	var resource LogsRole
	err := ctx.ReadResource("ovh:Dbaas/logsRole:LogsRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogsRole resources.
type logsRoleState struct {
	// Role creation date
	CreatedAt *string `pulumi:"createdAt"`
	// The role description
	Description *string `pulumi:"description"`
	// The role name
	Name *string `pulumi:"name"`
	// number of member for the role
	NbMember *int `pulumi:"nbMember"`
	// number of configured permission for the role
	NbPermission *int `pulumi:"nbPermission"`
	// Role identifier
	RoleId *string `pulumi:"roleId"`
	// The service name
	ServiceName *string `pulumi:"serviceName"`
	// Role last update date
	UpdatedAt *string `pulumi:"updatedAt"`
}

type LogsRoleState struct {
	// Role creation date
	CreatedAt pulumi.StringPtrInput
	// The role description
	Description pulumi.StringPtrInput
	// The role name
	Name pulumi.StringPtrInput
	// number of member for the role
	NbMember pulumi.IntPtrInput
	// number of configured permission for the role
	NbPermission pulumi.IntPtrInput
	// Role identifier
	RoleId pulumi.StringPtrInput
	// The service name
	ServiceName pulumi.StringPtrInput
	// Role last update date
	UpdatedAt pulumi.StringPtrInput
}

func (LogsRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*logsRoleState)(nil)).Elem()
}

type logsRoleArgs struct {
	// The role description
	Description string `pulumi:"description"`
	// The role name
	Name *string `pulumi:"name"`
	// The service name
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a LogsRole resource.
type LogsRoleArgs struct {
	// The role description
	Description pulumi.StringInput
	// The role name
	Name pulumi.StringPtrInput
	// The service name
	ServiceName pulumi.StringInput
}

func (LogsRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logsRoleArgs)(nil)).Elem()
}

type LogsRoleInput interface {
	pulumi.Input

	ToLogsRoleOutput() LogsRoleOutput
	ToLogsRoleOutputWithContext(ctx context.Context) LogsRoleOutput
}

func (*LogsRole) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsRole)(nil)).Elem()
}

func (i *LogsRole) ToLogsRoleOutput() LogsRoleOutput {
	return i.ToLogsRoleOutputWithContext(context.Background())
}

func (i *LogsRole) ToLogsRoleOutputWithContext(ctx context.Context) LogsRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsRoleOutput)
}

// LogsRoleArrayInput is an input type that accepts LogsRoleArray and LogsRoleArrayOutput values.
// You can construct a concrete instance of `LogsRoleArrayInput` via:
//
//	LogsRoleArray{ LogsRoleArgs{...} }
type LogsRoleArrayInput interface {
	pulumi.Input

	ToLogsRoleArrayOutput() LogsRoleArrayOutput
	ToLogsRoleArrayOutputWithContext(context.Context) LogsRoleArrayOutput
}

type LogsRoleArray []LogsRoleInput

func (LogsRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogsRole)(nil)).Elem()
}

func (i LogsRoleArray) ToLogsRoleArrayOutput() LogsRoleArrayOutput {
	return i.ToLogsRoleArrayOutputWithContext(context.Background())
}

func (i LogsRoleArray) ToLogsRoleArrayOutputWithContext(ctx context.Context) LogsRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsRoleArrayOutput)
}

// LogsRoleMapInput is an input type that accepts LogsRoleMap and LogsRoleMapOutput values.
// You can construct a concrete instance of `LogsRoleMapInput` via:
//
//	LogsRoleMap{ "key": LogsRoleArgs{...} }
type LogsRoleMapInput interface {
	pulumi.Input

	ToLogsRoleMapOutput() LogsRoleMapOutput
	ToLogsRoleMapOutputWithContext(context.Context) LogsRoleMapOutput
}

type LogsRoleMap map[string]LogsRoleInput

func (LogsRoleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogsRole)(nil)).Elem()
}

func (i LogsRoleMap) ToLogsRoleMapOutput() LogsRoleMapOutput {
	return i.ToLogsRoleMapOutputWithContext(context.Background())
}

func (i LogsRoleMap) ToLogsRoleMapOutputWithContext(ctx context.Context) LogsRoleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogsRoleMapOutput)
}

type LogsRoleOutput struct{ *pulumi.OutputState }

func (LogsRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogsRole)(nil)).Elem()
}

func (o LogsRoleOutput) ToLogsRoleOutput() LogsRoleOutput {
	return o
}

func (o LogsRoleOutput) ToLogsRoleOutputWithContext(ctx context.Context) LogsRoleOutput {
	return o
}

// Role creation date
func (o LogsRoleOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *LogsRole) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The role description
func (o LogsRoleOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *LogsRole) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The role name
func (o LogsRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LogsRole) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// number of member for the role
func (o LogsRoleOutput) NbMember() pulumi.IntOutput {
	return o.ApplyT(func(v *LogsRole) pulumi.IntOutput { return v.NbMember }).(pulumi.IntOutput)
}

// number of configured permission for the role
func (o LogsRoleOutput) NbPermission() pulumi.IntOutput {
	return o.ApplyT(func(v *LogsRole) pulumi.IntOutput { return v.NbPermission }).(pulumi.IntOutput)
}

// Role identifier
func (o LogsRoleOutput) RoleId() pulumi.StringOutput {
	return o.ApplyT(func(v *LogsRole) pulumi.StringOutput { return v.RoleId }).(pulumi.StringOutput)
}

// The service name
func (o LogsRoleOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *LogsRole) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Role last update date
func (o LogsRoleOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *LogsRole) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type LogsRoleArrayOutput struct{ *pulumi.OutputState }

func (LogsRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogsRole)(nil)).Elem()
}

func (o LogsRoleArrayOutput) ToLogsRoleArrayOutput() LogsRoleArrayOutput {
	return o
}

func (o LogsRoleArrayOutput) ToLogsRoleArrayOutputWithContext(ctx context.Context) LogsRoleArrayOutput {
	return o
}

func (o LogsRoleArrayOutput) Index(i pulumi.IntInput) LogsRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogsRole {
		return vs[0].([]*LogsRole)[vs[1].(int)]
	}).(LogsRoleOutput)
}

type LogsRoleMapOutput struct{ *pulumi.OutputState }

func (LogsRoleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogsRole)(nil)).Elem()
}

func (o LogsRoleMapOutput) ToLogsRoleMapOutput() LogsRoleMapOutput {
	return o
}

func (o LogsRoleMapOutput) ToLogsRoleMapOutputWithContext(ctx context.Context) LogsRoleMapOutput {
	return o
}

func (o LogsRoleMapOutput) MapIndex(k pulumi.StringInput) LogsRoleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogsRole {
		return vs[0].(map[string]*LogsRole)[vs[1].(string)]
	}).(LogsRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogsRoleInput)(nil)).Elem(), &LogsRole{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsRoleArrayInput)(nil)).Elem(), LogsRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogsRoleMapInput)(nil)).Elem(), LogsRoleMap{})
	pulumi.RegisterOutputType(LogsRoleOutput{})
	pulumi.RegisterOutputType(LogsRoleArrayOutput{})
	pulumi.RegisterOutputType(LogsRoleMapOutput{})
}
