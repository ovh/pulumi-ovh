// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// OVHcloud Managed Valkey clusters users can be imported using the `service_name`, `cluster_id` and `id` of the user, separated by "/" E.g.,
//
// bash
//
// ```sh
// $ pulumi import ovh:index/cloudProjectDatabaseValkeyUser:CloudProjectDatabaseValkeyUser my_user service_name/cluster_id/id
// ```
type CloudProjectDatabaseValkeyUser struct {
	pulumi.CustomResourceState

	// Categories of the user.
	Categories pulumi.StringArrayOutput `pulumi:"categories"`
	// Channels of the user.
	Channels pulumi.StringArrayOutput `pulumi:"channels"`
	// Cluster ID.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Commands of the user.
	Commands pulumi.StringArrayOutput `pulumi:"commands"`
	// Date of the creation of the user.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Keys of the user.
	Keys pulumi.StringArrayOutput `pulumi:"keys"`
	// Name of the user.
	Name pulumi.StringOutput `pulumi:"name"`
	// (Sensitive) Password of the user.
	Password pulumi.StringOutput `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrOutput `pulumi:"passwordReset"`
	// The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Current status of the user.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewCloudProjectDatabaseValkeyUser registers a new resource with the given unique name, arguments, and options.
func NewCloudProjectDatabaseValkeyUser(ctx *pulumi.Context,
	name string, args *CloudProjectDatabaseValkeyUserArgs, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseValkeyUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CloudProjectDatabaseValkeyUser
	err := ctx.RegisterResource("ovh:index/cloudProjectDatabaseValkeyUser:CloudProjectDatabaseValkeyUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCloudProjectDatabaseValkeyUser gets an existing CloudProjectDatabaseValkeyUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCloudProjectDatabaseValkeyUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CloudProjectDatabaseValkeyUserState, opts ...pulumi.ResourceOption) (*CloudProjectDatabaseValkeyUser, error) {
	var resource CloudProjectDatabaseValkeyUser
	err := ctx.ReadResource("ovh:index/cloudProjectDatabaseValkeyUser:CloudProjectDatabaseValkeyUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CloudProjectDatabaseValkeyUser resources.
type cloudProjectDatabaseValkeyUserState struct {
	// Categories of the user.
	Categories []string `pulumi:"categories"`
	// Channels of the user.
	Channels []string `pulumi:"channels"`
	// Cluster ID.
	ClusterId *string `pulumi:"clusterId"`
	// Commands of the user.
	Commands []string `pulumi:"commands"`
	// Date of the creation of the user.
	CreatedAt *string `pulumi:"createdAt"`
	// Keys of the user.
	Keys []string `pulumi:"keys"`
	// Name of the user.
	Name *string `pulumi:"name"`
	// (Sensitive) Password of the user.
	Password *string `pulumi:"password"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string `pulumi:"passwordReset"`
	// The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName *string `pulumi:"serviceName"`
	// Current status of the user.
	Status *string `pulumi:"status"`
}

type CloudProjectDatabaseValkeyUserState struct {
	// Categories of the user.
	Categories pulumi.StringArrayInput
	// Channels of the user.
	Channels pulumi.StringArrayInput
	// Cluster ID.
	ClusterId pulumi.StringPtrInput
	// Commands of the user.
	Commands pulumi.StringArrayInput
	// Date of the creation of the user.
	CreatedAt pulumi.StringPtrInput
	// Keys of the user.
	Keys pulumi.StringArrayInput
	// Name of the user.
	Name pulumi.StringPtrInput
	// (Sensitive) Password of the user.
	Password pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	// The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringPtrInput
	// Current status of the user.
	Status pulumi.StringPtrInput
}

func (CloudProjectDatabaseValkeyUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseValkeyUserState)(nil)).Elem()
}

type cloudProjectDatabaseValkeyUserArgs struct {
	// Categories of the user.
	Categories []string `pulumi:"categories"`
	// Channels of the user.
	Channels []string `pulumi:"channels"`
	// Cluster ID.
	ClusterId string `pulumi:"clusterId"`
	// Commands of the user.
	Commands []string `pulumi:"commands"`
	// Keys of the user.
	Keys []string `pulumi:"keys"`
	// Name of the user.
	Name *string `pulumi:"name"`
	// Arbitrary string to change to trigger a password update
	PasswordReset *string `pulumi:"passwordReset"`
	// The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName *string `pulumi:"serviceName"`
}

// The set of arguments for constructing a CloudProjectDatabaseValkeyUser resource.
type CloudProjectDatabaseValkeyUserArgs struct {
	// Categories of the user.
	Categories pulumi.StringArrayInput
	// Channels of the user.
	Channels pulumi.StringArrayInput
	// Cluster ID.
	ClusterId pulumi.StringInput
	// Commands of the user.
	Commands pulumi.StringArrayInput
	// Keys of the user.
	Keys pulumi.StringArrayInput
	// Name of the user.
	Name pulumi.StringPtrInput
	// Arbitrary string to change to trigger a password update
	PasswordReset pulumi.StringPtrInput
	// The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringPtrInput
}

func (CloudProjectDatabaseValkeyUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cloudProjectDatabaseValkeyUserArgs)(nil)).Elem()
}

type CloudProjectDatabaseValkeyUserInput interface {
	pulumi.Input

	ToCloudProjectDatabaseValkeyUserOutput() CloudProjectDatabaseValkeyUserOutput
	ToCloudProjectDatabaseValkeyUserOutputWithContext(ctx context.Context) CloudProjectDatabaseValkeyUserOutput
}

func (*CloudProjectDatabaseValkeyUser) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseValkeyUser)(nil)).Elem()
}

func (i *CloudProjectDatabaseValkeyUser) ToCloudProjectDatabaseValkeyUserOutput() CloudProjectDatabaseValkeyUserOutput {
	return i.ToCloudProjectDatabaseValkeyUserOutputWithContext(context.Background())
}

func (i *CloudProjectDatabaseValkeyUser) ToCloudProjectDatabaseValkeyUserOutputWithContext(ctx context.Context) CloudProjectDatabaseValkeyUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseValkeyUserOutput)
}

// CloudProjectDatabaseValkeyUserArrayInput is an input type that accepts CloudProjectDatabaseValkeyUserArray and CloudProjectDatabaseValkeyUserArrayOutput values.
// You can construct a concrete instance of `CloudProjectDatabaseValkeyUserArrayInput` via:
//
//	CloudProjectDatabaseValkeyUserArray{ CloudProjectDatabaseValkeyUserArgs{...} }
type CloudProjectDatabaseValkeyUserArrayInput interface {
	pulumi.Input

	ToCloudProjectDatabaseValkeyUserArrayOutput() CloudProjectDatabaseValkeyUserArrayOutput
	ToCloudProjectDatabaseValkeyUserArrayOutputWithContext(context.Context) CloudProjectDatabaseValkeyUserArrayOutput
}

type CloudProjectDatabaseValkeyUserArray []CloudProjectDatabaseValkeyUserInput

func (CloudProjectDatabaseValkeyUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectDatabaseValkeyUser)(nil)).Elem()
}

func (i CloudProjectDatabaseValkeyUserArray) ToCloudProjectDatabaseValkeyUserArrayOutput() CloudProjectDatabaseValkeyUserArrayOutput {
	return i.ToCloudProjectDatabaseValkeyUserArrayOutputWithContext(context.Background())
}

func (i CloudProjectDatabaseValkeyUserArray) ToCloudProjectDatabaseValkeyUserArrayOutputWithContext(ctx context.Context) CloudProjectDatabaseValkeyUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseValkeyUserArrayOutput)
}

// CloudProjectDatabaseValkeyUserMapInput is an input type that accepts CloudProjectDatabaseValkeyUserMap and CloudProjectDatabaseValkeyUserMapOutput values.
// You can construct a concrete instance of `CloudProjectDatabaseValkeyUserMapInput` via:
//
//	CloudProjectDatabaseValkeyUserMap{ "key": CloudProjectDatabaseValkeyUserArgs{...} }
type CloudProjectDatabaseValkeyUserMapInput interface {
	pulumi.Input

	ToCloudProjectDatabaseValkeyUserMapOutput() CloudProjectDatabaseValkeyUserMapOutput
	ToCloudProjectDatabaseValkeyUserMapOutputWithContext(context.Context) CloudProjectDatabaseValkeyUserMapOutput
}

type CloudProjectDatabaseValkeyUserMap map[string]CloudProjectDatabaseValkeyUserInput

func (CloudProjectDatabaseValkeyUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectDatabaseValkeyUser)(nil)).Elem()
}

func (i CloudProjectDatabaseValkeyUserMap) ToCloudProjectDatabaseValkeyUserMapOutput() CloudProjectDatabaseValkeyUserMapOutput {
	return i.ToCloudProjectDatabaseValkeyUserMapOutputWithContext(context.Background())
}

func (i CloudProjectDatabaseValkeyUserMap) ToCloudProjectDatabaseValkeyUserMapOutputWithContext(ctx context.Context) CloudProjectDatabaseValkeyUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudProjectDatabaseValkeyUserMapOutput)
}

type CloudProjectDatabaseValkeyUserOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseValkeyUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudProjectDatabaseValkeyUser)(nil)).Elem()
}

func (o CloudProjectDatabaseValkeyUserOutput) ToCloudProjectDatabaseValkeyUserOutput() CloudProjectDatabaseValkeyUserOutput {
	return o
}

func (o CloudProjectDatabaseValkeyUserOutput) ToCloudProjectDatabaseValkeyUserOutputWithContext(ctx context.Context) CloudProjectDatabaseValkeyUserOutput {
	return o
}

// Categories of the user.
func (o CloudProjectDatabaseValkeyUserOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringArrayOutput { return v.Categories }).(pulumi.StringArrayOutput)
}

// Channels of the user.
func (o CloudProjectDatabaseValkeyUserOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringArrayOutput { return v.Channels }).(pulumi.StringArrayOutput)
}

// Cluster ID.
func (o CloudProjectDatabaseValkeyUserOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Commands of the user.
func (o CloudProjectDatabaseValkeyUserOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringArrayOutput { return v.Commands }).(pulumi.StringArrayOutput)
}

// Date of the creation of the user.
func (o CloudProjectDatabaseValkeyUserOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Keys of the user.
func (o CloudProjectDatabaseValkeyUserOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringArrayOutput { return v.Keys }).(pulumi.StringArrayOutput)
}

// Name of the user.
func (o CloudProjectDatabaseValkeyUserOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// (Sensitive) Password of the user.
func (o CloudProjectDatabaseValkeyUserOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Arbitrary string to change to trigger a password update
func (o CloudProjectDatabaseValkeyUserOutput) PasswordReset() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringPtrOutput { return v.PasswordReset }).(pulumi.StringPtrOutput)
}

// The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
func (o CloudProjectDatabaseValkeyUserOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Current status of the user.
func (o CloudProjectDatabaseValkeyUserOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CloudProjectDatabaseValkeyUser) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type CloudProjectDatabaseValkeyUserArrayOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseValkeyUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CloudProjectDatabaseValkeyUser)(nil)).Elem()
}

func (o CloudProjectDatabaseValkeyUserArrayOutput) ToCloudProjectDatabaseValkeyUserArrayOutput() CloudProjectDatabaseValkeyUserArrayOutput {
	return o
}

func (o CloudProjectDatabaseValkeyUserArrayOutput) ToCloudProjectDatabaseValkeyUserArrayOutputWithContext(ctx context.Context) CloudProjectDatabaseValkeyUserArrayOutput {
	return o
}

func (o CloudProjectDatabaseValkeyUserArrayOutput) Index(i pulumi.IntInput) CloudProjectDatabaseValkeyUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CloudProjectDatabaseValkeyUser {
		return vs[0].([]*CloudProjectDatabaseValkeyUser)[vs[1].(int)]
	}).(CloudProjectDatabaseValkeyUserOutput)
}

type CloudProjectDatabaseValkeyUserMapOutput struct{ *pulumi.OutputState }

func (CloudProjectDatabaseValkeyUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CloudProjectDatabaseValkeyUser)(nil)).Elem()
}

func (o CloudProjectDatabaseValkeyUserMapOutput) ToCloudProjectDatabaseValkeyUserMapOutput() CloudProjectDatabaseValkeyUserMapOutput {
	return o
}

func (o CloudProjectDatabaseValkeyUserMapOutput) ToCloudProjectDatabaseValkeyUserMapOutputWithContext(ctx context.Context) CloudProjectDatabaseValkeyUserMapOutput {
	return o
}

func (o CloudProjectDatabaseValkeyUserMapOutput) MapIndex(k pulumi.StringInput) CloudProjectDatabaseValkeyUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CloudProjectDatabaseValkeyUser {
		return vs[0].(map[string]*CloudProjectDatabaseValkeyUser)[vs[1].(string)]
	}).(CloudProjectDatabaseValkeyUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseValkeyUserInput)(nil)).Elem(), &CloudProjectDatabaseValkeyUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseValkeyUserArrayInput)(nil)).Elem(), CloudProjectDatabaseValkeyUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudProjectDatabaseValkeyUserMapInput)(nil)).Elem(), CloudProjectDatabaseValkeyUserMap{})
	pulumi.RegisterOutputType(CloudProjectDatabaseValkeyUserOutput{})
	pulumi.RegisterOutputType(CloudProjectDatabaseValkeyUserArrayOutput{})
	pulumi.RegisterOutputType(CloudProjectDatabaseValkeyUserMapOutput{})
}
