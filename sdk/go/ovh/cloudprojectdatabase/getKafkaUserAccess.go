// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudprojectdatabase

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetKafkaUserAccess(ctx *pulumi.Context, args *GetKafkaUserAccessArgs, opts ...pulumi.InvokeOption) (*GetKafkaUserAccessResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKafkaUserAccessResult
	err := ctx.Invoke("ovh:CloudProjectDatabase/getKafkaUserAccess:getKafkaUserAccess", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaUserAccess.
type GetKafkaUserAccessArgs struct {
	ClusterId   string `pulumi:"clusterId"`
	ServiceName string `pulumi:"serviceName"`
	UserId      string `pulumi:"userId"`
}

// A collection of values returned by getKafkaUserAccess.
type GetKafkaUserAccessResult struct {
	Cert      string `pulumi:"cert"`
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Key         string `pulumi:"key"`
	ServiceName string `pulumi:"serviceName"`
	UserId      string `pulumi:"userId"`
}

func GetKafkaUserAccessOutput(ctx *pulumi.Context, args GetKafkaUserAccessOutputArgs, opts ...pulumi.InvokeOption) GetKafkaUserAccessResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetKafkaUserAccessResultOutput, error) {
			args := v.(GetKafkaUserAccessArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProjectDatabase/getKafkaUserAccess:getKafkaUserAccess", args, GetKafkaUserAccessResultOutput{}, options).(GetKafkaUserAccessResultOutput), nil
		}).(GetKafkaUserAccessResultOutput)
}

// A collection of arguments for invoking getKafkaUserAccess.
type GetKafkaUserAccessOutputArgs struct {
	ClusterId   pulumi.StringInput `pulumi:"clusterId"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
	UserId      pulumi.StringInput `pulumi:"userId"`
}

func (GetKafkaUserAccessOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaUserAccessArgs)(nil)).Elem()
}

// A collection of values returned by getKafkaUserAccess.
type GetKafkaUserAccessResultOutput struct{ *pulumi.OutputState }

func (GetKafkaUserAccessResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaUserAccessResult)(nil)).Elem()
}

func (o GetKafkaUserAccessResultOutput) ToGetKafkaUserAccessResultOutput() GetKafkaUserAccessResultOutput {
	return o
}

func (o GetKafkaUserAccessResultOutput) ToGetKafkaUserAccessResultOutputWithContext(ctx context.Context) GetKafkaUserAccessResultOutput {
	return o
}

func (o GetKafkaUserAccessResultOutput) Cert() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaUserAccessResult) string { return v.Cert }).(pulumi.StringOutput)
}

func (o GetKafkaUserAccessResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaUserAccessResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKafkaUserAccessResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaUserAccessResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKafkaUserAccessResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaUserAccessResult) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetKafkaUserAccessResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaUserAccessResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetKafkaUserAccessResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaUserAccessResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKafkaUserAccessResultOutput{})
}
