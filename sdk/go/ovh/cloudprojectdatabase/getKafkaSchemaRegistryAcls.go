// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudprojectdatabase

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the list of ACLs of a kafka cluster associated with a public cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/go/ovh/cloudprojectdatabase"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			schemaRegistryAcls, err := cloudprojectdatabase.GetKafkaSchemaRegistryAcls(ctx, &cloudprojectdatabase.GetKafkaSchemaRegistryAclsArgs{
//				ServiceName: "XXX",
//				ClusterId:   "YYY",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("aclIds", schemaRegistryAcls.AclIds)
//			return nil
//		})
//	}
//
// ```
func GetKafkaSchemaRegistryAcls(ctx *pulumi.Context, args *GetKafkaSchemaRegistryAclsArgs, opts ...pulumi.InvokeOption) (*GetKafkaSchemaRegistryAclsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKafkaSchemaRegistryAclsResult
	err := ctx.Invoke("ovh:CloudProjectDatabase/getKafkaSchemaRegistryAcls:getKafkaSchemaRegistryAcls", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaSchemaRegistryAcls.
type GetKafkaSchemaRegistryAclsArgs struct {
	// Cluster ID
	ClusterId string `pulumi:"clusterId"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getKafkaSchemaRegistryAcls.
type GetKafkaSchemaRegistryAclsResult struct {
	// The list of schema refistry ACLs ids of the kafka cluster associated with the project.
	AclIds []string `pulumi:"aclIds"`
	// See Argument Reference above.
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// See Argument Reference above.
	ServiceName string `pulumi:"serviceName"`
}

func GetKafkaSchemaRegistryAclsOutput(ctx *pulumi.Context, args GetKafkaSchemaRegistryAclsOutputArgs, opts ...pulumi.InvokeOption) GetKafkaSchemaRegistryAclsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetKafkaSchemaRegistryAclsResultOutput, error) {
			args := v.(GetKafkaSchemaRegistryAclsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProjectDatabase/getKafkaSchemaRegistryAcls:getKafkaSchemaRegistryAcls", args, GetKafkaSchemaRegistryAclsResultOutput{}, options).(GetKafkaSchemaRegistryAclsResultOutput), nil
		}).(GetKafkaSchemaRegistryAclsResultOutput)
}

// A collection of arguments for invoking getKafkaSchemaRegistryAcls.
type GetKafkaSchemaRegistryAclsOutputArgs struct {
	// Cluster ID
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetKafkaSchemaRegistryAclsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaSchemaRegistryAclsArgs)(nil)).Elem()
}

// A collection of values returned by getKafkaSchemaRegistryAcls.
type GetKafkaSchemaRegistryAclsResultOutput struct{ *pulumi.OutputState }

func (GetKafkaSchemaRegistryAclsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaSchemaRegistryAclsResult)(nil)).Elem()
}

func (o GetKafkaSchemaRegistryAclsResultOutput) ToGetKafkaSchemaRegistryAclsResultOutput() GetKafkaSchemaRegistryAclsResultOutput {
	return o
}

func (o GetKafkaSchemaRegistryAclsResultOutput) ToGetKafkaSchemaRegistryAclsResultOutputWithContext(ctx context.Context) GetKafkaSchemaRegistryAclsResultOutput {
	return o
}

// The list of schema refistry ACLs ids of the kafka cluster associated with the project.
func (o GetKafkaSchemaRegistryAclsResultOutput) AclIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKafkaSchemaRegistryAclsResult) []string { return v.AclIds }).(pulumi.StringArrayOutput)
}

// See Argument Reference above.
func (o GetKafkaSchemaRegistryAclsResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaSchemaRegistryAclsResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetKafkaSchemaRegistryAclsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaSchemaRegistryAclsResult) string { return v.Id }).(pulumi.StringOutput)
}

// See Argument Reference above.
func (o GetKafkaSchemaRegistryAclsResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaSchemaRegistryAclsResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKafkaSchemaRegistryAclsResultOutput{})
}
