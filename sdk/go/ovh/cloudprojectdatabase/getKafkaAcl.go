// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudprojectdatabase

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupKafkaAcl(ctx *pulumi.Context, args *LookupKafkaAclArgs, opts ...pulumi.InvokeOption) (*LookupKafkaAclResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKafkaAclResult
	err := ctx.Invoke("ovh:CloudProjectDatabase/getKafkaAcl:getKafkaAcl", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaAcl.
type LookupKafkaAclArgs struct {
	ClusterId   string `pulumi:"clusterId"`
	Id          string `pulumi:"id"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getKafkaAcl.
type LookupKafkaAclResult struct {
	ClusterId   string `pulumi:"clusterId"`
	Id          string `pulumi:"id"`
	Permission  string `pulumi:"permission"`
	ServiceName string `pulumi:"serviceName"`
	Topic       string `pulumi:"topic"`
	Username    string `pulumi:"username"`
}

func LookupKafkaAclOutput(ctx *pulumi.Context, args LookupKafkaAclOutputArgs, opts ...pulumi.InvokeOption) LookupKafkaAclResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKafkaAclResultOutput, error) {
			args := v.(LookupKafkaAclArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProjectDatabase/getKafkaAcl:getKafkaAcl", args, LookupKafkaAclResultOutput{}, options).(LookupKafkaAclResultOutput), nil
		}).(LookupKafkaAclResultOutput)
}

// A collection of arguments for invoking getKafkaAcl.
type LookupKafkaAclOutputArgs struct {
	ClusterId   pulumi.StringInput `pulumi:"clusterId"`
	Id          pulumi.StringInput `pulumi:"id"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupKafkaAclOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaAclArgs)(nil)).Elem()
}

// A collection of values returned by getKafkaAcl.
type LookupKafkaAclResultOutput struct{ *pulumi.OutputState }

func (LookupKafkaAclResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaAclResult)(nil)).Elem()
}

func (o LookupKafkaAclResultOutput) ToLookupKafkaAclResultOutput() LookupKafkaAclResultOutput {
	return o
}

func (o LookupKafkaAclResultOutput) ToLookupKafkaAclResultOutputWithContext(ctx context.Context) LookupKafkaAclResultOutput {
	return o
}

func (o LookupKafkaAclResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaAclResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupKafkaAclResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaAclResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKafkaAclResultOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaAclResult) string { return v.Permission }).(pulumi.StringOutput)
}

func (o LookupKafkaAclResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaAclResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupKafkaAclResultOutput) Topic() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaAclResult) string { return v.Topic }).(pulumi.StringOutput)
}

func (o LookupKafkaAclResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaAclResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKafkaAclResultOutput{})
}
