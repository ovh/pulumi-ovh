// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudprojectdatabase

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupKafkaTopic(ctx *pulumi.Context, args *LookupKafkaTopicArgs, opts ...pulumi.InvokeOption) (*LookupKafkaTopicResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupKafkaTopicResult
	err := ctx.Invoke("ovh:CloudProjectDatabase/getKafkaTopic:getKafkaTopic", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaTopic.
type LookupKafkaTopicArgs struct {
	ClusterId   string `pulumi:"clusterId"`
	Id          string `pulumi:"id"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getKafkaTopic.
type LookupKafkaTopicResult struct {
	ClusterId         string `pulumi:"clusterId"`
	Id                string `pulumi:"id"`
	MinInsyncReplicas int    `pulumi:"minInsyncReplicas"`
	Name              string `pulumi:"name"`
	Partitions        int    `pulumi:"partitions"`
	Replication       int    `pulumi:"replication"`
	RetentionBytes    int    `pulumi:"retentionBytes"`
	RetentionHours    int    `pulumi:"retentionHours"`
	ServiceName       string `pulumi:"serviceName"`
}

func LookupKafkaTopicOutput(ctx *pulumi.Context, args LookupKafkaTopicOutputArgs, opts ...pulumi.InvokeOption) LookupKafkaTopicResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupKafkaTopicResultOutput, error) {
			args := v.(LookupKafkaTopicArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProjectDatabase/getKafkaTopic:getKafkaTopic", args, LookupKafkaTopicResultOutput{}, options).(LookupKafkaTopicResultOutput), nil
		}).(LookupKafkaTopicResultOutput)
}

// A collection of arguments for invoking getKafkaTopic.
type LookupKafkaTopicOutputArgs struct {
	ClusterId   pulumi.StringInput `pulumi:"clusterId"`
	Id          pulumi.StringInput `pulumi:"id"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupKafkaTopicOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaTopicArgs)(nil)).Elem()
}

// A collection of values returned by getKafkaTopic.
type LookupKafkaTopicResultOutput struct{ *pulumi.OutputState }

func (LookupKafkaTopicResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupKafkaTopicResult)(nil)).Elem()
}

func (o LookupKafkaTopicResultOutput) ToLookupKafkaTopicResultOutput() LookupKafkaTopicResultOutput {
	return o
}

func (o LookupKafkaTopicResultOutput) ToLookupKafkaTopicResultOutputWithContext(ctx context.Context) LookupKafkaTopicResultOutput {
	return o
}

func (o LookupKafkaTopicResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaTopicResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o LookupKafkaTopicResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaTopicResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupKafkaTopicResultOutput) MinInsyncReplicas() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKafkaTopicResult) int { return v.MinInsyncReplicas }).(pulumi.IntOutput)
}

func (o LookupKafkaTopicResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaTopicResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupKafkaTopicResultOutput) Partitions() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKafkaTopicResult) int { return v.Partitions }).(pulumi.IntOutput)
}

func (o LookupKafkaTopicResultOutput) Replication() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKafkaTopicResult) int { return v.Replication }).(pulumi.IntOutput)
}

func (o LookupKafkaTopicResultOutput) RetentionBytes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKafkaTopicResult) int { return v.RetentionBytes }).(pulumi.IntOutput)
}

func (o LookupKafkaTopicResultOutput) RetentionHours() pulumi.IntOutput {
	return o.ApplyT(func(v LookupKafkaTopicResult) int { return v.RetentionHours }).(pulumi.IntOutput)
}

func (o LookupKafkaTopicResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupKafkaTopicResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupKafkaTopicResultOutput{})
}
