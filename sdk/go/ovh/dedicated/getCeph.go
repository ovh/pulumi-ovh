// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicated

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCeph(ctx *pulumi.Context, args *GetCephArgs, opts ...pulumi.InvokeOption) (*GetCephResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCephResult
	err := ctx.Invoke("ovh:Dedicated/getCeph:getCeph", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCeph.
type GetCephArgs struct {
	CephVersion *string `pulumi:"cephVersion"`
	ServiceName string  `pulumi:"serviceName"`
	Status      *string `pulumi:"status"`
}

// A collection of values returned by getCeph.
type GetCephResult struct {
	CephURN       string   `pulumi:"CephURN"`
	CephMons      []string `pulumi:"cephMons"`
	CephVersion   string   `pulumi:"cephVersion"`
	CrushTunables string   `pulumi:"crushTunables"`
	// The provider-assigned unique ID for this managed resource.
	Id          string  `pulumi:"id"`
	Label       string  `pulumi:"label"`
	Region      string  `pulumi:"region"`
	ServiceName string  `pulumi:"serviceName"`
	Size        float64 `pulumi:"size"`
	State       string  `pulumi:"state"`
	Status      string  `pulumi:"status"`
}

func GetCephOutput(ctx *pulumi.Context, args GetCephOutputArgs, opts ...pulumi.InvokeOption) GetCephResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCephResultOutput, error) {
			args := v.(GetCephArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:Dedicated/getCeph:getCeph", args, GetCephResultOutput{}, options).(GetCephResultOutput), nil
		}).(GetCephResultOutput)
}

// A collection of arguments for invoking getCeph.
type GetCephOutputArgs struct {
	CephVersion pulumi.StringPtrInput `pulumi:"cephVersion"`
	ServiceName pulumi.StringInput    `pulumi:"serviceName"`
	Status      pulumi.StringPtrInput `pulumi:"status"`
}

func (GetCephOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCephArgs)(nil)).Elem()
}

// A collection of values returned by getCeph.
type GetCephResultOutput struct{ *pulumi.OutputState }

func (GetCephResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCephResult)(nil)).Elem()
}

func (o GetCephResultOutput) ToGetCephResultOutput() GetCephResultOutput {
	return o
}

func (o GetCephResultOutput) ToGetCephResultOutputWithContext(ctx context.Context) GetCephResultOutput {
	return o
}

func (o GetCephResultOutput) CephURN() pulumi.StringOutput {
	return o.ApplyT(func(v GetCephResult) string { return v.CephURN }).(pulumi.StringOutput)
}

func (o GetCephResultOutput) CephMons() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetCephResult) []string { return v.CephMons }).(pulumi.StringArrayOutput)
}

func (o GetCephResultOutput) CephVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCephResult) string { return v.CephVersion }).(pulumi.StringOutput)
}

func (o GetCephResultOutput) CrushTunables() pulumi.StringOutput {
	return o.ApplyT(func(v GetCephResult) string { return v.CrushTunables }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCephResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCephResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCephResultOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v GetCephResult) string { return v.Label }).(pulumi.StringOutput)
}

func (o GetCephResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCephResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetCephResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCephResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetCephResultOutput) Size() pulumi.Float64Output {
	return o.ApplyT(func(v GetCephResult) float64 { return v.Size }).(pulumi.Float64Output)
}

func (o GetCephResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCephResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetCephResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetCephResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCephResultOutput{})
}
