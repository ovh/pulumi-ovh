// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicated

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ServerCustomizations struct {
	// Config Drive UserData
	ConfigDriveUserData *string `pulumi:"configDriveUserData"`
	// Path of the EFI bootloader
	EfiBootloaderPath *string `pulumi:"efiBootloaderPath"`
	// Custom hostname
	Hostname *string `pulumi:"hostname"`
	// Image HTTP Headers
	HttpHeaders map[string]string `pulumi:"httpHeaders"`
	// Image checksum
	ImageCheckSum *string `pulumi:"imageCheckSum"`
	// Checksum type
	ImageCheckSumType *string `pulumi:"imageCheckSumType"`
	// Image Type
	ImageType *string `pulumi:"imageType"`
	// Image URL
	ImageUrl *string `pulumi:"imageUrl"`
	// Display Language
	Language *string `pulumi:"language"`
	// Post-Installation Script
	PostInstallationScript *string `pulumi:"postInstallationScript"`
	// Post-Installation Script File Extension
	PostInstallationScriptExtension *string `pulumi:"postInstallationScriptExtension"`
	// SSH Public Key
	SshKey *string `pulumi:"sshKey"`
}

// ServerCustomizationsInput is an input type that accepts ServerCustomizationsArgs and ServerCustomizationsOutput values.
// You can construct a concrete instance of `ServerCustomizationsInput` via:
//
//	ServerCustomizationsArgs{...}
type ServerCustomizationsInput interface {
	pulumi.Input

	ToServerCustomizationsOutput() ServerCustomizationsOutput
	ToServerCustomizationsOutputWithContext(context.Context) ServerCustomizationsOutput
}

type ServerCustomizationsArgs struct {
	// Config Drive UserData
	ConfigDriveUserData pulumi.StringPtrInput `pulumi:"configDriveUserData"`
	// Path of the EFI bootloader
	EfiBootloaderPath pulumi.StringPtrInput `pulumi:"efiBootloaderPath"`
	// Custom hostname
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// Image HTTP Headers
	HttpHeaders pulumi.StringMapInput `pulumi:"httpHeaders"`
	// Image checksum
	ImageCheckSum pulumi.StringPtrInput `pulumi:"imageCheckSum"`
	// Checksum type
	ImageCheckSumType pulumi.StringPtrInput `pulumi:"imageCheckSumType"`
	// Image Type
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// Image URL
	ImageUrl pulumi.StringPtrInput `pulumi:"imageUrl"`
	// Display Language
	Language pulumi.StringPtrInput `pulumi:"language"`
	// Post-Installation Script
	PostInstallationScript pulumi.StringPtrInput `pulumi:"postInstallationScript"`
	// Post-Installation Script File Extension
	PostInstallationScriptExtension pulumi.StringPtrInput `pulumi:"postInstallationScriptExtension"`
	// SSH Public Key
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
}

func (ServerCustomizationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerCustomizations)(nil)).Elem()
}

func (i ServerCustomizationsArgs) ToServerCustomizationsOutput() ServerCustomizationsOutput {
	return i.ToServerCustomizationsOutputWithContext(context.Background())
}

func (i ServerCustomizationsArgs) ToServerCustomizationsOutputWithContext(ctx context.Context) ServerCustomizationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerCustomizationsOutput)
}

func (i ServerCustomizationsArgs) ToServerCustomizationsPtrOutput() ServerCustomizationsPtrOutput {
	return i.ToServerCustomizationsPtrOutputWithContext(context.Background())
}

func (i ServerCustomizationsArgs) ToServerCustomizationsPtrOutputWithContext(ctx context.Context) ServerCustomizationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerCustomizationsOutput).ToServerCustomizationsPtrOutputWithContext(ctx)
}

// ServerCustomizationsPtrInput is an input type that accepts ServerCustomizationsArgs, ServerCustomizationsPtr and ServerCustomizationsPtrOutput values.
// You can construct a concrete instance of `ServerCustomizationsPtrInput` via:
//
//	        ServerCustomizationsArgs{...}
//
//	or:
//
//	        nil
type ServerCustomizationsPtrInput interface {
	pulumi.Input

	ToServerCustomizationsPtrOutput() ServerCustomizationsPtrOutput
	ToServerCustomizationsPtrOutputWithContext(context.Context) ServerCustomizationsPtrOutput
}

type serverCustomizationsPtrType ServerCustomizationsArgs

func ServerCustomizationsPtr(v *ServerCustomizationsArgs) ServerCustomizationsPtrInput {
	return (*serverCustomizationsPtrType)(v)
}

func (*serverCustomizationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerCustomizations)(nil)).Elem()
}

func (i *serverCustomizationsPtrType) ToServerCustomizationsPtrOutput() ServerCustomizationsPtrOutput {
	return i.ToServerCustomizationsPtrOutputWithContext(context.Background())
}

func (i *serverCustomizationsPtrType) ToServerCustomizationsPtrOutputWithContext(ctx context.Context) ServerCustomizationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerCustomizationsPtrOutput)
}

type ServerCustomizationsOutput struct{ *pulumi.OutputState }

func (ServerCustomizationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerCustomizations)(nil)).Elem()
}

func (o ServerCustomizationsOutput) ToServerCustomizationsOutput() ServerCustomizationsOutput {
	return o
}

func (o ServerCustomizationsOutput) ToServerCustomizationsOutputWithContext(ctx context.Context) ServerCustomizationsOutput {
	return o
}

func (o ServerCustomizationsOutput) ToServerCustomizationsPtrOutput() ServerCustomizationsPtrOutput {
	return o.ToServerCustomizationsPtrOutputWithContext(context.Background())
}

func (o ServerCustomizationsOutput) ToServerCustomizationsPtrOutputWithContext(ctx context.Context) ServerCustomizationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerCustomizations) *ServerCustomizations {
		return &v
	}).(ServerCustomizationsPtrOutput)
}

// Config Drive UserData
func (o ServerCustomizationsOutput) ConfigDriveUserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.ConfigDriveUserData }).(pulumi.StringPtrOutput)
}

// Path of the EFI bootloader
func (o ServerCustomizationsOutput) EfiBootloaderPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.EfiBootloaderPath }).(pulumi.StringPtrOutput)
}

// Custom hostname
func (o ServerCustomizationsOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Image HTTP Headers
func (o ServerCustomizationsOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServerCustomizations) map[string]string { return v.HttpHeaders }).(pulumi.StringMapOutput)
}

// Image checksum
func (o ServerCustomizationsOutput) ImageCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.ImageCheckSum }).(pulumi.StringPtrOutput)
}

// Checksum type
func (o ServerCustomizationsOutput) ImageCheckSumType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.ImageCheckSumType }).(pulumi.StringPtrOutput)
}

// Image Type
func (o ServerCustomizationsOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// Image URL
func (o ServerCustomizationsOutput) ImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.ImageUrl }).(pulumi.StringPtrOutput)
}

// Display Language
func (o ServerCustomizationsOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// Post-Installation Script
func (o ServerCustomizationsOutput) PostInstallationScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.PostInstallationScript }).(pulumi.StringPtrOutput)
}

// Post-Installation Script File Extension
func (o ServerCustomizationsOutput) PostInstallationScriptExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.PostInstallationScriptExtension }).(pulumi.StringPtrOutput)
}

// SSH Public Key
func (o ServerCustomizationsOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerCustomizations) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

type ServerCustomizationsPtrOutput struct{ *pulumi.OutputState }

func (ServerCustomizationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerCustomizations)(nil)).Elem()
}

func (o ServerCustomizationsPtrOutput) ToServerCustomizationsPtrOutput() ServerCustomizationsPtrOutput {
	return o
}

func (o ServerCustomizationsPtrOutput) ToServerCustomizationsPtrOutputWithContext(ctx context.Context) ServerCustomizationsPtrOutput {
	return o
}

func (o ServerCustomizationsPtrOutput) Elem() ServerCustomizationsOutput {
	return o.ApplyT(func(v *ServerCustomizations) ServerCustomizations {
		if v != nil {
			return *v
		}
		var ret ServerCustomizations
		return ret
	}).(ServerCustomizationsOutput)
}

// Config Drive UserData
func (o ServerCustomizationsPtrOutput) ConfigDriveUserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ConfigDriveUserData
	}).(pulumi.StringPtrOutput)
}

// Path of the EFI bootloader
func (o ServerCustomizationsPtrOutput) EfiBootloaderPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.EfiBootloaderPath
	}).(pulumi.StringPtrOutput)
}

// Custom hostname
func (o ServerCustomizationsPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// Image HTTP Headers
func (o ServerCustomizationsPtrOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerCustomizations) map[string]string {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(pulumi.StringMapOutput)
}

// Image checksum
func (o ServerCustomizationsPtrOutput) ImageCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ImageCheckSum
	}).(pulumi.StringPtrOutput)
}

// Checksum type
func (o ServerCustomizationsPtrOutput) ImageCheckSumType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ImageCheckSumType
	}).(pulumi.StringPtrOutput)
}

// Image Type
func (o ServerCustomizationsPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// Image URL
func (o ServerCustomizationsPtrOutput) ImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ImageUrl
	}).(pulumi.StringPtrOutput)
}

// Display Language
func (o ServerCustomizationsPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

// Post-Installation Script
func (o ServerCustomizationsPtrOutput) PostInstallationScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.PostInstallationScript
	}).(pulumi.StringPtrOutput)
}

// Post-Installation Script File Extension
func (o ServerCustomizationsPtrOutput) PostInstallationScriptExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.PostInstallationScriptExtension
	}).(pulumi.StringPtrOutput)
}

// SSH Public Key
func (o ServerCustomizationsPtrOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.SshKey
	}).(pulumi.StringPtrOutput)
}

type ServerIam struct {
	// Resource display name
	DisplayName *string `pulumi:"displayName"`
	// Unique identifier of the resource in the IAM
	Id *string `pulumi:"id"`
	// Resource tags. Tags that were internally computed are prefixed with `ovh:`
	Tags map[string]string `pulumi:"tags"`
	// URN of the private database, used when writing IAM policies
	Urn *string `pulumi:"urn"`
}

// ServerIamInput is an input type that accepts ServerIamArgs and ServerIamOutput values.
// You can construct a concrete instance of `ServerIamInput` via:
//
//	ServerIamArgs{...}
type ServerIamInput interface {
	pulumi.Input

	ToServerIamOutput() ServerIamOutput
	ToServerIamOutputWithContext(context.Context) ServerIamOutput
}

type ServerIamArgs struct {
	// Resource display name
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// Unique identifier of the resource in the IAM
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Resource tags. Tags that were internally computed are prefixed with `ovh:`
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// URN of the private database, used when writing IAM policies
	Urn pulumi.StringPtrInput `pulumi:"urn"`
}

func (ServerIamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIam)(nil)).Elem()
}

func (i ServerIamArgs) ToServerIamOutput() ServerIamOutput {
	return i.ToServerIamOutputWithContext(context.Background())
}

func (i ServerIamArgs) ToServerIamOutputWithContext(ctx context.Context) ServerIamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIamOutput)
}

func (i ServerIamArgs) ToServerIamPtrOutput() ServerIamPtrOutput {
	return i.ToServerIamPtrOutputWithContext(context.Background())
}

func (i ServerIamArgs) ToServerIamPtrOutputWithContext(ctx context.Context) ServerIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIamOutput).ToServerIamPtrOutputWithContext(ctx)
}

// ServerIamPtrInput is an input type that accepts ServerIamArgs, ServerIamPtr and ServerIamPtrOutput values.
// You can construct a concrete instance of `ServerIamPtrInput` via:
//
//	        ServerIamArgs{...}
//
//	or:
//
//	        nil
type ServerIamPtrInput interface {
	pulumi.Input

	ToServerIamPtrOutput() ServerIamPtrOutput
	ToServerIamPtrOutputWithContext(context.Context) ServerIamPtrOutput
}

type serverIamPtrType ServerIamArgs

func ServerIamPtr(v *ServerIamArgs) ServerIamPtrInput {
	return (*serverIamPtrType)(v)
}

func (*serverIamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerIam)(nil)).Elem()
}

func (i *serverIamPtrType) ToServerIamPtrOutput() ServerIamPtrOutput {
	return i.ToServerIamPtrOutputWithContext(context.Background())
}

func (i *serverIamPtrType) ToServerIamPtrOutputWithContext(ctx context.Context) ServerIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerIamPtrOutput)
}

type ServerIamOutput struct{ *pulumi.OutputState }

func (ServerIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerIam)(nil)).Elem()
}

func (o ServerIamOutput) ToServerIamOutput() ServerIamOutput {
	return o
}

func (o ServerIamOutput) ToServerIamOutputWithContext(ctx context.Context) ServerIamOutput {
	return o
}

func (o ServerIamOutput) ToServerIamPtrOutput() ServerIamPtrOutput {
	return o.ToServerIamPtrOutputWithContext(context.Background())
}

func (o ServerIamOutput) ToServerIamPtrOutputWithContext(ctx context.Context) ServerIamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerIam) *ServerIam {
		return &v
	}).(ServerIamPtrOutput)
}

// Resource display name
func (o ServerIamOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIam) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the IAM
func (o ServerIamOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIam) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Resource tags. Tags that were internally computed are prefixed with `ovh:`
func (o ServerIamOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServerIam) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// URN of the private database, used when writing IAM policies
func (o ServerIamOutput) Urn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerIam) *string { return v.Urn }).(pulumi.StringPtrOutput)
}

type ServerIamPtrOutput struct{ *pulumi.OutputState }

func (ServerIamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerIam)(nil)).Elem()
}

func (o ServerIamPtrOutput) ToServerIamPtrOutput() ServerIamPtrOutput {
	return o
}

func (o ServerIamPtrOutput) ToServerIamPtrOutputWithContext(ctx context.Context) ServerIamPtrOutput {
	return o
}

func (o ServerIamPtrOutput) Elem() ServerIamOutput {
	return o.ApplyT(func(v *ServerIam) ServerIam {
		if v != nil {
			return *v
		}
		var ret ServerIam
		return ret
	}).(ServerIamOutput)
}

// Resource display name
func (o ServerIamPtrOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIam) *string {
		if v == nil {
			return nil
		}
		return v.DisplayName
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the resource in the IAM
func (o ServerIamPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIam) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// Resource tags. Tags that were internally computed are prefixed with `ovh:`
func (o ServerIamPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerIam) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// URN of the private database, used when writing IAM policies
func (o ServerIamPtrOutput) Urn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerIam) *string {
		if v == nil {
			return nil
		}
		return v.Urn
	}).(pulumi.StringPtrOutput)
}

type ServerNetworkingInterface struct {
	// Interface Mac address
	Macs []string `pulumi:"macs"`
	// Interface type
	Type string `pulumi:"type"`
}

// ServerNetworkingInterfaceInput is an input type that accepts ServerNetworkingInterfaceArgs and ServerNetworkingInterfaceOutput values.
// You can construct a concrete instance of `ServerNetworkingInterfaceInput` via:
//
//	ServerNetworkingInterfaceArgs{...}
type ServerNetworkingInterfaceInput interface {
	pulumi.Input

	ToServerNetworkingInterfaceOutput() ServerNetworkingInterfaceOutput
	ToServerNetworkingInterfaceOutputWithContext(context.Context) ServerNetworkingInterfaceOutput
}

type ServerNetworkingInterfaceArgs struct {
	// Interface Mac address
	Macs pulumi.StringArrayInput `pulumi:"macs"`
	// Interface type
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServerNetworkingInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkingInterface)(nil)).Elem()
}

func (i ServerNetworkingInterfaceArgs) ToServerNetworkingInterfaceOutput() ServerNetworkingInterfaceOutput {
	return i.ToServerNetworkingInterfaceOutputWithContext(context.Background())
}

func (i ServerNetworkingInterfaceArgs) ToServerNetworkingInterfaceOutputWithContext(ctx context.Context) ServerNetworkingInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkingInterfaceOutput)
}

// ServerNetworkingInterfaceArrayInput is an input type that accepts ServerNetworkingInterfaceArray and ServerNetworkingInterfaceArrayOutput values.
// You can construct a concrete instance of `ServerNetworkingInterfaceArrayInput` via:
//
//	ServerNetworkingInterfaceArray{ ServerNetworkingInterfaceArgs{...} }
type ServerNetworkingInterfaceArrayInput interface {
	pulumi.Input

	ToServerNetworkingInterfaceArrayOutput() ServerNetworkingInterfaceArrayOutput
	ToServerNetworkingInterfaceArrayOutputWithContext(context.Context) ServerNetworkingInterfaceArrayOutput
}

type ServerNetworkingInterfaceArray []ServerNetworkingInterfaceInput

func (ServerNetworkingInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkingInterface)(nil)).Elem()
}

func (i ServerNetworkingInterfaceArray) ToServerNetworkingInterfaceArrayOutput() ServerNetworkingInterfaceArrayOutput {
	return i.ToServerNetworkingInterfaceArrayOutputWithContext(context.Background())
}

func (i ServerNetworkingInterfaceArray) ToServerNetworkingInterfaceArrayOutputWithContext(ctx context.Context) ServerNetworkingInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerNetworkingInterfaceArrayOutput)
}

type ServerNetworkingInterfaceOutput struct{ *pulumi.OutputState }

func (ServerNetworkingInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerNetworkingInterface)(nil)).Elem()
}

func (o ServerNetworkingInterfaceOutput) ToServerNetworkingInterfaceOutput() ServerNetworkingInterfaceOutput {
	return o
}

func (o ServerNetworkingInterfaceOutput) ToServerNetworkingInterfaceOutputWithContext(ctx context.Context) ServerNetworkingInterfaceOutput {
	return o
}

// Interface Mac address
func (o ServerNetworkingInterfaceOutput) Macs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerNetworkingInterface) []string { return v.Macs }).(pulumi.StringArrayOutput)
}

// Interface type
func (o ServerNetworkingInterfaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServerNetworkingInterface) string { return v.Type }).(pulumi.StringOutput)
}

type ServerNetworkingInterfaceArrayOutput struct{ *pulumi.OutputState }

func (ServerNetworkingInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerNetworkingInterface)(nil)).Elem()
}

func (o ServerNetworkingInterfaceArrayOutput) ToServerNetworkingInterfaceArrayOutput() ServerNetworkingInterfaceArrayOutput {
	return o
}

func (o ServerNetworkingInterfaceArrayOutput) ToServerNetworkingInterfaceArrayOutputWithContext(ctx context.Context) ServerNetworkingInterfaceArrayOutput {
	return o
}

func (o ServerNetworkingInterfaceArrayOutput) Index(i pulumi.IntInput) ServerNetworkingInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerNetworkingInterface {
		return vs[0].([]ServerNetworkingInterface)[vs[1].(int)]
	}).(ServerNetworkingInterfaceOutput)
}

type ServerOrder struct {
	Date           *string             `pulumi:"date"`
	Details        []ServerOrderDetail `pulumi:"details"`
	ExpirationDate *string             `pulumi:"expirationDate"`
	OrderId        *float64            `pulumi:"orderId"`
}

// ServerOrderInput is an input type that accepts ServerOrderArgs and ServerOrderOutput values.
// You can construct a concrete instance of `ServerOrderInput` via:
//
//	ServerOrderArgs{...}
type ServerOrderInput interface {
	pulumi.Input

	ToServerOrderOutput() ServerOrderOutput
	ToServerOrderOutputWithContext(context.Context) ServerOrderOutput
}

type ServerOrderArgs struct {
	Date           pulumi.StringPtrInput       `pulumi:"date"`
	Details        ServerOrderDetailArrayInput `pulumi:"details"`
	ExpirationDate pulumi.StringPtrInput       `pulumi:"expirationDate"`
	OrderId        pulumi.Float64PtrInput      `pulumi:"orderId"`
}

func (ServerOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerOrder)(nil)).Elem()
}

func (i ServerOrderArgs) ToServerOrderOutput() ServerOrderOutput {
	return i.ToServerOrderOutputWithContext(context.Background())
}

func (i ServerOrderArgs) ToServerOrderOutputWithContext(ctx context.Context) ServerOrderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerOrderOutput)
}

func (i ServerOrderArgs) ToServerOrderPtrOutput() ServerOrderPtrOutput {
	return i.ToServerOrderPtrOutputWithContext(context.Background())
}

func (i ServerOrderArgs) ToServerOrderPtrOutputWithContext(ctx context.Context) ServerOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerOrderOutput).ToServerOrderPtrOutputWithContext(ctx)
}

// ServerOrderPtrInput is an input type that accepts ServerOrderArgs, ServerOrderPtr and ServerOrderPtrOutput values.
// You can construct a concrete instance of `ServerOrderPtrInput` via:
//
//	        ServerOrderArgs{...}
//
//	or:
//
//	        nil
type ServerOrderPtrInput interface {
	pulumi.Input

	ToServerOrderPtrOutput() ServerOrderPtrOutput
	ToServerOrderPtrOutputWithContext(context.Context) ServerOrderPtrOutput
}

type serverOrderPtrType ServerOrderArgs

func ServerOrderPtr(v *ServerOrderArgs) ServerOrderPtrInput {
	return (*serverOrderPtrType)(v)
}

func (*serverOrderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerOrder)(nil)).Elem()
}

func (i *serverOrderPtrType) ToServerOrderPtrOutput() ServerOrderPtrOutput {
	return i.ToServerOrderPtrOutputWithContext(context.Background())
}

func (i *serverOrderPtrType) ToServerOrderPtrOutputWithContext(ctx context.Context) ServerOrderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerOrderPtrOutput)
}

type ServerOrderOutput struct{ *pulumi.OutputState }

func (ServerOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerOrder)(nil)).Elem()
}

func (o ServerOrderOutput) ToServerOrderOutput() ServerOrderOutput {
	return o
}

func (o ServerOrderOutput) ToServerOrderOutputWithContext(ctx context.Context) ServerOrderOutput {
	return o
}

func (o ServerOrderOutput) ToServerOrderPtrOutput() ServerOrderPtrOutput {
	return o.ToServerOrderPtrOutputWithContext(context.Background())
}

func (o ServerOrderOutput) ToServerOrderPtrOutputWithContext(ctx context.Context) ServerOrderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerOrder) *ServerOrder {
		return &v
	}).(ServerOrderPtrOutput)
}

func (o ServerOrderOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerOrder) *string { return v.Date }).(pulumi.StringPtrOutput)
}

func (o ServerOrderOutput) Details() ServerOrderDetailArrayOutput {
	return o.ApplyT(func(v ServerOrder) []ServerOrderDetail { return v.Details }).(ServerOrderDetailArrayOutput)
}

func (o ServerOrderOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerOrder) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

func (o ServerOrderOutput) OrderId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerOrder) *float64 { return v.OrderId }).(pulumi.Float64PtrOutput)
}

type ServerOrderPtrOutput struct{ *pulumi.OutputState }

func (ServerOrderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerOrder)(nil)).Elem()
}

func (o ServerOrderPtrOutput) ToServerOrderPtrOutput() ServerOrderPtrOutput {
	return o
}

func (o ServerOrderPtrOutput) ToServerOrderPtrOutputWithContext(ctx context.Context) ServerOrderPtrOutput {
	return o
}

func (o ServerOrderPtrOutput) Elem() ServerOrderOutput {
	return o.ApplyT(func(v *ServerOrder) ServerOrder {
		if v != nil {
			return *v
		}
		var ret ServerOrder
		return ret
	}).(ServerOrderOutput)
}

func (o ServerOrderPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerOrder) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

func (o ServerOrderPtrOutput) Details() ServerOrderDetailArrayOutput {
	return o.ApplyT(func(v *ServerOrder) []ServerOrderDetail {
		if v == nil {
			return nil
		}
		return v.Details
	}).(ServerOrderDetailArrayOutput)
}

func (o ServerOrderPtrOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerOrder) *string {
		if v == nil {
			return nil
		}
		return v.ExpirationDate
	}).(pulumi.StringPtrOutput)
}

func (o ServerOrderPtrOutput) OrderId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServerOrder) *float64 {
		if v == nil {
			return nil
		}
		return v.OrderId
	}).(pulumi.Float64PtrOutput)
}

type ServerOrderDetail struct {
	Description *string `pulumi:"description"`
	// Product type of item in order
	DetailType    *string  `pulumi:"detailType"`
	Domain        *string  `pulumi:"domain"`
	OrderDetailId *float64 `pulumi:"orderDetailId"`
	Quantity      *string  `pulumi:"quantity"`
}

// ServerOrderDetailInput is an input type that accepts ServerOrderDetailArgs and ServerOrderDetailOutput values.
// You can construct a concrete instance of `ServerOrderDetailInput` via:
//
//	ServerOrderDetailArgs{...}
type ServerOrderDetailInput interface {
	pulumi.Input

	ToServerOrderDetailOutput() ServerOrderDetailOutput
	ToServerOrderDetailOutputWithContext(context.Context) ServerOrderDetailOutput
}

type ServerOrderDetailArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Product type of item in order
	DetailType    pulumi.StringPtrInput  `pulumi:"detailType"`
	Domain        pulumi.StringPtrInput  `pulumi:"domain"`
	OrderDetailId pulumi.Float64PtrInput `pulumi:"orderDetailId"`
	Quantity      pulumi.StringPtrInput  `pulumi:"quantity"`
}

func (ServerOrderDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerOrderDetail)(nil)).Elem()
}

func (i ServerOrderDetailArgs) ToServerOrderDetailOutput() ServerOrderDetailOutput {
	return i.ToServerOrderDetailOutputWithContext(context.Background())
}

func (i ServerOrderDetailArgs) ToServerOrderDetailOutputWithContext(ctx context.Context) ServerOrderDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerOrderDetailOutput)
}

// ServerOrderDetailArrayInput is an input type that accepts ServerOrderDetailArray and ServerOrderDetailArrayOutput values.
// You can construct a concrete instance of `ServerOrderDetailArrayInput` via:
//
//	ServerOrderDetailArray{ ServerOrderDetailArgs{...} }
type ServerOrderDetailArrayInput interface {
	pulumi.Input

	ToServerOrderDetailArrayOutput() ServerOrderDetailArrayOutput
	ToServerOrderDetailArrayOutputWithContext(context.Context) ServerOrderDetailArrayOutput
}

type ServerOrderDetailArray []ServerOrderDetailInput

func (ServerOrderDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerOrderDetail)(nil)).Elem()
}

func (i ServerOrderDetailArray) ToServerOrderDetailArrayOutput() ServerOrderDetailArrayOutput {
	return i.ToServerOrderDetailArrayOutputWithContext(context.Background())
}

func (i ServerOrderDetailArray) ToServerOrderDetailArrayOutputWithContext(ctx context.Context) ServerOrderDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerOrderDetailArrayOutput)
}

type ServerOrderDetailOutput struct{ *pulumi.OutputState }

func (ServerOrderDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerOrderDetail)(nil)).Elem()
}

func (o ServerOrderDetailOutput) ToServerOrderDetailOutput() ServerOrderDetailOutput {
	return o
}

func (o ServerOrderDetailOutput) ToServerOrderDetailOutputWithContext(ctx context.Context) ServerOrderDetailOutput {
	return o
}

func (o ServerOrderDetailOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerOrderDetail) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Product type of item in order
func (o ServerOrderDetailOutput) DetailType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerOrderDetail) *string { return v.DetailType }).(pulumi.StringPtrOutput)
}

func (o ServerOrderDetailOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerOrderDetail) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

func (o ServerOrderDetailOutput) OrderDetailId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerOrderDetail) *float64 { return v.OrderDetailId }).(pulumi.Float64PtrOutput)
}

func (o ServerOrderDetailOutput) Quantity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerOrderDetail) *string { return v.Quantity }).(pulumi.StringPtrOutput)
}

type ServerOrderDetailArrayOutput struct{ *pulumi.OutputState }

func (ServerOrderDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerOrderDetail)(nil)).Elem()
}

func (o ServerOrderDetailArrayOutput) ToServerOrderDetailArrayOutput() ServerOrderDetailArrayOutput {
	return o
}

func (o ServerOrderDetailArrayOutput) ToServerOrderDetailArrayOutputWithContext(ctx context.Context) ServerOrderDetailArrayOutput {
	return o
}

func (o ServerOrderDetailArrayOutput) Index(i pulumi.IntInput) ServerOrderDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerOrderDetail {
		return vs[0].([]ServerOrderDetail)[vs[1].(int)]
	}).(ServerOrderDetailOutput)
}

type ServerPlan struct {
	Configurations []ServerPlanConfiguration `pulumi:"configurations"`
	// Duration selected for the purchase of the product
	Duration string `pulumi:"duration"`
	// Cart item to be linked
	ItemId *float64 `pulumi:"itemId"`
	// Identifier of the option offer
	PlanCode string `pulumi:"planCode"`
	// Pricing mode selected for the purchase of the product
	PricingMode string `pulumi:"pricingMode"`
	// Quantity of product desired
	Quantity *float64 `pulumi:"quantity"`
}

// ServerPlanInput is an input type that accepts ServerPlanArgs and ServerPlanOutput values.
// You can construct a concrete instance of `ServerPlanInput` via:
//
//	ServerPlanArgs{...}
type ServerPlanInput interface {
	pulumi.Input

	ToServerPlanOutput() ServerPlanOutput
	ToServerPlanOutputWithContext(context.Context) ServerPlanOutput
}

type ServerPlanArgs struct {
	Configurations ServerPlanConfigurationArrayInput `pulumi:"configurations"`
	// Duration selected for the purchase of the product
	Duration pulumi.StringInput `pulumi:"duration"`
	// Cart item to be linked
	ItemId pulumi.Float64PtrInput `pulumi:"itemId"`
	// Identifier of the option offer
	PlanCode pulumi.StringInput `pulumi:"planCode"`
	// Pricing mode selected for the purchase of the product
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
	// Quantity of product desired
	Quantity pulumi.Float64PtrInput `pulumi:"quantity"`
}

func (ServerPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPlan)(nil)).Elem()
}

func (i ServerPlanArgs) ToServerPlanOutput() ServerPlanOutput {
	return i.ToServerPlanOutputWithContext(context.Background())
}

func (i ServerPlanArgs) ToServerPlanOutputWithContext(ctx context.Context) ServerPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPlanOutput)
}

// ServerPlanArrayInput is an input type that accepts ServerPlanArray and ServerPlanArrayOutput values.
// You can construct a concrete instance of `ServerPlanArrayInput` via:
//
//	ServerPlanArray{ ServerPlanArgs{...} }
type ServerPlanArrayInput interface {
	pulumi.Input

	ToServerPlanArrayOutput() ServerPlanArrayOutput
	ToServerPlanArrayOutputWithContext(context.Context) ServerPlanArrayOutput
}

type ServerPlanArray []ServerPlanInput

func (ServerPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPlan)(nil)).Elem()
}

func (i ServerPlanArray) ToServerPlanArrayOutput() ServerPlanArrayOutput {
	return i.ToServerPlanArrayOutputWithContext(context.Background())
}

func (i ServerPlanArray) ToServerPlanArrayOutputWithContext(ctx context.Context) ServerPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPlanArrayOutput)
}

type ServerPlanOutput struct{ *pulumi.OutputState }

func (ServerPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPlan)(nil)).Elem()
}

func (o ServerPlanOutput) ToServerPlanOutput() ServerPlanOutput {
	return o
}

func (o ServerPlanOutput) ToServerPlanOutputWithContext(ctx context.Context) ServerPlanOutput {
	return o
}

func (o ServerPlanOutput) Configurations() ServerPlanConfigurationArrayOutput {
	return o.ApplyT(func(v ServerPlan) []ServerPlanConfiguration { return v.Configurations }).(ServerPlanConfigurationArrayOutput)
}

// Duration selected for the purchase of the product
func (o ServerPlanOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlan) string { return v.Duration }).(pulumi.StringOutput)
}

// Cart item to be linked
func (o ServerPlanOutput) ItemId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerPlan) *float64 { return v.ItemId }).(pulumi.Float64PtrOutput)
}

// Identifier of the option offer
func (o ServerPlanOutput) PlanCode() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlan) string { return v.PlanCode }).(pulumi.StringOutput)
}

// Pricing mode selected for the purchase of the product
func (o ServerPlanOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlan) string { return v.PricingMode }).(pulumi.StringOutput)
}

// Quantity of product desired
func (o ServerPlanOutput) Quantity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerPlan) *float64 { return v.Quantity }).(pulumi.Float64PtrOutput)
}

type ServerPlanArrayOutput struct{ *pulumi.OutputState }

func (ServerPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPlan)(nil)).Elem()
}

func (o ServerPlanArrayOutput) ToServerPlanArrayOutput() ServerPlanArrayOutput {
	return o
}

func (o ServerPlanArrayOutput) ToServerPlanArrayOutputWithContext(ctx context.Context) ServerPlanArrayOutput {
	return o
}

func (o ServerPlanArrayOutput) Index(i pulumi.IntInput) ServerPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerPlan {
		return vs[0].([]ServerPlan)[vs[1].(int)]
	}).(ServerPlanOutput)
}

type ServerPlanConfiguration struct {
	// Label for your configuration item
	Label string `pulumi:"label"`
	// Value or resource URL on API.OVH.COM of your configuration item
	Value string `pulumi:"value"`
}

// ServerPlanConfigurationInput is an input type that accepts ServerPlanConfigurationArgs and ServerPlanConfigurationOutput values.
// You can construct a concrete instance of `ServerPlanConfigurationInput` via:
//
//	ServerPlanConfigurationArgs{...}
type ServerPlanConfigurationInput interface {
	pulumi.Input

	ToServerPlanConfigurationOutput() ServerPlanConfigurationOutput
	ToServerPlanConfigurationOutputWithContext(context.Context) ServerPlanConfigurationOutput
}

type ServerPlanConfigurationArgs struct {
	// Label for your configuration item
	Label pulumi.StringInput `pulumi:"label"`
	// Value or resource URL on API.OVH.COM of your configuration item
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServerPlanConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPlanConfiguration)(nil)).Elem()
}

func (i ServerPlanConfigurationArgs) ToServerPlanConfigurationOutput() ServerPlanConfigurationOutput {
	return i.ToServerPlanConfigurationOutputWithContext(context.Background())
}

func (i ServerPlanConfigurationArgs) ToServerPlanConfigurationOutputWithContext(ctx context.Context) ServerPlanConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPlanConfigurationOutput)
}

// ServerPlanConfigurationArrayInput is an input type that accepts ServerPlanConfigurationArray and ServerPlanConfigurationArrayOutput values.
// You can construct a concrete instance of `ServerPlanConfigurationArrayInput` via:
//
//	ServerPlanConfigurationArray{ ServerPlanConfigurationArgs{...} }
type ServerPlanConfigurationArrayInput interface {
	pulumi.Input

	ToServerPlanConfigurationArrayOutput() ServerPlanConfigurationArrayOutput
	ToServerPlanConfigurationArrayOutputWithContext(context.Context) ServerPlanConfigurationArrayOutput
}

type ServerPlanConfigurationArray []ServerPlanConfigurationInput

func (ServerPlanConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPlanConfiguration)(nil)).Elem()
}

func (i ServerPlanConfigurationArray) ToServerPlanConfigurationArrayOutput() ServerPlanConfigurationArrayOutput {
	return i.ToServerPlanConfigurationArrayOutputWithContext(context.Background())
}

func (i ServerPlanConfigurationArray) ToServerPlanConfigurationArrayOutputWithContext(ctx context.Context) ServerPlanConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPlanConfigurationArrayOutput)
}

type ServerPlanConfigurationOutput struct{ *pulumi.OutputState }

func (ServerPlanConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPlanConfiguration)(nil)).Elem()
}

func (o ServerPlanConfigurationOutput) ToServerPlanConfigurationOutput() ServerPlanConfigurationOutput {
	return o
}

func (o ServerPlanConfigurationOutput) ToServerPlanConfigurationOutputWithContext(ctx context.Context) ServerPlanConfigurationOutput {
	return o
}

// Label for your configuration item
func (o ServerPlanConfigurationOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlanConfiguration) string { return v.Label }).(pulumi.StringOutput)
}

// Value or resource URL on API.OVH.COM of your configuration item
func (o ServerPlanConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlanConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type ServerPlanConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ServerPlanConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPlanConfiguration)(nil)).Elem()
}

func (o ServerPlanConfigurationArrayOutput) ToServerPlanConfigurationArrayOutput() ServerPlanConfigurationArrayOutput {
	return o
}

func (o ServerPlanConfigurationArrayOutput) ToServerPlanConfigurationArrayOutputWithContext(ctx context.Context) ServerPlanConfigurationArrayOutput {
	return o
}

func (o ServerPlanConfigurationArrayOutput) Index(i pulumi.IntInput) ServerPlanConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerPlanConfiguration {
		return vs[0].([]ServerPlanConfiguration)[vs[1].(int)]
	}).(ServerPlanConfigurationOutput)
}

type ServerPlanOption struct {
	Configurations []ServerPlanOptionConfiguration `pulumi:"configurations"`
	// Duration selected for the purchase of the product
	Duration string `pulumi:"duration"`
	// Identifier of the option offer
	PlanCode string `pulumi:"planCode"`
	// Pricing mode selected for the purchase of the product
	PricingMode string `pulumi:"pricingMode"`
	// Quantity of product desired
	Quantity float64 `pulumi:"quantity"`
}

// ServerPlanOptionInput is an input type that accepts ServerPlanOptionArgs and ServerPlanOptionOutput values.
// You can construct a concrete instance of `ServerPlanOptionInput` via:
//
//	ServerPlanOptionArgs{...}
type ServerPlanOptionInput interface {
	pulumi.Input

	ToServerPlanOptionOutput() ServerPlanOptionOutput
	ToServerPlanOptionOutputWithContext(context.Context) ServerPlanOptionOutput
}

type ServerPlanOptionArgs struct {
	Configurations ServerPlanOptionConfigurationArrayInput `pulumi:"configurations"`
	// Duration selected for the purchase of the product
	Duration pulumi.StringInput `pulumi:"duration"`
	// Identifier of the option offer
	PlanCode pulumi.StringInput `pulumi:"planCode"`
	// Pricing mode selected for the purchase of the product
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
	// Quantity of product desired
	Quantity pulumi.Float64Input `pulumi:"quantity"`
}

func (ServerPlanOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPlanOption)(nil)).Elem()
}

func (i ServerPlanOptionArgs) ToServerPlanOptionOutput() ServerPlanOptionOutput {
	return i.ToServerPlanOptionOutputWithContext(context.Background())
}

func (i ServerPlanOptionArgs) ToServerPlanOptionOutputWithContext(ctx context.Context) ServerPlanOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPlanOptionOutput)
}

// ServerPlanOptionArrayInput is an input type that accepts ServerPlanOptionArray and ServerPlanOptionArrayOutput values.
// You can construct a concrete instance of `ServerPlanOptionArrayInput` via:
//
//	ServerPlanOptionArray{ ServerPlanOptionArgs{...} }
type ServerPlanOptionArrayInput interface {
	pulumi.Input

	ToServerPlanOptionArrayOutput() ServerPlanOptionArrayOutput
	ToServerPlanOptionArrayOutputWithContext(context.Context) ServerPlanOptionArrayOutput
}

type ServerPlanOptionArray []ServerPlanOptionInput

func (ServerPlanOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPlanOption)(nil)).Elem()
}

func (i ServerPlanOptionArray) ToServerPlanOptionArrayOutput() ServerPlanOptionArrayOutput {
	return i.ToServerPlanOptionArrayOutputWithContext(context.Background())
}

func (i ServerPlanOptionArray) ToServerPlanOptionArrayOutputWithContext(ctx context.Context) ServerPlanOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPlanOptionArrayOutput)
}

type ServerPlanOptionOutput struct{ *pulumi.OutputState }

func (ServerPlanOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPlanOption)(nil)).Elem()
}

func (o ServerPlanOptionOutput) ToServerPlanOptionOutput() ServerPlanOptionOutput {
	return o
}

func (o ServerPlanOptionOutput) ToServerPlanOptionOutputWithContext(ctx context.Context) ServerPlanOptionOutput {
	return o
}

func (o ServerPlanOptionOutput) Configurations() ServerPlanOptionConfigurationArrayOutput {
	return o.ApplyT(func(v ServerPlanOption) []ServerPlanOptionConfiguration { return v.Configurations }).(ServerPlanOptionConfigurationArrayOutput)
}

// Duration selected for the purchase of the product
func (o ServerPlanOptionOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlanOption) string { return v.Duration }).(pulumi.StringOutput)
}

// Identifier of the option offer
func (o ServerPlanOptionOutput) PlanCode() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlanOption) string { return v.PlanCode }).(pulumi.StringOutput)
}

// Pricing mode selected for the purchase of the product
func (o ServerPlanOptionOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlanOption) string { return v.PricingMode }).(pulumi.StringOutput)
}

// Quantity of product desired
func (o ServerPlanOptionOutput) Quantity() pulumi.Float64Output {
	return o.ApplyT(func(v ServerPlanOption) float64 { return v.Quantity }).(pulumi.Float64Output)
}

type ServerPlanOptionArrayOutput struct{ *pulumi.OutputState }

func (ServerPlanOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPlanOption)(nil)).Elem()
}

func (o ServerPlanOptionArrayOutput) ToServerPlanOptionArrayOutput() ServerPlanOptionArrayOutput {
	return o
}

func (o ServerPlanOptionArrayOutput) ToServerPlanOptionArrayOutputWithContext(ctx context.Context) ServerPlanOptionArrayOutput {
	return o
}

func (o ServerPlanOptionArrayOutput) Index(i pulumi.IntInput) ServerPlanOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerPlanOption {
		return vs[0].([]ServerPlanOption)[vs[1].(int)]
	}).(ServerPlanOptionOutput)
}

type ServerPlanOptionConfiguration struct {
	// Label for your configuration item
	Label string `pulumi:"label"`
	// Value or resource URL on API.OVH.COM of your configuration item
	Value string `pulumi:"value"`
}

// ServerPlanOptionConfigurationInput is an input type that accepts ServerPlanOptionConfigurationArgs and ServerPlanOptionConfigurationOutput values.
// You can construct a concrete instance of `ServerPlanOptionConfigurationInput` via:
//
//	ServerPlanOptionConfigurationArgs{...}
type ServerPlanOptionConfigurationInput interface {
	pulumi.Input

	ToServerPlanOptionConfigurationOutput() ServerPlanOptionConfigurationOutput
	ToServerPlanOptionConfigurationOutputWithContext(context.Context) ServerPlanOptionConfigurationOutput
}

type ServerPlanOptionConfigurationArgs struct {
	// Label for your configuration item
	Label pulumi.StringInput `pulumi:"label"`
	// Value or resource URL on API.OVH.COM of your configuration item
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServerPlanOptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPlanOptionConfiguration)(nil)).Elem()
}

func (i ServerPlanOptionConfigurationArgs) ToServerPlanOptionConfigurationOutput() ServerPlanOptionConfigurationOutput {
	return i.ToServerPlanOptionConfigurationOutputWithContext(context.Background())
}

func (i ServerPlanOptionConfigurationArgs) ToServerPlanOptionConfigurationOutputWithContext(ctx context.Context) ServerPlanOptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPlanOptionConfigurationOutput)
}

// ServerPlanOptionConfigurationArrayInput is an input type that accepts ServerPlanOptionConfigurationArray and ServerPlanOptionConfigurationArrayOutput values.
// You can construct a concrete instance of `ServerPlanOptionConfigurationArrayInput` via:
//
//	ServerPlanOptionConfigurationArray{ ServerPlanOptionConfigurationArgs{...} }
type ServerPlanOptionConfigurationArrayInput interface {
	pulumi.Input

	ToServerPlanOptionConfigurationArrayOutput() ServerPlanOptionConfigurationArrayOutput
	ToServerPlanOptionConfigurationArrayOutputWithContext(context.Context) ServerPlanOptionConfigurationArrayOutput
}

type ServerPlanOptionConfigurationArray []ServerPlanOptionConfigurationInput

func (ServerPlanOptionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPlanOptionConfiguration)(nil)).Elem()
}

func (i ServerPlanOptionConfigurationArray) ToServerPlanOptionConfigurationArrayOutput() ServerPlanOptionConfigurationArrayOutput {
	return i.ToServerPlanOptionConfigurationArrayOutputWithContext(context.Background())
}

func (i ServerPlanOptionConfigurationArray) ToServerPlanOptionConfigurationArrayOutputWithContext(ctx context.Context) ServerPlanOptionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerPlanOptionConfigurationArrayOutput)
}

type ServerPlanOptionConfigurationOutput struct{ *pulumi.OutputState }

func (ServerPlanOptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerPlanOptionConfiguration)(nil)).Elem()
}

func (o ServerPlanOptionConfigurationOutput) ToServerPlanOptionConfigurationOutput() ServerPlanOptionConfigurationOutput {
	return o
}

func (o ServerPlanOptionConfigurationOutput) ToServerPlanOptionConfigurationOutputWithContext(ctx context.Context) ServerPlanOptionConfigurationOutput {
	return o
}

// Label for your configuration item
func (o ServerPlanOptionConfigurationOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlanOptionConfiguration) string { return v.Label }).(pulumi.StringOutput)
}

// Value or resource URL on API.OVH.COM of your configuration item
func (o ServerPlanOptionConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServerPlanOptionConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type ServerPlanOptionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ServerPlanOptionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerPlanOptionConfiguration)(nil)).Elem()
}

func (o ServerPlanOptionConfigurationArrayOutput) ToServerPlanOptionConfigurationArrayOutput() ServerPlanOptionConfigurationArrayOutput {
	return o
}

func (o ServerPlanOptionConfigurationArrayOutput) ToServerPlanOptionConfigurationArrayOutputWithContext(ctx context.Context) ServerPlanOptionConfigurationArrayOutput {
	return o
}

func (o ServerPlanOptionConfigurationArrayOutput) Index(i pulumi.IntInput) ServerPlanOptionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerPlanOptionConfiguration {
		return vs[0].([]ServerPlanOptionConfiguration)[vs[1].(int)]
	}).(ServerPlanOptionConfigurationOutput)
}

type ServerReinstallTaskCustomizations struct {
	// Config Drive UserData
	ConfigDriveUserData *string `pulumi:"configDriveUserData"`
	// EFI bootloader path
	EfiBootloaderPath *string `pulumi:"efiBootloaderPath"`
	// Custom hostname
	Hostname *string `pulumi:"hostname"`
	// Image HTTP Headers
	HttpHeaders map[string]string `pulumi:"httpHeaders"`
	// Image checksum
	ImageCheckSum *string `pulumi:"imageCheckSum"`
	// Checksum type
	ImageCheckSumType *string `pulumi:"imageCheckSumType"`
	// Image Type
	ImageType *string `pulumi:"imageType"`
	// Image URL
	ImageUrl *string `pulumi:"imageUrl"`
	// Display Language
	Language *string `pulumi:"language"`
	// Post-Installation Script
	PostInstallationScript *string `pulumi:"postInstallationScript"`
	// Post-Installation Script File Extension
	PostInstallationScriptExtension *string `pulumi:"postInstallationScriptExtension"`
	// SSH Public Key
	SshKey *string `pulumi:"sshKey"`
}

// ServerReinstallTaskCustomizationsInput is an input type that accepts ServerReinstallTaskCustomizationsArgs and ServerReinstallTaskCustomizationsOutput values.
// You can construct a concrete instance of `ServerReinstallTaskCustomizationsInput` via:
//
//	ServerReinstallTaskCustomizationsArgs{...}
type ServerReinstallTaskCustomizationsInput interface {
	pulumi.Input

	ToServerReinstallTaskCustomizationsOutput() ServerReinstallTaskCustomizationsOutput
	ToServerReinstallTaskCustomizationsOutputWithContext(context.Context) ServerReinstallTaskCustomizationsOutput
}

type ServerReinstallTaskCustomizationsArgs struct {
	// Config Drive UserData
	ConfigDriveUserData pulumi.StringPtrInput `pulumi:"configDriveUserData"`
	// EFI bootloader path
	EfiBootloaderPath pulumi.StringPtrInput `pulumi:"efiBootloaderPath"`
	// Custom hostname
	Hostname pulumi.StringPtrInput `pulumi:"hostname"`
	// Image HTTP Headers
	HttpHeaders pulumi.StringMapInput `pulumi:"httpHeaders"`
	// Image checksum
	ImageCheckSum pulumi.StringPtrInput `pulumi:"imageCheckSum"`
	// Checksum type
	ImageCheckSumType pulumi.StringPtrInput `pulumi:"imageCheckSumType"`
	// Image Type
	ImageType pulumi.StringPtrInput `pulumi:"imageType"`
	// Image URL
	ImageUrl pulumi.StringPtrInput `pulumi:"imageUrl"`
	// Display Language
	Language pulumi.StringPtrInput `pulumi:"language"`
	// Post-Installation Script
	PostInstallationScript pulumi.StringPtrInput `pulumi:"postInstallationScript"`
	// Post-Installation Script File Extension
	PostInstallationScriptExtension pulumi.StringPtrInput `pulumi:"postInstallationScriptExtension"`
	// SSH Public Key
	SshKey pulumi.StringPtrInput `pulumi:"sshKey"`
}

func (ServerReinstallTaskCustomizationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskCustomizations)(nil)).Elem()
}

func (i ServerReinstallTaskCustomizationsArgs) ToServerReinstallTaskCustomizationsOutput() ServerReinstallTaskCustomizationsOutput {
	return i.ToServerReinstallTaskCustomizationsOutputWithContext(context.Background())
}

func (i ServerReinstallTaskCustomizationsArgs) ToServerReinstallTaskCustomizationsOutputWithContext(ctx context.Context) ServerReinstallTaskCustomizationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskCustomizationsOutput)
}

func (i ServerReinstallTaskCustomizationsArgs) ToServerReinstallTaskCustomizationsPtrOutput() ServerReinstallTaskCustomizationsPtrOutput {
	return i.ToServerReinstallTaskCustomizationsPtrOutputWithContext(context.Background())
}

func (i ServerReinstallTaskCustomizationsArgs) ToServerReinstallTaskCustomizationsPtrOutputWithContext(ctx context.Context) ServerReinstallTaskCustomizationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskCustomizationsOutput).ToServerReinstallTaskCustomizationsPtrOutputWithContext(ctx)
}

// ServerReinstallTaskCustomizationsPtrInput is an input type that accepts ServerReinstallTaskCustomizationsArgs, ServerReinstallTaskCustomizationsPtr and ServerReinstallTaskCustomizationsPtrOutput values.
// You can construct a concrete instance of `ServerReinstallTaskCustomizationsPtrInput` via:
//
//	        ServerReinstallTaskCustomizationsArgs{...}
//
//	or:
//
//	        nil
type ServerReinstallTaskCustomizationsPtrInput interface {
	pulumi.Input

	ToServerReinstallTaskCustomizationsPtrOutput() ServerReinstallTaskCustomizationsPtrOutput
	ToServerReinstallTaskCustomizationsPtrOutputWithContext(context.Context) ServerReinstallTaskCustomizationsPtrOutput
}

type serverReinstallTaskCustomizationsPtrType ServerReinstallTaskCustomizationsArgs

func ServerReinstallTaskCustomizationsPtr(v *ServerReinstallTaskCustomizationsArgs) ServerReinstallTaskCustomizationsPtrInput {
	return (*serverReinstallTaskCustomizationsPtrType)(v)
}

func (*serverReinstallTaskCustomizationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerReinstallTaskCustomizations)(nil)).Elem()
}

func (i *serverReinstallTaskCustomizationsPtrType) ToServerReinstallTaskCustomizationsPtrOutput() ServerReinstallTaskCustomizationsPtrOutput {
	return i.ToServerReinstallTaskCustomizationsPtrOutputWithContext(context.Background())
}

func (i *serverReinstallTaskCustomizationsPtrType) ToServerReinstallTaskCustomizationsPtrOutputWithContext(ctx context.Context) ServerReinstallTaskCustomizationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskCustomizationsPtrOutput)
}

type ServerReinstallTaskCustomizationsOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskCustomizationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskCustomizations)(nil)).Elem()
}

func (o ServerReinstallTaskCustomizationsOutput) ToServerReinstallTaskCustomizationsOutput() ServerReinstallTaskCustomizationsOutput {
	return o
}

func (o ServerReinstallTaskCustomizationsOutput) ToServerReinstallTaskCustomizationsOutputWithContext(ctx context.Context) ServerReinstallTaskCustomizationsOutput {
	return o
}

func (o ServerReinstallTaskCustomizationsOutput) ToServerReinstallTaskCustomizationsPtrOutput() ServerReinstallTaskCustomizationsPtrOutput {
	return o.ToServerReinstallTaskCustomizationsPtrOutputWithContext(context.Background())
}

func (o ServerReinstallTaskCustomizationsOutput) ToServerReinstallTaskCustomizationsPtrOutputWithContext(ctx context.Context) ServerReinstallTaskCustomizationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerReinstallTaskCustomizations) *ServerReinstallTaskCustomizations {
		return &v
	}).(ServerReinstallTaskCustomizationsPtrOutput)
}

// Config Drive UserData
func (o ServerReinstallTaskCustomizationsOutput) ConfigDriveUserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.ConfigDriveUserData }).(pulumi.StringPtrOutput)
}

// EFI bootloader path
func (o ServerReinstallTaskCustomizationsOutput) EfiBootloaderPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.EfiBootloaderPath }).(pulumi.StringPtrOutput)
}

// Custom hostname
func (o ServerReinstallTaskCustomizationsOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.Hostname }).(pulumi.StringPtrOutput)
}

// Image HTTP Headers
func (o ServerReinstallTaskCustomizationsOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) map[string]string { return v.HttpHeaders }).(pulumi.StringMapOutput)
}

// Image checksum
func (o ServerReinstallTaskCustomizationsOutput) ImageCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.ImageCheckSum }).(pulumi.StringPtrOutput)
}

// Checksum type
func (o ServerReinstallTaskCustomizationsOutput) ImageCheckSumType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.ImageCheckSumType }).(pulumi.StringPtrOutput)
}

// Image Type
func (o ServerReinstallTaskCustomizationsOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.ImageType }).(pulumi.StringPtrOutput)
}

// Image URL
func (o ServerReinstallTaskCustomizationsOutput) ImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.ImageUrl }).(pulumi.StringPtrOutput)
}

// Display Language
func (o ServerReinstallTaskCustomizationsOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.Language }).(pulumi.StringPtrOutput)
}

// Post-Installation Script
func (o ServerReinstallTaskCustomizationsOutput) PostInstallationScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.PostInstallationScript }).(pulumi.StringPtrOutput)
}

// Post-Installation Script File Extension
func (o ServerReinstallTaskCustomizationsOutput) PostInstallationScriptExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.PostInstallationScriptExtension }).(pulumi.StringPtrOutput)
}

// SSH Public Key
func (o ServerReinstallTaskCustomizationsOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskCustomizations) *string { return v.SshKey }).(pulumi.StringPtrOutput)
}

type ServerReinstallTaskCustomizationsPtrOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskCustomizationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerReinstallTaskCustomizations)(nil)).Elem()
}

func (o ServerReinstallTaskCustomizationsPtrOutput) ToServerReinstallTaskCustomizationsPtrOutput() ServerReinstallTaskCustomizationsPtrOutput {
	return o
}

func (o ServerReinstallTaskCustomizationsPtrOutput) ToServerReinstallTaskCustomizationsPtrOutputWithContext(ctx context.Context) ServerReinstallTaskCustomizationsPtrOutput {
	return o
}

func (o ServerReinstallTaskCustomizationsPtrOutput) Elem() ServerReinstallTaskCustomizationsOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) ServerReinstallTaskCustomizations {
		if v != nil {
			return *v
		}
		var ret ServerReinstallTaskCustomizations
		return ret
	}).(ServerReinstallTaskCustomizationsOutput)
}

// Config Drive UserData
func (o ServerReinstallTaskCustomizationsPtrOutput) ConfigDriveUserData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ConfigDriveUserData
	}).(pulumi.StringPtrOutput)
}

// EFI bootloader path
func (o ServerReinstallTaskCustomizationsPtrOutput) EfiBootloaderPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.EfiBootloaderPath
	}).(pulumi.StringPtrOutput)
}

// Custom hostname
func (o ServerReinstallTaskCustomizationsPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.Hostname
	}).(pulumi.StringPtrOutput)
}

// Image HTTP Headers
func (o ServerReinstallTaskCustomizationsPtrOutput) HttpHeaders() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) map[string]string {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(pulumi.StringMapOutput)
}

// Image checksum
func (o ServerReinstallTaskCustomizationsPtrOutput) ImageCheckSum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ImageCheckSum
	}).(pulumi.StringPtrOutput)
}

// Checksum type
func (o ServerReinstallTaskCustomizationsPtrOutput) ImageCheckSumType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ImageCheckSumType
	}).(pulumi.StringPtrOutput)
}

// Image Type
func (o ServerReinstallTaskCustomizationsPtrOutput) ImageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ImageType
	}).(pulumi.StringPtrOutput)
}

// Image URL
func (o ServerReinstallTaskCustomizationsPtrOutput) ImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.ImageUrl
	}).(pulumi.StringPtrOutput)
}

// Display Language
func (o ServerReinstallTaskCustomizationsPtrOutput) Language() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.Language
	}).(pulumi.StringPtrOutput)
}

// Post-Installation Script
func (o ServerReinstallTaskCustomizationsPtrOutput) PostInstallationScript() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.PostInstallationScript
	}).(pulumi.StringPtrOutput)
}

// Post-Installation Script File Extension
func (o ServerReinstallTaskCustomizationsPtrOutput) PostInstallationScriptExtension() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.PostInstallationScriptExtension
	}).(pulumi.StringPtrOutput)
}

// SSH Public Key
func (o ServerReinstallTaskCustomizationsPtrOutput) SshKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerReinstallTaskCustomizations) *string {
		if v == nil {
			return nil
		}
		return v.SshKey
	}).(pulumi.StringPtrOutput)
}

type ServerReinstallTaskStorage struct {
	// Disk group id to install the OS to (default is 0, meaning automatic).
	DiskGroupId *int `pulumi:"diskGroupId"`
	// Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode).
	HardwareRaids []ServerReinstallTaskStorageHardwareRaid `pulumi:"hardwareRaids"`
	// Partitioning configuration
	Partitionings []ServerReinstallTaskStoragePartitioning `pulumi:"partitionings"`
}

// ServerReinstallTaskStorageInput is an input type that accepts ServerReinstallTaskStorageArgs and ServerReinstallTaskStorageOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStorageInput` via:
//
//	ServerReinstallTaskStorageArgs{...}
type ServerReinstallTaskStorageInput interface {
	pulumi.Input

	ToServerReinstallTaskStorageOutput() ServerReinstallTaskStorageOutput
	ToServerReinstallTaskStorageOutputWithContext(context.Context) ServerReinstallTaskStorageOutput
}

type ServerReinstallTaskStorageArgs struct {
	// Disk group id to install the OS to (default is 0, meaning automatic).
	DiskGroupId pulumi.IntPtrInput `pulumi:"diskGroupId"`
	// Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode).
	HardwareRaids ServerReinstallTaskStorageHardwareRaidArrayInput `pulumi:"hardwareRaids"`
	// Partitioning configuration
	Partitionings ServerReinstallTaskStoragePartitioningArrayInput `pulumi:"partitionings"`
}

func (ServerReinstallTaskStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStorage)(nil)).Elem()
}

func (i ServerReinstallTaskStorageArgs) ToServerReinstallTaskStorageOutput() ServerReinstallTaskStorageOutput {
	return i.ToServerReinstallTaskStorageOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStorageArgs) ToServerReinstallTaskStorageOutputWithContext(ctx context.Context) ServerReinstallTaskStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStorageOutput)
}

// ServerReinstallTaskStorageArrayInput is an input type that accepts ServerReinstallTaskStorageArray and ServerReinstallTaskStorageArrayOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStorageArrayInput` via:
//
//	ServerReinstallTaskStorageArray{ ServerReinstallTaskStorageArgs{...} }
type ServerReinstallTaskStorageArrayInput interface {
	pulumi.Input

	ToServerReinstallTaskStorageArrayOutput() ServerReinstallTaskStorageArrayOutput
	ToServerReinstallTaskStorageArrayOutputWithContext(context.Context) ServerReinstallTaskStorageArrayOutput
}

type ServerReinstallTaskStorageArray []ServerReinstallTaskStorageInput

func (ServerReinstallTaskStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStorage)(nil)).Elem()
}

func (i ServerReinstallTaskStorageArray) ToServerReinstallTaskStorageArrayOutput() ServerReinstallTaskStorageArrayOutput {
	return i.ToServerReinstallTaskStorageArrayOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStorageArray) ToServerReinstallTaskStorageArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStorageArrayOutput)
}

type ServerReinstallTaskStorageOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStorage)(nil)).Elem()
}

func (o ServerReinstallTaskStorageOutput) ToServerReinstallTaskStorageOutput() ServerReinstallTaskStorageOutput {
	return o
}

func (o ServerReinstallTaskStorageOutput) ToServerReinstallTaskStorageOutputWithContext(ctx context.Context) ServerReinstallTaskStorageOutput {
	return o
}

// Disk group id to install the OS to (default is 0, meaning automatic).
func (o ServerReinstallTaskStorageOutput) DiskGroupId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStorage) *int { return v.DiskGroupId }).(pulumi.IntPtrOutput)
}

// Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode).
func (o ServerReinstallTaskStorageOutput) HardwareRaids() ServerReinstallTaskStorageHardwareRaidArrayOutput {
	return o.ApplyT(func(v ServerReinstallTaskStorage) []ServerReinstallTaskStorageHardwareRaid { return v.HardwareRaids }).(ServerReinstallTaskStorageHardwareRaidArrayOutput)
}

// Partitioning configuration
func (o ServerReinstallTaskStorageOutput) Partitionings() ServerReinstallTaskStoragePartitioningArrayOutput {
	return o.ApplyT(func(v ServerReinstallTaskStorage) []ServerReinstallTaskStoragePartitioning { return v.Partitionings }).(ServerReinstallTaskStoragePartitioningArrayOutput)
}

type ServerReinstallTaskStorageArrayOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStorage)(nil)).Elem()
}

func (o ServerReinstallTaskStorageArrayOutput) ToServerReinstallTaskStorageArrayOutput() ServerReinstallTaskStorageArrayOutput {
	return o
}

func (o ServerReinstallTaskStorageArrayOutput) ToServerReinstallTaskStorageArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStorageArrayOutput {
	return o
}

func (o ServerReinstallTaskStorageArrayOutput) Index(i pulumi.IntInput) ServerReinstallTaskStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerReinstallTaskStorage {
		return vs[0].([]ServerReinstallTaskStorage)[vs[1].(int)]
	}).(ServerReinstallTaskStorageOutput)
}

type ServerReinstallTaskStorageHardwareRaid struct {
	// Number of arrays (default is 1)
	Arrays *int `pulumi:"arrays"`
	// Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)
	Disks *int `pulumi:"disks"`
	// Hardware raid type (default is 1)
	RaidLevel *int `pulumi:"raidLevel"`
	// Number of disks in the disk group involved in the spare (default is 0)
	Spares *int `pulumi:"spares"`
}

// ServerReinstallTaskStorageHardwareRaidInput is an input type that accepts ServerReinstallTaskStorageHardwareRaidArgs and ServerReinstallTaskStorageHardwareRaidOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStorageHardwareRaidInput` via:
//
//	ServerReinstallTaskStorageHardwareRaidArgs{...}
type ServerReinstallTaskStorageHardwareRaidInput interface {
	pulumi.Input

	ToServerReinstallTaskStorageHardwareRaidOutput() ServerReinstallTaskStorageHardwareRaidOutput
	ToServerReinstallTaskStorageHardwareRaidOutputWithContext(context.Context) ServerReinstallTaskStorageHardwareRaidOutput
}

type ServerReinstallTaskStorageHardwareRaidArgs struct {
	// Number of arrays (default is 1)
	Arrays pulumi.IntPtrInput `pulumi:"arrays"`
	// Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)
	Disks pulumi.IntPtrInput `pulumi:"disks"`
	// Hardware raid type (default is 1)
	RaidLevel pulumi.IntPtrInput `pulumi:"raidLevel"`
	// Number of disks in the disk group involved in the spare (default is 0)
	Spares pulumi.IntPtrInput `pulumi:"spares"`
}

func (ServerReinstallTaskStorageHardwareRaidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStorageHardwareRaid)(nil)).Elem()
}

func (i ServerReinstallTaskStorageHardwareRaidArgs) ToServerReinstallTaskStorageHardwareRaidOutput() ServerReinstallTaskStorageHardwareRaidOutput {
	return i.ToServerReinstallTaskStorageHardwareRaidOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStorageHardwareRaidArgs) ToServerReinstallTaskStorageHardwareRaidOutputWithContext(ctx context.Context) ServerReinstallTaskStorageHardwareRaidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStorageHardwareRaidOutput)
}

// ServerReinstallTaskStorageHardwareRaidArrayInput is an input type that accepts ServerReinstallTaskStorageHardwareRaidArray and ServerReinstallTaskStorageHardwareRaidArrayOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStorageHardwareRaidArrayInput` via:
//
//	ServerReinstallTaskStorageHardwareRaidArray{ ServerReinstallTaskStorageHardwareRaidArgs{...} }
type ServerReinstallTaskStorageHardwareRaidArrayInput interface {
	pulumi.Input

	ToServerReinstallTaskStorageHardwareRaidArrayOutput() ServerReinstallTaskStorageHardwareRaidArrayOutput
	ToServerReinstallTaskStorageHardwareRaidArrayOutputWithContext(context.Context) ServerReinstallTaskStorageHardwareRaidArrayOutput
}

type ServerReinstallTaskStorageHardwareRaidArray []ServerReinstallTaskStorageHardwareRaidInput

func (ServerReinstallTaskStorageHardwareRaidArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStorageHardwareRaid)(nil)).Elem()
}

func (i ServerReinstallTaskStorageHardwareRaidArray) ToServerReinstallTaskStorageHardwareRaidArrayOutput() ServerReinstallTaskStorageHardwareRaidArrayOutput {
	return i.ToServerReinstallTaskStorageHardwareRaidArrayOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStorageHardwareRaidArray) ToServerReinstallTaskStorageHardwareRaidArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStorageHardwareRaidArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStorageHardwareRaidArrayOutput)
}

type ServerReinstallTaskStorageHardwareRaidOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStorageHardwareRaidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStorageHardwareRaid)(nil)).Elem()
}

func (o ServerReinstallTaskStorageHardwareRaidOutput) ToServerReinstallTaskStorageHardwareRaidOutput() ServerReinstallTaskStorageHardwareRaidOutput {
	return o
}

func (o ServerReinstallTaskStorageHardwareRaidOutput) ToServerReinstallTaskStorageHardwareRaidOutputWithContext(ctx context.Context) ServerReinstallTaskStorageHardwareRaidOutput {
	return o
}

// Number of arrays (default is 1)
func (o ServerReinstallTaskStorageHardwareRaidOutput) Arrays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStorageHardwareRaid) *int { return v.Arrays }).(pulumi.IntPtrOutput)
}

// Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)
func (o ServerReinstallTaskStorageHardwareRaidOutput) Disks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStorageHardwareRaid) *int { return v.Disks }).(pulumi.IntPtrOutput)
}

// Hardware raid type (default is 1)
func (o ServerReinstallTaskStorageHardwareRaidOutput) RaidLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStorageHardwareRaid) *int { return v.RaidLevel }).(pulumi.IntPtrOutput)
}

// Number of disks in the disk group involved in the spare (default is 0)
func (o ServerReinstallTaskStorageHardwareRaidOutput) Spares() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStorageHardwareRaid) *int { return v.Spares }).(pulumi.IntPtrOutput)
}

type ServerReinstallTaskStorageHardwareRaidArrayOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStorageHardwareRaidArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStorageHardwareRaid)(nil)).Elem()
}

func (o ServerReinstallTaskStorageHardwareRaidArrayOutput) ToServerReinstallTaskStorageHardwareRaidArrayOutput() ServerReinstallTaskStorageHardwareRaidArrayOutput {
	return o
}

func (o ServerReinstallTaskStorageHardwareRaidArrayOutput) ToServerReinstallTaskStorageHardwareRaidArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStorageHardwareRaidArrayOutput {
	return o
}

func (o ServerReinstallTaskStorageHardwareRaidArrayOutput) Index(i pulumi.IntInput) ServerReinstallTaskStorageHardwareRaidOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerReinstallTaskStorageHardwareRaid {
		return vs[0].([]ServerReinstallTaskStorageHardwareRaid)[vs[1].(int)]
	}).(ServerReinstallTaskStorageHardwareRaidOutput)
}

type ServerReinstallTaskStoragePartitioning struct {
	// Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
	Disks *int `pulumi:"disks"`
	// Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme). Accept multiple values (multiple partitions):
	Layouts []ServerReinstallTaskStoragePartitioningLayout `pulumi:"layouts"`
	// Partitioning scheme (if applicable with selected operating system)
	SchemeName *string `pulumi:"schemeName"`
}

// ServerReinstallTaskStoragePartitioningInput is an input type that accepts ServerReinstallTaskStoragePartitioningArgs and ServerReinstallTaskStoragePartitioningOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningInput` via:
//
//	ServerReinstallTaskStoragePartitioningArgs{...}
type ServerReinstallTaskStoragePartitioningInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningOutput() ServerReinstallTaskStoragePartitioningOutput
	ToServerReinstallTaskStoragePartitioningOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningOutput
}

type ServerReinstallTaskStoragePartitioningArgs struct {
	// Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
	Disks pulumi.IntPtrInput `pulumi:"disks"`
	// Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme). Accept multiple values (multiple partitions):
	Layouts ServerReinstallTaskStoragePartitioningLayoutArrayInput `pulumi:"layouts"`
	// Partitioning scheme (if applicable with selected operating system)
	SchemeName pulumi.StringPtrInput `pulumi:"schemeName"`
}

func (ServerReinstallTaskStoragePartitioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioning)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningArgs) ToServerReinstallTaskStoragePartitioningOutput() ServerReinstallTaskStoragePartitioningOutput {
	return i.ToServerReinstallTaskStoragePartitioningOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningArgs) ToServerReinstallTaskStoragePartitioningOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningOutput)
}

// ServerReinstallTaskStoragePartitioningArrayInput is an input type that accepts ServerReinstallTaskStoragePartitioningArray and ServerReinstallTaskStoragePartitioningArrayOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningArrayInput` via:
//
//	ServerReinstallTaskStoragePartitioningArray{ ServerReinstallTaskStoragePartitioningArgs{...} }
type ServerReinstallTaskStoragePartitioningArrayInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningArrayOutput() ServerReinstallTaskStoragePartitioningArrayOutput
	ToServerReinstallTaskStoragePartitioningArrayOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningArrayOutput
}

type ServerReinstallTaskStoragePartitioningArray []ServerReinstallTaskStoragePartitioningInput

func (ServerReinstallTaskStoragePartitioningArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioning)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningArray) ToServerReinstallTaskStoragePartitioningArrayOutput() ServerReinstallTaskStoragePartitioningArrayOutput {
	return i.ToServerReinstallTaskStoragePartitioningArrayOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningArray) ToServerReinstallTaskStoragePartitioningArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningArrayOutput)
}

type ServerReinstallTaskStoragePartitioningOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioning)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningOutput) ToServerReinstallTaskStoragePartitioningOutput() ServerReinstallTaskStoragePartitioningOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningOutput) ToServerReinstallTaskStoragePartitioningOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningOutput {
	return o
}

// Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
func (o ServerReinstallTaskStoragePartitioningOutput) Disks() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioning) *int { return v.Disks }).(pulumi.IntPtrOutput)
}

// Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme). Accept multiple values (multiple partitions):
func (o ServerReinstallTaskStoragePartitioningOutput) Layouts() ServerReinstallTaskStoragePartitioningLayoutArrayOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioning) []ServerReinstallTaskStoragePartitioningLayout {
		return v.Layouts
	}).(ServerReinstallTaskStoragePartitioningLayoutArrayOutput)
}

// Partitioning scheme (if applicable with selected operating system)
func (o ServerReinstallTaskStoragePartitioningOutput) SchemeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioning) *string { return v.SchemeName }).(pulumi.StringPtrOutput)
}

type ServerReinstallTaskStoragePartitioningArrayOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioning)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningArrayOutput) ToServerReinstallTaskStoragePartitioningArrayOutput() ServerReinstallTaskStoragePartitioningArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningArrayOutput) ToServerReinstallTaskStoragePartitioningArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningArrayOutput) Index(i pulumi.IntInput) ServerReinstallTaskStoragePartitioningOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerReinstallTaskStoragePartitioning {
		return vs[0].([]ServerReinstallTaskStoragePartitioning)[vs[1].(int)]
	}).(ServerReinstallTaskStoragePartitioningOutput)
}

type ServerReinstallTaskStoragePartitioningLayout struct {
	// Partition extras parameters (when applicable)
	Extras []ServerReinstallTaskStoragePartitioningLayoutExtra `pulumi:"extras"`
	// File system type
	FileSystem string `pulumi:"fileSystem"`
	// Mount point
	MountPoint string `pulumi:"mountPoint"`
	// Software raid type (default is 1)
	RaidLevel *int `pulumi:"raidLevel"`
	// Partition size in MiB (default value is 0 which means to fill the disk with that partition)
	Size *int `pulumi:"size"`
}

// ServerReinstallTaskStoragePartitioningLayoutInput is an input type that accepts ServerReinstallTaskStoragePartitioningLayoutArgs and ServerReinstallTaskStoragePartitioningLayoutOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningLayoutInput` via:
//
//	ServerReinstallTaskStoragePartitioningLayoutArgs{...}
type ServerReinstallTaskStoragePartitioningLayoutInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningLayoutOutput() ServerReinstallTaskStoragePartitioningLayoutOutput
	ToServerReinstallTaskStoragePartitioningLayoutOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningLayoutOutput
}

type ServerReinstallTaskStoragePartitioningLayoutArgs struct {
	// Partition extras parameters (when applicable)
	Extras ServerReinstallTaskStoragePartitioningLayoutExtraArrayInput `pulumi:"extras"`
	// File system type
	FileSystem pulumi.StringInput `pulumi:"fileSystem"`
	// Mount point
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// Software raid type (default is 1)
	RaidLevel pulumi.IntPtrInput `pulumi:"raidLevel"`
	// Partition size in MiB (default value is 0 which means to fill the disk with that partition)
	Size pulumi.IntPtrInput `pulumi:"size"`
}

func (ServerReinstallTaskStoragePartitioningLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayout)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningLayoutArgs) ToServerReinstallTaskStoragePartitioningLayoutOutput() ServerReinstallTaskStoragePartitioningLayoutOutput {
	return i.ToServerReinstallTaskStoragePartitioningLayoutOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningLayoutArgs) ToServerReinstallTaskStoragePartitioningLayoutOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningLayoutOutput)
}

// ServerReinstallTaskStoragePartitioningLayoutArrayInput is an input type that accepts ServerReinstallTaskStoragePartitioningLayoutArray and ServerReinstallTaskStoragePartitioningLayoutArrayOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningLayoutArrayInput` via:
//
//	ServerReinstallTaskStoragePartitioningLayoutArray{ ServerReinstallTaskStoragePartitioningLayoutArgs{...} }
type ServerReinstallTaskStoragePartitioningLayoutArrayInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningLayoutArrayOutput() ServerReinstallTaskStoragePartitioningLayoutArrayOutput
	ToServerReinstallTaskStoragePartitioningLayoutArrayOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningLayoutArrayOutput
}

type ServerReinstallTaskStoragePartitioningLayoutArray []ServerReinstallTaskStoragePartitioningLayoutInput

func (ServerReinstallTaskStoragePartitioningLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioningLayout)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningLayoutArray) ToServerReinstallTaskStoragePartitioningLayoutArrayOutput() ServerReinstallTaskStoragePartitioningLayoutArrayOutput {
	return i.ToServerReinstallTaskStoragePartitioningLayoutArrayOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningLayoutArray) ToServerReinstallTaskStoragePartitioningLayoutArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningLayoutArrayOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayout)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningLayoutOutput) ToServerReinstallTaskStoragePartitioningLayoutOutput() ServerReinstallTaskStoragePartitioningLayoutOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutOutput) ToServerReinstallTaskStoragePartitioningLayoutOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutOutput {
	return o
}

// Partition extras parameters (when applicable)
func (o ServerReinstallTaskStoragePartitioningLayoutOutput) Extras() ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioningLayout) []ServerReinstallTaskStoragePartitioningLayoutExtra {
		return v.Extras
	}).(ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput)
}

// File system type
func (o ServerReinstallTaskStoragePartitioningLayoutOutput) FileSystem() pulumi.StringOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioningLayout) string { return v.FileSystem }).(pulumi.StringOutput)
}

// Mount point
func (o ServerReinstallTaskStoragePartitioningLayoutOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioningLayout) string { return v.MountPoint }).(pulumi.StringOutput)
}

// Software raid type (default is 1)
func (o ServerReinstallTaskStoragePartitioningLayoutOutput) RaidLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioningLayout) *int { return v.RaidLevel }).(pulumi.IntPtrOutput)
}

// Partition size in MiB (default value is 0 which means to fill the disk with that partition)
func (o ServerReinstallTaskStoragePartitioningLayoutOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioningLayout) *int { return v.Size }).(pulumi.IntPtrOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutArrayOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioningLayout)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningLayoutArrayOutput) ToServerReinstallTaskStoragePartitioningLayoutArrayOutput() ServerReinstallTaskStoragePartitioningLayoutArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutArrayOutput) ToServerReinstallTaskStoragePartitioningLayoutArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutArrayOutput) Index(i pulumi.IntInput) ServerReinstallTaskStoragePartitioningLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerReinstallTaskStoragePartitioningLayout {
		return vs[0].([]ServerReinstallTaskStoragePartitioningLayout)[vs[1].(int)]
	}).(ServerReinstallTaskStoragePartitioningLayoutOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutExtra struct {
	// LVM-specific parameters (when applicable)
	Lvs []ServerReinstallTaskStoragePartitioningLayoutExtraLv `pulumi:"lvs"`
	// ZFS-specific parameters (when applicable)
	Zps []ServerReinstallTaskStoragePartitioningLayoutExtraZp `pulumi:"zps"`
}

// ServerReinstallTaskStoragePartitioningLayoutExtraInput is an input type that accepts ServerReinstallTaskStoragePartitioningLayoutExtraArgs and ServerReinstallTaskStoragePartitioningLayoutExtraOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningLayoutExtraInput` via:
//
//	ServerReinstallTaskStoragePartitioningLayoutExtraArgs{...}
type ServerReinstallTaskStoragePartitioningLayoutExtraInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningLayoutExtraOutput() ServerReinstallTaskStoragePartitioningLayoutExtraOutput
	ToServerReinstallTaskStoragePartitioningLayoutExtraOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraOutput
}

type ServerReinstallTaskStoragePartitioningLayoutExtraArgs struct {
	// LVM-specific parameters (when applicable)
	Lvs ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayInput `pulumi:"lvs"`
	// ZFS-specific parameters (when applicable)
	Zps ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayInput `pulumi:"zps"`
}

func (ServerReinstallTaskStoragePartitioningLayoutExtraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtra)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraArgs) ToServerReinstallTaskStoragePartitioningLayoutExtraOutput() ServerReinstallTaskStoragePartitioningLayoutExtraOutput {
	return i.ToServerReinstallTaskStoragePartitioningLayoutExtraOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraArgs) ToServerReinstallTaskStoragePartitioningLayoutExtraOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningLayoutExtraOutput)
}

// ServerReinstallTaskStoragePartitioningLayoutExtraArrayInput is an input type that accepts ServerReinstallTaskStoragePartitioningLayoutExtraArray and ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningLayoutExtraArrayInput` via:
//
//	ServerReinstallTaskStoragePartitioningLayoutExtraArray{ ServerReinstallTaskStoragePartitioningLayoutExtraArgs{...} }
type ServerReinstallTaskStoragePartitioningLayoutExtraArrayInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput() ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput
	ToServerReinstallTaskStoragePartitioningLayoutExtraArrayOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput
}

type ServerReinstallTaskStoragePartitioningLayoutExtraArray []ServerReinstallTaskStoragePartitioningLayoutExtraInput

func (ServerReinstallTaskStoragePartitioningLayoutExtraArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioningLayoutExtra)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraArray) ToServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput() ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput {
	return i.ToServerReinstallTaskStoragePartitioningLayoutExtraArrayOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraArray) ToServerReinstallTaskStoragePartitioningLayoutExtraArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutExtraOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningLayoutExtraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtra)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraOutput() ServerReinstallTaskStoragePartitioningLayoutExtraOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraOutput {
	return o
}

// LVM-specific parameters (when applicable)
func (o ServerReinstallTaskStoragePartitioningLayoutExtraOutput) Lvs() ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioningLayoutExtra) []ServerReinstallTaskStoragePartitioningLayoutExtraLv {
		return v.Lvs
	}).(ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput)
}

// ZFS-specific parameters (when applicable)
func (o ServerReinstallTaskStoragePartitioningLayoutExtraOutput) Zps() ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioningLayoutExtra) []ServerReinstallTaskStoragePartitioningLayoutExtraZp {
		return v.Zps
	}).(ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioningLayoutExtra)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput() ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput) Index(i pulumi.IntInput) ServerReinstallTaskStoragePartitioningLayoutExtraOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerReinstallTaskStoragePartitioningLayoutExtra {
		return vs[0].([]ServerReinstallTaskStoragePartitioningLayoutExtra)[vs[1].(int)]
	}).(ServerReinstallTaskStoragePartitioningLayoutExtraOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutExtraLv struct {
	// Logical volume name
	Name *string `pulumi:"name"`
}

// ServerReinstallTaskStoragePartitioningLayoutExtraLvInput is an input type that accepts ServerReinstallTaskStoragePartitioningLayoutExtraLvArgs and ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningLayoutExtraLvInput` via:
//
//	ServerReinstallTaskStoragePartitioningLayoutExtraLvArgs{...}
type ServerReinstallTaskStoragePartitioningLayoutExtraLvInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningLayoutExtraLvOutput() ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput
	ToServerReinstallTaskStoragePartitioningLayoutExtraLvOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput
}

type ServerReinstallTaskStoragePartitioningLayoutExtraLvArgs struct {
	// Logical volume name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ServerReinstallTaskStoragePartitioningLayoutExtraLvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraLv)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraLvArgs) ToServerReinstallTaskStoragePartitioningLayoutExtraLvOutput() ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput {
	return i.ToServerReinstallTaskStoragePartitioningLayoutExtraLvOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraLvArgs) ToServerReinstallTaskStoragePartitioningLayoutExtraLvOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput)
}

// ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayInput is an input type that accepts ServerReinstallTaskStoragePartitioningLayoutExtraLvArray and ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayInput` via:
//
//	ServerReinstallTaskStoragePartitioningLayoutExtraLvArray{ ServerReinstallTaskStoragePartitioningLayoutExtraLvArgs{...} }
type ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput() ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput
	ToServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput
}

type ServerReinstallTaskStoragePartitioningLayoutExtraLvArray []ServerReinstallTaskStoragePartitioningLayoutExtraLvInput

func (ServerReinstallTaskStoragePartitioningLayoutExtraLvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioningLayoutExtraLv)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraLvArray) ToServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput() ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput {
	return i.ToServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraLvArray) ToServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraLv)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraLvOutput() ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraLvOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput {
	return o
}

// Logical volume name
func (o ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioningLayoutExtraLv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioningLayoutExtraLv)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput() ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput) Index(i pulumi.IntInput) ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerReinstallTaskStoragePartitioningLayoutExtraLv {
		return vs[0].([]ServerReinstallTaskStoragePartitioningLayoutExtraLv)[vs[1].(int)]
	}).(ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutExtraZp struct {
	// zpool name (generated automatically if not specified, note that multiple ZFS partitions with same zpool names will be configured as multiple datasets belonging to the same zpool if compatible)
	Name *string `pulumi:"name"`
}

// ServerReinstallTaskStoragePartitioningLayoutExtraZpInput is an input type that accepts ServerReinstallTaskStoragePartitioningLayoutExtraZpArgs and ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningLayoutExtraZpInput` via:
//
//	ServerReinstallTaskStoragePartitioningLayoutExtraZpArgs{...}
type ServerReinstallTaskStoragePartitioningLayoutExtraZpInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningLayoutExtraZpOutput() ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput
	ToServerReinstallTaskStoragePartitioningLayoutExtraZpOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput
}

type ServerReinstallTaskStoragePartitioningLayoutExtraZpArgs struct {
	// zpool name (generated automatically if not specified, note that multiple ZFS partitions with same zpool names will be configured as multiple datasets belonging to the same zpool if compatible)
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ServerReinstallTaskStoragePartitioningLayoutExtraZpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraZp)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraZpArgs) ToServerReinstallTaskStoragePartitioningLayoutExtraZpOutput() ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput {
	return i.ToServerReinstallTaskStoragePartitioningLayoutExtraZpOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraZpArgs) ToServerReinstallTaskStoragePartitioningLayoutExtraZpOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput)
}

// ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayInput is an input type that accepts ServerReinstallTaskStoragePartitioningLayoutExtraZpArray and ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput values.
// You can construct a concrete instance of `ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayInput` via:
//
//	ServerReinstallTaskStoragePartitioningLayoutExtraZpArray{ ServerReinstallTaskStoragePartitioningLayoutExtraZpArgs{...} }
type ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayInput interface {
	pulumi.Input

	ToServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput() ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput
	ToServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutputWithContext(context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput
}

type ServerReinstallTaskStoragePartitioningLayoutExtraZpArray []ServerReinstallTaskStoragePartitioningLayoutExtraZpInput

func (ServerReinstallTaskStoragePartitioningLayoutExtraZpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioningLayoutExtraZp)(nil)).Elem()
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraZpArray) ToServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput() ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput {
	return i.ToServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutputWithContext(context.Background())
}

func (i ServerReinstallTaskStoragePartitioningLayoutExtraZpArray) ToServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraZp)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraZpOutput() ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraZpOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput {
	return o
}

// zpool name (generated automatically if not specified, note that multiple ZFS partitions with same zpool names will be configured as multiple datasets belonging to the same zpool if compatible)
func (o ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerReinstallTaskStoragePartitioningLayoutExtraZp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput struct{ *pulumi.OutputState }

func (ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerReinstallTaskStoragePartitioningLayoutExtraZp)(nil)).Elem()
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput() ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput) ToServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutputWithContext(ctx context.Context) ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput {
	return o
}

func (o ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput) Index(i pulumi.IntInput) ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerReinstallTaskStoragePartitioningLayoutExtraZp {
		return vs[0].([]ServerReinstallTaskStoragePartitioningLayoutExtraZp)[vs[1].(int)]
	}).(ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput)
}

type ServerStorage struct {
	// Disk group id (default is 0, meaning automatic)
	DiskGroupId *float64 `pulumi:"diskGroupId"`
	// Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode)
	HardwareRaids []ServerStorageHardwareRaid `pulumi:"hardwareRaids"`
	// Partitioning configuration
	Partitioning *ServerStoragePartitioning `pulumi:"partitioning"`
}

// ServerStorageInput is an input type that accepts ServerStorageArgs and ServerStorageOutput values.
// You can construct a concrete instance of `ServerStorageInput` via:
//
//	ServerStorageArgs{...}
type ServerStorageInput interface {
	pulumi.Input

	ToServerStorageOutput() ServerStorageOutput
	ToServerStorageOutputWithContext(context.Context) ServerStorageOutput
}

type ServerStorageArgs struct {
	// Disk group id (default is 0, meaning automatic)
	DiskGroupId pulumi.Float64PtrInput `pulumi:"diskGroupId"`
	// Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode)
	HardwareRaids ServerStorageHardwareRaidArrayInput `pulumi:"hardwareRaids"`
	// Partitioning configuration
	Partitioning ServerStoragePartitioningPtrInput `pulumi:"partitioning"`
}

func (ServerStorageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorage)(nil)).Elem()
}

func (i ServerStorageArgs) ToServerStorageOutput() ServerStorageOutput {
	return i.ToServerStorageOutputWithContext(context.Background())
}

func (i ServerStorageArgs) ToServerStorageOutputWithContext(ctx context.Context) ServerStorageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageOutput)
}

// ServerStorageArrayInput is an input type that accepts ServerStorageArray and ServerStorageArrayOutput values.
// You can construct a concrete instance of `ServerStorageArrayInput` via:
//
//	ServerStorageArray{ ServerStorageArgs{...} }
type ServerStorageArrayInput interface {
	pulumi.Input

	ToServerStorageArrayOutput() ServerStorageArrayOutput
	ToServerStorageArrayOutputWithContext(context.Context) ServerStorageArrayOutput
}

type ServerStorageArray []ServerStorageInput

func (ServerStorageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerStorage)(nil)).Elem()
}

func (i ServerStorageArray) ToServerStorageArrayOutput() ServerStorageArrayOutput {
	return i.ToServerStorageArrayOutputWithContext(context.Background())
}

func (i ServerStorageArray) ToServerStorageArrayOutputWithContext(ctx context.Context) ServerStorageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageArrayOutput)
}

type ServerStorageOutput struct{ *pulumi.OutputState }

func (ServerStorageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorage)(nil)).Elem()
}

func (o ServerStorageOutput) ToServerStorageOutput() ServerStorageOutput {
	return o
}

func (o ServerStorageOutput) ToServerStorageOutputWithContext(ctx context.Context) ServerStorageOutput {
	return o
}

// Disk group id (default is 0, meaning automatic)
func (o ServerStorageOutput) DiskGroupId() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerStorage) *float64 { return v.DiskGroupId }).(pulumi.Float64PtrOutput)
}

// Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode)
func (o ServerStorageOutput) HardwareRaids() ServerStorageHardwareRaidArrayOutput {
	return o.ApplyT(func(v ServerStorage) []ServerStorageHardwareRaid { return v.HardwareRaids }).(ServerStorageHardwareRaidArrayOutput)
}

// Partitioning configuration
func (o ServerStorageOutput) Partitioning() ServerStoragePartitioningPtrOutput {
	return o.ApplyT(func(v ServerStorage) *ServerStoragePartitioning { return v.Partitioning }).(ServerStoragePartitioningPtrOutput)
}

type ServerStorageArrayOutput struct{ *pulumi.OutputState }

func (ServerStorageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerStorage)(nil)).Elem()
}

func (o ServerStorageArrayOutput) ToServerStorageArrayOutput() ServerStorageArrayOutput {
	return o
}

func (o ServerStorageArrayOutput) ToServerStorageArrayOutputWithContext(ctx context.Context) ServerStorageArrayOutput {
	return o
}

func (o ServerStorageArrayOutput) Index(i pulumi.IntInput) ServerStorageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerStorage {
		return vs[0].([]ServerStorage)[vs[1].(int)]
	}).(ServerStorageOutput)
}

type ServerStorageHardwareRaid struct {
	// Number of arrays (default is 1)
	Arrays *float64 `pulumi:"arrays"`
	// Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)
	Disks *float64 `pulumi:"disks"`
	// Hardware raid type (default is 1)
	RaidLevel *float64 `pulumi:"raidLevel"`
	// Number of disks in the disk group involved in the spare (default is 0)
	Spares *float64 `pulumi:"spares"`
}

// ServerStorageHardwareRaidInput is an input type that accepts ServerStorageHardwareRaidArgs and ServerStorageHardwareRaidOutput values.
// You can construct a concrete instance of `ServerStorageHardwareRaidInput` via:
//
//	ServerStorageHardwareRaidArgs{...}
type ServerStorageHardwareRaidInput interface {
	pulumi.Input

	ToServerStorageHardwareRaidOutput() ServerStorageHardwareRaidOutput
	ToServerStorageHardwareRaidOutputWithContext(context.Context) ServerStorageHardwareRaidOutput
}

type ServerStorageHardwareRaidArgs struct {
	// Number of arrays (default is 1)
	Arrays pulumi.Float64PtrInput `pulumi:"arrays"`
	// Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)
	Disks pulumi.Float64PtrInput `pulumi:"disks"`
	// Hardware raid type (default is 1)
	RaidLevel pulumi.Float64PtrInput `pulumi:"raidLevel"`
	// Number of disks in the disk group involved in the spare (default is 0)
	Spares pulumi.Float64PtrInput `pulumi:"spares"`
}

func (ServerStorageHardwareRaidArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageHardwareRaid)(nil)).Elem()
}

func (i ServerStorageHardwareRaidArgs) ToServerStorageHardwareRaidOutput() ServerStorageHardwareRaidOutput {
	return i.ToServerStorageHardwareRaidOutputWithContext(context.Background())
}

func (i ServerStorageHardwareRaidArgs) ToServerStorageHardwareRaidOutputWithContext(ctx context.Context) ServerStorageHardwareRaidOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageHardwareRaidOutput)
}

// ServerStorageHardwareRaidArrayInput is an input type that accepts ServerStorageHardwareRaidArray and ServerStorageHardwareRaidArrayOutput values.
// You can construct a concrete instance of `ServerStorageHardwareRaidArrayInput` via:
//
//	ServerStorageHardwareRaidArray{ ServerStorageHardwareRaidArgs{...} }
type ServerStorageHardwareRaidArrayInput interface {
	pulumi.Input

	ToServerStorageHardwareRaidArrayOutput() ServerStorageHardwareRaidArrayOutput
	ToServerStorageHardwareRaidArrayOutputWithContext(context.Context) ServerStorageHardwareRaidArrayOutput
}

type ServerStorageHardwareRaidArray []ServerStorageHardwareRaidInput

func (ServerStorageHardwareRaidArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerStorageHardwareRaid)(nil)).Elem()
}

func (i ServerStorageHardwareRaidArray) ToServerStorageHardwareRaidArrayOutput() ServerStorageHardwareRaidArrayOutput {
	return i.ToServerStorageHardwareRaidArrayOutputWithContext(context.Background())
}

func (i ServerStorageHardwareRaidArray) ToServerStorageHardwareRaidArrayOutputWithContext(ctx context.Context) ServerStorageHardwareRaidArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStorageHardwareRaidArrayOutput)
}

type ServerStorageHardwareRaidOutput struct{ *pulumi.OutputState }

func (ServerStorageHardwareRaidOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStorageHardwareRaid)(nil)).Elem()
}

func (o ServerStorageHardwareRaidOutput) ToServerStorageHardwareRaidOutput() ServerStorageHardwareRaidOutput {
	return o
}

func (o ServerStorageHardwareRaidOutput) ToServerStorageHardwareRaidOutputWithContext(ctx context.Context) ServerStorageHardwareRaidOutput {
	return o
}

// Number of arrays (default is 1)
func (o ServerStorageHardwareRaidOutput) Arrays() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerStorageHardwareRaid) *float64 { return v.Arrays }).(pulumi.Float64PtrOutput)
}

// Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)
func (o ServerStorageHardwareRaidOutput) Disks() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerStorageHardwareRaid) *float64 { return v.Disks }).(pulumi.Float64PtrOutput)
}

// Hardware raid type (default is 1)
func (o ServerStorageHardwareRaidOutput) RaidLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerStorageHardwareRaid) *float64 { return v.RaidLevel }).(pulumi.Float64PtrOutput)
}

// Number of disks in the disk group involved in the spare (default is 0)
func (o ServerStorageHardwareRaidOutput) Spares() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerStorageHardwareRaid) *float64 { return v.Spares }).(pulumi.Float64PtrOutput)
}

type ServerStorageHardwareRaidArrayOutput struct{ *pulumi.OutputState }

func (ServerStorageHardwareRaidArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerStorageHardwareRaid)(nil)).Elem()
}

func (o ServerStorageHardwareRaidArrayOutput) ToServerStorageHardwareRaidArrayOutput() ServerStorageHardwareRaidArrayOutput {
	return o
}

func (o ServerStorageHardwareRaidArrayOutput) ToServerStorageHardwareRaidArrayOutputWithContext(ctx context.Context) ServerStorageHardwareRaidArrayOutput {
	return o
}

func (o ServerStorageHardwareRaidArrayOutput) Index(i pulumi.IntInput) ServerStorageHardwareRaidOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerStorageHardwareRaid {
		return vs[0].([]ServerStorageHardwareRaid)[vs[1].(int)]
	}).(ServerStorageHardwareRaidOutput)
}

type ServerStoragePartitioning struct {
	// Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
	Disks *float64 `pulumi:"disks"`
	// Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme)
	Layouts []ServerStoragePartitioningLayout `pulumi:"layouts"`
	// Partitioning scheme (if applicable with selected operating system)
	SchemeName *string `pulumi:"schemeName"`
}

// ServerStoragePartitioningInput is an input type that accepts ServerStoragePartitioningArgs and ServerStoragePartitioningOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningInput` via:
//
//	ServerStoragePartitioningArgs{...}
type ServerStoragePartitioningInput interface {
	pulumi.Input

	ToServerStoragePartitioningOutput() ServerStoragePartitioningOutput
	ToServerStoragePartitioningOutputWithContext(context.Context) ServerStoragePartitioningOutput
}

type ServerStoragePartitioningArgs struct {
	// Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
	Disks pulumi.Float64PtrInput `pulumi:"disks"`
	// Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme)
	Layouts ServerStoragePartitioningLayoutArrayInput `pulumi:"layouts"`
	// Partitioning scheme (if applicable with selected operating system)
	SchemeName pulumi.StringPtrInput `pulumi:"schemeName"`
}

func (ServerStoragePartitioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioning)(nil)).Elem()
}

func (i ServerStoragePartitioningArgs) ToServerStoragePartitioningOutput() ServerStoragePartitioningOutput {
	return i.ToServerStoragePartitioningOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningArgs) ToServerStoragePartitioningOutputWithContext(ctx context.Context) ServerStoragePartitioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningOutput)
}

func (i ServerStoragePartitioningArgs) ToServerStoragePartitioningPtrOutput() ServerStoragePartitioningPtrOutput {
	return i.ToServerStoragePartitioningPtrOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningArgs) ToServerStoragePartitioningPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningOutput).ToServerStoragePartitioningPtrOutputWithContext(ctx)
}

// ServerStoragePartitioningPtrInput is an input type that accepts ServerStoragePartitioningArgs, ServerStoragePartitioningPtr and ServerStoragePartitioningPtrOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningPtrInput` via:
//
//	        ServerStoragePartitioningArgs{...}
//
//	or:
//
//	        nil
type ServerStoragePartitioningPtrInput interface {
	pulumi.Input

	ToServerStoragePartitioningPtrOutput() ServerStoragePartitioningPtrOutput
	ToServerStoragePartitioningPtrOutputWithContext(context.Context) ServerStoragePartitioningPtrOutput
}

type serverStoragePartitioningPtrType ServerStoragePartitioningArgs

func ServerStoragePartitioningPtr(v *ServerStoragePartitioningArgs) ServerStoragePartitioningPtrInput {
	return (*serverStoragePartitioningPtrType)(v)
}

func (*serverStoragePartitioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStoragePartitioning)(nil)).Elem()
}

func (i *serverStoragePartitioningPtrType) ToServerStoragePartitioningPtrOutput() ServerStoragePartitioningPtrOutput {
	return i.ToServerStoragePartitioningPtrOutputWithContext(context.Background())
}

func (i *serverStoragePartitioningPtrType) ToServerStoragePartitioningPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningPtrOutput)
}

type ServerStoragePartitioningOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioning)(nil)).Elem()
}

func (o ServerStoragePartitioningOutput) ToServerStoragePartitioningOutput() ServerStoragePartitioningOutput {
	return o
}

func (o ServerStoragePartitioningOutput) ToServerStoragePartitioningOutputWithContext(ctx context.Context) ServerStoragePartitioningOutput {
	return o
}

func (o ServerStoragePartitioningOutput) ToServerStoragePartitioningPtrOutput() ServerStoragePartitioningPtrOutput {
	return o.ToServerStoragePartitioningPtrOutputWithContext(context.Background())
}

func (o ServerStoragePartitioningOutput) ToServerStoragePartitioningPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerStoragePartitioning) *ServerStoragePartitioning {
		return &v
	}).(ServerStoragePartitioningPtrOutput)
}

// Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
func (o ServerStoragePartitioningOutput) Disks() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerStoragePartitioning) *float64 { return v.Disks }).(pulumi.Float64PtrOutput)
}

// Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme)
func (o ServerStoragePartitioningOutput) Layouts() ServerStoragePartitioningLayoutArrayOutput {
	return o.ApplyT(func(v ServerStoragePartitioning) []ServerStoragePartitioningLayout { return v.Layouts }).(ServerStoragePartitioningLayoutArrayOutput)
}

// Partitioning scheme (if applicable with selected operating system)
func (o ServerStoragePartitioningOutput) SchemeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerStoragePartitioning) *string { return v.SchemeName }).(pulumi.StringPtrOutput)
}

type ServerStoragePartitioningPtrOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStoragePartitioning)(nil)).Elem()
}

func (o ServerStoragePartitioningPtrOutput) ToServerStoragePartitioningPtrOutput() ServerStoragePartitioningPtrOutput {
	return o
}

func (o ServerStoragePartitioningPtrOutput) ToServerStoragePartitioningPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningPtrOutput {
	return o
}

func (o ServerStoragePartitioningPtrOutput) Elem() ServerStoragePartitioningOutput {
	return o.ApplyT(func(v *ServerStoragePartitioning) ServerStoragePartitioning {
		if v != nil {
			return *v
		}
		var ret ServerStoragePartitioning
		return ret
	}).(ServerStoragePartitioningOutput)
}

// Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
func (o ServerStoragePartitioningPtrOutput) Disks() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServerStoragePartitioning) *float64 {
		if v == nil {
			return nil
		}
		return v.Disks
	}).(pulumi.Float64PtrOutput)
}

// Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme)
func (o ServerStoragePartitioningPtrOutput) Layouts() ServerStoragePartitioningLayoutArrayOutput {
	return o.ApplyT(func(v *ServerStoragePartitioning) []ServerStoragePartitioningLayout {
		if v == nil {
			return nil
		}
		return v.Layouts
	}).(ServerStoragePartitioningLayoutArrayOutput)
}

// Partitioning scheme (if applicable with selected operating system)
func (o ServerStoragePartitioningPtrOutput) SchemeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerStoragePartitioning) *string {
		if v == nil {
			return nil
		}
		return v.SchemeName
	}).(pulumi.StringPtrOutput)
}

type ServerStoragePartitioningLayout struct {
	// Partition extras parameters
	Extras *ServerStoragePartitioningLayoutExtras `pulumi:"extras"`
	// File system type
	FileSystem string `pulumi:"fileSystem"`
	// Mount point
	MountPoint string `pulumi:"mountPoint"`
	// Software raid type (default is 1)
	RaidLevel *float64 `pulumi:"raidLevel"`
	// Partition size in MiB (default value is 0 which means to fill the disk with that partition)
	Size *float64 `pulumi:"size"`
}

// ServerStoragePartitioningLayoutInput is an input type that accepts ServerStoragePartitioningLayoutArgs and ServerStoragePartitioningLayoutOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningLayoutInput` via:
//
//	ServerStoragePartitioningLayoutArgs{...}
type ServerStoragePartitioningLayoutInput interface {
	pulumi.Input

	ToServerStoragePartitioningLayoutOutput() ServerStoragePartitioningLayoutOutput
	ToServerStoragePartitioningLayoutOutputWithContext(context.Context) ServerStoragePartitioningLayoutOutput
}

type ServerStoragePartitioningLayoutArgs struct {
	// Partition extras parameters
	Extras ServerStoragePartitioningLayoutExtrasPtrInput `pulumi:"extras"`
	// File system type
	FileSystem pulumi.StringInput `pulumi:"fileSystem"`
	// Mount point
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
	// Software raid type (default is 1)
	RaidLevel pulumi.Float64PtrInput `pulumi:"raidLevel"`
	// Partition size in MiB (default value is 0 which means to fill the disk with that partition)
	Size pulumi.Float64PtrInput `pulumi:"size"`
}

func (ServerStoragePartitioningLayoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioningLayout)(nil)).Elem()
}

func (i ServerStoragePartitioningLayoutArgs) ToServerStoragePartitioningLayoutOutput() ServerStoragePartitioningLayoutOutput {
	return i.ToServerStoragePartitioningLayoutOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningLayoutArgs) ToServerStoragePartitioningLayoutOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutOutput)
}

// ServerStoragePartitioningLayoutArrayInput is an input type that accepts ServerStoragePartitioningLayoutArray and ServerStoragePartitioningLayoutArrayOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningLayoutArrayInput` via:
//
//	ServerStoragePartitioningLayoutArray{ ServerStoragePartitioningLayoutArgs{...} }
type ServerStoragePartitioningLayoutArrayInput interface {
	pulumi.Input

	ToServerStoragePartitioningLayoutArrayOutput() ServerStoragePartitioningLayoutArrayOutput
	ToServerStoragePartitioningLayoutArrayOutputWithContext(context.Context) ServerStoragePartitioningLayoutArrayOutput
}

type ServerStoragePartitioningLayoutArray []ServerStoragePartitioningLayoutInput

func (ServerStoragePartitioningLayoutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerStoragePartitioningLayout)(nil)).Elem()
}

func (i ServerStoragePartitioningLayoutArray) ToServerStoragePartitioningLayoutArrayOutput() ServerStoragePartitioningLayoutArrayOutput {
	return i.ToServerStoragePartitioningLayoutArrayOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningLayoutArray) ToServerStoragePartitioningLayoutArrayOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutArrayOutput)
}

type ServerStoragePartitioningLayoutOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningLayoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioningLayout)(nil)).Elem()
}

func (o ServerStoragePartitioningLayoutOutput) ToServerStoragePartitioningLayoutOutput() ServerStoragePartitioningLayoutOutput {
	return o
}

func (o ServerStoragePartitioningLayoutOutput) ToServerStoragePartitioningLayoutOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutOutput {
	return o
}

// Partition extras parameters
func (o ServerStoragePartitioningLayoutOutput) Extras() ServerStoragePartitioningLayoutExtrasPtrOutput {
	return o.ApplyT(func(v ServerStoragePartitioningLayout) *ServerStoragePartitioningLayoutExtras { return v.Extras }).(ServerStoragePartitioningLayoutExtrasPtrOutput)
}

// File system type
func (o ServerStoragePartitioningLayoutOutput) FileSystem() pulumi.StringOutput {
	return o.ApplyT(func(v ServerStoragePartitioningLayout) string { return v.FileSystem }).(pulumi.StringOutput)
}

// Mount point
func (o ServerStoragePartitioningLayoutOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v ServerStoragePartitioningLayout) string { return v.MountPoint }).(pulumi.StringOutput)
}

// Software raid type (default is 1)
func (o ServerStoragePartitioningLayoutOutput) RaidLevel() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerStoragePartitioningLayout) *float64 { return v.RaidLevel }).(pulumi.Float64PtrOutput)
}

// Partition size in MiB (default value is 0 which means to fill the disk with that partition)
func (o ServerStoragePartitioningLayoutOutput) Size() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServerStoragePartitioningLayout) *float64 { return v.Size }).(pulumi.Float64PtrOutput)
}

type ServerStoragePartitioningLayoutArrayOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningLayoutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerStoragePartitioningLayout)(nil)).Elem()
}

func (o ServerStoragePartitioningLayoutArrayOutput) ToServerStoragePartitioningLayoutArrayOutput() ServerStoragePartitioningLayoutArrayOutput {
	return o
}

func (o ServerStoragePartitioningLayoutArrayOutput) ToServerStoragePartitioningLayoutArrayOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutArrayOutput {
	return o
}

func (o ServerStoragePartitioningLayoutArrayOutput) Index(i pulumi.IntInput) ServerStoragePartitioningLayoutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerStoragePartitioningLayout {
		return vs[0].([]ServerStoragePartitioningLayout)[vs[1].(int)]
	}).(ServerStoragePartitioningLayoutOutput)
}

type ServerStoragePartitioningLayoutExtras struct {
	// LVM-specific parameters
	Lv *ServerStoragePartitioningLayoutExtrasLv `pulumi:"lv"`
	// ZFS-specific parameters
	Zp *ServerStoragePartitioningLayoutExtrasZp `pulumi:"zp"`
}

// ServerStoragePartitioningLayoutExtrasInput is an input type that accepts ServerStoragePartitioningLayoutExtrasArgs and ServerStoragePartitioningLayoutExtrasOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningLayoutExtrasInput` via:
//
//	ServerStoragePartitioningLayoutExtrasArgs{...}
type ServerStoragePartitioningLayoutExtrasInput interface {
	pulumi.Input

	ToServerStoragePartitioningLayoutExtrasOutput() ServerStoragePartitioningLayoutExtrasOutput
	ToServerStoragePartitioningLayoutExtrasOutputWithContext(context.Context) ServerStoragePartitioningLayoutExtrasOutput
}

type ServerStoragePartitioningLayoutExtrasArgs struct {
	// LVM-specific parameters
	Lv ServerStoragePartitioningLayoutExtrasLvPtrInput `pulumi:"lv"`
	// ZFS-specific parameters
	Zp ServerStoragePartitioningLayoutExtrasZpPtrInput `pulumi:"zp"`
}

func (ServerStoragePartitioningLayoutExtrasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioningLayoutExtras)(nil)).Elem()
}

func (i ServerStoragePartitioningLayoutExtrasArgs) ToServerStoragePartitioningLayoutExtrasOutput() ServerStoragePartitioningLayoutExtrasOutput {
	return i.ToServerStoragePartitioningLayoutExtrasOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningLayoutExtrasArgs) ToServerStoragePartitioningLayoutExtrasOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutExtrasOutput)
}

func (i ServerStoragePartitioningLayoutExtrasArgs) ToServerStoragePartitioningLayoutExtrasPtrOutput() ServerStoragePartitioningLayoutExtrasPtrOutput {
	return i.ToServerStoragePartitioningLayoutExtrasPtrOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningLayoutExtrasArgs) ToServerStoragePartitioningLayoutExtrasPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutExtrasOutput).ToServerStoragePartitioningLayoutExtrasPtrOutputWithContext(ctx)
}

// ServerStoragePartitioningLayoutExtrasPtrInput is an input type that accepts ServerStoragePartitioningLayoutExtrasArgs, ServerStoragePartitioningLayoutExtrasPtr and ServerStoragePartitioningLayoutExtrasPtrOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningLayoutExtrasPtrInput` via:
//
//	        ServerStoragePartitioningLayoutExtrasArgs{...}
//
//	or:
//
//	        nil
type ServerStoragePartitioningLayoutExtrasPtrInput interface {
	pulumi.Input

	ToServerStoragePartitioningLayoutExtrasPtrOutput() ServerStoragePartitioningLayoutExtrasPtrOutput
	ToServerStoragePartitioningLayoutExtrasPtrOutputWithContext(context.Context) ServerStoragePartitioningLayoutExtrasPtrOutput
}

type serverStoragePartitioningLayoutExtrasPtrType ServerStoragePartitioningLayoutExtrasArgs

func ServerStoragePartitioningLayoutExtrasPtr(v *ServerStoragePartitioningLayoutExtrasArgs) ServerStoragePartitioningLayoutExtrasPtrInput {
	return (*serverStoragePartitioningLayoutExtrasPtrType)(v)
}

func (*serverStoragePartitioningLayoutExtrasPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStoragePartitioningLayoutExtras)(nil)).Elem()
}

func (i *serverStoragePartitioningLayoutExtrasPtrType) ToServerStoragePartitioningLayoutExtrasPtrOutput() ServerStoragePartitioningLayoutExtrasPtrOutput {
	return i.ToServerStoragePartitioningLayoutExtrasPtrOutputWithContext(context.Background())
}

func (i *serverStoragePartitioningLayoutExtrasPtrType) ToServerStoragePartitioningLayoutExtrasPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutExtrasPtrOutput)
}

type ServerStoragePartitioningLayoutExtrasOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningLayoutExtrasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioningLayoutExtras)(nil)).Elem()
}

func (o ServerStoragePartitioningLayoutExtrasOutput) ToServerStoragePartitioningLayoutExtrasOutput() ServerStoragePartitioningLayoutExtrasOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasOutput) ToServerStoragePartitioningLayoutExtrasOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasOutput) ToServerStoragePartitioningLayoutExtrasPtrOutput() ServerStoragePartitioningLayoutExtrasPtrOutput {
	return o.ToServerStoragePartitioningLayoutExtrasPtrOutputWithContext(context.Background())
}

func (o ServerStoragePartitioningLayoutExtrasOutput) ToServerStoragePartitioningLayoutExtrasPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerStoragePartitioningLayoutExtras) *ServerStoragePartitioningLayoutExtras {
		return &v
	}).(ServerStoragePartitioningLayoutExtrasPtrOutput)
}

// LVM-specific parameters
func (o ServerStoragePartitioningLayoutExtrasOutput) Lv() ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return o.ApplyT(func(v ServerStoragePartitioningLayoutExtras) *ServerStoragePartitioningLayoutExtrasLv { return v.Lv }).(ServerStoragePartitioningLayoutExtrasLvPtrOutput)
}

// ZFS-specific parameters
func (o ServerStoragePartitioningLayoutExtrasOutput) Zp() ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return o.ApplyT(func(v ServerStoragePartitioningLayoutExtras) *ServerStoragePartitioningLayoutExtrasZp { return v.Zp }).(ServerStoragePartitioningLayoutExtrasZpPtrOutput)
}

type ServerStoragePartitioningLayoutExtrasPtrOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningLayoutExtrasPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStoragePartitioningLayoutExtras)(nil)).Elem()
}

func (o ServerStoragePartitioningLayoutExtrasPtrOutput) ToServerStoragePartitioningLayoutExtrasPtrOutput() ServerStoragePartitioningLayoutExtrasPtrOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasPtrOutput) ToServerStoragePartitioningLayoutExtrasPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasPtrOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasPtrOutput) Elem() ServerStoragePartitioningLayoutExtrasOutput {
	return o.ApplyT(func(v *ServerStoragePartitioningLayoutExtras) ServerStoragePartitioningLayoutExtras {
		if v != nil {
			return *v
		}
		var ret ServerStoragePartitioningLayoutExtras
		return ret
	}).(ServerStoragePartitioningLayoutExtrasOutput)
}

// LVM-specific parameters
func (o ServerStoragePartitioningLayoutExtrasPtrOutput) Lv() ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return o.ApplyT(func(v *ServerStoragePartitioningLayoutExtras) *ServerStoragePartitioningLayoutExtrasLv {
		if v == nil {
			return nil
		}
		return v.Lv
	}).(ServerStoragePartitioningLayoutExtrasLvPtrOutput)
}

// ZFS-specific parameters
func (o ServerStoragePartitioningLayoutExtrasPtrOutput) Zp() ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return o.ApplyT(func(v *ServerStoragePartitioningLayoutExtras) *ServerStoragePartitioningLayoutExtrasZp {
		if v == nil {
			return nil
		}
		return v.Zp
	}).(ServerStoragePartitioningLayoutExtrasZpPtrOutput)
}

type ServerStoragePartitioningLayoutExtrasLv struct {
	// Dedicated server name
	Name *string `pulumi:"name"`
}

// ServerStoragePartitioningLayoutExtrasLvInput is an input type that accepts ServerStoragePartitioningLayoutExtrasLvArgs and ServerStoragePartitioningLayoutExtrasLvOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningLayoutExtrasLvInput` via:
//
//	ServerStoragePartitioningLayoutExtrasLvArgs{...}
type ServerStoragePartitioningLayoutExtrasLvInput interface {
	pulumi.Input

	ToServerStoragePartitioningLayoutExtrasLvOutput() ServerStoragePartitioningLayoutExtrasLvOutput
	ToServerStoragePartitioningLayoutExtrasLvOutputWithContext(context.Context) ServerStoragePartitioningLayoutExtrasLvOutput
}

type ServerStoragePartitioningLayoutExtrasLvArgs struct {
	// Dedicated server name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ServerStoragePartitioningLayoutExtrasLvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasLv)(nil)).Elem()
}

func (i ServerStoragePartitioningLayoutExtrasLvArgs) ToServerStoragePartitioningLayoutExtrasLvOutput() ServerStoragePartitioningLayoutExtrasLvOutput {
	return i.ToServerStoragePartitioningLayoutExtrasLvOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningLayoutExtrasLvArgs) ToServerStoragePartitioningLayoutExtrasLvOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasLvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutExtrasLvOutput)
}

func (i ServerStoragePartitioningLayoutExtrasLvArgs) ToServerStoragePartitioningLayoutExtrasLvPtrOutput() ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return i.ToServerStoragePartitioningLayoutExtrasLvPtrOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningLayoutExtrasLvArgs) ToServerStoragePartitioningLayoutExtrasLvPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutExtrasLvOutput).ToServerStoragePartitioningLayoutExtrasLvPtrOutputWithContext(ctx)
}

// ServerStoragePartitioningLayoutExtrasLvPtrInput is an input type that accepts ServerStoragePartitioningLayoutExtrasLvArgs, ServerStoragePartitioningLayoutExtrasLvPtr and ServerStoragePartitioningLayoutExtrasLvPtrOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningLayoutExtrasLvPtrInput` via:
//
//	        ServerStoragePartitioningLayoutExtrasLvArgs{...}
//
//	or:
//
//	        nil
type ServerStoragePartitioningLayoutExtrasLvPtrInput interface {
	pulumi.Input

	ToServerStoragePartitioningLayoutExtrasLvPtrOutput() ServerStoragePartitioningLayoutExtrasLvPtrOutput
	ToServerStoragePartitioningLayoutExtrasLvPtrOutputWithContext(context.Context) ServerStoragePartitioningLayoutExtrasLvPtrOutput
}

type serverStoragePartitioningLayoutExtrasLvPtrType ServerStoragePartitioningLayoutExtrasLvArgs

func ServerStoragePartitioningLayoutExtrasLvPtr(v *ServerStoragePartitioningLayoutExtrasLvArgs) ServerStoragePartitioningLayoutExtrasLvPtrInput {
	return (*serverStoragePartitioningLayoutExtrasLvPtrType)(v)
}

func (*serverStoragePartitioningLayoutExtrasLvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStoragePartitioningLayoutExtrasLv)(nil)).Elem()
}

func (i *serverStoragePartitioningLayoutExtrasLvPtrType) ToServerStoragePartitioningLayoutExtrasLvPtrOutput() ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return i.ToServerStoragePartitioningLayoutExtrasLvPtrOutputWithContext(context.Background())
}

func (i *serverStoragePartitioningLayoutExtrasLvPtrType) ToServerStoragePartitioningLayoutExtrasLvPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutExtrasLvPtrOutput)
}

type ServerStoragePartitioningLayoutExtrasLvOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningLayoutExtrasLvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasLv)(nil)).Elem()
}

func (o ServerStoragePartitioningLayoutExtrasLvOutput) ToServerStoragePartitioningLayoutExtrasLvOutput() ServerStoragePartitioningLayoutExtrasLvOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasLvOutput) ToServerStoragePartitioningLayoutExtrasLvOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasLvOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasLvOutput) ToServerStoragePartitioningLayoutExtrasLvPtrOutput() ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return o.ToServerStoragePartitioningLayoutExtrasLvPtrOutputWithContext(context.Background())
}

func (o ServerStoragePartitioningLayoutExtrasLvOutput) ToServerStoragePartitioningLayoutExtrasLvPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerStoragePartitioningLayoutExtrasLv) *ServerStoragePartitioningLayoutExtrasLv {
		return &v
	}).(ServerStoragePartitioningLayoutExtrasLvPtrOutput)
}

// Dedicated server name
func (o ServerStoragePartitioningLayoutExtrasLvOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerStoragePartitioningLayoutExtrasLv) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServerStoragePartitioningLayoutExtrasLvPtrOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningLayoutExtrasLvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStoragePartitioningLayoutExtrasLv)(nil)).Elem()
}

func (o ServerStoragePartitioningLayoutExtrasLvPtrOutput) ToServerStoragePartitioningLayoutExtrasLvPtrOutput() ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasLvPtrOutput) ToServerStoragePartitioningLayoutExtrasLvPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasLvPtrOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasLvPtrOutput) Elem() ServerStoragePartitioningLayoutExtrasLvOutput {
	return o.ApplyT(func(v *ServerStoragePartitioningLayoutExtrasLv) ServerStoragePartitioningLayoutExtrasLv {
		if v != nil {
			return *v
		}
		var ret ServerStoragePartitioningLayoutExtrasLv
		return ret
	}).(ServerStoragePartitioningLayoutExtrasLvOutput)
}

// Dedicated server name
func (o ServerStoragePartitioningLayoutExtrasLvPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerStoragePartitioningLayoutExtrasLv) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ServerStoragePartitioningLayoutExtrasZp struct {
	// Dedicated server name
	Name *string `pulumi:"name"`
}

// ServerStoragePartitioningLayoutExtrasZpInput is an input type that accepts ServerStoragePartitioningLayoutExtrasZpArgs and ServerStoragePartitioningLayoutExtrasZpOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningLayoutExtrasZpInput` via:
//
//	ServerStoragePartitioningLayoutExtrasZpArgs{...}
type ServerStoragePartitioningLayoutExtrasZpInput interface {
	pulumi.Input

	ToServerStoragePartitioningLayoutExtrasZpOutput() ServerStoragePartitioningLayoutExtrasZpOutput
	ToServerStoragePartitioningLayoutExtrasZpOutputWithContext(context.Context) ServerStoragePartitioningLayoutExtrasZpOutput
}

type ServerStoragePartitioningLayoutExtrasZpArgs struct {
	// Dedicated server name
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ServerStoragePartitioningLayoutExtrasZpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasZp)(nil)).Elem()
}

func (i ServerStoragePartitioningLayoutExtrasZpArgs) ToServerStoragePartitioningLayoutExtrasZpOutput() ServerStoragePartitioningLayoutExtrasZpOutput {
	return i.ToServerStoragePartitioningLayoutExtrasZpOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningLayoutExtrasZpArgs) ToServerStoragePartitioningLayoutExtrasZpOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasZpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutExtrasZpOutput)
}

func (i ServerStoragePartitioningLayoutExtrasZpArgs) ToServerStoragePartitioningLayoutExtrasZpPtrOutput() ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return i.ToServerStoragePartitioningLayoutExtrasZpPtrOutputWithContext(context.Background())
}

func (i ServerStoragePartitioningLayoutExtrasZpArgs) ToServerStoragePartitioningLayoutExtrasZpPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutExtrasZpOutput).ToServerStoragePartitioningLayoutExtrasZpPtrOutputWithContext(ctx)
}

// ServerStoragePartitioningLayoutExtrasZpPtrInput is an input type that accepts ServerStoragePartitioningLayoutExtrasZpArgs, ServerStoragePartitioningLayoutExtrasZpPtr and ServerStoragePartitioningLayoutExtrasZpPtrOutput values.
// You can construct a concrete instance of `ServerStoragePartitioningLayoutExtrasZpPtrInput` via:
//
//	        ServerStoragePartitioningLayoutExtrasZpArgs{...}
//
//	or:
//
//	        nil
type ServerStoragePartitioningLayoutExtrasZpPtrInput interface {
	pulumi.Input

	ToServerStoragePartitioningLayoutExtrasZpPtrOutput() ServerStoragePartitioningLayoutExtrasZpPtrOutput
	ToServerStoragePartitioningLayoutExtrasZpPtrOutputWithContext(context.Context) ServerStoragePartitioningLayoutExtrasZpPtrOutput
}

type serverStoragePartitioningLayoutExtrasZpPtrType ServerStoragePartitioningLayoutExtrasZpArgs

func ServerStoragePartitioningLayoutExtrasZpPtr(v *ServerStoragePartitioningLayoutExtrasZpArgs) ServerStoragePartitioningLayoutExtrasZpPtrInput {
	return (*serverStoragePartitioningLayoutExtrasZpPtrType)(v)
}

func (*serverStoragePartitioningLayoutExtrasZpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStoragePartitioningLayoutExtrasZp)(nil)).Elem()
}

func (i *serverStoragePartitioningLayoutExtrasZpPtrType) ToServerStoragePartitioningLayoutExtrasZpPtrOutput() ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return i.ToServerStoragePartitioningLayoutExtrasZpPtrOutputWithContext(context.Background())
}

func (i *serverStoragePartitioningLayoutExtrasZpPtrType) ToServerStoragePartitioningLayoutExtrasZpPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerStoragePartitioningLayoutExtrasZpPtrOutput)
}

type ServerStoragePartitioningLayoutExtrasZpOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningLayoutExtrasZpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasZp)(nil)).Elem()
}

func (o ServerStoragePartitioningLayoutExtrasZpOutput) ToServerStoragePartitioningLayoutExtrasZpOutput() ServerStoragePartitioningLayoutExtrasZpOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasZpOutput) ToServerStoragePartitioningLayoutExtrasZpOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasZpOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasZpOutput) ToServerStoragePartitioningLayoutExtrasZpPtrOutput() ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return o.ToServerStoragePartitioningLayoutExtrasZpPtrOutputWithContext(context.Background())
}

func (o ServerStoragePartitioningLayoutExtrasZpOutput) ToServerStoragePartitioningLayoutExtrasZpPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerStoragePartitioningLayoutExtrasZp) *ServerStoragePartitioningLayoutExtrasZp {
		return &v
	}).(ServerStoragePartitioningLayoutExtrasZpPtrOutput)
}

// Dedicated server name
func (o ServerStoragePartitioningLayoutExtrasZpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServerStoragePartitioningLayoutExtrasZp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ServerStoragePartitioningLayoutExtrasZpPtrOutput struct{ *pulumi.OutputState }

func (ServerStoragePartitioningLayoutExtrasZpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerStoragePartitioningLayoutExtrasZp)(nil)).Elem()
}

func (o ServerStoragePartitioningLayoutExtrasZpPtrOutput) ToServerStoragePartitioningLayoutExtrasZpPtrOutput() ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasZpPtrOutput) ToServerStoragePartitioningLayoutExtrasZpPtrOutputWithContext(ctx context.Context) ServerStoragePartitioningLayoutExtrasZpPtrOutput {
	return o
}

func (o ServerStoragePartitioningLayoutExtrasZpPtrOutput) Elem() ServerStoragePartitioningLayoutExtrasZpOutput {
	return o.ApplyT(func(v *ServerStoragePartitioningLayoutExtrasZp) ServerStoragePartitioningLayoutExtrasZp {
		if v != nil {
			return *v
		}
		var ret ServerStoragePartitioningLayoutExtrasZp
		return ret
	}).(ServerStoragePartitioningLayoutExtrasZpOutput)
}

// Dedicated server name
func (o ServerStoragePartitioningLayoutExtrasZpPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServerStoragePartitioningLayoutExtrasZp) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type GetCloudIam struct {
	// Resource display name
	DisplayName string `pulumi:"displayName"`
	// Unique identifier of the resource
	Id string `pulumi:"id"`
	// Resource tags. Tags that were internally computed are prefixed with ovh:
	Tags map[string]string `pulumi:"tags"`
	// Unique resource name used in policies
	Urn string `pulumi:"urn"`
}

// GetCloudIamInput is an input type that accepts GetCloudIamArgs and GetCloudIamOutput values.
// You can construct a concrete instance of `GetCloudIamInput` via:
//
//	GetCloudIamArgs{...}
type GetCloudIamInput interface {
	pulumi.Input

	ToGetCloudIamOutput() GetCloudIamOutput
	ToGetCloudIamOutputWithContext(context.Context) GetCloudIamOutput
}

type GetCloudIamArgs struct {
	// Resource display name
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Unique identifier of the resource
	Id pulumi.StringInput `pulumi:"id"`
	// Resource tags. Tags that were internally computed are prefixed with ovh:
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// Unique resource name used in policies
	Urn pulumi.StringInput `pulumi:"urn"`
}

func (GetCloudIamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudIam)(nil)).Elem()
}

func (i GetCloudIamArgs) ToGetCloudIamOutput() GetCloudIamOutput {
	return i.ToGetCloudIamOutputWithContext(context.Background())
}

func (i GetCloudIamArgs) ToGetCloudIamOutputWithContext(ctx context.Context) GetCloudIamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudIamOutput)
}

type GetCloudIamOutput struct{ *pulumi.OutputState }

func (GetCloudIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudIam)(nil)).Elem()
}

func (o GetCloudIamOutput) ToGetCloudIamOutput() GetCloudIamOutput {
	return o
}

func (o GetCloudIamOutput) ToGetCloudIamOutputWithContext(ctx context.Context) GetCloudIamOutput {
	return o
}

// Resource display name
func (o GetCloudIamOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudIam) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Unique identifier of the resource
func (o GetCloudIamOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudIam) string { return v.Id }).(pulumi.StringOutput)
}

// Resource tags. Tags that were internally computed are prefixed with ovh:
func (o GetCloudIamOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetCloudIam) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Unique resource name used in policies
func (o GetCloudIamOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudIam) string { return v.Urn }).(pulumi.StringOutput)
}

type GetCloudVersion struct {
	Build string `pulumi:"build"`
	Major string `pulumi:"major"`
	Minor string `pulumi:"minor"`
}

// GetCloudVersionInput is an input type that accepts GetCloudVersionArgs and GetCloudVersionOutput values.
// You can construct a concrete instance of `GetCloudVersionInput` via:
//
//	GetCloudVersionArgs{...}
type GetCloudVersionInput interface {
	pulumi.Input

	ToGetCloudVersionOutput() GetCloudVersionOutput
	ToGetCloudVersionOutputWithContext(context.Context) GetCloudVersionOutput
}

type GetCloudVersionArgs struct {
	Build pulumi.StringInput `pulumi:"build"`
	Major pulumi.StringInput `pulumi:"major"`
	Minor pulumi.StringInput `pulumi:"minor"`
}

func (GetCloudVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVersion)(nil)).Elem()
}

func (i GetCloudVersionArgs) ToGetCloudVersionOutput() GetCloudVersionOutput {
	return i.ToGetCloudVersionOutputWithContext(context.Background())
}

func (i GetCloudVersionArgs) ToGetCloudVersionOutputWithContext(ctx context.Context) GetCloudVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudVersionOutput)
}

type GetCloudVersionOutput struct{ *pulumi.OutputState }

func (GetCloudVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudVersion)(nil)).Elem()
}

func (o GetCloudVersionOutput) ToGetCloudVersionOutput() GetCloudVersionOutput {
	return o
}

func (o GetCloudVersionOutput) ToGetCloudVersionOutputWithContext(ctx context.Context) GetCloudVersionOutput {
	return o
}

func (o GetCloudVersionOutput) Build() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVersion) string { return v.Build }).(pulumi.StringOutput)
}

func (o GetCloudVersionOutput) Major() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVersion) string { return v.Major }).(pulumi.StringOutput)
}

func (o GetCloudVersionOutput) Minor() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudVersion) string { return v.Minor }).(pulumi.StringOutput)
}

type GetServerSpecificationsHardwareDefaultHardwareRaidSize struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsHardwareDefaultHardwareRaidSizeInput is an input type that accepts GetServerSpecificationsHardwareDefaultHardwareRaidSizeArgs and GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareDefaultHardwareRaidSizeInput` via:
//
//	GetServerSpecificationsHardwareDefaultHardwareRaidSizeArgs{...}
type GetServerSpecificationsHardwareDefaultHardwareRaidSizeInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput() GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput
	ToGetServerSpecificationsHardwareDefaultHardwareRaidSizeOutputWithContext(context.Context) GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput
}

type GetServerSpecificationsHardwareDefaultHardwareRaidSizeArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsHardwareDefaultHardwareRaidSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareDefaultHardwareRaidSize)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareDefaultHardwareRaidSizeArgs) ToGetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput() GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput {
	return i.ToGetServerSpecificationsHardwareDefaultHardwareRaidSizeOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareDefaultHardwareRaidSizeArgs) ToGetServerSpecificationsHardwareDefaultHardwareRaidSizeOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput)
}

type GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareDefaultHardwareRaidSize)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput) ToGetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput() GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput {
	return o
}

func (o GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput) ToGetServerSpecificationsHardwareDefaultHardwareRaidSizeOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput {
	return o
}

func (o GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDefaultHardwareRaidSize) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDefaultHardwareRaidSize) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsHardwareDiskGroup struct {
	// Default hardware raid size for this disk group
	DefaultHardwareRaidSize GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize `pulumi:"defaultHardwareRaidSize"`
	// Default hardware raid type for this disk group
	DefaultHardwareRaidType string `pulumi:"defaultHardwareRaidType"`
	// Expansion card description
	Description string `pulumi:"description"`
	// Identifier of this disk group
	DiskGroupId float64 `pulumi:"diskGroupId"`
	// Disk capacity
	DiskSize GetServerSpecificationsHardwareDiskGroupDiskSize `pulumi:"diskSize"`
	// Type of the disk (SSD, SATA, SAS, ...)
	DiskType string `pulumi:"diskType"`
	// Number of disks in this group
	NumberOfDisks float64 `pulumi:"numberOfDisks"`
	// Raid controller, if any, managing this group of disks
	RaidController string `pulumi:"raidController"`
}

// GetServerSpecificationsHardwareDiskGroupInput is an input type that accepts GetServerSpecificationsHardwareDiskGroupArgs and GetServerSpecificationsHardwareDiskGroupOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareDiskGroupInput` via:
//
//	GetServerSpecificationsHardwareDiskGroupArgs{...}
type GetServerSpecificationsHardwareDiskGroupInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareDiskGroupOutput() GetServerSpecificationsHardwareDiskGroupOutput
	ToGetServerSpecificationsHardwareDiskGroupOutputWithContext(context.Context) GetServerSpecificationsHardwareDiskGroupOutput
}

type GetServerSpecificationsHardwareDiskGroupArgs struct {
	// Default hardware raid size for this disk group
	DefaultHardwareRaidSize GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeInput `pulumi:"defaultHardwareRaidSize"`
	// Default hardware raid type for this disk group
	DefaultHardwareRaidType pulumi.StringInput `pulumi:"defaultHardwareRaidType"`
	// Expansion card description
	Description pulumi.StringInput `pulumi:"description"`
	// Identifier of this disk group
	DiskGroupId pulumi.Float64Input `pulumi:"diskGroupId"`
	// Disk capacity
	DiskSize GetServerSpecificationsHardwareDiskGroupDiskSizeInput `pulumi:"diskSize"`
	// Type of the disk (SSD, SATA, SAS, ...)
	DiskType pulumi.StringInput `pulumi:"diskType"`
	// Number of disks in this group
	NumberOfDisks pulumi.Float64Input `pulumi:"numberOfDisks"`
	// Raid controller, if any, managing this group of disks
	RaidController pulumi.StringInput `pulumi:"raidController"`
}

func (GetServerSpecificationsHardwareDiskGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroup)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareDiskGroupArgs) ToGetServerSpecificationsHardwareDiskGroupOutput() GetServerSpecificationsHardwareDiskGroupOutput {
	return i.ToGetServerSpecificationsHardwareDiskGroupOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareDiskGroupArgs) ToGetServerSpecificationsHardwareDiskGroupOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDiskGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareDiskGroupOutput)
}

// GetServerSpecificationsHardwareDiskGroupArrayInput is an input type that accepts GetServerSpecificationsHardwareDiskGroupArray and GetServerSpecificationsHardwareDiskGroupArrayOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareDiskGroupArrayInput` via:
//
//	GetServerSpecificationsHardwareDiskGroupArray{ GetServerSpecificationsHardwareDiskGroupArgs{...} }
type GetServerSpecificationsHardwareDiskGroupArrayInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareDiskGroupArrayOutput() GetServerSpecificationsHardwareDiskGroupArrayOutput
	ToGetServerSpecificationsHardwareDiskGroupArrayOutputWithContext(context.Context) GetServerSpecificationsHardwareDiskGroupArrayOutput
}

type GetServerSpecificationsHardwareDiskGroupArray []GetServerSpecificationsHardwareDiskGroupInput

func (GetServerSpecificationsHardwareDiskGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsHardwareDiskGroup)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareDiskGroupArray) ToGetServerSpecificationsHardwareDiskGroupArrayOutput() GetServerSpecificationsHardwareDiskGroupArrayOutput {
	return i.ToGetServerSpecificationsHardwareDiskGroupArrayOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareDiskGroupArray) ToGetServerSpecificationsHardwareDiskGroupArrayOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDiskGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareDiskGroupArrayOutput)
}

type GetServerSpecificationsHardwareDiskGroupOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareDiskGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroup)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareDiskGroupOutput) ToGetServerSpecificationsHardwareDiskGroupOutput() GetServerSpecificationsHardwareDiskGroupOutput {
	return o
}

func (o GetServerSpecificationsHardwareDiskGroupOutput) ToGetServerSpecificationsHardwareDiskGroupOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDiskGroupOutput {
	return o
}

// Default hardware raid size for this disk group
func (o GetServerSpecificationsHardwareDiskGroupOutput) DefaultHardwareRaidSize() GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroup) GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize {
		return v.DefaultHardwareRaidSize
	}).(GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput)
}

// Default hardware raid type for this disk group
func (o GetServerSpecificationsHardwareDiskGroupOutput) DefaultHardwareRaidType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroup) string { return v.DefaultHardwareRaidType }).(pulumi.StringOutput)
}

// Expansion card description
func (o GetServerSpecificationsHardwareDiskGroupOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroup) string { return v.Description }).(pulumi.StringOutput)
}

// Identifier of this disk group
func (o GetServerSpecificationsHardwareDiskGroupOutput) DiskGroupId() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroup) float64 { return v.DiskGroupId }).(pulumi.Float64Output)
}

// Disk capacity
func (o GetServerSpecificationsHardwareDiskGroupOutput) DiskSize() GetServerSpecificationsHardwareDiskGroupDiskSizeOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroup) GetServerSpecificationsHardwareDiskGroupDiskSize {
		return v.DiskSize
	}).(GetServerSpecificationsHardwareDiskGroupDiskSizeOutput)
}

// Type of the disk (SSD, SATA, SAS, ...)
func (o GetServerSpecificationsHardwareDiskGroupOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroup) string { return v.DiskType }).(pulumi.StringOutput)
}

// Number of disks in this group
func (o GetServerSpecificationsHardwareDiskGroupOutput) NumberOfDisks() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroup) float64 { return v.NumberOfDisks }).(pulumi.Float64Output)
}

// Raid controller, if any, managing this group of disks
func (o GetServerSpecificationsHardwareDiskGroupOutput) RaidController() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroup) string { return v.RaidController }).(pulumi.StringOutput)
}

type GetServerSpecificationsHardwareDiskGroupArrayOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareDiskGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsHardwareDiskGroup)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareDiskGroupArrayOutput) ToGetServerSpecificationsHardwareDiskGroupArrayOutput() GetServerSpecificationsHardwareDiskGroupArrayOutput {
	return o
}

func (o GetServerSpecificationsHardwareDiskGroupArrayOutput) ToGetServerSpecificationsHardwareDiskGroupArrayOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDiskGroupArrayOutput {
	return o
}

func (o GetServerSpecificationsHardwareDiskGroupArrayOutput) Index(i pulumi.IntInput) GetServerSpecificationsHardwareDiskGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerSpecificationsHardwareDiskGroup {
		return vs[0].([]GetServerSpecificationsHardwareDiskGroup)[vs[1].(int)]
	}).(GetServerSpecificationsHardwareDiskGroupOutput)
}

type GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeInput is an input type that accepts GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeArgs and GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeInput` via:
//
//	GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeArgs{...}
type GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput() GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput
	ToGetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutputWithContext(context.Context) GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput
}

type GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeArgs) ToGetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput() GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput {
	return i.ToGetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeArgs) ToGetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput)
}

type GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput) ToGetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput() GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput {
	return o
}

func (o GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput) ToGetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput {
	return o
}

func (o GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSize) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsHardwareDiskGroupDiskSize struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsHardwareDiskGroupDiskSizeInput is an input type that accepts GetServerSpecificationsHardwareDiskGroupDiskSizeArgs and GetServerSpecificationsHardwareDiskGroupDiskSizeOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareDiskGroupDiskSizeInput` via:
//
//	GetServerSpecificationsHardwareDiskGroupDiskSizeArgs{...}
type GetServerSpecificationsHardwareDiskGroupDiskSizeInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareDiskGroupDiskSizeOutput() GetServerSpecificationsHardwareDiskGroupDiskSizeOutput
	ToGetServerSpecificationsHardwareDiskGroupDiskSizeOutputWithContext(context.Context) GetServerSpecificationsHardwareDiskGroupDiskSizeOutput
}

type GetServerSpecificationsHardwareDiskGroupDiskSizeArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsHardwareDiskGroupDiskSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroupDiskSize)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareDiskGroupDiskSizeArgs) ToGetServerSpecificationsHardwareDiskGroupDiskSizeOutput() GetServerSpecificationsHardwareDiskGroupDiskSizeOutput {
	return i.ToGetServerSpecificationsHardwareDiskGroupDiskSizeOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareDiskGroupDiskSizeArgs) ToGetServerSpecificationsHardwareDiskGroupDiskSizeOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDiskGroupDiskSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareDiskGroupDiskSizeOutput)
}

type GetServerSpecificationsHardwareDiskGroupDiskSizeOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareDiskGroupDiskSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroupDiskSize)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareDiskGroupDiskSizeOutput) ToGetServerSpecificationsHardwareDiskGroupDiskSizeOutput() GetServerSpecificationsHardwareDiskGroupDiskSizeOutput {
	return o
}

func (o GetServerSpecificationsHardwareDiskGroupDiskSizeOutput) ToGetServerSpecificationsHardwareDiskGroupDiskSizeOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareDiskGroupDiskSizeOutput {
	return o
}

func (o GetServerSpecificationsHardwareDiskGroupDiskSizeOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroupDiskSize) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsHardwareDiskGroupDiskSizeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsHardwareDiskGroupDiskSize) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsHardwareExpansionCard struct {
	// Expansion card description
	Description string `pulumi:"description"`
	// Expansion card type enum
	Type string `pulumi:"type"`
}

// GetServerSpecificationsHardwareExpansionCardInput is an input type that accepts GetServerSpecificationsHardwareExpansionCardArgs and GetServerSpecificationsHardwareExpansionCardOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareExpansionCardInput` via:
//
//	GetServerSpecificationsHardwareExpansionCardArgs{...}
type GetServerSpecificationsHardwareExpansionCardInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareExpansionCardOutput() GetServerSpecificationsHardwareExpansionCardOutput
	ToGetServerSpecificationsHardwareExpansionCardOutputWithContext(context.Context) GetServerSpecificationsHardwareExpansionCardOutput
}

type GetServerSpecificationsHardwareExpansionCardArgs struct {
	// Expansion card description
	Description pulumi.StringInput `pulumi:"description"`
	// Expansion card type enum
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServerSpecificationsHardwareExpansionCardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareExpansionCard)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareExpansionCardArgs) ToGetServerSpecificationsHardwareExpansionCardOutput() GetServerSpecificationsHardwareExpansionCardOutput {
	return i.ToGetServerSpecificationsHardwareExpansionCardOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareExpansionCardArgs) ToGetServerSpecificationsHardwareExpansionCardOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareExpansionCardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareExpansionCardOutput)
}

// GetServerSpecificationsHardwareExpansionCardArrayInput is an input type that accepts GetServerSpecificationsHardwareExpansionCardArray and GetServerSpecificationsHardwareExpansionCardArrayOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareExpansionCardArrayInput` via:
//
//	GetServerSpecificationsHardwareExpansionCardArray{ GetServerSpecificationsHardwareExpansionCardArgs{...} }
type GetServerSpecificationsHardwareExpansionCardArrayInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareExpansionCardArrayOutput() GetServerSpecificationsHardwareExpansionCardArrayOutput
	ToGetServerSpecificationsHardwareExpansionCardArrayOutputWithContext(context.Context) GetServerSpecificationsHardwareExpansionCardArrayOutput
}

type GetServerSpecificationsHardwareExpansionCardArray []GetServerSpecificationsHardwareExpansionCardInput

func (GetServerSpecificationsHardwareExpansionCardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsHardwareExpansionCard)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareExpansionCardArray) ToGetServerSpecificationsHardwareExpansionCardArrayOutput() GetServerSpecificationsHardwareExpansionCardArrayOutput {
	return i.ToGetServerSpecificationsHardwareExpansionCardArrayOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareExpansionCardArray) ToGetServerSpecificationsHardwareExpansionCardArrayOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareExpansionCardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareExpansionCardArrayOutput)
}

type GetServerSpecificationsHardwareExpansionCardOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareExpansionCardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareExpansionCard)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareExpansionCardOutput) ToGetServerSpecificationsHardwareExpansionCardOutput() GetServerSpecificationsHardwareExpansionCardOutput {
	return o
}

func (o GetServerSpecificationsHardwareExpansionCardOutput) ToGetServerSpecificationsHardwareExpansionCardOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareExpansionCardOutput {
	return o
}

// Expansion card description
func (o GetServerSpecificationsHardwareExpansionCardOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareExpansionCard) string { return v.Description }).(pulumi.StringOutput)
}

// Expansion card type enum
func (o GetServerSpecificationsHardwareExpansionCardOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareExpansionCard) string { return v.Type }).(pulumi.StringOutput)
}

type GetServerSpecificationsHardwareExpansionCardArrayOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareExpansionCardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsHardwareExpansionCard)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareExpansionCardArrayOutput) ToGetServerSpecificationsHardwareExpansionCardArrayOutput() GetServerSpecificationsHardwareExpansionCardArrayOutput {
	return o
}

func (o GetServerSpecificationsHardwareExpansionCardArrayOutput) ToGetServerSpecificationsHardwareExpansionCardArrayOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareExpansionCardArrayOutput {
	return o
}

func (o GetServerSpecificationsHardwareExpansionCardArrayOutput) Index(i pulumi.IntInput) GetServerSpecificationsHardwareExpansionCardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerSpecificationsHardwareExpansionCard {
		return vs[0].([]GetServerSpecificationsHardwareExpansionCard)[vs[1].(int)]
	}).(GetServerSpecificationsHardwareExpansionCardOutput)
}

type GetServerSpecificationsHardwareMemorySize struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsHardwareMemorySizeInput is an input type that accepts GetServerSpecificationsHardwareMemorySizeArgs and GetServerSpecificationsHardwareMemorySizeOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareMemorySizeInput` via:
//
//	GetServerSpecificationsHardwareMemorySizeArgs{...}
type GetServerSpecificationsHardwareMemorySizeInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareMemorySizeOutput() GetServerSpecificationsHardwareMemorySizeOutput
	ToGetServerSpecificationsHardwareMemorySizeOutputWithContext(context.Context) GetServerSpecificationsHardwareMemorySizeOutput
}

type GetServerSpecificationsHardwareMemorySizeArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsHardwareMemorySizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareMemorySize)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareMemorySizeArgs) ToGetServerSpecificationsHardwareMemorySizeOutput() GetServerSpecificationsHardwareMemorySizeOutput {
	return i.ToGetServerSpecificationsHardwareMemorySizeOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareMemorySizeArgs) ToGetServerSpecificationsHardwareMemorySizeOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareMemorySizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareMemorySizeOutput)
}

type GetServerSpecificationsHardwareMemorySizeOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareMemorySizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareMemorySize)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareMemorySizeOutput) ToGetServerSpecificationsHardwareMemorySizeOutput() GetServerSpecificationsHardwareMemorySizeOutput {
	return o
}

func (o GetServerSpecificationsHardwareMemorySizeOutput) ToGetServerSpecificationsHardwareMemorySizeOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareMemorySizeOutput {
	return o
}

func (o GetServerSpecificationsHardwareMemorySizeOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareMemorySize) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsHardwareMemorySizeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsHardwareMemorySize) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsHardwareUsbKey struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsHardwareUsbKeyInput is an input type that accepts GetServerSpecificationsHardwareUsbKeyArgs and GetServerSpecificationsHardwareUsbKeyOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareUsbKeyInput` via:
//
//	GetServerSpecificationsHardwareUsbKeyArgs{...}
type GetServerSpecificationsHardwareUsbKeyInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareUsbKeyOutput() GetServerSpecificationsHardwareUsbKeyOutput
	ToGetServerSpecificationsHardwareUsbKeyOutputWithContext(context.Context) GetServerSpecificationsHardwareUsbKeyOutput
}

type GetServerSpecificationsHardwareUsbKeyArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsHardwareUsbKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareUsbKey)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareUsbKeyArgs) ToGetServerSpecificationsHardwareUsbKeyOutput() GetServerSpecificationsHardwareUsbKeyOutput {
	return i.ToGetServerSpecificationsHardwareUsbKeyOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareUsbKeyArgs) ToGetServerSpecificationsHardwareUsbKeyOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareUsbKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareUsbKeyOutput)
}

// GetServerSpecificationsHardwareUsbKeyArrayInput is an input type that accepts GetServerSpecificationsHardwareUsbKeyArray and GetServerSpecificationsHardwareUsbKeyArrayOutput values.
// You can construct a concrete instance of `GetServerSpecificationsHardwareUsbKeyArrayInput` via:
//
//	GetServerSpecificationsHardwareUsbKeyArray{ GetServerSpecificationsHardwareUsbKeyArgs{...} }
type GetServerSpecificationsHardwareUsbKeyArrayInput interface {
	pulumi.Input

	ToGetServerSpecificationsHardwareUsbKeyArrayOutput() GetServerSpecificationsHardwareUsbKeyArrayOutput
	ToGetServerSpecificationsHardwareUsbKeyArrayOutputWithContext(context.Context) GetServerSpecificationsHardwareUsbKeyArrayOutput
}

type GetServerSpecificationsHardwareUsbKeyArray []GetServerSpecificationsHardwareUsbKeyInput

func (GetServerSpecificationsHardwareUsbKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsHardwareUsbKey)(nil)).Elem()
}

func (i GetServerSpecificationsHardwareUsbKeyArray) ToGetServerSpecificationsHardwareUsbKeyArrayOutput() GetServerSpecificationsHardwareUsbKeyArrayOutput {
	return i.ToGetServerSpecificationsHardwareUsbKeyArrayOutputWithContext(context.Background())
}

func (i GetServerSpecificationsHardwareUsbKeyArray) ToGetServerSpecificationsHardwareUsbKeyArrayOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareUsbKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsHardwareUsbKeyArrayOutput)
}

type GetServerSpecificationsHardwareUsbKeyOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareUsbKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsHardwareUsbKey)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareUsbKeyOutput) ToGetServerSpecificationsHardwareUsbKeyOutput() GetServerSpecificationsHardwareUsbKeyOutput {
	return o
}

func (o GetServerSpecificationsHardwareUsbKeyOutput) ToGetServerSpecificationsHardwareUsbKeyOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareUsbKeyOutput {
	return o
}

func (o GetServerSpecificationsHardwareUsbKeyOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsHardwareUsbKey) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsHardwareUsbKeyOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsHardwareUsbKey) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsHardwareUsbKeyArrayOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsHardwareUsbKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsHardwareUsbKey)(nil)).Elem()
}

func (o GetServerSpecificationsHardwareUsbKeyArrayOutput) ToGetServerSpecificationsHardwareUsbKeyArrayOutput() GetServerSpecificationsHardwareUsbKeyArrayOutput {
	return o
}

func (o GetServerSpecificationsHardwareUsbKeyArrayOutput) ToGetServerSpecificationsHardwareUsbKeyArrayOutputWithContext(ctx context.Context) GetServerSpecificationsHardwareUsbKeyArrayOutput {
	return o
}

func (o GetServerSpecificationsHardwareUsbKeyArrayOutput) Index(i pulumi.IntInput) GetServerSpecificationsHardwareUsbKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerSpecificationsHardwareUsbKey {
		return vs[0].([]GetServerSpecificationsHardwareUsbKey)[vs[1].(int)]
	}).(GetServerSpecificationsHardwareUsbKeyOutput)
}

type GetServerSpecificationsNetworkBandwidth struct {
	// Bandwidth limitation Internet to OVH
	InternetToOvh GetServerSpecificationsNetworkBandwidthInternetToOvh `pulumi:"internetToOvh"`
	// Bandwidth limitation OVH to Internet
	OvhToInternet GetServerSpecificationsNetworkBandwidthOvhToInternet `pulumi:"ovhToInternet"`
	// Bandwidth limitation OVH to OVH
	OvhToOvh GetServerSpecificationsNetworkBandwidthOvhToOvh `pulumi:"ovhToOvh"`
	// Bandwidth offer type (included┃standard)
	Type string `pulumi:"type"`
}

// GetServerSpecificationsNetworkBandwidthInput is an input type that accepts GetServerSpecificationsNetworkBandwidthArgs and GetServerSpecificationsNetworkBandwidthOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkBandwidthInput` via:
//
//	GetServerSpecificationsNetworkBandwidthArgs{...}
type GetServerSpecificationsNetworkBandwidthInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkBandwidthOutput() GetServerSpecificationsNetworkBandwidthOutput
	ToGetServerSpecificationsNetworkBandwidthOutputWithContext(context.Context) GetServerSpecificationsNetworkBandwidthOutput
}

type GetServerSpecificationsNetworkBandwidthArgs struct {
	// Bandwidth limitation Internet to OVH
	InternetToOvh GetServerSpecificationsNetworkBandwidthInternetToOvhInput `pulumi:"internetToOvh"`
	// Bandwidth limitation OVH to Internet
	OvhToInternet GetServerSpecificationsNetworkBandwidthOvhToInternetInput `pulumi:"ovhToInternet"`
	// Bandwidth limitation OVH to OVH
	OvhToOvh GetServerSpecificationsNetworkBandwidthOvhToOvhInput `pulumi:"ovhToOvh"`
	// Bandwidth offer type (included┃standard)
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServerSpecificationsNetworkBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkBandwidth)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkBandwidthArgs) ToGetServerSpecificationsNetworkBandwidthOutput() GetServerSpecificationsNetworkBandwidthOutput {
	return i.ToGetServerSpecificationsNetworkBandwidthOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkBandwidthArgs) ToGetServerSpecificationsNetworkBandwidthOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkBandwidthOutput)
}

type GetServerSpecificationsNetworkBandwidthOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkBandwidth)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkBandwidthOutput) ToGetServerSpecificationsNetworkBandwidthOutput() GetServerSpecificationsNetworkBandwidthOutput {
	return o
}

func (o GetServerSpecificationsNetworkBandwidthOutput) ToGetServerSpecificationsNetworkBandwidthOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkBandwidthOutput {
	return o
}

// Bandwidth limitation Internet to OVH
func (o GetServerSpecificationsNetworkBandwidthOutput) InternetToOvh() GetServerSpecificationsNetworkBandwidthInternetToOvhOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidth) GetServerSpecificationsNetworkBandwidthInternetToOvh {
		return v.InternetToOvh
	}).(GetServerSpecificationsNetworkBandwidthInternetToOvhOutput)
}

// Bandwidth limitation OVH to Internet
func (o GetServerSpecificationsNetworkBandwidthOutput) OvhToInternet() GetServerSpecificationsNetworkBandwidthOvhToInternetOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidth) GetServerSpecificationsNetworkBandwidthOvhToInternet {
		return v.OvhToInternet
	}).(GetServerSpecificationsNetworkBandwidthOvhToInternetOutput)
}

// Bandwidth limitation OVH to OVH
func (o GetServerSpecificationsNetworkBandwidthOutput) OvhToOvh() GetServerSpecificationsNetworkBandwidthOvhToOvhOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidth) GetServerSpecificationsNetworkBandwidthOvhToOvh {
		return v.OvhToOvh
	}).(GetServerSpecificationsNetworkBandwidthOvhToOvhOutput)
}

// Bandwidth offer type (included┃standard)
func (o GetServerSpecificationsNetworkBandwidthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidth) string { return v.Type }).(pulumi.StringOutput)
}

type GetServerSpecificationsNetworkBandwidthInternetToOvh struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsNetworkBandwidthInternetToOvhInput is an input type that accepts GetServerSpecificationsNetworkBandwidthInternetToOvhArgs and GetServerSpecificationsNetworkBandwidthInternetToOvhOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkBandwidthInternetToOvhInput` via:
//
//	GetServerSpecificationsNetworkBandwidthInternetToOvhArgs{...}
type GetServerSpecificationsNetworkBandwidthInternetToOvhInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkBandwidthInternetToOvhOutput() GetServerSpecificationsNetworkBandwidthInternetToOvhOutput
	ToGetServerSpecificationsNetworkBandwidthInternetToOvhOutputWithContext(context.Context) GetServerSpecificationsNetworkBandwidthInternetToOvhOutput
}

type GetServerSpecificationsNetworkBandwidthInternetToOvhArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsNetworkBandwidthInternetToOvhArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthInternetToOvh)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkBandwidthInternetToOvhArgs) ToGetServerSpecificationsNetworkBandwidthInternetToOvhOutput() GetServerSpecificationsNetworkBandwidthInternetToOvhOutput {
	return i.ToGetServerSpecificationsNetworkBandwidthInternetToOvhOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkBandwidthInternetToOvhArgs) ToGetServerSpecificationsNetworkBandwidthInternetToOvhOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkBandwidthInternetToOvhOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkBandwidthInternetToOvhOutput)
}

type GetServerSpecificationsNetworkBandwidthInternetToOvhOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkBandwidthInternetToOvhOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthInternetToOvh)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkBandwidthInternetToOvhOutput) ToGetServerSpecificationsNetworkBandwidthInternetToOvhOutput() GetServerSpecificationsNetworkBandwidthInternetToOvhOutput {
	return o
}

func (o GetServerSpecificationsNetworkBandwidthInternetToOvhOutput) ToGetServerSpecificationsNetworkBandwidthInternetToOvhOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkBandwidthInternetToOvhOutput {
	return o
}

func (o GetServerSpecificationsNetworkBandwidthInternetToOvhOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidthInternetToOvh) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsNetworkBandwidthInternetToOvhOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidthInternetToOvh) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsNetworkBandwidthOvhToInternet struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsNetworkBandwidthOvhToInternetInput is an input type that accepts GetServerSpecificationsNetworkBandwidthOvhToInternetArgs and GetServerSpecificationsNetworkBandwidthOvhToInternetOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkBandwidthOvhToInternetInput` via:
//
//	GetServerSpecificationsNetworkBandwidthOvhToInternetArgs{...}
type GetServerSpecificationsNetworkBandwidthOvhToInternetInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkBandwidthOvhToInternetOutput() GetServerSpecificationsNetworkBandwidthOvhToInternetOutput
	ToGetServerSpecificationsNetworkBandwidthOvhToInternetOutputWithContext(context.Context) GetServerSpecificationsNetworkBandwidthOvhToInternetOutput
}

type GetServerSpecificationsNetworkBandwidthOvhToInternetArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsNetworkBandwidthOvhToInternetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthOvhToInternet)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkBandwidthOvhToInternetArgs) ToGetServerSpecificationsNetworkBandwidthOvhToInternetOutput() GetServerSpecificationsNetworkBandwidthOvhToInternetOutput {
	return i.ToGetServerSpecificationsNetworkBandwidthOvhToInternetOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkBandwidthOvhToInternetArgs) ToGetServerSpecificationsNetworkBandwidthOvhToInternetOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkBandwidthOvhToInternetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkBandwidthOvhToInternetOutput)
}

type GetServerSpecificationsNetworkBandwidthOvhToInternetOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkBandwidthOvhToInternetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthOvhToInternet)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkBandwidthOvhToInternetOutput) ToGetServerSpecificationsNetworkBandwidthOvhToInternetOutput() GetServerSpecificationsNetworkBandwidthOvhToInternetOutput {
	return o
}

func (o GetServerSpecificationsNetworkBandwidthOvhToInternetOutput) ToGetServerSpecificationsNetworkBandwidthOvhToInternetOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkBandwidthOvhToInternetOutput {
	return o
}

func (o GetServerSpecificationsNetworkBandwidthOvhToInternetOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidthOvhToInternet) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsNetworkBandwidthOvhToInternetOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidthOvhToInternet) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsNetworkBandwidthOvhToOvh struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsNetworkBandwidthOvhToOvhInput is an input type that accepts GetServerSpecificationsNetworkBandwidthOvhToOvhArgs and GetServerSpecificationsNetworkBandwidthOvhToOvhOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkBandwidthOvhToOvhInput` via:
//
//	GetServerSpecificationsNetworkBandwidthOvhToOvhArgs{...}
type GetServerSpecificationsNetworkBandwidthOvhToOvhInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkBandwidthOvhToOvhOutput() GetServerSpecificationsNetworkBandwidthOvhToOvhOutput
	ToGetServerSpecificationsNetworkBandwidthOvhToOvhOutputWithContext(context.Context) GetServerSpecificationsNetworkBandwidthOvhToOvhOutput
}

type GetServerSpecificationsNetworkBandwidthOvhToOvhArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsNetworkBandwidthOvhToOvhArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthOvhToOvh)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkBandwidthOvhToOvhArgs) ToGetServerSpecificationsNetworkBandwidthOvhToOvhOutput() GetServerSpecificationsNetworkBandwidthOvhToOvhOutput {
	return i.ToGetServerSpecificationsNetworkBandwidthOvhToOvhOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkBandwidthOvhToOvhArgs) ToGetServerSpecificationsNetworkBandwidthOvhToOvhOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkBandwidthOvhToOvhOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkBandwidthOvhToOvhOutput)
}

type GetServerSpecificationsNetworkBandwidthOvhToOvhOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkBandwidthOvhToOvhOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthOvhToOvh)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkBandwidthOvhToOvhOutput) ToGetServerSpecificationsNetworkBandwidthOvhToOvhOutput() GetServerSpecificationsNetworkBandwidthOvhToOvhOutput {
	return o
}

func (o GetServerSpecificationsNetworkBandwidthOvhToOvhOutput) ToGetServerSpecificationsNetworkBandwidthOvhToOvhOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkBandwidthOvhToOvhOutput {
	return o
}

func (o GetServerSpecificationsNetworkBandwidthOvhToOvhOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidthOvhToOvh) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsNetworkBandwidthOvhToOvhOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkBandwidthOvhToOvh) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsNetworkConnectionVal struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsNetworkConnectionValInput is an input type that accepts GetServerSpecificationsNetworkConnectionValArgs and GetServerSpecificationsNetworkConnectionValOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkConnectionValInput` via:
//
//	GetServerSpecificationsNetworkConnectionValArgs{...}
type GetServerSpecificationsNetworkConnectionValInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkConnectionValOutput() GetServerSpecificationsNetworkConnectionValOutput
	ToGetServerSpecificationsNetworkConnectionValOutputWithContext(context.Context) GetServerSpecificationsNetworkConnectionValOutput
}

type GetServerSpecificationsNetworkConnectionValArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsNetworkConnectionValArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkConnectionVal)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkConnectionValArgs) ToGetServerSpecificationsNetworkConnectionValOutput() GetServerSpecificationsNetworkConnectionValOutput {
	return i.ToGetServerSpecificationsNetworkConnectionValOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkConnectionValArgs) ToGetServerSpecificationsNetworkConnectionValOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkConnectionValOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkConnectionValOutput)
}

type GetServerSpecificationsNetworkConnectionValOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkConnectionValOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkConnectionVal)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkConnectionValOutput) ToGetServerSpecificationsNetworkConnectionValOutput() GetServerSpecificationsNetworkConnectionValOutput {
	return o
}

func (o GetServerSpecificationsNetworkConnectionValOutput) ToGetServerSpecificationsNetworkConnectionValOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkConnectionValOutput {
	return o
}

func (o GetServerSpecificationsNetworkConnectionValOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkConnectionVal) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsNetworkConnectionValOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkConnectionVal) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsNetworkOla struct {
	// Is the OLA feature available
	Available bool `pulumi:"available"`
	// Supported modes
	AvailableModes []GetServerSpecificationsNetworkOlaAvailableMode `pulumi:"availableModes"`
	// Supported modes (DEPRECATED)
	SupportedModes []string `pulumi:"supportedModes"`
}

// GetServerSpecificationsNetworkOlaInput is an input type that accepts GetServerSpecificationsNetworkOlaArgs and GetServerSpecificationsNetworkOlaOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkOlaInput` via:
//
//	GetServerSpecificationsNetworkOlaArgs{...}
type GetServerSpecificationsNetworkOlaInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkOlaOutput() GetServerSpecificationsNetworkOlaOutput
	ToGetServerSpecificationsNetworkOlaOutputWithContext(context.Context) GetServerSpecificationsNetworkOlaOutput
}

type GetServerSpecificationsNetworkOlaArgs struct {
	// Is the OLA feature available
	Available pulumi.BoolInput `pulumi:"available"`
	// Supported modes
	AvailableModes GetServerSpecificationsNetworkOlaAvailableModeArrayInput `pulumi:"availableModes"`
	// Supported modes (DEPRECATED)
	SupportedModes pulumi.StringArrayInput `pulumi:"supportedModes"`
}

func (GetServerSpecificationsNetworkOlaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkOla)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkOlaArgs) ToGetServerSpecificationsNetworkOlaOutput() GetServerSpecificationsNetworkOlaOutput {
	return i.ToGetServerSpecificationsNetworkOlaOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkOlaArgs) ToGetServerSpecificationsNetworkOlaOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkOlaOutput)
}

type GetServerSpecificationsNetworkOlaOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkOlaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkOla)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkOlaOutput) ToGetServerSpecificationsNetworkOlaOutput() GetServerSpecificationsNetworkOlaOutput {
	return o
}

func (o GetServerSpecificationsNetworkOlaOutput) ToGetServerSpecificationsNetworkOlaOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaOutput {
	return o
}

// Is the OLA feature available
func (o GetServerSpecificationsNetworkOlaOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkOla) bool { return v.Available }).(pulumi.BoolOutput)
}

// Supported modes
func (o GetServerSpecificationsNetworkOlaOutput) AvailableModes() GetServerSpecificationsNetworkOlaAvailableModeArrayOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkOla) []GetServerSpecificationsNetworkOlaAvailableMode {
		return v.AvailableModes
	}).(GetServerSpecificationsNetworkOlaAvailableModeArrayOutput)
}

// Supported modes (DEPRECATED)
func (o GetServerSpecificationsNetworkOlaOutput) SupportedModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkOla) []string { return v.SupportedModes }).(pulumi.StringArrayOutput)
}

type GetServerSpecificationsNetworkOlaAvailableMode struct {
	// Whether it is the default configuration of the server
	Default bool `pulumi:"default"`
	// Interface layout
	Interfaces []GetServerSpecificationsNetworkOlaAvailableModeInterface `pulumi:"interfaces"`
	// Switch name
	Name string `pulumi:"name"`
}

// GetServerSpecificationsNetworkOlaAvailableModeInput is an input type that accepts GetServerSpecificationsNetworkOlaAvailableModeArgs and GetServerSpecificationsNetworkOlaAvailableModeOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkOlaAvailableModeInput` via:
//
//	GetServerSpecificationsNetworkOlaAvailableModeArgs{...}
type GetServerSpecificationsNetworkOlaAvailableModeInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkOlaAvailableModeOutput() GetServerSpecificationsNetworkOlaAvailableModeOutput
	ToGetServerSpecificationsNetworkOlaAvailableModeOutputWithContext(context.Context) GetServerSpecificationsNetworkOlaAvailableModeOutput
}

type GetServerSpecificationsNetworkOlaAvailableModeArgs struct {
	// Whether it is the default configuration of the server
	Default pulumi.BoolInput `pulumi:"default"`
	// Interface layout
	Interfaces GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayInput `pulumi:"interfaces"`
	// Switch name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetServerSpecificationsNetworkOlaAvailableModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkOlaAvailableMode)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkOlaAvailableModeArgs) ToGetServerSpecificationsNetworkOlaAvailableModeOutput() GetServerSpecificationsNetworkOlaAvailableModeOutput {
	return i.ToGetServerSpecificationsNetworkOlaAvailableModeOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkOlaAvailableModeArgs) ToGetServerSpecificationsNetworkOlaAvailableModeOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaAvailableModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkOlaAvailableModeOutput)
}

// GetServerSpecificationsNetworkOlaAvailableModeArrayInput is an input type that accepts GetServerSpecificationsNetworkOlaAvailableModeArray and GetServerSpecificationsNetworkOlaAvailableModeArrayOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkOlaAvailableModeArrayInput` via:
//
//	GetServerSpecificationsNetworkOlaAvailableModeArray{ GetServerSpecificationsNetworkOlaAvailableModeArgs{...} }
type GetServerSpecificationsNetworkOlaAvailableModeArrayInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkOlaAvailableModeArrayOutput() GetServerSpecificationsNetworkOlaAvailableModeArrayOutput
	ToGetServerSpecificationsNetworkOlaAvailableModeArrayOutputWithContext(context.Context) GetServerSpecificationsNetworkOlaAvailableModeArrayOutput
}

type GetServerSpecificationsNetworkOlaAvailableModeArray []GetServerSpecificationsNetworkOlaAvailableModeInput

func (GetServerSpecificationsNetworkOlaAvailableModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsNetworkOlaAvailableMode)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkOlaAvailableModeArray) ToGetServerSpecificationsNetworkOlaAvailableModeArrayOutput() GetServerSpecificationsNetworkOlaAvailableModeArrayOutput {
	return i.ToGetServerSpecificationsNetworkOlaAvailableModeArrayOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkOlaAvailableModeArray) ToGetServerSpecificationsNetworkOlaAvailableModeArrayOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaAvailableModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkOlaAvailableModeArrayOutput)
}

type GetServerSpecificationsNetworkOlaAvailableModeOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkOlaAvailableModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkOlaAvailableMode)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkOlaAvailableModeOutput) ToGetServerSpecificationsNetworkOlaAvailableModeOutput() GetServerSpecificationsNetworkOlaAvailableModeOutput {
	return o
}

func (o GetServerSpecificationsNetworkOlaAvailableModeOutput) ToGetServerSpecificationsNetworkOlaAvailableModeOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaAvailableModeOutput {
	return o
}

// Whether it is the default configuration of the server
func (o GetServerSpecificationsNetworkOlaAvailableModeOutput) Default() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkOlaAvailableMode) bool { return v.Default }).(pulumi.BoolOutput)
}

// Interface layout
func (o GetServerSpecificationsNetworkOlaAvailableModeOutput) Interfaces() GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkOlaAvailableMode) []GetServerSpecificationsNetworkOlaAvailableModeInterface {
		return v.Interfaces
	}).(GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput)
}

// Switch name
func (o GetServerSpecificationsNetworkOlaAvailableModeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkOlaAvailableMode) string { return v.Name }).(pulumi.StringOutput)
}

type GetServerSpecificationsNetworkOlaAvailableModeArrayOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkOlaAvailableModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsNetworkOlaAvailableMode)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkOlaAvailableModeArrayOutput) ToGetServerSpecificationsNetworkOlaAvailableModeArrayOutput() GetServerSpecificationsNetworkOlaAvailableModeArrayOutput {
	return o
}

func (o GetServerSpecificationsNetworkOlaAvailableModeArrayOutput) ToGetServerSpecificationsNetworkOlaAvailableModeArrayOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaAvailableModeArrayOutput {
	return o
}

func (o GetServerSpecificationsNetworkOlaAvailableModeArrayOutput) Index(i pulumi.IntInput) GetServerSpecificationsNetworkOlaAvailableModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerSpecificationsNetworkOlaAvailableMode {
		return vs[0].([]GetServerSpecificationsNetworkOlaAvailableMode)[vs[1].(int)]
	}).(GetServerSpecificationsNetworkOlaAvailableModeOutput)
}

type GetServerSpecificationsNetworkOlaAvailableModeInterface struct {
	// Interface aggregation status
	Aggregation bool `pulumi:"aggregation"`
	// Interface count
	Count float64 `pulumi:"count"`
	// Bandwidth offer type (included┃standard)
	Type string `pulumi:"type"`
}

// GetServerSpecificationsNetworkOlaAvailableModeInterfaceInput is an input type that accepts GetServerSpecificationsNetworkOlaAvailableModeInterfaceArgs and GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkOlaAvailableModeInterfaceInput` via:
//
//	GetServerSpecificationsNetworkOlaAvailableModeInterfaceArgs{...}
type GetServerSpecificationsNetworkOlaAvailableModeInterfaceInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput() GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput
	ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceOutputWithContext(context.Context) GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput
}

type GetServerSpecificationsNetworkOlaAvailableModeInterfaceArgs struct {
	// Interface aggregation status
	Aggregation pulumi.BoolInput `pulumi:"aggregation"`
	// Interface count
	Count pulumi.Float64Input `pulumi:"count"`
	// Bandwidth offer type (included┃standard)
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServerSpecificationsNetworkOlaAvailableModeInterfaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkOlaAvailableModeInterface)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkOlaAvailableModeInterfaceArgs) ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput() GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput {
	return i.ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkOlaAvailableModeInterfaceArgs) ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput)
}

// GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayInput is an input type that accepts GetServerSpecificationsNetworkOlaAvailableModeInterfaceArray and GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayInput` via:
//
//	GetServerSpecificationsNetworkOlaAvailableModeInterfaceArray{ GetServerSpecificationsNetworkOlaAvailableModeInterfaceArgs{...} }
type GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput() GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput
	ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutputWithContext(context.Context) GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput
}

type GetServerSpecificationsNetworkOlaAvailableModeInterfaceArray []GetServerSpecificationsNetworkOlaAvailableModeInterfaceInput

func (GetServerSpecificationsNetworkOlaAvailableModeInterfaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsNetworkOlaAvailableModeInterface)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkOlaAvailableModeInterfaceArray) ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput() GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput {
	return i.ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkOlaAvailableModeInterfaceArray) ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput)
}

type GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkOlaAvailableModeInterface)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput) ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput() GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput {
	return o
}

func (o GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput) ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput {
	return o
}

// Interface aggregation status
func (o GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput) Aggregation() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkOlaAvailableModeInterface) bool { return v.Aggregation }).(pulumi.BoolOutput)
}

// Interface count
func (o GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput) Count() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkOlaAvailableModeInterface) float64 { return v.Count }).(pulumi.Float64Output)
}

// Bandwidth offer type (included┃standard)
func (o GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkOlaAvailableModeInterface) string { return v.Type }).(pulumi.StringOutput)
}

type GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServerSpecificationsNetworkOlaAvailableModeInterface)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput) ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput() GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput {
	return o
}

func (o GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput) ToGetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput {
	return o
}

func (o GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput) Index(i pulumi.IntInput) GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServerSpecificationsNetworkOlaAvailableModeInterface {
		return vs[0].([]GetServerSpecificationsNetworkOlaAvailableModeInterface)[vs[1].(int)]
	}).(GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput)
}

type GetServerSpecificationsNetworkRouting struct {
	// Ipv4 routing details
	Ipv4 GetServerSpecificationsNetworkRoutingIpv4 `pulumi:"ipv4"`
	// Ipv6 routing details
	Ipv6 GetServerSpecificationsNetworkRoutingIpv6 `pulumi:"ipv6"`
}

// GetServerSpecificationsNetworkRoutingInput is an input type that accepts GetServerSpecificationsNetworkRoutingArgs and GetServerSpecificationsNetworkRoutingOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkRoutingInput` via:
//
//	GetServerSpecificationsNetworkRoutingArgs{...}
type GetServerSpecificationsNetworkRoutingInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkRoutingOutput() GetServerSpecificationsNetworkRoutingOutput
	ToGetServerSpecificationsNetworkRoutingOutputWithContext(context.Context) GetServerSpecificationsNetworkRoutingOutput
}

type GetServerSpecificationsNetworkRoutingArgs struct {
	// Ipv4 routing details
	Ipv4 GetServerSpecificationsNetworkRoutingIpv4Input `pulumi:"ipv4"`
	// Ipv6 routing details
	Ipv6 GetServerSpecificationsNetworkRoutingIpv6Input `pulumi:"ipv6"`
}

func (GetServerSpecificationsNetworkRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkRouting)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkRoutingArgs) ToGetServerSpecificationsNetworkRoutingOutput() GetServerSpecificationsNetworkRoutingOutput {
	return i.ToGetServerSpecificationsNetworkRoutingOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkRoutingArgs) ToGetServerSpecificationsNetworkRoutingOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkRoutingOutput)
}

type GetServerSpecificationsNetworkRoutingOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkRouting)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkRoutingOutput) ToGetServerSpecificationsNetworkRoutingOutput() GetServerSpecificationsNetworkRoutingOutput {
	return o
}

func (o GetServerSpecificationsNetworkRoutingOutput) ToGetServerSpecificationsNetworkRoutingOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkRoutingOutput {
	return o
}

// Ipv4 routing details
func (o GetServerSpecificationsNetworkRoutingOutput) Ipv4() GetServerSpecificationsNetworkRoutingIpv4Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkRouting) GetServerSpecificationsNetworkRoutingIpv4 { return v.Ipv4 }).(GetServerSpecificationsNetworkRoutingIpv4Output)
}

// Ipv6 routing details
func (o GetServerSpecificationsNetworkRoutingOutput) Ipv6() GetServerSpecificationsNetworkRoutingIpv6Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkRouting) GetServerSpecificationsNetworkRoutingIpv6 { return v.Ipv6 }).(GetServerSpecificationsNetworkRoutingIpv6Output)
}

type GetServerSpecificationsNetworkRoutingIpv4 struct {
	// Server gateway
	Gateway string `pulumi:"gateway"`
	// Server main IP
	Ip string `pulumi:"ip"`
	// Server network
	Network string `pulumi:"network"`
}

// GetServerSpecificationsNetworkRoutingIpv4Input is an input type that accepts GetServerSpecificationsNetworkRoutingIpv4Args and GetServerSpecificationsNetworkRoutingIpv4Output values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkRoutingIpv4Input` via:
//
//	GetServerSpecificationsNetworkRoutingIpv4Args{...}
type GetServerSpecificationsNetworkRoutingIpv4Input interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkRoutingIpv4Output() GetServerSpecificationsNetworkRoutingIpv4Output
	ToGetServerSpecificationsNetworkRoutingIpv4OutputWithContext(context.Context) GetServerSpecificationsNetworkRoutingIpv4Output
}

type GetServerSpecificationsNetworkRoutingIpv4Args struct {
	// Server gateway
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Server main IP
	Ip pulumi.StringInput `pulumi:"ip"`
	// Server network
	Network pulumi.StringInput `pulumi:"network"`
}

func (GetServerSpecificationsNetworkRoutingIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkRoutingIpv4)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkRoutingIpv4Args) ToGetServerSpecificationsNetworkRoutingIpv4Output() GetServerSpecificationsNetworkRoutingIpv4Output {
	return i.ToGetServerSpecificationsNetworkRoutingIpv4OutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkRoutingIpv4Args) ToGetServerSpecificationsNetworkRoutingIpv4OutputWithContext(ctx context.Context) GetServerSpecificationsNetworkRoutingIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkRoutingIpv4Output)
}

type GetServerSpecificationsNetworkRoutingIpv4Output struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkRoutingIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkRoutingIpv4)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkRoutingIpv4Output) ToGetServerSpecificationsNetworkRoutingIpv4Output() GetServerSpecificationsNetworkRoutingIpv4Output {
	return o
}

func (o GetServerSpecificationsNetworkRoutingIpv4Output) ToGetServerSpecificationsNetworkRoutingIpv4OutputWithContext(ctx context.Context) GetServerSpecificationsNetworkRoutingIpv4Output {
	return o
}

// Server gateway
func (o GetServerSpecificationsNetworkRoutingIpv4Output) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkRoutingIpv4) string { return v.Gateway }).(pulumi.StringOutput)
}

// Server main IP
func (o GetServerSpecificationsNetworkRoutingIpv4Output) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkRoutingIpv4) string { return v.Ip }).(pulumi.StringOutput)
}

// Server network
func (o GetServerSpecificationsNetworkRoutingIpv4Output) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkRoutingIpv4) string { return v.Network }).(pulumi.StringOutput)
}

type GetServerSpecificationsNetworkRoutingIpv6 struct {
	// Server gateway
	Gateway string `pulumi:"gateway"`
	// Server main IP
	Ip string `pulumi:"ip"`
	// Server network
	Network string `pulumi:"network"`
}

// GetServerSpecificationsNetworkRoutingIpv6Input is an input type that accepts GetServerSpecificationsNetworkRoutingIpv6Args and GetServerSpecificationsNetworkRoutingIpv6Output values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkRoutingIpv6Input` via:
//
//	GetServerSpecificationsNetworkRoutingIpv6Args{...}
type GetServerSpecificationsNetworkRoutingIpv6Input interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkRoutingIpv6Output() GetServerSpecificationsNetworkRoutingIpv6Output
	ToGetServerSpecificationsNetworkRoutingIpv6OutputWithContext(context.Context) GetServerSpecificationsNetworkRoutingIpv6Output
}

type GetServerSpecificationsNetworkRoutingIpv6Args struct {
	// Server gateway
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Server main IP
	Ip pulumi.StringInput `pulumi:"ip"`
	// Server network
	Network pulumi.StringInput `pulumi:"network"`
}

func (GetServerSpecificationsNetworkRoutingIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkRoutingIpv6)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkRoutingIpv6Args) ToGetServerSpecificationsNetworkRoutingIpv6Output() GetServerSpecificationsNetworkRoutingIpv6Output {
	return i.ToGetServerSpecificationsNetworkRoutingIpv6OutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkRoutingIpv6Args) ToGetServerSpecificationsNetworkRoutingIpv6OutputWithContext(ctx context.Context) GetServerSpecificationsNetworkRoutingIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkRoutingIpv6Output)
}

type GetServerSpecificationsNetworkRoutingIpv6Output struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkRoutingIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkRoutingIpv6)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkRoutingIpv6Output) ToGetServerSpecificationsNetworkRoutingIpv6Output() GetServerSpecificationsNetworkRoutingIpv6Output {
	return o
}

func (o GetServerSpecificationsNetworkRoutingIpv6Output) ToGetServerSpecificationsNetworkRoutingIpv6OutputWithContext(ctx context.Context) GetServerSpecificationsNetworkRoutingIpv6Output {
	return o
}

// Server gateway
func (o GetServerSpecificationsNetworkRoutingIpv6Output) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkRoutingIpv6) string { return v.Gateway }).(pulumi.StringOutput)
}

// Server main IP
func (o GetServerSpecificationsNetworkRoutingIpv6Output) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkRoutingIpv6) string { return v.Ip }).(pulumi.StringOutput)
}

// Server network
func (o GetServerSpecificationsNetworkRoutingIpv6Output) Network() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkRoutingIpv6) string { return v.Network }).(pulumi.StringOutput)
}

type GetServerSpecificationsNetworkSwitching struct {
	// Switch name
	Name string `pulumi:"name"`
}

// GetServerSpecificationsNetworkSwitchingInput is an input type that accepts GetServerSpecificationsNetworkSwitchingArgs and GetServerSpecificationsNetworkSwitchingOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkSwitchingInput` via:
//
//	GetServerSpecificationsNetworkSwitchingArgs{...}
type GetServerSpecificationsNetworkSwitchingInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkSwitchingOutput() GetServerSpecificationsNetworkSwitchingOutput
	ToGetServerSpecificationsNetworkSwitchingOutputWithContext(context.Context) GetServerSpecificationsNetworkSwitchingOutput
}

type GetServerSpecificationsNetworkSwitchingArgs struct {
	// Switch name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetServerSpecificationsNetworkSwitchingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkSwitching)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkSwitchingArgs) ToGetServerSpecificationsNetworkSwitchingOutput() GetServerSpecificationsNetworkSwitchingOutput {
	return i.ToGetServerSpecificationsNetworkSwitchingOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkSwitchingArgs) ToGetServerSpecificationsNetworkSwitchingOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkSwitchingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkSwitchingOutput)
}

type GetServerSpecificationsNetworkSwitchingOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkSwitchingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkSwitching)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkSwitchingOutput) ToGetServerSpecificationsNetworkSwitchingOutput() GetServerSpecificationsNetworkSwitchingOutput {
	return o
}

func (o GetServerSpecificationsNetworkSwitchingOutput) ToGetServerSpecificationsNetworkSwitchingOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkSwitchingOutput {
	return o
}

// Switch name
func (o GetServerSpecificationsNetworkSwitchingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkSwitching) string { return v.Name }).(pulumi.StringOutput)
}

type GetServerSpecificationsNetworkTraffic struct {
	// Monthly input traffic quota allowed
	InputQuotaSize GetServerSpecificationsNetworkTrafficInputQuotaSize `pulumi:"inputQuotaSize"`
	// Monthly input traffic consumed this month
	InputQuotaUsed GetServerSpecificationsNetworkTrafficInputQuotaUsed `pulumi:"inputQuotaUsed"`
	// Whether bandwidth is throttleted for being over quota
	IsThrottled bool `pulumi:"isThrottled"`
	// Monthly output traffic quota allowed
	OutputQuotaSize GetServerSpecificationsNetworkTrafficOutputQuotaSize `pulumi:"outputQuotaSize"`
	// Monthly output traffic consumed this month
	OutputQuotaUsed GetServerSpecificationsNetworkTrafficOutputQuotaUsed `pulumi:"outputQuotaUsed"`
	// Next reset quota date for traffic counter
	ResetQuotaDate string `pulumi:"resetQuotaDate"`
}

// GetServerSpecificationsNetworkTrafficInput is an input type that accepts GetServerSpecificationsNetworkTrafficArgs and GetServerSpecificationsNetworkTrafficOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkTrafficInput` via:
//
//	GetServerSpecificationsNetworkTrafficArgs{...}
type GetServerSpecificationsNetworkTrafficInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkTrafficOutput() GetServerSpecificationsNetworkTrafficOutput
	ToGetServerSpecificationsNetworkTrafficOutputWithContext(context.Context) GetServerSpecificationsNetworkTrafficOutput
}

type GetServerSpecificationsNetworkTrafficArgs struct {
	// Monthly input traffic quota allowed
	InputQuotaSize GetServerSpecificationsNetworkTrafficInputQuotaSizeInput `pulumi:"inputQuotaSize"`
	// Monthly input traffic consumed this month
	InputQuotaUsed GetServerSpecificationsNetworkTrafficInputQuotaUsedInput `pulumi:"inputQuotaUsed"`
	// Whether bandwidth is throttleted for being over quota
	IsThrottled pulumi.BoolInput `pulumi:"isThrottled"`
	// Monthly output traffic quota allowed
	OutputQuotaSize GetServerSpecificationsNetworkTrafficOutputQuotaSizeInput `pulumi:"outputQuotaSize"`
	// Monthly output traffic consumed this month
	OutputQuotaUsed GetServerSpecificationsNetworkTrafficOutputQuotaUsedInput `pulumi:"outputQuotaUsed"`
	// Next reset quota date for traffic counter
	ResetQuotaDate pulumi.StringInput `pulumi:"resetQuotaDate"`
}

func (GetServerSpecificationsNetworkTrafficArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTraffic)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkTrafficArgs) ToGetServerSpecificationsNetworkTrafficOutput() GetServerSpecificationsNetworkTrafficOutput {
	return i.ToGetServerSpecificationsNetworkTrafficOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkTrafficArgs) ToGetServerSpecificationsNetworkTrafficOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkTrafficOutput)
}

type GetServerSpecificationsNetworkTrafficOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkTrafficOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTraffic)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkTrafficOutput) ToGetServerSpecificationsNetworkTrafficOutput() GetServerSpecificationsNetworkTrafficOutput {
	return o
}

func (o GetServerSpecificationsNetworkTrafficOutput) ToGetServerSpecificationsNetworkTrafficOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficOutput {
	return o
}

// Monthly input traffic quota allowed
func (o GetServerSpecificationsNetworkTrafficOutput) InputQuotaSize() GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTraffic) GetServerSpecificationsNetworkTrafficInputQuotaSize {
		return v.InputQuotaSize
	}).(GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput)
}

// Monthly input traffic consumed this month
func (o GetServerSpecificationsNetworkTrafficOutput) InputQuotaUsed() GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTraffic) GetServerSpecificationsNetworkTrafficInputQuotaUsed {
		return v.InputQuotaUsed
	}).(GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput)
}

// Whether bandwidth is throttleted for being over quota
func (o GetServerSpecificationsNetworkTrafficOutput) IsThrottled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTraffic) bool { return v.IsThrottled }).(pulumi.BoolOutput)
}

// Monthly output traffic quota allowed
func (o GetServerSpecificationsNetworkTrafficOutput) OutputQuotaSize() GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTraffic) GetServerSpecificationsNetworkTrafficOutputQuotaSize {
		return v.OutputQuotaSize
	}).(GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput)
}

// Monthly output traffic consumed this month
func (o GetServerSpecificationsNetworkTrafficOutput) OutputQuotaUsed() GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTraffic) GetServerSpecificationsNetworkTrafficOutputQuotaUsed {
		return v.OutputQuotaUsed
	}).(GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput)
}

// Next reset quota date for traffic counter
func (o GetServerSpecificationsNetworkTrafficOutput) ResetQuotaDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTraffic) string { return v.ResetQuotaDate }).(pulumi.StringOutput)
}

type GetServerSpecificationsNetworkTrafficInputQuotaSize struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsNetworkTrafficInputQuotaSizeInput is an input type that accepts GetServerSpecificationsNetworkTrafficInputQuotaSizeArgs and GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkTrafficInputQuotaSizeInput` via:
//
//	GetServerSpecificationsNetworkTrafficInputQuotaSizeArgs{...}
type GetServerSpecificationsNetworkTrafficInputQuotaSizeInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkTrafficInputQuotaSizeOutput() GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput
	ToGetServerSpecificationsNetworkTrafficInputQuotaSizeOutputWithContext(context.Context) GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput
}

type GetServerSpecificationsNetworkTrafficInputQuotaSizeArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsNetworkTrafficInputQuotaSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTrafficInputQuotaSize)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkTrafficInputQuotaSizeArgs) ToGetServerSpecificationsNetworkTrafficInputQuotaSizeOutput() GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput {
	return i.ToGetServerSpecificationsNetworkTrafficInputQuotaSizeOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkTrafficInputQuotaSizeArgs) ToGetServerSpecificationsNetworkTrafficInputQuotaSizeOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput)
}

type GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTrafficInputQuotaSize)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput) ToGetServerSpecificationsNetworkTrafficInputQuotaSizeOutput() GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput {
	return o
}

func (o GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput) ToGetServerSpecificationsNetworkTrafficInputQuotaSizeOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput {
	return o
}

func (o GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTrafficInputQuotaSize) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTrafficInputQuotaSize) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsNetworkTrafficInputQuotaUsed struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsNetworkTrafficInputQuotaUsedInput is an input type that accepts GetServerSpecificationsNetworkTrafficInputQuotaUsedArgs and GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkTrafficInputQuotaUsedInput` via:
//
//	GetServerSpecificationsNetworkTrafficInputQuotaUsedArgs{...}
type GetServerSpecificationsNetworkTrafficInputQuotaUsedInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkTrafficInputQuotaUsedOutput() GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput
	ToGetServerSpecificationsNetworkTrafficInputQuotaUsedOutputWithContext(context.Context) GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput
}

type GetServerSpecificationsNetworkTrafficInputQuotaUsedArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsNetworkTrafficInputQuotaUsedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTrafficInputQuotaUsed)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkTrafficInputQuotaUsedArgs) ToGetServerSpecificationsNetworkTrafficInputQuotaUsedOutput() GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput {
	return i.ToGetServerSpecificationsNetworkTrafficInputQuotaUsedOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkTrafficInputQuotaUsedArgs) ToGetServerSpecificationsNetworkTrafficInputQuotaUsedOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput)
}

type GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTrafficInputQuotaUsed)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput) ToGetServerSpecificationsNetworkTrafficInputQuotaUsedOutput() GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput {
	return o
}

func (o GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput) ToGetServerSpecificationsNetworkTrafficInputQuotaUsedOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput {
	return o
}

func (o GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTrafficInputQuotaUsed) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTrafficInputQuotaUsed) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsNetworkTrafficOutputQuotaSize struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsNetworkTrafficOutputQuotaSizeInput is an input type that accepts GetServerSpecificationsNetworkTrafficOutputQuotaSizeArgs and GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkTrafficOutputQuotaSizeInput` via:
//
//	GetServerSpecificationsNetworkTrafficOutputQuotaSizeArgs{...}
type GetServerSpecificationsNetworkTrafficOutputQuotaSizeInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput() GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput
	ToGetServerSpecificationsNetworkTrafficOutputQuotaSizeOutputWithContext(context.Context) GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput
}

type GetServerSpecificationsNetworkTrafficOutputQuotaSizeArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsNetworkTrafficOutputQuotaSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTrafficOutputQuotaSize)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkTrafficOutputQuotaSizeArgs) ToGetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput() GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput {
	return i.ToGetServerSpecificationsNetworkTrafficOutputQuotaSizeOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkTrafficOutputQuotaSizeArgs) ToGetServerSpecificationsNetworkTrafficOutputQuotaSizeOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput)
}

type GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTrafficOutputQuotaSize)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput) ToGetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput() GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput {
	return o
}

func (o GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput) ToGetServerSpecificationsNetworkTrafficOutputQuotaSizeOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput {
	return o
}

func (o GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTrafficOutputQuotaSize) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTrafficOutputQuotaSize) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsNetworkTrafficOutputQuotaUsed struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsNetworkTrafficOutputQuotaUsedInput is an input type that accepts GetServerSpecificationsNetworkTrafficOutputQuotaUsedArgs and GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkTrafficOutputQuotaUsedInput` via:
//
//	GetServerSpecificationsNetworkTrafficOutputQuotaUsedArgs{...}
type GetServerSpecificationsNetworkTrafficOutputQuotaUsedInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput() GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput
	ToGetServerSpecificationsNetworkTrafficOutputQuotaUsedOutputWithContext(context.Context) GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput
}

type GetServerSpecificationsNetworkTrafficOutputQuotaUsedArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsNetworkTrafficOutputQuotaUsedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTrafficOutputQuotaUsed)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkTrafficOutputQuotaUsedArgs) ToGetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput() GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput {
	return i.ToGetServerSpecificationsNetworkTrafficOutputQuotaUsedOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkTrafficOutputQuotaUsedArgs) ToGetServerSpecificationsNetworkTrafficOutputQuotaUsedOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput)
}

type GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkTrafficOutputQuotaUsed)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput) ToGetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput() GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput {
	return o
}

func (o GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput) ToGetServerSpecificationsNetworkTrafficOutputQuotaUsedOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput {
	return o
}

func (o GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTrafficOutputQuotaUsed) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkTrafficOutputQuotaUsed) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetServerSpecificationsNetworkVmac struct {
	// Whether server is compatible vmac
	Supported bool `pulumi:"supported"`
}

// GetServerSpecificationsNetworkVmacInput is an input type that accepts GetServerSpecificationsNetworkVmacArgs and GetServerSpecificationsNetworkVmacOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkVmacInput` via:
//
//	GetServerSpecificationsNetworkVmacArgs{...}
type GetServerSpecificationsNetworkVmacInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkVmacOutput() GetServerSpecificationsNetworkVmacOutput
	ToGetServerSpecificationsNetworkVmacOutputWithContext(context.Context) GetServerSpecificationsNetworkVmacOutput
}

type GetServerSpecificationsNetworkVmacArgs struct {
	// Whether server is compatible vmac
	Supported pulumi.BoolInput `pulumi:"supported"`
}

func (GetServerSpecificationsNetworkVmacArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkVmac)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkVmacArgs) ToGetServerSpecificationsNetworkVmacOutput() GetServerSpecificationsNetworkVmacOutput {
	return i.ToGetServerSpecificationsNetworkVmacOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkVmacArgs) ToGetServerSpecificationsNetworkVmacOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkVmacOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkVmacOutput)
}

type GetServerSpecificationsNetworkVmacOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkVmacOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkVmac)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkVmacOutput) ToGetServerSpecificationsNetworkVmacOutput() GetServerSpecificationsNetworkVmacOutput {
	return o
}

func (o GetServerSpecificationsNetworkVmacOutput) ToGetServerSpecificationsNetworkVmacOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkVmacOutput {
	return o
}

// Whether server is compatible vmac
func (o GetServerSpecificationsNetworkVmacOutput) Supported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkVmac) bool { return v.Supported }).(pulumi.BoolOutput)
}

type GetServerSpecificationsNetworkVrack struct {
	// vrack bandwidth limitation
	Bandwidth GetServerSpecificationsNetworkVrackBandwidth `pulumi:"bandwidth"`
	// Bandwidth offer type (included┃standard)
	Type string `pulumi:"type"`
}

// GetServerSpecificationsNetworkVrackInput is an input type that accepts GetServerSpecificationsNetworkVrackArgs and GetServerSpecificationsNetworkVrackOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkVrackInput` via:
//
//	GetServerSpecificationsNetworkVrackArgs{...}
type GetServerSpecificationsNetworkVrackInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkVrackOutput() GetServerSpecificationsNetworkVrackOutput
	ToGetServerSpecificationsNetworkVrackOutputWithContext(context.Context) GetServerSpecificationsNetworkVrackOutput
}

type GetServerSpecificationsNetworkVrackArgs struct {
	// vrack bandwidth limitation
	Bandwidth GetServerSpecificationsNetworkVrackBandwidthInput `pulumi:"bandwidth"`
	// Bandwidth offer type (included┃standard)
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServerSpecificationsNetworkVrackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkVrack)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkVrackArgs) ToGetServerSpecificationsNetworkVrackOutput() GetServerSpecificationsNetworkVrackOutput {
	return i.ToGetServerSpecificationsNetworkVrackOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkVrackArgs) ToGetServerSpecificationsNetworkVrackOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkVrackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkVrackOutput)
}

type GetServerSpecificationsNetworkVrackOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkVrackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkVrack)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkVrackOutput) ToGetServerSpecificationsNetworkVrackOutput() GetServerSpecificationsNetworkVrackOutput {
	return o
}

func (o GetServerSpecificationsNetworkVrackOutput) ToGetServerSpecificationsNetworkVrackOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkVrackOutput {
	return o
}

// vrack bandwidth limitation
func (o GetServerSpecificationsNetworkVrackOutput) Bandwidth() GetServerSpecificationsNetworkVrackBandwidthOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkVrack) GetServerSpecificationsNetworkVrackBandwidth {
		return v.Bandwidth
	}).(GetServerSpecificationsNetworkVrackBandwidthOutput)
}

// Bandwidth offer type (included┃standard)
func (o GetServerSpecificationsNetworkVrackOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkVrack) string { return v.Type }).(pulumi.StringOutput)
}

type GetServerSpecificationsNetworkVrackBandwidth struct {
	Unit  string  `pulumi:"unit"`
	Value float64 `pulumi:"value"`
}

// GetServerSpecificationsNetworkVrackBandwidthInput is an input type that accepts GetServerSpecificationsNetworkVrackBandwidthArgs and GetServerSpecificationsNetworkVrackBandwidthOutput values.
// You can construct a concrete instance of `GetServerSpecificationsNetworkVrackBandwidthInput` via:
//
//	GetServerSpecificationsNetworkVrackBandwidthArgs{...}
type GetServerSpecificationsNetworkVrackBandwidthInput interface {
	pulumi.Input

	ToGetServerSpecificationsNetworkVrackBandwidthOutput() GetServerSpecificationsNetworkVrackBandwidthOutput
	ToGetServerSpecificationsNetworkVrackBandwidthOutputWithContext(context.Context) GetServerSpecificationsNetworkVrackBandwidthOutput
}

type GetServerSpecificationsNetworkVrackBandwidthArgs struct {
	Unit  pulumi.StringInput  `pulumi:"unit"`
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetServerSpecificationsNetworkVrackBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkVrackBandwidth)(nil)).Elem()
}

func (i GetServerSpecificationsNetworkVrackBandwidthArgs) ToGetServerSpecificationsNetworkVrackBandwidthOutput() GetServerSpecificationsNetworkVrackBandwidthOutput {
	return i.ToGetServerSpecificationsNetworkVrackBandwidthOutputWithContext(context.Background())
}

func (i GetServerSpecificationsNetworkVrackBandwidthArgs) ToGetServerSpecificationsNetworkVrackBandwidthOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkVrackBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServerSpecificationsNetworkVrackBandwidthOutput)
}

type GetServerSpecificationsNetworkVrackBandwidthOutput struct{ *pulumi.OutputState }

func (GetServerSpecificationsNetworkVrackBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServerSpecificationsNetworkVrackBandwidth)(nil)).Elem()
}

func (o GetServerSpecificationsNetworkVrackBandwidthOutput) ToGetServerSpecificationsNetworkVrackBandwidthOutput() GetServerSpecificationsNetworkVrackBandwidthOutput {
	return o
}

func (o GetServerSpecificationsNetworkVrackBandwidthOutput) ToGetServerSpecificationsNetworkVrackBandwidthOutputWithContext(ctx context.Context) GetServerSpecificationsNetworkVrackBandwidthOutput {
	return o
}

func (o GetServerSpecificationsNetworkVrackBandwidthOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetServerSpecificationsNetworkVrackBandwidth) string { return v.Unit }).(pulumi.StringOutput)
}

func (o GetServerSpecificationsNetworkVrackBandwidthOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetServerSpecificationsNetworkVrackBandwidth) float64 { return v.Value }).(pulumi.Float64Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServerCustomizationsInput)(nil)).Elem(), ServerCustomizationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerCustomizationsPtrInput)(nil)).Elem(), ServerCustomizationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIamInput)(nil)).Elem(), ServerIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerIamPtrInput)(nil)).Elem(), ServerIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkingInterfaceInput)(nil)).Elem(), ServerNetworkingInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerNetworkingInterfaceArrayInput)(nil)).Elem(), ServerNetworkingInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerOrderInput)(nil)).Elem(), ServerOrderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerOrderPtrInput)(nil)).Elem(), ServerOrderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerOrderDetailInput)(nil)).Elem(), ServerOrderDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerOrderDetailArrayInput)(nil)).Elem(), ServerOrderDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPlanInput)(nil)).Elem(), ServerPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPlanArrayInput)(nil)).Elem(), ServerPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPlanConfigurationInput)(nil)).Elem(), ServerPlanConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPlanConfigurationArrayInput)(nil)).Elem(), ServerPlanConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPlanOptionInput)(nil)).Elem(), ServerPlanOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPlanOptionArrayInput)(nil)).Elem(), ServerPlanOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPlanOptionConfigurationInput)(nil)).Elem(), ServerPlanOptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerPlanOptionConfigurationArrayInput)(nil)).Elem(), ServerPlanOptionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskCustomizationsInput)(nil)).Elem(), ServerReinstallTaskCustomizationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskCustomizationsPtrInput)(nil)).Elem(), ServerReinstallTaskCustomizationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStorageInput)(nil)).Elem(), ServerReinstallTaskStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStorageArrayInput)(nil)).Elem(), ServerReinstallTaskStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStorageHardwareRaidInput)(nil)).Elem(), ServerReinstallTaskStorageHardwareRaidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStorageHardwareRaidArrayInput)(nil)).Elem(), ServerReinstallTaskStorageHardwareRaidArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningArrayInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutArrayInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningLayoutExtraArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraArrayInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningLayoutExtraArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraLvInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningLayoutExtraLvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningLayoutExtraLvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraZpInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningLayoutExtraZpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayInput)(nil)).Elem(), ServerReinstallTaskStoragePartitioningLayoutExtraZpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageInput)(nil)).Elem(), ServerStorageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageArrayInput)(nil)).Elem(), ServerStorageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageHardwareRaidInput)(nil)).Elem(), ServerStorageHardwareRaidArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStorageHardwareRaidArrayInput)(nil)).Elem(), ServerStorageHardwareRaidArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningInput)(nil)).Elem(), ServerStoragePartitioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningPtrInput)(nil)).Elem(), ServerStoragePartitioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningLayoutInput)(nil)).Elem(), ServerStoragePartitioningLayoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningLayoutArrayInput)(nil)).Elem(), ServerStoragePartitioningLayoutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasInput)(nil)).Elem(), ServerStoragePartitioningLayoutExtrasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasPtrInput)(nil)).Elem(), ServerStoragePartitioningLayoutExtrasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasLvInput)(nil)).Elem(), ServerStoragePartitioningLayoutExtrasLvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasLvPtrInput)(nil)).Elem(), ServerStoragePartitioningLayoutExtrasLvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasZpInput)(nil)).Elem(), ServerStoragePartitioningLayoutExtrasZpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerStoragePartitioningLayoutExtrasZpPtrInput)(nil)).Elem(), ServerStoragePartitioningLayoutExtrasZpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudIamInput)(nil)).Elem(), GetCloudIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudVersionInput)(nil)).Elem(), GetCloudVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareDefaultHardwareRaidSizeInput)(nil)).Elem(), GetServerSpecificationsHardwareDefaultHardwareRaidSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroupInput)(nil)).Elem(), GetServerSpecificationsHardwareDiskGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroupArrayInput)(nil)).Elem(), GetServerSpecificationsHardwareDiskGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeInput)(nil)).Elem(), GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareDiskGroupDiskSizeInput)(nil)).Elem(), GetServerSpecificationsHardwareDiskGroupDiskSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareExpansionCardInput)(nil)).Elem(), GetServerSpecificationsHardwareExpansionCardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareExpansionCardArrayInput)(nil)).Elem(), GetServerSpecificationsHardwareExpansionCardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareMemorySizeInput)(nil)).Elem(), GetServerSpecificationsHardwareMemorySizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareUsbKeyInput)(nil)).Elem(), GetServerSpecificationsHardwareUsbKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsHardwareUsbKeyArrayInput)(nil)).Elem(), GetServerSpecificationsHardwareUsbKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthInput)(nil)).Elem(), GetServerSpecificationsNetworkBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthInternetToOvhInput)(nil)).Elem(), GetServerSpecificationsNetworkBandwidthInternetToOvhArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthOvhToInternetInput)(nil)).Elem(), GetServerSpecificationsNetworkBandwidthOvhToInternetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkBandwidthOvhToOvhInput)(nil)).Elem(), GetServerSpecificationsNetworkBandwidthOvhToOvhArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkConnectionValInput)(nil)).Elem(), GetServerSpecificationsNetworkConnectionValArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkOlaInput)(nil)).Elem(), GetServerSpecificationsNetworkOlaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkOlaAvailableModeInput)(nil)).Elem(), GetServerSpecificationsNetworkOlaAvailableModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkOlaAvailableModeArrayInput)(nil)).Elem(), GetServerSpecificationsNetworkOlaAvailableModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkOlaAvailableModeInterfaceInput)(nil)).Elem(), GetServerSpecificationsNetworkOlaAvailableModeInterfaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayInput)(nil)).Elem(), GetServerSpecificationsNetworkOlaAvailableModeInterfaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkRoutingInput)(nil)).Elem(), GetServerSpecificationsNetworkRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkRoutingIpv4Input)(nil)).Elem(), GetServerSpecificationsNetworkRoutingIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkRoutingIpv6Input)(nil)).Elem(), GetServerSpecificationsNetworkRoutingIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkSwitchingInput)(nil)).Elem(), GetServerSpecificationsNetworkSwitchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkTrafficInput)(nil)).Elem(), GetServerSpecificationsNetworkTrafficArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkTrafficInputQuotaSizeInput)(nil)).Elem(), GetServerSpecificationsNetworkTrafficInputQuotaSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkTrafficInputQuotaUsedInput)(nil)).Elem(), GetServerSpecificationsNetworkTrafficInputQuotaUsedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkTrafficOutputQuotaSizeInput)(nil)).Elem(), GetServerSpecificationsNetworkTrafficOutputQuotaSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkTrafficOutputQuotaUsedInput)(nil)).Elem(), GetServerSpecificationsNetworkTrafficOutputQuotaUsedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkVmacInput)(nil)).Elem(), GetServerSpecificationsNetworkVmacArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkVrackInput)(nil)).Elem(), GetServerSpecificationsNetworkVrackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServerSpecificationsNetworkVrackBandwidthInput)(nil)).Elem(), GetServerSpecificationsNetworkVrackBandwidthArgs{})
	pulumi.RegisterOutputType(ServerCustomizationsOutput{})
	pulumi.RegisterOutputType(ServerCustomizationsPtrOutput{})
	pulumi.RegisterOutputType(ServerIamOutput{})
	pulumi.RegisterOutputType(ServerIamPtrOutput{})
	pulumi.RegisterOutputType(ServerNetworkingInterfaceOutput{})
	pulumi.RegisterOutputType(ServerNetworkingInterfaceArrayOutput{})
	pulumi.RegisterOutputType(ServerOrderOutput{})
	pulumi.RegisterOutputType(ServerOrderPtrOutput{})
	pulumi.RegisterOutputType(ServerOrderDetailOutput{})
	pulumi.RegisterOutputType(ServerOrderDetailArrayOutput{})
	pulumi.RegisterOutputType(ServerPlanOutput{})
	pulumi.RegisterOutputType(ServerPlanArrayOutput{})
	pulumi.RegisterOutputType(ServerPlanConfigurationOutput{})
	pulumi.RegisterOutputType(ServerPlanConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ServerPlanOptionOutput{})
	pulumi.RegisterOutputType(ServerPlanOptionArrayOutput{})
	pulumi.RegisterOutputType(ServerPlanOptionConfigurationOutput{})
	pulumi.RegisterOutputType(ServerPlanOptionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskCustomizationsOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskCustomizationsPtrOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStorageOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStorageArrayOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStorageHardwareRaidOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStorageHardwareRaidArrayOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningArrayOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningLayoutOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningLayoutArrayOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningLayoutExtraOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningLayoutExtraArrayOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningLayoutExtraLvOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningLayoutExtraLvArrayOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningLayoutExtraZpOutput{})
	pulumi.RegisterOutputType(ServerReinstallTaskStoragePartitioningLayoutExtraZpArrayOutput{})
	pulumi.RegisterOutputType(ServerStorageOutput{})
	pulumi.RegisterOutputType(ServerStorageArrayOutput{})
	pulumi.RegisterOutputType(ServerStorageHardwareRaidOutput{})
	pulumi.RegisterOutputType(ServerStorageHardwareRaidArrayOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningPtrOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningLayoutOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningLayoutArrayOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningLayoutExtrasOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningLayoutExtrasPtrOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningLayoutExtrasLvOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningLayoutExtrasLvPtrOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningLayoutExtrasZpOutput{})
	pulumi.RegisterOutputType(ServerStoragePartitioningLayoutExtrasZpPtrOutput{})
	pulumi.RegisterOutputType(GetCloudIamOutput{})
	pulumi.RegisterOutputType(GetCloudVersionOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareDefaultHardwareRaidSizeOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareDiskGroupOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareDiskGroupArrayOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareDiskGroupDefaultHardwareRaidSizeOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareDiskGroupDiskSizeOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareExpansionCardOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareExpansionCardArrayOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareMemorySizeOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareUsbKeyOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsHardwareUsbKeyArrayOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkBandwidthOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkBandwidthInternetToOvhOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkBandwidthOvhToInternetOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkBandwidthOvhToOvhOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkConnectionValOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkOlaOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkOlaAvailableModeOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkOlaAvailableModeArrayOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkOlaAvailableModeInterfaceOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkOlaAvailableModeInterfaceArrayOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkRoutingOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkRoutingIpv4Output{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkRoutingIpv6Output{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkSwitchingOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkTrafficOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkTrafficInputQuotaSizeOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkTrafficInputQuotaUsedOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkTrafficOutputQuotaSizeOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkTrafficOutputQuotaUsedOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkVmacOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkVrackOutput{})
	pulumi.RegisterOutputType(GetServerSpecificationsNetworkVrackBandwidthOutput{})
}
