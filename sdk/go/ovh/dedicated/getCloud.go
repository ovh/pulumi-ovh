// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dedicated

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information about a Managed VMware service.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/dedicated"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dedicated.GetCloud(ctx, &dedicated.GetCloudArgs{
//				ServiceName: "<Dedicated Cloud service name>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloud(ctx *pulumi.Context, args *GetCloudArgs, opts ...pulumi.InvokeOption) (*GetCloudResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCloudResult
	err := ctx.Invoke("ovh:Dedicated/getCloud:getCloud", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloud.
type GetCloudArgs struct {
	// Domain of the service
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCloud.
type GetCloudResult struct {
	// Advanced security state
	AdvancedSecurity bool `pulumi:"advancedSecurity"`
	// The current bandwidth of your VMware on OVHcloud
	Bandwidth string `pulumi:"bandwidth"`
	// Billing type of your VMware on OVHcloud
	BillingType string `pulumi:"billingType"`
	// Can the PCC be migrated to VCD
	CanMigrateToVcd bool `pulumi:"canMigrateToVcd"`
	// Url to the VMware on OVHcloud certified interface
	CertifiedInterfaceUrl string `pulumi:"certifiedInterfaceUrl"`
	// The current version of your VMware on OVHcloud
	CommercialRange string `pulumi:"commercialRange"`
	// Description of your VMware on OVHcloud
	Description string `pulumi:"description"`
	// Generation of your VMware on OVHcloud
	Generation string `pulumi:"generation"`
	// IAM resource metadata
	Iam GetCloudIam `pulumi:"iam"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Datacenter where your VMware on OVHcloud is physically located
	Location string `pulumi:"location"`
	// The management interface name
	ManagementInterface string `pulumi:"managementInterface"`
	// The reference universe information for your VMware on OVHcloud
	ProductReference string `pulumi:"productReference"`
	// Domain of the service
	ServiceName string `pulumi:"serviceName"`
	// Name of the current service pack
	ServicePackName string `pulumi:"servicePackName"`
	// SPLA licensing state
	Spla bool `pulumi:"spla"`
	// Enable SSL v3 support. Warning : this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy
	SslV3 bool `pulumi:"sslV3"`
	// Current state of your VMware on OVHcloud
	State string `pulumi:"state"`
	// Access policy of your VMware on OVHcloud : opened to every IPs or filtered
	UserAccessPolicy string `pulumi:"userAccessPolicy"`
	// The maximum amount of connected users allowed on the VMware on OVHcloud management interface
	UserLimitConcurrentSession float64 `pulumi:"userLimitConcurrentSession"`
	// Which user will be disconnected first in case of quota of maximum connection is reached
	UserLogoutPolicy string `pulumi:"userLogoutPolicy"`
	// The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout
	UserSessionTimeout float64 `pulumi:"userSessionTimeout"`
	// Url to the VMware on OVHcloud vScope interface
	VScopeUrl string `pulumi:"vScopeUrl"`
	// Version of the management interface
	Version GetCloudVersion `pulumi:"version"`
	// Url to the VMware on OVHcloud web interface
	WebInterfaceUrl string `pulumi:"webInterfaceUrl"`
}

func GetCloudOutput(ctx *pulumi.Context, args GetCloudOutputArgs, opts ...pulumi.InvokeOption) GetCloudResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCloudResultOutput, error) {
			args := v.(GetCloudArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:Dedicated/getCloud:getCloud", args, GetCloudResultOutput{}, options).(GetCloudResultOutput), nil
		}).(GetCloudResultOutput)
}

// A collection of arguments for invoking getCloud.
type GetCloudOutputArgs struct {
	// Domain of the service
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetCloudOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudArgs)(nil)).Elem()
}

// A collection of values returned by getCloud.
type GetCloudResultOutput struct{ *pulumi.OutputState }

func (GetCloudResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudResult)(nil)).Elem()
}

func (o GetCloudResultOutput) ToGetCloudResultOutput() GetCloudResultOutput {
	return o
}

func (o GetCloudResultOutput) ToGetCloudResultOutputWithContext(ctx context.Context) GetCloudResultOutput {
	return o
}

// Advanced security state
func (o GetCloudResultOutput) AdvancedSecurity() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudResult) bool { return v.AdvancedSecurity }).(pulumi.BoolOutput)
}

// The current bandwidth of your VMware on OVHcloud
func (o GetCloudResultOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.Bandwidth }).(pulumi.StringOutput)
}

// Billing type of your VMware on OVHcloud
func (o GetCloudResultOutput) BillingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.BillingType }).(pulumi.StringOutput)
}

// Can the PCC be migrated to VCD
func (o GetCloudResultOutput) CanMigrateToVcd() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudResult) bool { return v.CanMigrateToVcd }).(pulumi.BoolOutput)
}

// Url to the VMware on OVHcloud certified interface
func (o GetCloudResultOutput) CertifiedInterfaceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.CertifiedInterfaceUrl }).(pulumi.StringOutput)
}

// The current version of your VMware on OVHcloud
func (o GetCloudResultOutput) CommercialRange() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.CommercialRange }).(pulumi.StringOutput)
}

// Description of your VMware on OVHcloud
func (o GetCloudResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.Description }).(pulumi.StringOutput)
}

// Generation of your VMware on OVHcloud
func (o GetCloudResultOutput) Generation() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.Generation }).(pulumi.StringOutput)
}

// IAM resource metadata
func (o GetCloudResultOutput) Iam() GetCloudIamOutput {
	return o.ApplyT(func(v GetCloudResult) GetCloudIam { return v.Iam }).(GetCloudIamOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.Id }).(pulumi.StringOutput)
}

// Datacenter where your VMware on OVHcloud is physically located
func (o GetCloudResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.Location }).(pulumi.StringOutput)
}

// The management interface name
func (o GetCloudResultOutput) ManagementInterface() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.ManagementInterface }).(pulumi.StringOutput)
}

// The reference universe information for your VMware on OVHcloud
func (o GetCloudResultOutput) ProductReference() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.ProductReference }).(pulumi.StringOutput)
}

// Domain of the service
func (o GetCloudResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Name of the current service pack
func (o GetCloudResultOutput) ServicePackName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.ServicePackName }).(pulumi.StringOutput)
}

// SPLA licensing state
func (o GetCloudResultOutput) Spla() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudResult) bool { return v.Spla }).(pulumi.BoolOutput)
}

// Enable SSL v3 support. Warning : this option is not recommended as it was recognized as a security breach. If this is enabled, we advise you to enable the filtered User access policy
func (o GetCloudResultOutput) SslV3() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCloudResult) bool { return v.SslV3 }).(pulumi.BoolOutput)
}

// Current state of your VMware on OVHcloud
func (o GetCloudResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.State }).(pulumi.StringOutput)
}

// Access policy of your VMware on OVHcloud : opened to every IPs or filtered
func (o GetCloudResultOutput) UserAccessPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.UserAccessPolicy }).(pulumi.StringOutput)
}

// The maximum amount of connected users allowed on the VMware on OVHcloud management interface
func (o GetCloudResultOutput) UserLimitConcurrentSession() pulumi.Float64Output {
	return o.ApplyT(func(v GetCloudResult) float64 { return v.UserLimitConcurrentSession }).(pulumi.Float64Output)
}

// Which user will be disconnected first in case of quota of maximum connection is reached
func (o GetCloudResultOutput) UserLogoutPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.UserLogoutPolicy }).(pulumi.StringOutput)
}

// The timeout (in seconds) for the user sessions on the VMware on OVHcloud management interface. 0 value disable the timeout
func (o GetCloudResultOutput) UserSessionTimeout() pulumi.Float64Output {
	return o.ApplyT(func(v GetCloudResult) float64 { return v.UserSessionTimeout }).(pulumi.Float64Output)
}

// Url to the VMware on OVHcloud vScope interface
func (o GetCloudResultOutput) VScopeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.VScopeUrl }).(pulumi.StringOutput)
}

// Version of the management interface
func (o GetCloudResultOutput) Version() GetCloudVersionOutput {
	return o.ApplyT(func(v GetCloudResult) GetCloudVersion { return v.Version }).(GetCloudVersionOutput)
}

// Url to the VMware on OVHcloud web interface
func (o GetCloudResultOutput) WebInterfaceUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudResult) string { return v.WebInterfaceUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudResultOutput{})
}
