// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a user of a valkey cluster associated with a public cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			valkeyUser, err := ovh.LookupCloudProjectDatabaseValkeyUser(ctx, &ovh.LookupCloudProjectDatabaseValkeyUserArgs{
//				ServiceName: "XXX",
//				ClusterId:   "YYY",
//				Name:        "ZZZ",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("valkeyUserCommands", valkeyUser.Commands)
//			return nil
//		})
//	}
//
// ```
func LookupCloudProjectDatabaseValkeyUser(ctx *pulumi.Context, args *LookupCloudProjectDatabaseValkeyUserArgs, opts ...pulumi.InvokeOption) (*LookupCloudProjectDatabaseValkeyUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupCloudProjectDatabaseValkeyUserResult
	err := ctx.Invoke("ovh:index/getCloudProjectDatabaseValkeyUser:getCloudProjectDatabaseValkeyUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectDatabaseValkeyUser.
type LookupCloudProjectDatabaseValkeyUserArgs struct {
	// Cluster ID
	ClusterId string `pulumi:"clusterId"`
	// Name of the user
	Name string `pulumi:"name"`
	// The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectDatabaseValkeyUser.
type LookupCloudProjectDatabaseValkeyUserResult struct {
	// Categories of the user.
	Categories []string `pulumi:"categories"`
	// Channels of the user.
	Channels []string `pulumi:"channels"`
	// See Argument Reference above.
	ClusterId string `pulumi:"clusterId"`
	// Commands of the user.
	Commands []string `pulumi:"commands"`
	// Date of the creation of the user.
	CreatedAt string `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Keys of the user.
	Keys []string `pulumi:"keys"`
	// See Argument Reference above.
	Name string `pulumi:"name"`
	// Current status of the user.
	ServiceName string `pulumi:"serviceName"`
	// Current status of the user.
	Status string `pulumi:"status"`
}

func LookupCloudProjectDatabaseValkeyUserOutput(ctx *pulumi.Context, args LookupCloudProjectDatabaseValkeyUserOutputArgs, opts ...pulumi.InvokeOption) LookupCloudProjectDatabaseValkeyUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupCloudProjectDatabaseValkeyUserResultOutput, error) {
			args := v.(LookupCloudProjectDatabaseValkeyUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:index/getCloudProjectDatabaseValkeyUser:getCloudProjectDatabaseValkeyUser", args, LookupCloudProjectDatabaseValkeyUserResultOutput{}, options).(LookupCloudProjectDatabaseValkeyUserResultOutput), nil
		}).(LookupCloudProjectDatabaseValkeyUserResultOutput)
}

// A collection of arguments for invoking getCloudProjectDatabaseValkeyUser.
type LookupCloudProjectDatabaseValkeyUserOutputArgs struct {
	// Cluster ID
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Name of the user
	Name pulumi.StringInput `pulumi:"name"`
	// The id of the public cloud project. If omitted, the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupCloudProjectDatabaseValkeyUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseValkeyUserArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectDatabaseValkeyUser.
type LookupCloudProjectDatabaseValkeyUserResultOutput struct{ *pulumi.OutputState }

func (LookupCloudProjectDatabaseValkeyUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCloudProjectDatabaseValkeyUserResult)(nil)).Elem()
}

func (o LookupCloudProjectDatabaseValkeyUserResultOutput) ToLookupCloudProjectDatabaseValkeyUserResultOutput() LookupCloudProjectDatabaseValkeyUserResultOutput {
	return o
}

func (o LookupCloudProjectDatabaseValkeyUserResultOutput) ToLookupCloudProjectDatabaseValkeyUserResultOutputWithContext(ctx context.Context) LookupCloudProjectDatabaseValkeyUserResultOutput {
	return o
}

// Categories of the user.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// Channels of the user.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) []string { return v.Channels }).(pulumi.StringArrayOutput)
}

// See Argument Reference above.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Commands of the user.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// Date of the creation of the user.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// Keys of the user.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

// See Argument Reference above.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) string { return v.Name }).(pulumi.StringOutput)
}

// Current status of the user.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Current status of the user.
func (o LookupCloudProjectDatabaseValkeyUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCloudProjectDatabaseValkeyUserResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCloudProjectDatabaseValkeyUserResultOutput{})
}
