// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an OVHcloud IAM resource group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/go/ovh/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.NewResourceGroup(ctx, "myResourceGroup", &iam.ResourceGroupArgs{
//				Resources: pulumi.StringArray{
//					pulumi.String("urn:v1:eu:resource:service1:service1-id"),
//					pulumi.String("urn:v1:eu:resource:service2:service2-id"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Resource groups can be imported by using their id.
//
// > Read only resource groups cannot be imported
type ResourceGroup struct {
	pulumi.CustomResourceState

	// URN of the resource group, used when writing policies
	GroupURN pulumi.StringOutput `pulumi:"GroupURN"`
	// Date of the creation of the resource group
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Name of the resource group
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the account owning the resource group
	Owner pulumi.StringOutput `pulumi:"owner"`
	// Marks that the resource group is not editable. Usually means that this is a default resource group created by OVHcloud
	ReadOnly pulumi.BoolOutput `pulumi:"readOnly"`
	// Set of the URNs of the resources contained in the resource group. All urns must be ones of valid resources
	Resources pulumi.StringArrayOutput `pulumi:"resources"`
	// Date of the last modification of the resource group
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
}

// NewResourceGroup registers a new resource with the given unique name, arguments, and options.
func NewResourceGroup(ctx *pulumi.Context,
	name string, args *ResourceGroupArgs, opts ...pulumi.ResourceOption) (*ResourceGroup, error) {
	if args == nil {
		args = &ResourceGroupArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourceGroup
	err := ctx.RegisterResource("ovh:Iam/resourceGroup:ResourceGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceGroup gets an existing ResourceGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceGroupState, opts ...pulumi.ResourceOption) (*ResourceGroup, error) {
	var resource ResourceGroup
	err := ctx.ReadResource("ovh:Iam/resourceGroup:ResourceGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceGroup resources.
type resourceGroupState struct {
	// URN of the resource group, used when writing policies
	GroupURN *string `pulumi:"GroupURN"`
	// Date of the creation of the resource group
	CreatedAt *string `pulumi:"createdAt"`
	// Name of the resource group
	Name *string `pulumi:"name"`
	// Name of the account owning the resource group
	Owner *string `pulumi:"owner"`
	// Marks that the resource group is not editable. Usually means that this is a default resource group created by OVHcloud
	ReadOnly *bool `pulumi:"readOnly"`
	// Set of the URNs of the resources contained in the resource group. All urns must be ones of valid resources
	Resources []string `pulumi:"resources"`
	// Date of the last modification of the resource group
	UpdatedAt *string `pulumi:"updatedAt"`
}

type ResourceGroupState struct {
	// URN of the resource group, used when writing policies
	GroupURN pulumi.StringPtrInput
	// Date of the creation of the resource group
	CreatedAt pulumi.StringPtrInput
	// Name of the resource group
	Name pulumi.StringPtrInput
	// Name of the account owning the resource group
	Owner pulumi.StringPtrInput
	// Marks that the resource group is not editable. Usually means that this is a default resource group created by OVHcloud
	ReadOnly pulumi.BoolPtrInput
	// Set of the URNs of the resources contained in the resource group. All urns must be ones of valid resources
	Resources pulumi.StringArrayInput
	// Date of the last modification of the resource group
	UpdatedAt pulumi.StringPtrInput
}

func (ResourceGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceGroupState)(nil)).Elem()
}

type resourceGroupArgs struct {
	// Name of the resource group
	Name *string `pulumi:"name"`
	// Set of the URNs of the resources contained in the resource group. All urns must be ones of valid resources
	Resources []string `pulumi:"resources"`
}

// The set of arguments for constructing a ResourceGroup resource.
type ResourceGroupArgs struct {
	// Name of the resource group
	Name pulumi.StringPtrInput
	// Set of the URNs of the resources contained in the resource group. All urns must be ones of valid resources
	Resources pulumi.StringArrayInput
}

func (ResourceGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceGroupArgs)(nil)).Elem()
}

type ResourceGroupInput interface {
	pulumi.Input

	ToResourceGroupOutput() ResourceGroupOutput
	ToResourceGroupOutputWithContext(ctx context.Context) ResourceGroupOutput
}

func (*ResourceGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroup)(nil)).Elem()
}

func (i *ResourceGroup) ToResourceGroupOutput() ResourceGroupOutput {
	return i.ToResourceGroupOutputWithContext(context.Background())
}

func (i *ResourceGroup) ToResourceGroupOutputWithContext(ctx context.Context) ResourceGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupOutput)
}

// ResourceGroupArrayInput is an input type that accepts ResourceGroupArray and ResourceGroupArrayOutput values.
// You can construct a concrete instance of `ResourceGroupArrayInput` via:
//
//	ResourceGroupArray{ ResourceGroupArgs{...} }
type ResourceGroupArrayInput interface {
	pulumi.Input

	ToResourceGroupArrayOutput() ResourceGroupArrayOutput
	ToResourceGroupArrayOutputWithContext(context.Context) ResourceGroupArrayOutput
}

type ResourceGroupArray []ResourceGroupInput

func (ResourceGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceGroup)(nil)).Elem()
}

func (i ResourceGroupArray) ToResourceGroupArrayOutput() ResourceGroupArrayOutput {
	return i.ToResourceGroupArrayOutputWithContext(context.Background())
}

func (i ResourceGroupArray) ToResourceGroupArrayOutputWithContext(ctx context.Context) ResourceGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupArrayOutput)
}

// ResourceGroupMapInput is an input type that accepts ResourceGroupMap and ResourceGroupMapOutput values.
// You can construct a concrete instance of `ResourceGroupMapInput` via:
//
//	ResourceGroupMap{ "key": ResourceGroupArgs{...} }
type ResourceGroupMapInput interface {
	pulumi.Input

	ToResourceGroupMapOutput() ResourceGroupMapOutput
	ToResourceGroupMapOutputWithContext(context.Context) ResourceGroupMapOutput
}

type ResourceGroupMap map[string]ResourceGroupInput

func (ResourceGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceGroup)(nil)).Elem()
}

func (i ResourceGroupMap) ToResourceGroupMapOutput() ResourceGroupMapOutput {
	return i.ToResourceGroupMapOutputWithContext(context.Background())
}

func (i ResourceGroupMap) ToResourceGroupMapOutputWithContext(ctx context.Context) ResourceGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceGroupMapOutput)
}

type ResourceGroupOutput struct{ *pulumi.OutputState }

func (ResourceGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceGroup)(nil)).Elem()
}

func (o ResourceGroupOutput) ToResourceGroupOutput() ResourceGroupOutput {
	return o
}

func (o ResourceGroupOutput) ToResourceGroupOutputWithContext(ctx context.Context) ResourceGroupOutput {
	return o
}

// URN of the resource group, used when writing policies
func (o ResourceGroupOutput) GroupURN() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.StringOutput { return v.GroupURN }).(pulumi.StringOutput)
}

// Date of the creation of the resource group
func (o ResourceGroupOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Name of the resource group
func (o ResourceGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the account owning the resource group
func (o ResourceGroupOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.StringOutput { return v.Owner }).(pulumi.StringOutput)
}

// Marks that the resource group is not editable. Usually means that this is a default resource group created by OVHcloud
func (o ResourceGroupOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.BoolOutput { return v.ReadOnly }).(pulumi.BoolOutput)
}

// Set of the URNs of the resources contained in the resource group. All urns must be ones of valid resources
func (o ResourceGroupOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.StringArrayOutput { return v.Resources }).(pulumi.StringArrayOutput)
}

// Date of the last modification of the resource group
func (o ResourceGroupOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceGroup) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type ResourceGroupArrayOutput struct{ *pulumi.OutputState }

func (ResourceGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceGroup)(nil)).Elem()
}

func (o ResourceGroupArrayOutput) ToResourceGroupArrayOutput() ResourceGroupArrayOutput {
	return o
}

func (o ResourceGroupArrayOutput) ToResourceGroupArrayOutputWithContext(ctx context.Context) ResourceGroupArrayOutput {
	return o
}

func (o ResourceGroupArrayOutput) Index(i pulumi.IntInput) ResourceGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceGroup {
		return vs[0].([]*ResourceGroup)[vs[1].(int)]
	}).(ResourceGroupOutput)
}

type ResourceGroupMapOutput struct{ *pulumi.OutputState }

func (ResourceGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceGroup)(nil)).Elem()
}

func (o ResourceGroupMapOutput) ToResourceGroupMapOutput() ResourceGroupMapOutput {
	return o
}

func (o ResourceGroupMapOutput) ToResourceGroupMapOutputWithContext(ctx context.Context) ResourceGroupMapOutput {
	return o
}

func (o ResourceGroupMapOutput) MapIndex(k pulumi.StringInput) ResourceGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceGroup {
		return vs[0].(map[string]*ResourceGroup)[vs[1].(string)]
	}).(ResourceGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupInput)(nil)).Elem(), &ResourceGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupArrayInput)(nil)).Elem(), ResourceGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceGroupMapInput)(nil)).Elem(), ResourceGroupMap{})
	pulumi.RegisterOutputType(ResourceGroupOutput{})
	pulumi.RegisterOutputType(ResourceGroupArrayOutput{})
	pulumi.RegisterOutputType(ResourceGroupMapOutput{})
}
