// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to list the IAM action associated with a resource type.
func GetReferenceActions(ctx *pulumi.Context, args *GetReferenceActionsArgs, opts ...pulumi.InvokeOption) (*GetReferenceActionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetReferenceActionsResult
	err := ctx.Invoke("ovh:Iam/getReferenceActions:getReferenceActions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReferenceActions.
type GetReferenceActionsArgs struct {
	// Kind of resource we want the actions for
	Type string `pulumi:"type"`
}

// A collection of values returned by getReferenceActions.
type GetReferenceActionsResult struct {
	// List of actions
	Actions []GetReferenceActionsAction `pulumi:"actions"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Type string `pulumi:"type"`
}

func GetReferenceActionsOutput(ctx *pulumi.Context, args GetReferenceActionsOutputArgs, opts ...pulumi.InvokeOption) GetReferenceActionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetReferenceActionsResultOutput, error) {
			args := v.(GetReferenceActionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:Iam/getReferenceActions:getReferenceActions", args, GetReferenceActionsResultOutput{}, options).(GetReferenceActionsResultOutput), nil
		}).(GetReferenceActionsResultOutput)
}

// A collection of arguments for invoking getReferenceActions.
type GetReferenceActionsOutputArgs struct {
	// Kind of resource we want the actions for
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetReferenceActionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReferenceActionsArgs)(nil)).Elem()
}

// A collection of values returned by getReferenceActions.
type GetReferenceActionsResultOutput struct{ *pulumi.OutputState }

func (GetReferenceActionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReferenceActionsResult)(nil)).Elem()
}

func (o GetReferenceActionsResultOutput) ToGetReferenceActionsResultOutput() GetReferenceActionsResultOutput {
	return o
}

func (o GetReferenceActionsResultOutput) ToGetReferenceActionsResultOutputWithContext(ctx context.Context) GetReferenceActionsResultOutput {
	return o
}

// List of actions
func (o GetReferenceActionsResultOutput) Actions() GetReferenceActionsActionArrayOutput {
	return o.ApplyT(func(v GetReferenceActionsResult) []GetReferenceActionsAction { return v.Actions }).(GetReferenceActionsActionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetReferenceActionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceActionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetReferenceActionsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetReferenceActionsResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetReferenceActionsResultOutput{})
}
