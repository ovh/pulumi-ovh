// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupResourceGroup(ctx *pulumi.Context, args *LookupResourceGroupArgs, opts ...pulumi.InvokeOption) (*LookupResourceGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResourceGroupResult
	err := ctx.Invoke("ovh:Iam/getResourceGroup:getResourceGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResourceGroup.
type LookupResourceGroupArgs struct {
	Id string `pulumi:"id"`
}

// A collection of values returned by getResourceGroup.
type LookupResourceGroupResult struct {
	GroupURN  string   `pulumi:"GroupURN"`
	CreatedAt string   `pulumi:"createdAt"`
	Id        string   `pulumi:"id"`
	Name      string   `pulumi:"name"`
	Owner     string   `pulumi:"owner"`
	ReadOnly  bool     `pulumi:"readOnly"`
	Resources []string `pulumi:"resources"`
	UpdatedAt string   `pulumi:"updatedAt"`
}

func LookupResourceGroupOutput(ctx *pulumi.Context, args LookupResourceGroupOutputArgs, opts ...pulumi.InvokeOption) LookupResourceGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupResourceGroupResultOutput, error) {
			args := v.(LookupResourceGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:Iam/getResourceGroup:getResourceGroup", args, LookupResourceGroupResultOutput{}, options).(LookupResourceGroupResultOutput), nil
		}).(LookupResourceGroupResultOutput)
}

// A collection of arguments for invoking getResourceGroup.
type LookupResourceGroupOutputArgs struct {
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupResourceGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceGroupArgs)(nil)).Elem()
}

// A collection of values returned by getResourceGroup.
type LookupResourceGroupResultOutput struct{ *pulumi.OutputState }

func (LookupResourceGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceGroupResult)(nil)).Elem()
}

func (o LookupResourceGroupResultOutput) ToLookupResourceGroupResultOutput() LookupResourceGroupResultOutput {
	return o
}

func (o LookupResourceGroupResultOutput) ToLookupResourceGroupResultOutputWithContext(ctx context.Context) LookupResourceGroupResultOutput {
	return o
}

func (o LookupResourceGroupResultOutput) GroupURN() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceGroupResult) string { return v.GroupURN }).(pulumi.StringOutput)
}

func (o LookupResourceGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupResourceGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupResourceGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupResourceGroupResultOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceGroupResult) string { return v.Owner }).(pulumi.StringOutput)
}

func (o LookupResourceGroupResultOutput) ReadOnly() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupResourceGroupResult) bool { return v.ReadOnly }).(pulumi.BoolOutput)
}

func (o LookupResourceGroupResultOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupResourceGroupResult) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

func (o LookupResourceGroupResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceGroupResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceGroupResultOutput{})
}
