// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iploadbalancing

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetIpLoadBalancing(ctx *pulumi.Context, args *GetIpLoadBalancingArgs, opts ...pulumi.InvokeOption) (*GetIpLoadBalancingResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIpLoadBalancingResult
	err := ctx.Invoke("ovh:IpLoadBalancing/getIpLoadBalancing:getIpLoadBalancing", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpLoadBalancing.
type GetIpLoadBalancingArgs struct {
	DisplayName      *string  `pulumi:"displayName"`
	IpLoadbalancing  *string  `pulumi:"ipLoadbalancing"`
	Ipv4             *string  `pulumi:"ipv4"`
	Ipv6             *string  `pulumi:"ipv6"`
	Offer            *string  `pulumi:"offer"`
	ServiceName      *string  `pulumi:"serviceName"`
	SslConfiguration *string  `pulumi:"sslConfiguration"`
	State            *string  `pulumi:"state"`
	VrackEligibility *bool    `pulumi:"vrackEligibility"`
	VrackName        *string  `pulumi:"vrackName"`
	Zones            []string `pulumi:"zones"`
}

// A collection of values returned by getIpLoadBalancing.
type GetIpLoadBalancingResult struct {
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                            `pulumi:"id"`
	IpLoadbalancing  string                            `pulumi:"ipLoadbalancing"`
	Ipv4             string                            `pulumi:"ipv4"`
	Ipv6             string                            `pulumi:"ipv6"`
	MetricsToken     string                            `pulumi:"metricsToken"`
	Offer            string                            `pulumi:"offer"`
	OrderableZones   []GetIpLoadBalancingOrderableZone `pulumi:"orderableZones"`
	ServiceName      string                            `pulumi:"serviceName"`
	SslConfiguration string                            `pulumi:"sslConfiguration"`
	State            string                            `pulumi:"state"`
	Urn              string                            `pulumi:"urn"`
	VrackEligibility bool                              `pulumi:"vrackEligibility"`
	VrackName        string                            `pulumi:"vrackName"`
	Zones            []string                          `pulumi:"zones"`
}

func GetIpLoadBalancingOutput(ctx *pulumi.Context, args GetIpLoadBalancingOutputArgs, opts ...pulumi.InvokeOption) GetIpLoadBalancingResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIpLoadBalancingResultOutput, error) {
			args := v.(GetIpLoadBalancingArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:IpLoadBalancing/getIpLoadBalancing:getIpLoadBalancing", args, GetIpLoadBalancingResultOutput{}, options).(GetIpLoadBalancingResultOutput), nil
		}).(GetIpLoadBalancingResultOutput)
}

// A collection of arguments for invoking getIpLoadBalancing.
type GetIpLoadBalancingOutputArgs struct {
	DisplayName      pulumi.StringPtrInput   `pulumi:"displayName"`
	IpLoadbalancing  pulumi.StringPtrInput   `pulumi:"ipLoadbalancing"`
	Ipv4             pulumi.StringPtrInput   `pulumi:"ipv4"`
	Ipv6             pulumi.StringPtrInput   `pulumi:"ipv6"`
	Offer            pulumi.StringPtrInput   `pulumi:"offer"`
	ServiceName      pulumi.StringPtrInput   `pulumi:"serviceName"`
	SslConfiguration pulumi.StringPtrInput   `pulumi:"sslConfiguration"`
	State            pulumi.StringPtrInput   `pulumi:"state"`
	VrackEligibility pulumi.BoolPtrInput     `pulumi:"vrackEligibility"`
	VrackName        pulumi.StringPtrInput   `pulumi:"vrackName"`
	Zones            pulumi.StringArrayInput `pulumi:"zones"`
}

func (GetIpLoadBalancingOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpLoadBalancingArgs)(nil)).Elem()
}

// A collection of values returned by getIpLoadBalancing.
type GetIpLoadBalancingResultOutput struct{ *pulumi.OutputState }

func (GetIpLoadBalancingResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIpLoadBalancingResult)(nil)).Elem()
}

func (o GetIpLoadBalancingResultOutput) ToGetIpLoadBalancingResultOutput() GetIpLoadBalancingResultOutput {
	return o
}

func (o GetIpLoadBalancingResultOutput) ToGetIpLoadBalancingResultOutputWithContext(ctx context.Context) GetIpLoadBalancingResultOutput {
	return o
}

func (o GetIpLoadBalancingResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIpLoadBalancingResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) IpLoadbalancing() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.IpLoadbalancing }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) Ipv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.Ipv4 }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) Ipv6() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.Ipv6 }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) MetricsToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.MetricsToken }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) Offer() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.Offer }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) OrderableZones() GetIpLoadBalancingOrderableZoneArrayOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) []GetIpLoadBalancingOrderableZone { return v.OrderableZones }).(GetIpLoadBalancingOrderableZoneArrayOutput)
}

func (o GetIpLoadBalancingResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) SslConfiguration() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.SslConfiguration }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.Urn }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) VrackEligibility() pulumi.BoolOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) bool { return v.VrackEligibility }).(pulumi.BoolOutput)
}

func (o GetIpLoadBalancingResultOutput) VrackName() pulumi.StringOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) string { return v.VrackName }).(pulumi.StringOutput)
}

func (o GetIpLoadBalancingResultOutput) Zones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetIpLoadBalancingResult) []string { return v.Zones }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIpLoadBalancingResultOutput{})
}
