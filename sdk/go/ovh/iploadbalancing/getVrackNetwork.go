// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iploadbalancing

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVrackNetwork(ctx *pulumi.Context, args *LookupVrackNetworkArgs, opts ...pulumi.InvokeOption) (*LookupVrackNetworkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVrackNetworkResult
	err := ctx.Invoke("ovh:IpLoadBalancing/getVrackNetwork:getVrackNetwork", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVrackNetwork.
type LookupVrackNetworkArgs struct {
	ServiceName    string `pulumi:"serviceName"`
	VrackNetworkId int    `pulumi:"vrackNetworkId"`
}

// A collection of values returned by getVrackNetwork.
type LookupVrackNetworkResult struct {
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	NatIp          string `pulumi:"natIp"`
	ServiceName    string `pulumi:"serviceName"`
	Subnet         string `pulumi:"subnet"`
	Vlan           int    `pulumi:"vlan"`
	VrackNetworkId int    `pulumi:"vrackNetworkId"`
}

func LookupVrackNetworkOutput(ctx *pulumi.Context, args LookupVrackNetworkOutputArgs, opts ...pulumi.InvokeOption) LookupVrackNetworkResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVrackNetworkResultOutput, error) {
			args := v.(LookupVrackNetworkArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:IpLoadBalancing/getVrackNetwork:getVrackNetwork", args, LookupVrackNetworkResultOutput{}, options).(LookupVrackNetworkResultOutput), nil
		}).(LookupVrackNetworkResultOutput)
}

// A collection of arguments for invoking getVrackNetwork.
type LookupVrackNetworkOutputArgs struct {
	ServiceName    pulumi.StringInput `pulumi:"serviceName"`
	VrackNetworkId pulumi.IntInput    `pulumi:"vrackNetworkId"`
}

func (LookupVrackNetworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrackNetworkArgs)(nil)).Elem()
}

// A collection of values returned by getVrackNetwork.
type LookupVrackNetworkResultOutput struct{ *pulumi.OutputState }

func (LookupVrackNetworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVrackNetworkResult)(nil)).Elem()
}

func (o LookupVrackNetworkResultOutput) ToLookupVrackNetworkResultOutput() LookupVrackNetworkResultOutput {
	return o
}

func (o LookupVrackNetworkResultOutput) ToLookupVrackNetworkResultOutputWithContext(ctx context.Context) LookupVrackNetworkResultOutput {
	return o
}

func (o LookupVrackNetworkResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrackNetworkResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVrackNetworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrackNetworkResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVrackNetworkResultOutput) NatIp() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrackNetworkResult) string { return v.NatIp }).(pulumi.StringOutput)
}

func (o LookupVrackNetworkResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrackNetworkResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupVrackNetworkResultOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVrackNetworkResult) string { return v.Subnet }).(pulumi.StringOutput)
}

func (o LookupVrackNetworkResultOutput) Vlan() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVrackNetworkResult) int { return v.Vlan }).(pulumi.IntOutput)
}

func (o LookupVrackNetworkResultOutput) VrackNetworkId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVrackNetworkResult) int { return v.VrackNetworkId }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVrackNetworkResultOutput{})
}
