// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get SSH keys in a Public Cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.GetCloudProjectSshKeys(ctx, &ovh.GetCloudProjectSshKeysArgs{
//				ServiceName: "XXX",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetCloudProjectSshKeys(ctx *pulumi.Context, args *GetCloudProjectSshKeysArgs, opts ...pulumi.InvokeOption) (*GetCloudProjectSshKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCloudProjectSshKeysResult
	err := ctx.Invoke("ovh:index/getCloudProjectSshKeys:getCloudProjectSshKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCloudProjectSshKeys.
type GetCloudProjectSshKeysArgs struct {
	// Region
	Region *string `pulumi:"region"`
	// Service name
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getCloudProjectSshKeys.
type GetCloudProjectSshKeysResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Region
	Region string `pulumi:"region"`
	// Service name
	ServiceName string                         `pulumi:"serviceName"`
	SshKeys     []GetCloudProjectSshKeysSshKey `pulumi:"sshKeys"`
}

func GetCloudProjectSshKeysOutput(ctx *pulumi.Context, args GetCloudProjectSshKeysOutputArgs, opts ...pulumi.InvokeOption) GetCloudProjectSshKeysResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetCloudProjectSshKeysResultOutput, error) {
			args := v.(GetCloudProjectSshKeysArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:index/getCloudProjectSshKeys:getCloudProjectSshKeys", args, GetCloudProjectSshKeysResultOutput{}, options).(GetCloudProjectSshKeysResultOutput), nil
		}).(GetCloudProjectSshKeysResultOutput)
}

// A collection of arguments for invoking getCloudProjectSshKeys.
type GetCloudProjectSshKeysOutputArgs struct {
	// Region
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Service name
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetCloudProjectSshKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectSshKeysArgs)(nil)).Elem()
}

// A collection of values returned by getCloudProjectSshKeys.
type GetCloudProjectSshKeysResultOutput struct{ *pulumi.OutputState }

func (GetCloudProjectSshKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudProjectSshKeysResult)(nil)).Elem()
}

func (o GetCloudProjectSshKeysResultOutput) ToGetCloudProjectSshKeysResultOutput() GetCloudProjectSshKeysResultOutput {
	return o
}

func (o GetCloudProjectSshKeysResultOutput) ToGetCloudProjectSshKeysResultOutputWithContext(ctx context.Context) GetCloudProjectSshKeysResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetCloudProjectSshKeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectSshKeysResult) string { return v.Id }).(pulumi.StringOutput)
}

// Region
func (o GetCloudProjectSshKeysResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectSshKeysResult) string { return v.Region }).(pulumi.StringOutput)
}

// Service name
func (o GetCloudProjectSshKeysResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudProjectSshKeysResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetCloudProjectSshKeysResultOutput) SshKeys() GetCloudProjectSshKeysSshKeyArrayOutput {
	return o.ApplyT(func(v GetCloudProjectSshKeysResult) []GetCloudProjectSshKeysSshKey { return v.SshKeys }).(GetCloudProjectSshKeysSshKeyArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCloudProjectSshKeysResultOutput{})
}
