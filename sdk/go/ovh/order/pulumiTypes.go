// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package order

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetCartProductOptionsPlanPrice struct {
	// Capacities of the pricing (type of pricing)
	Capacities []interface{} `pulumi:"capacities"`
	// Description of the pricing
	Description string `pulumi:"description"`
	// Duration for ordering the product
	Duration string `pulumi:"duration"`
	// Interval of renewal
	Interval int `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity int `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat int `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity int `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat int `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents int `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices []GetCartProductOptionsPlanPricePrice `pulumi:"prices"`
	// Pricing model identifier
	PricingMode string `pulumi:"pricingMode"`
	// Pricing type
	PricingType string `pulumi:"pricingType"`
}

// GetCartProductOptionsPlanPriceInput is an input type that accepts GetCartProductOptionsPlanPriceArgs and GetCartProductOptionsPlanPriceOutput values.
// You can construct a concrete instance of `GetCartProductOptionsPlanPriceInput` via:
//
//	GetCartProductOptionsPlanPriceArgs{...}
type GetCartProductOptionsPlanPriceInput interface {
	pulumi.Input

	ToGetCartProductOptionsPlanPriceOutput() GetCartProductOptionsPlanPriceOutput
	ToGetCartProductOptionsPlanPriceOutputWithContext(context.Context) GetCartProductOptionsPlanPriceOutput
}

type GetCartProductOptionsPlanPriceArgs struct {
	// Capacities of the pricing (type of pricing)
	Capacities pulumi.ArrayInput `pulumi:"capacities"`
	// Description of the pricing
	Description pulumi.StringInput `pulumi:"description"`
	// Duration for ordering the product
	Duration pulumi.StringInput `pulumi:"duration"`
	// Interval of renewal
	Interval pulumi.IntInput `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity pulumi.IntInput `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat pulumi.IntInput `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity pulumi.IntInput `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat pulumi.IntInput `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents pulumi.IntInput `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices GetCartProductOptionsPlanPricePriceArrayInput `pulumi:"prices"`
	// Pricing model identifier
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
	// Pricing type
	PricingType pulumi.StringInput `pulumi:"pricingType"`
}

func (GetCartProductOptionsPlanPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsPlanPrice)(nil)).Elem()
}

func (i GetCartProductOptionsPlanPriceArgs) ToGetCartProductOptionsPlanPriceOutput() GetCartProductOptionsPlanPriceOutput {
	return i.ToGetCartProductOptionsPlanPriceOutputWithContext(context.Background())
}

func (i GetCartProductOptionsPlanPriceArgs) ToGetCartProductOptionsPlanPriceOutputWithContext(ctx context.Context) GetCartProductOptionsPlanPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsPlanPriceOutput)
}

// GetCartProductOptionsPlanPriceArrayInput is an input type that accepts GetCartProductOptionsPlanPriceArray and GetCartProductOptionsPlanPriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductOptionsPlanPriceArrayInput` via:
//
//	GetCartProductOptionsPlanPriceArray{ GetCartProductOptionsPlanPriceArgs{...} }
type GetCartProductOptionsPlanPriceArrayInput interface {
	pulumi.Input

	ToGetCartProductOptionsPlanPriceArrayOutput() GetCartProductOptionsPlanPriceArrayOutput
	ToGetCartProductOptionsPlanPriceArrayOutputWithContext(context.Context) GetCartProductOptionsPlanPriceArrayOutput
}

type GetCartProductOptionsPlanPriceArray []GetCartProductOptionsPlanPriceInput

func (GetCartProductOptionsPlanPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsPlanPrice)(nil)).Elem()
}

func (i GetCartProductOptionsPlanPriceArray) ToGetCartProductOptionsPlanPriceArrayOutput() GetCartProductOptionsPlanPriceArrayOutput {
	return i.ToGetCartProductOptionsPlanPriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductOptionsPlanPriceArray) ToGetCartProductOptionsPlanPriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsPlanPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsPlanPriceArrayOutput)
}

type GetCartProductOptionsPlanPriceOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsPlanPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsPlanPrice)(nil)).Elem()
}

func (o GetCartProductOptionsPlanPriceOutput) ToGetCartProductOptionsPlanPriceOutput() GetCartProductOptionsPlanPriceOutput {
	return o
}

func (o GetCartProductOptionsPlanPriceOutput) ToGetCartProductOptionsPlanPriceOutputWithContext(ctx context.Context) GetCartProductOptionsPlanPriceOutput {
	return o
}

// Capacities of the pricing (type of pricing)
func (o GetCartProductOptionsPlanPriceOutput) Capacities() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) []interface{} { return v.Capacities }).(pulumi.ArrayOutput)
}

// Description of the pricing
func (o GetCartProductOptionsPlanPriceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) string { return v.Description }).(pulumi.StringOutput)
}

// Duration for ordering the product
func (o GetCartProductOptionsPlanPriceOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) string { return v.Duration }).(pulumi.StringOutput)
}

// Interval of renewal
func (o GetCartProductOptionsPlanPriceOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) int { return v.Interval }).(pulumi.IntOutput)
}

// Maximum quantity that can be ordered
func (o GetCartProductOptionsPlanPriceOutput) MaximumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) int { return v.MaximumQuantity }).(pulumi.IntOutput)
}

// Maximum repeat for renewal
func (o GetCartProductOptionsPlanPriceOutput) MaximumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) int { return v.MaximumRepeat }).(pulumi.IntOutput)
}

// Minimum quantity that can be ordered
func (o GetCartProductOptionsPlanPriceOutput) MinimumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) int { return v.MinimumQuantity }).(pulumi.IntOutput)
}

// Minimum repeat for renewal
func (o GetCartProductOptionsPlanPriceOutput) MinimumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) int { return v.MinimumRepeat }).(pulumi.IntOutput)
}

// Price of the product in micro-centims
func (o GetCartProductOptionsPlanPriceOutput) PriceInUcents() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) int { return v.PriceInUcents }).(pulumi.IntOutput)
}

// Price of the product (Price with its currency and textual representation)
func (o GetCartProductOptionsPlanPriceOutput) Prices() GetCartProductOptionsPlanPricePriceArrayOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) []GetCartProductOptionsPlanPricePrice { return v.Prices }).(GetCartProductOptionsPlanPricePriceArrayOutput)
}

// Pricing model identifier
func (o GetCartProductOptionsPlanPriceOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) string { return v.PricingMode }).(pulumi.StringOutput)
}

// Pricing type
func (o GetCartProductOptionsPlanPriceOutput) PricingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPrice) string { return v.PricingType }).(pulumi.StringOutput)
}

type GetCartProductOptionsPlanPriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsPlanPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsPlanPrice)(nil)).Elem()
}

func (o GetCartProductOptionsPlanPriceArrayOutput) ToGetCartProductOptionsPlanPriceArrayOutput() GetCartProductOptionsPlanPriceArrayOutput {
	return o
}

func (o GetCartProductOptionsPlanPriceArrayOutput) ToGetCartProductOptionsPlanPriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsPlanPriceArrayOutput {
	return o
}

func (o GetCartProductOptionsPlanPriceArrayOutput) Index(i pulumi.IntInput) GetCartProductOptionsPlanPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductOptionsPlanPrice {
		return vs[0].([]GetCartProductOptionsPlanPrice)[vs[1].(int)]
	}).(GetCartProductOptionsPlanPriceOutput)
}

type GetCartProductOptionsPlanPricePrice struct {
	// Currency code
	CurrencyCode string `pulumi:"currencyCode"`
	// Textual representation
	Text string `pulumi:"text"`
	// The effective price
	Value float64 `pulumi:"value"`
}

// GetCartProductOptionsPlanPricePriceInput is an input type that accepts GetCartProductOptionsPlanPricePriceArgs and GetCartProductOptionsPlanPricePriceOutput values.
// You can construct a concrete instance of `GetCartProductOptionsPlanPricePriceInput` via:
//
//	GetCartProductOptionsPlanPricePriceArgs{...}
type GetCartProductOptionsPlanPricePriceInput interface {
	pulumi.Input

	ToGetCartProductOptionsPlanPricePriceOutput() GetCartProductOptionsPlanPricePriceOutput
	ToGetCartProductOptionsPlanPricePriceOutputWithContext(context.Context) GetCartProductOptionsPlanPricePriceOutput
}

type GetCartProductOptionsPlanPricePriceArgs struct {
	// Currency code
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	// Textual representation
	Text pulumi.StringInput `pulumi:"text"`
	// The effective price
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetCartProductOptionsPlanPricePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsPlanPricePrice)(nil)).Elem()
}

func (i GetCartProductOptionsPlanPricePriceArgs) ToGetCartProductOptionsPlanPricePriceOutput() GetCartProductOptionsPlanPricePriceOutput {
	return i.ToGetCartProductOptionsPlanPricePriceOutputWithContext(context.Background())
}

func (i GetCartProductOptionsPlanPricePriceArgs) ToGetCartProductOptionsPlanPricePriceOutputWithContext(ctx context.Context) GetCartProductOptionsPlanPricePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsPlanPricePriceOutput)
}

// GetCartProductOptionsPlanPricePriceArrayInput is an input type that accepts GetCartProductOptionsPlanPricePriceArray and GetCartProductOptionsPlanPricePriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductOptionsPlanPricePriceArrayInput` via:
//
//	GetCartProductOptionsPlanPricePriceArray{ GetCartProductOptionsPlanPricePriceArgs{...} }
type GetCartProductOptionsPlanPricePriceArrayInput interface {
	pulumi.Input

	ToGetCartProductOptionsPlanPricePriceArrayOutput() GetCartProductOptionsPlanPricePriceArrayOutput
	ToGetCartProductOptionsPlanPricePriceArrayOutputWithContext(context.Context) GetCartProductOptionsPlanPricePriceArrayOutput
}

type GetCartProductOptionsPlanPricePriceArray []GetCartProductOptionsPlanPricePriceInput

func (GetCartProductOptionsPlanPricePriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsPlanPricePrice)(nil)).Elem()
}

func (i GetCartProductOptionsPlanPricePriceArray) ToGetCartProductOptionsPlanPricePriceArrayOutput() GetCartProductOptionsPlanPricePriceArrayOutput {
	return i.ToGetCartProductOptionsPlanPricePriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductOptionsPlanPricePriceArray) ToGetCartProductOptionsPlanPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsPlanPricePriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsPlanPricePriceArrayOutput)
}

type GetCartProductOptionsPlanPricePriceOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsPlanPricePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsPlanPricePrice)(nil)).Elem()
}

func (o GetCartProductOptionsPlanPricePriceOutput) ToGetCartProductOptionsPlanPricePriceOutput() GetCartProductOptionsPlanPricePriceOutput {
	return o
}

func (o GetCartProductOptionsPlanPricePriceOutput) ToGetCartProductOptionsPlanPricePriceOutputWithContext(ctx context.Context) GetCartProductOptionsPlanPricePriceOutput {
	return o
}

// Currency code
func (o GetCartProductOptionsPlanPricePriceOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPricePrice) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// Textual representation
func (o GetCartProductOptionsPlanPricePriceOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanPricePrice) string { return v.Text }).(pulumi.StringOutput)
}

// The effective price
func (o GetCartProductOptionsPlanPricePriceOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetCartProductOptionsPlanPricePrice) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetCartProductOptionsPlanPricePriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsPlanPricePriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsPlanPricePrice)(nil)).Elem()
}

func (o GetCartProductOptionsPlanPricePriceArrayOutput) ToGetCartProductOptionsPlanPricePriceArrayOutput() GetCartProductOptionsPlanPricePriceArrayOutput {
	return o
}

func (o GetCartProductOptionsPlanPricePriceArrayOutput) ToGetCartProductOptionsPlanPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsPlanPricePriceArrayOutput {
	return o
}

func (o GetCartProductOptionsPlanPricePriceArrayOutput) Index(i pulumi.IntInput) GetCartProductOptionsPlanPricePriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductOptionsPlanPricePrice {
		return vs[0].([]GetCartProductOptionsPlanPricePrice)[vs[1].(int)]
	}).(GetCartProductOptionsPlanPricePriceOutput)
}

type GetCartProductOptionsPlanSelectedPrice struct {
	// Capacities of the pricing (type of pricing)
	Capacities []interface{} `pulumi:"capacities"`
	// Description of the pricing
	Description string `pulumi:"description"`
	// Duration for ordering the product
	Duration string `pulumi:"duration"`
	// Interval of renewal
	Interval int `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity int `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat int `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity int `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat int `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents int `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices []GetCartProductOptionsPlanSelectedPricePrice `pulumi:"prices"`
	// Pricing model identifier
	PricingMode string `pulumi:"pricingMode"`
	// Pricing type
	PricingType string `pulumi:"pricingType"`
}

// GetCartProductOptionsPlanSelectedPriceInput is an input type that accepts GetCartProductOptionsPlanSelectedPriceArgs and GetCartProductOptionsPlanSelectedPriceOutput values.
// You can construct a concrete instance of `GetCartProductOptionsPlanSelectedPriceInput` via:
//
//	GetCartProductOptionsPlanSelectedPriceArgs{...}
type GetCartProductOptionsPlanSelectedPriceInput interface {
	pulumi.Input

	ToGetCartProductOptionsPlanSelectedPriceOutput() GetCartProductOptionsPlanSelectedPriceOutput
	ToGetCartProductOptionsPlanSelectedPriceOutputWithContext(context.Context) GetCartProductOptionsPlanSelectedPriceOutput
}

type GetCartProductOptionsPlanSelectedPriceArgs struct {
	// Capacities of the pricing (type of pricing)
	Capacities pulumi.ArrayInput `pulumi:"capacities"`
	// Description of the pricing
	Description pulumi.StringInput `pulumi:"description"`
	// Duration for ordering the product
	Duration pulumi.StringInput `pulumi:"duration"`
	// Interval of renewal
	Interval pulumi.IntInput `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity pulumi.IntInput `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat pulumi.IntInput `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity pulumi.IntInput `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat pulumi.IntInput `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents pulumi.IntInput `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices GetCartProductOptionsPlanSelectedPricePriceArrayInput `pulumi:"prices"`
	// Pricing model identifier
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
	// Pricing type
	PricingType pulumi.StringInput `pulumi:"pricingType"`
}

func (GetCartProductOptionsPlanSelectedPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsPlanSelectedPrice)(nil)).Elem()
}

func (i GetCartProductOptionsPlanSelectedPriceArgs) ToGetCartProductOptionsPlanSelectedPriceOutput() GetCartProductOptionsPlanSelectedPriceOutput {
	return i.ToGetCartProductOptionsPlanSelectedPriceOutputWithContext(context.Background())
}

func (i GetCartProductOptionsPlanSelectedPriceArgs) ToGetCartProductOptionsPlanSelectedPriceOutputWithContext(ctx context.Context) GetCartProductOptionsPlanSelectedPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsPlanSelectedPriceOutput)
}

// GetCartProductOptionsPlanSelectedPriceArrayInput is an input type that accepts GetCartProductOptionsPlanSelectedPriceArray and GetCartProductOptionsPlanSelectedPriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductOptionsPlanSelectedPriceArrayInput` via:
//
//	GetCartProductOptionsPlanSelectedPriceArray{ GetCartProductOptionsPlanSelectedPriceArgs{...} }
type GetCartProductOptionsPlanSelectedPriceArrayInput interface {
	pulumi.Input

	ToGetCartProductOptionsPlanSelectedPriceArrayOutput() GetCartProductOptionsPlanSelectedPriceArrayOutput
	ToGetCartProductOptionsPlanSelectedPriceArrayOutputWithContext(context.Context) GetCartProductOptionsPlanSelectedPriceArrayOutput
}

type GetCartProductOptionsPlanSelectedPriceArray []GetCartProductOptionsPlanSelectedPriceInput

func (GetCartProductOptionsPlanSelectedPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsPlanSelectedPrice)(nil)).Elem()
}

func (i GetCartProductOptionsPlanSelectedPriceArray) ToGetCartProductOptionsPlanSelectedPriceArrayOutput() GetCartProductOptionsPlanSelectedPriceArrayOutput {
	return i.ToGetCartProductOptionsPlanSelectedPriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductOptionsPlanSelectedPriceArray) ToGetCartProductOptionsPlanSelectedPriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsPlanSelectedPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsPlanSelectedPriceArrayOutput)
}

type GetCartProductOptionsPlanSelectedPriceOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsPlanSelectedPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsPlanSelectedPrice)(nil)).Elem()
}

func (o GetCartProductOptionsPlanSelectedPriceOutput) ToGetCartProductOptionsPlanSelectedPriceOutput() GetCartProductOptionsPlanSelectedPriceOutput {
	return o
}

func (o GetCartProductOptionsPlanSelectedPriceOutput) ToGetCartProductOptionsPlanSelectedPriceOutputWithContext(ctx context.Context) GetCartProductOptionsPlanSelectedPriceOutput {
	return o
}

// Capacities of the pricing (type of pricing)
func (o GetCartProductOptionsPlanSelectedPriceOutput) Capacities() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) []interface{} { return v.Capacities }).(pulumi.ArrayOutput)
}

// Description of the pricing
func (o GetCartProductOptionsPlanSelectedPriceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) string { return v.Description }).(pulumi.StringOutput)
}

// Duration for ordering the product
func (o GetCartProductOptionsPlanSelectedPriceOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) string { return v.Duration }).(pulumi.StringOutput)
}

// Interval of renewal
func (o GetCartProductOptionsPlanSelectedPriceOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) int { return v.Interval }).(pulumi.IntOutput)
}

// Maximum quantity that can be ordered
func (o GetCartProductOptionsPlanSelectedPriceOutput) MaximumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) int { return v.MaximumQuantity }).(pulumi.IntOutput)
}

// Maximum repeat for renewal
func (o GetCartProductOptionsPlanSelectedPriceOutput) MaximumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) int { return v.MaximumRepeat }).(pulumi.IntOutput)
}

// Minimum quantity that can be ordered
func (o GetCartProductOptionsPlanSelectedPriceOutput) MinimumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) int { return v.MinimumQuantity }).(pulumi.IntOutput)
}

// Minimum repeat for renewal
func (o GetCartProductOptionsPlanSelectedPriceOutput) MinimumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) int { return v.MinimumRepeat }).(pulumi.IntOutput)
}

// Price of the product in micro-centims
func (o GetCartProductOptionsPlanSelectedPriceOutput) PriceInUcents() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) int { return v.PriceInUcents }).(pulumi.IntOutput)
}

// Price of the product (Price with its currency and textual representation)
func (o GetCartProductOptionsPlanSelectedPriceOutput) Prices() GetCartProductOptionsPlanSelectedPricePriceArrayOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) []GetCartProductOptionsPlanSelectedPricePrice {
		return v.Prices
	}).(GetCartProductOptionsPlanSelectedPricePriceArrayOutput)
}

// Pricing model identifier
func (o GetCartProductOptionsPlanSelectedPriceOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) string { return v.PricingMode }).(pulumi.StringOutput)
}

// Pricing type
func (o GetCartProductOptionsPlanSelectedPriceOutput) PricingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPrice) string { return v.PricingType }).(pulumi.StringOutput)
}

type GetCartProductOptionsPlanSelectedPriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsPlanSelectedPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsPlanSelectedPrice)(nil)).Elem()
}

func (o GetCartProductOptionsPlanSelectedPriceArrayOutput) ToGetCartProductOptionsPlanSelectedPriceArrayOutput() GetCartProductOptionsPlanSelectedPriceArrayOutput {
	return o
}

func (o GetCartProductOptionsPlanSelectedPriceArrayOutput) ToGetCartProductOptionsPlanSelectedPriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsPlanSelectedPriceArrayOutput {
	return o
}

func (o GetCartProductOptionsPlanSelectedPriceArrayOutput) Index(i pulumi.IntInput) GetCartProductOptionsPlanSelectedPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductOptionsPlanSelectedPrice {
		return vs[0].([]GetCartProductOptionsPlanSelectedPrice)[vs[1].(int)]
	}).(GetCartProductOptionsPlanSelectedPriceOutput)
}

type GetCartProductOptionsPlanSelectedPricePrice struct {
	// Currency code
	CurrencyCode string `pulumi:"currencyCode"`
	// Textual representation
	Text string `pulumi:"text"`
	// The effective price
	Value float64 `pulumi:"value"`
}

// GetCartProductOptionsPlanSelectedPricePriceInput is an input type that accepts GetCartProductOptionsPlanSelectedPricePriceArgs and GetCartProductOptionsPlanSelectedPricePriceOutput values.
// You can construct a concrete instance of `GetCartProductOptionsPlanSelectedPricePriceInput` via:
//
//	GetCartProductOptionsPlanSelectedPricePriceArgs{...}
type GetCartProductOptionsPlanSelectedPricePriceInput interface {
	pulumi.Input

	ToGetCartProductOptionsPlanSelectedPricePriceOutput() GetCartProductOptionsPlanSelectedPricePriceOutput
	ToGetCartProductOptionsPlanSelectedPricePriceOutputWithContext(context.Context) GetCartProductOptionsPlanSelectedPricePriceOutput
}

type GetCartProductOptionsPlanSelectedPricePriceArgs struct {
	// Currency code
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	// Textual representation
	Text pulumi.StringInput `pulumi:"text"`
	// The effective price
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetCartProductOptionsPlanSelectedPricePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsPlanSelectedPricePrice)(nil)).Elem()
}

func (i GetCartProductOptionsPlanSelectedPricePriceArgs) ToGetCartProductOptionsPlanSelectedPricePriceOutput() GetCartProductOptionsPlanSelectedPricePriceOutput {
	return i.ToGetCartProductOptionsPlanSelectedPricePriceOutputWithContext(context.Background())
}

func (i GetCartProductOptionsPlanSelectedPricePriceArgs) ToGetCartProductOptionsPlanSelectedPricePriceOutputWithContext(ctx context.Context) GetCartProductOptionsPlanSelectedPricePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsPlanSelectedPricePriceOutput)
}

// GetCartProductOptionsPlanSelectedPricePriceArrayInput is an input type that accepts GetCartProductOptionsPlanSelectedPricePriceArray and GetCartProductOptionsPlanSelectedPricePriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductOptionsPlanSelectedPricePriceArrayInput` via:
//
//	GetCartProductOptionsPlanSelectedPricePriceArray{ GetCartProductOptionsPlanSelectedPricePriceArgs{...} }
type GetCartProductOptionsPlanSelectedPricePriceArrayInput interface {
	pulumi.Input

	ToGetCartProductOptionsPlanSelectedPricePriceArrayOutput() GetCartProductOptionsPlanSelectedPricePriceArrayOutput
	ToGetCartProductOptionsPlanSelectedPricePriceArrayOutputWithContext(context.Context) GetCartProductOptionsPlanSelectedPricePriceArrayOutput
}

type GetCartProductOptionsPlanSelectedPricePriceArray []GetCartProductOptionsPlanSelectedPricePriceInput

func (GetCartProductOptionsPlanSelectedPricePriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsPlanSelectedPricePrice)(nil)).Elem()
}

func (i GetCartProductOptionsPlanSelectedPricePriceArray) ToGetCartProductOptionsPlanSelectedPricePriceArrayOutput() GetCartProductOptionsPlanSelectedPricePriceArrayOutput {
	return i.ToGetCartProductOptionsPlanSelectedPricePriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductOptionsPlanSelectedPricePriceArray) ToGetCartProductOptionsPlanSelectedPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsPlanSelectedPricePriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsPlanSelectedPricePriceArrayOutput)
}

type GetCartProductOptionsPlanSelectedPricePriceOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsPlanSelectedPricePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsPlanSelectedPricePrice)(nil)).Elem()
}

func (o GetCartProductOptionsPlanSelectedPricePriceOutput) ToGetCartProductOptionsPlanSelectedPricePriceOutput() GetCartProductOptionsPlanSelectedPricePriceOutput {
	return o
}

func (o GetCartProductOptionsPlanSelectedPricePriceOutput) ToGetCartProductOptionsPlanSelectedPricePriceOutputWithContext(ctx context.Context) GetCartProductOptionsPlanSelectedPricePriceOutput {
	return o
}

// Currency code
func (o GetCartProductOptionsPlanSelectedPricePriceOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPricePrice) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// Textual representation
func (o GetCartProductOptionsPlanSelectedPricePriceOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPricePrice) string { return v.Text }).(pulumi.StringOutput)
}

// The effective price
func (o GetCartProductOptionsPlanSelectedPricePriceOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetCartProductOptionsPlanSelectedPricePrice) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetCartProductOptionsPlanSelectedPricePriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsPlanSelectedPricePriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsPlanSelectedPricePrice)(nil)).Elem()
}

func (o GetCartProductOptionsPlanSelectedPricePriceArrayOutput) ToGetCartProductOptionsPlanSelectedPricePriceArrayOutput() GetCartProductOptionsPlanSelectedPricePriceArrayOutput {
	return o
}

func (o GetCartProductOptionsPlanSelectedPricePriceArrayOutput) ToGetCartProductOptionsPlanSelectedPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsPlanSelectedPricePriceArrayOutput {
	return o
}

func (o GetCartProductOptionsPlanSelectedPricePriceArrayOutput) Index(i pulumi.IntInput) GetCartProductOptionsPlanSelectedPricePriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductOptionsPlanSelectedPricePrice {
		return vs[0].([]GetCartProductOptionsPlanSelectedPricePrice)[vs[1].(int)]
	}).(GetCartProductOptionsPlanSelectedPricePriceOutput)
}

type GetCartProductOptionsResult struct {
	// Define if options of this family are exclusive with each other
	Exclusive bool `pulumi:"exclusive"`
	// Option family
	Family string `pulumi:"family"`
	// Define if an option of this family is mandatory
	Mandatory bool `pulumi:"mandatory"`
	// Product offer identifier
	PlanCode string `pulumi:"planCode"`
	// Prices of the product offer
	Prices []GetCartProductOptionsResultPrice `pulumi:"prices"`
	// Name of the product
	ProductName string `pulumi:"productName"`
	// Product type
	ProductType string `pulumi:"productType"`
}

// GetCartProductOptionsResultInput is an input type that accepts GetCartProductOptionsResultArgs and GetCartProductOptionsResultOutput values.
// You can construct a concrete instance of `GetCartProductOptionsResultInput` via:
//
//	GetCartProductOptionsResultArgs{...}
type GetCartProductOptionsResultInput interface {
	pulumi.Input

	ToGetCartProductOptionsResultOutput() GetCartProductOptionsResultOutput
	ToGetCartProductOptionsResultOutputWithContext(context.Context) GetCartProductOptionsResultOutput
}

type GetCartProductOptionsResultArgs struct {
	// Define if options of this family are exclusive with each other
	Exclusive pulumi.BoolInput `pulumi:"exclusive"`
	// Option family
	Family pulumi.StringInput `pulumi:"family"`
	// Define if an option of this family is mandatory
	Mandatory pulumi.BoolInput `pulumi:"mandatory"`
	// Product offer identifier
	PlanCode pulumi.StringInput `pulumi:"planCode"`
	// Prices of the product offer
	Prices GetCartProductOptionsResultPriceArrayInput `pulumi:"prices"`
	// Name of the product
	ProductName pulumi.StringInput `pulumi:"productName"`
	// Product type
	ProductType pulumi.StringInput `pulumi:"productType"`
}

func (GetCartProductOptionsResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsResult)(nil)).Elem()
}

func (i GetCartProductOptionsResultArgs) ToGetCartProductOptionsResultOutput() GetCartProductOptionsResultOutput {
	return i.ToGetCartProductOptionsResultOutputWithContext(context.Background())
}

func (i GetCartProductOptionsResultArgs) ToGetCartProductOptionsResultOutputWithContext(ctx context.Context) GetCartProductOptionsResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsResultOutput)
}

// GetCartProductOptionsResultArrayInput is an input type that accepts GetCartProductOptionsResultArray and GetCartProductOptionsResultArrayOutput values.
// You can construct a concrete instance of `GetCartProductOptionsResultArrayInput` via:
//
//	GetCartProductOptionsResultArray{ GetCartProductOptionsResultArgs{...} }
type GetCartProductOptionsResultArrayInput interface {
	pulumi.Input

	ToGetCartProductOptionsResultArrayOutput() GetCartProductOptionsResultArrayOutput
	ToGetCartProductOptionsResultArrayOutputWithContext(context.Context) GetCartProductOptionsResultArrayOutput
}

type GetCartProductOptionsResultArray []GetCartProductOptionsResultInput

func (GetCartProductOptionsResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsResult)(nil)).Elem()
}

func (i GetCartProductOptionsResultArray) ToGetCartProductOptionsResultArrayOutput() GetCartProductOptionsResultArrayOutput {
	return i.ToGetCartProductOptionsResultArrayOutputWithContext(context.Background())
}

func (i GetCartProductOptionsResultArray) ToGetCartProductOptionsResultArrayOutputWithContext(ctx context.Context) GetCartProductOptionsResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsResultArrayOutput)
}

type GetCartProductOptionsResultOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsResult)(nil)).Elem()
}

func (o GetCartProductOptionsResultOutput) ToGetCartProductOptionsResultOutput() GetCartProductOptionsResultOutput {
	return o
}

func (o GetCartProductOptionsResultOutput) ToGetCartProductOptionsResultOutputWithContext(ctx context.Context) GetCartProductOptionsResultOutput {
	return o
}

// Define if options of this family are exclusive with each other
func (o GetCartProductOptionsResultOutput) Exclusive() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCartProductOptionsResult) bool { return v.Exclusive }).(pulumi.BoolOutput)
}

// Option family
func (o GetCartProductOptionsResultOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResult) string { return v.Family }).(pulumi.StringOutput)
}

// Define if an option of this family is mandatory
func (o GetCartProductOptionsResultOutput) Mandatory() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCartProductOptionsResult) bool { return v.Mandatory }).(pulumi.BoolOutput)
}

// Product offer identifier
func (o GetCartProductOptionsResultOutput) PlanCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResult) string { return v.PlanCode }).(pulumi.StringOutput)
}

// Prices of the product offer
func (o GetCartProductOptionsResultOutput) Prices() GetCartProductOptionsResultPriceArrayOutput {
	return o.ApplyT(func(v GetCartProductOptionsResult) []GetCartProductOptionsResultPrice { return v.Prices }).(GetCartProductOptionsResultPriceArrayOutput)
}

// Name of the product
func (o GetCartProductOptionsResultOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResult) string { return v.ProductName }).(pulumi.StringOutput)
}

// Product type
func (o GetCartProductOptionsResultOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResult) string { return v.ProductType }).(pulumi.StringOutput)
}

type GetCartProductOptionsResultArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsResult)(nil)).Elem()
}

func (o GetCartProductOptionsResultArrayOutput) ToGetCartProductOptionsResultArrayOutput() GetCartProductOptionsResultArrayOutput {
	return o
}

func (o GetCartProductOptionsResultArrayOutput) ToGetCartProductOptionsResultArrayOutputWithContext(ctx context.Context) GetCartProductOptionsResultArrayOutput {
	return o
}

func (o GetCartProductOptionsResultArrayOutput) Index(i pulumi.IntInput) GetCartProductOptionsResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductOptionsResult {
		return vs[0].([]GetCartProductOptionsResult)[vs[1].(int)]
	}).(GetCartProductOptionsResultOutput)
}

type GetCartProductOptionsResultPrice struct {
	// Capacities of the pricing (type of pricing)
	Capacities []interface{} `pulumi:"capacities"`
	// Description of the pricing
	Description string `pulumi:"description"`
	// Duration for ordering the product
	Duration string `pulumi:"duration"`
	// Interval of renewal
	Interval int `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity int `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat int `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity int `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat int `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents int `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices []GetCartProductOptionsResultPricePrice `pulumi:"prices"`
	// Pricing model identifier
	PricingMode string `pulumi:"pricingMode"`
	// Pricing type
	PricingType string `pulumi:"pricingType"`
}

// GetCartProductOptionsResultPriceInput is an input type that accepts GetCartProductOptionsResultPriceArgs and GetCartProductOptionsResultPriceOutput values.
// You can construct a concrete instance of `GetCartProductOptionsResultPriceInput` via:
//
//	GetCartProductOptionsResultPriceArgs{...}
type GetCartProductOptionsResultPriceInput interface {
	pulumi.Input

	ToGetCartProductOptionsResultPriceOutput() GetCartProductOptionsResultPriceOutput
	ToGetCartProductOptionsResultPriceOutputWithContext(context.Context) GetCartProductOptionsResultPriceOutput
}

type GetCartProductOptionsResultPriceArgs struct {
	// Capacities of the pricing (type of pricing)
	Capacities pulumi.ArrayInput `pulumi:"capacities"`
	// Description of the pricing
	Description pulumi.StringInput `pulumi:"description"`
	// Duration for ordering the product
	Duration pulumi.StringInput `pulumi:"duration"`
	// Interval of renewal
	Interval pulumi.IntInput `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity pulumi.IntInput `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat pulumi.IntInput `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity pulumi.IntInput `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat pulumi.IntInput `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents pulumi.IntInput `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices GetCartProductOptionsResultPricePriceArrayInput `pulumi:"prices"`
	// Pricing model identifier
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
	// Pricing type
	PricingType pulumi.StringInput `pulumi:"pricingType"`
}

func (GetCartProductOptionsResultPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsResultPrice)(nil)).Elem()
}

func (i GetCartProductOptionsResultPriceArgs) ToGetCartProductOptionsResultPriceOutput() GetCartProductOptionsResultPriceOutput {
	return i.ToGetCartProductOptionsResultPriceOutputWithContext(context.Background())
}

func (i GetCartProductOptionsResultPriceArgs) ToGetCartProductOptionsResultPriceOutputWithContext(ctx context.Context) GetCartProductOptionsResultPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsResultPriceOutput)
}

// GetCartProductOptionsResultPriceArrayInput is an input type that accepts GetCartProductOptionsResultPriceArray and GetCartProductOptionsResultPriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductOptionsResultPriceArrayInput` via:
//
//	GetCartProductOptionsResultPriceArray{ GetCartProductOptionsResultPriceArgs{...} }
type GetCartProductOptionsResultPriceArrayInput interface {
	pulumi.Input

	ToGetCartProductOptionsResultPriceArrayOutput() GetCartProductOptionsResultPriceArrayOutput
	ToGetCartProductOptionsResultPriceArrayOutputWithContext(context.Context) GetCartProductOptionsResultPriceArrayOutput
}

type GetCartProductOptionsResultPriceArray []GetCartProductOptionsResultPriceInput

func (GetCartProductOptionsResultPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsResultPrice)(nil)).Elem()
}

func (i GetCartProductOptionsResultPriceArray) ToGetCartProductOptionsResultPriceArrayOutput() GetCartProductOptionsResultPriceArrayOutput {
	return i.ToGetCartProductOptionsResultPriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductOptionsResultPriceArray) ToGetCartProductOptionsResultPriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsResultPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsResultPriceArrayOutput)
}

type GetCartProductOptionsResultPriceOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsResultPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsResultPrice)(nil)).Elem()
}

func (o GetCartProductOptionsResultPriceOutput) ToGetCartProductOptionsResultPriceOutput() GetCartProductOptionsResultPriceOutput {
	return o
}

func (o GetCartProductOptionsResultPriceOutput) ToGetCartProductOptionsResultPriceOutputWithContext(ctx context.Context) GetCartProductOptionsResultPriceOutput {
	return o
}

// Capacities of the pricing (type of pricing)
func (o GetCartProductOptionsResultPriceOutput) Capacities() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) []interface{} { return v.Capacities }).(pulumi.ArrayOutput)
}

// Description of the pricing
func (o GetCartProductOptionsResultPriceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) string { return v.Description }).(pulumi.StringOutput)
}

// Duration for ordering the product
func (o GetCartProductOptionsResultPriceOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) string { return v.Duration }).(pulumi.StringOutput)
}

// Interval of renewal
func (o GetCartProductOptionsResultPriceOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) int { return v.Interval }).(pulumi.IntOutput)
}

// Maximum quantity that can be ordered
func (o GetCartProductOptionsResultPriceOutput) MaximumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) int { return v.MaximumQuantity }).(pulumi.IntOutput)
}

// Maximum repeat for renewal
func (o GetCartProductOptionsResultPriceOutput) MaximumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) int { return v.MaximumRepeat }).(pulumi.IntOutput)
}

// Minimum quantity that can be ordered
func (o GetCartProductOptionsResultPriceOutput) MinimumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) int { return v.MinimumQuantity }).(pulumi.IntOutput)
}

// Minimum repeat for renewal
func (o GetCartProductOptionsResultPriceOutput) MinimumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) int { return v.MinimumRepeat }).(pulumi.IntOutput)
}

// Price of the product in micro-centims
func (o GetCartProductOptionsResultPriceOutput) PriceInUcents() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) int { return v.PriceInUcents }).(pulumi.IntOutput)
}

// Price of the product (Price with its currency and textual representation)
func (o GetCartProductOptionsResultPriceOutput) Prices() GetCartProductOptionsResultPricePriceArrayOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) []GetCartProductOptionsResultPricePrice { return v.Prices }).(GetCartProductOptionsResultPricePriceArrayOutput)
}

// Pricing model identifier
func (o GetCartProductOptionsResultPriceOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) string { return v.PricingMode }).(pulumi.StringOutput)
}

// Pricing type
func (o GetCartProductOptionsResultPriceOutput) PricingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPrice) string { return v.PricingType }).(pulumi.StringOutput)
}

type GetCartProductOptionsResultPriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsResultPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsResultPrice)(nil)).Elem()
}

func (o GetCartProductOptionsResultPriceArrayOutput) ToGetCartProductOptionsResultPriceArrayOutput() GetCartProductOptionsResultPriceArrayOutput {
	return o
}

func (o GetCartProductOptionsResultPriceArrayOutput) ToGetCartProductOptionsResultPriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsResultPriceArrayOutput {
	return o
}

func (o GetCartProductOptionsResultPriceArrayOutput) Index(i pulumi.IntInput) GetCartProductOptionsResultPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductOptionsResultPrice {
		return vs[0].([]GetCartProductOptionsResultPrice)[vs[1].(int)]
	}).(GetCartProductOptionsResultPriceOutput)
}

type GetCartProductOptionsResultPricePrice struct {
	// Currency code
	CurrencyCode string `pulumi:"currencyCode"`
	// Textual representation
	Text string `pulumi:"text"`
	// The effective price
	Value float64 `pulumi:"value"`
}

// GetCartProductOptionsResultPricePriceInput is an input type that accepts GetCartProductOptionsResultPricePriceArgs and GetCartProductOptionsResultPricePriceOutput values.
// You can construct a concrete instance of `GetCartProductOptionsResultPricePriceInput` via:
//
//	GetCartProductOptionsResultPricePriceArgs{...}
type GetCartProductOptionsResultPricePriceInput interface {
	pulumi.Input

	ToGetCartProductOptionsResultPricePriceOutput() GetCartProductOptionsResultPricePriceOutput
	ToGetCartProductOptionsResultPricePriceOutputWithContext(context.Context) GetCartProductOptionsResultPricePriceOutput
}

type GetCartProductOptionsResultPricePriceArgs struct {
	// Currency code
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	// Textual representation
	Text pulumi.StringInput `pulumi:"text"`
	// The effective price
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetCartProductOptionsResultPricePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsResultPricePrice)(nil)).Elem()
}

func (i GetCartProductOptionsResultPricePriceArgs) ToGetCartProductOptionsResultPricePriceOutput() GetCartProductOptionsResultPricePriceOutput {
	return i.ToGetCartProductOptionsResultPricePriceOutputWithContext(context.Background())
}

func (i GetCartProductOptionsResultPricePriceArgs) ToGetCartProductOptionsResultPricePriceOutputWithContext(ctx context.Context) GetCartProductOptionsResultPricePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsResultPricePriceOutput)
}

// GetCartProductOptionsResultPricePriceArrayInput is an input type that accepts GetCartProductOptionsResultPricePriceArray and GetCartProductOptionsResultPricePriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductOptionsResultPricePriceArrayInput` via:
//
//	GetCartProductOptionsResultPricePriceArray{ GetCartProductOptionsResultPricePriceArgs{...} }
type GetCartProductOptionsResultPricePriceArrayInput interface {
	pulumi.Input

	ToGetCartProductOptionsResultPricePriceArrayOutput() GetCartProductOptionsResultPricePriceArrayOutput
	ToGetCartProductOptionsResultPricePriceArrayOutputWithContext(context.Context) GetCartProductOptionsResultPricePriceArrayOutput
}

type GetCartProductOptionsResultPricePriceArray []GetCartProductOptionsResultPricePriceInput

func (GetCartProductOptionsResultPricePriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsResultPricePrice)(nil)).Elem()
}

func (i GetCartProductOptionsResultPricePriceArray) ToGetCartProductOptionsResultPricePriceArrayOutput() GetCartProductOptionsResultPricePriceArrayOutput {
	return i.ToGetCartProductOptionsResultPricePriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductOptionsResultPricePriceArray) ToGetCartProductOptionsResultPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsResultPricePriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductOptionsResultPricePriceArrayOutput)
}

type GetCartProductOptionsResultPricePriceOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsResultPricePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductOptionsResultPricePrice)(nil)).Elem()
}

func (o GetCartProductOptionsResultPricePriceOutput) ToGetCartProductOptionsResultPricePriceOutput() GetCartProductOptionsResultPricePriceOutput {
	return o
}

func (o GetCartProductOptionsResultPricePriceOutput) ToGetCartProductOptionsResultPricePriceOutputWithContext(ctx context.Context) GetCartProductOptionsResultPricePriceOutput {
	return o
}

// Currency code
func (o GetCartProductOptionsResultPricePriceOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPricePrice) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// Textual representation
func (o GetCartProductOptionsResultPricePriceOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductOptionsResultPricePrice) string { return v.Text }).(pulumi.StringOutput)
}

// The effective price
func (o GetCartProductOptionsResultPricePriceOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetCartProductOptionsResultPricePrice) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetCartProductOptionsResultPricePriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductOptionsResultPricePriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductOptionsResultPricePrice)(nil)).Elem()
}

func (o GetCartProductOptionsResultPricePriceArrayOutput) ToGetCartProductOptionsResultPricePriceArrayOutput() GetCartProductOptionsResultPricePriceArrayOutput {
	return o
}

func (o GetCartProductOptionsResultPricePriceArrayOutput) ToGetCartProductOptionsResultPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductOptionsResultPricePriceArrayOutput {
	return o
}

func (o GetCartProductOptionsResultPricePriceArrayOutput) Index(i pulumi.IntInput) GetCartProductOptionsResultPricePriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductOptionsResultPricePrice {
		return vs[0].([]GetCartProductOptionsResultPricePrice)[vs[1].(int)]
	}).(GetCartProductOptionsResultPricePriceOutput)
}

type GetCartProductPlanPrice struct {
	// Capacities of the pricing (type of pricing)
	Capacities []interface{} `pulumi:"capacities"`
	// Description of the pricing
	Description string `pulumi:"description"`
	// Duration for ordering the product
	Duration string `pulumi:"duration"`
	// Interval of renewal
	Interval int `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity int `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat int `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity int `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat int `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents int `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices []GetCartProductPlanPricePrice `pulumi:"prices"`
	// Pricing model identifier
	PricingMode string `pulumi:"pricingMode"`
	// Pricing type
	PricingType string `pulumi:"pricingType"`
}

// GetCartProductPlanPriceInput is an input type that accepts GetCartProductPlanPriceArgs and GetCartProductPlanPriceOutput values.
// You can construct a concrete instance of `GetCartProductPlanPriceInput` via:
//
//	GetCartProductPlanPriceArgs{...}
type GetCartProductPlanPriceInput interface {
	pulumi.Input

	ToGetCartProductPlanPriceOutput() GetCartProductPlanPriceOutput
	ToGetCartProductPlanPriceOutputWithContext(context.Context) GetCartProductPlanPriceOutput
}

type GetCartProductPlanPriceArgs struct {
	// Capacities of the pricing (type of pricing)
	Capacities pulumi.ArrayInput `pulumi:"capacities"`
	// Description of the pricing
	Description pulumi.StringInput `pulumi:"description"`
	// Duration for ordering the product
	Duration pulumi.StringInput `pulumi:"duration"`
	// Interval of renewal
	Interval pulumi.IntInput `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity pulumi.IntInput `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat pulumi.IntInput `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity pulumi.IntInput `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat pulumi.IntInput `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents pulumi.IntInput `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices GetCartProductPlanPricePriceArrayInput `pulumi:"prices"`
	// Pricing model identifier
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
	// Pricing type
	PricingType pulumi.StringInput `pulumi:"pricingType"`
}

func (GetCartProductPlanPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductPlanPrice)(nil)).Elem()
}

func (i GetCartProductPlanPriceArgs) ToGetCartProductPlanPriceOutput() GetCartProductPlanPriceOutput {
	return i.ToGetCartProductPlanPriceOutputWithContext(context.Background())
}

func (i GetCartProductPlanPriceArgs) ToGetCartProductPlanPriceOutputWithContext(ctx context.Context) GetCartProductPlanPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductPlanPriceOutput)
}

// GetCartProductPlanPriceArrayInput is an input type that accepts GetCartProductPlanPriceArray and GetCartProductPlanPriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductPlanPriceArrayInput` via:
//
//	GetCartProductPlanPriceArray{ GetCartProductPlanPriceArgs{...} }
type GetCartProductPlanPriceArrayInput interface {
	pulumi.Input

	ToGetCartProductPlanPriceArrayOutput() GetCartProductPlanPriceArrayOutput
	ToGetCartProductPlanPriceArrayOutputWithContext(context.Context) GetCartProductPlanPriceArrayOutput
}

type GetCartProductPlanPriceArray []GetCartProductPlanPriceInput

func (GetCartProductPlanPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductPlanPrice)(nil)).Elem()
}

func (i GetCartProductPlanPriceArray) ToGetCartProductPlanPriceArrayOutput() GetCartProductPlanPriceArrayOutput {
	return i.ToGetCartProductPlanPriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductPlanPriceArray) ToGetCartProductPlanPriceArrayOutputWithContext(ctx context.Context) GetCartProductPlanPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductPlanPriceArrayOutput)
}

type GetCartProductPlanPriceOutput struct{ *pulumi.OutputState }

func (GetCartProductPlanPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductPlanPrice)(nil)).Elem()
}

func (o GetCartProductPlanPriceOutput) ToGetCartProductPlanPriceOutput() GetCartProductPlanPriceOutput {
	return o
}

func (o GetCartProductPlanPriceOutput) ToGetCartProductPlanPriceOutputWithContext(ctx context.Context) GetCartProductPlanPriceOutput {
	return o
}

// Capacities of the pricing (type of pricing)
func (o GetCartProductPlanPriceOutput) Capacities() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) []interface{} { return v.Capacities }).(pulumi.ArrayOutput)
}

// Description of the pricing
func (o GetCartProductPlanPriceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) string { return v.Description }).(pulumi.StringOutput)
}

// Duration for ordering the product
func (o GetCartProductPlanPriceOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) string { return v.Duration }).(pulumi.StringOutput)
}

// Interval of renewal
func (o GetCartProductPlanPriceOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) int { return v.Interval }).(pulumi.IntOutput)
}

// Maximum quantity that can be ordered
func (o GetCartProductPlanPriceOutput) MaximumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) int { return v.MaximumQuantity }).(pulumi.IntOutput)
}

// Maximum repeat for renewal
func (o GetCartProductPlanPriceOutput) MaximumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) int { return v.MaximumRepeat }).(pulumi.IntOutput)
}

// Minimum quantity that can be ordered
func (o GetCartProductPlanPriceOutput) MinimumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) int { return v.MinimumQuantity }).(pulumi.IntOutput)
}

// Minimum repeat for renewal
func (o GetCartProductPlanPriceOutput) MinimumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) int { return v.MinimumRepeat }).(pulumi.IntOutput)
}

// Price of the product in micro-centims
func (o GetCartProductPlanPriceOutput) PriceInUcents() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) int { return v.PriceInUcents }).(pulumi.IntOutput)
}

// Price of the product (Price with its currency and textual representation)
func (o GetCartProductPlanPriceOutput) Prices() GetCartProductPlanPricePriceArrayOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) []GetCartProductPlanPricePrice { return v.Prices }).(GetCartProductPlanPricePriceArrayOutput)
}

// Pricing model identifier
func (o GetCartProductPlanPriceOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) string { return v.PricingMode }).(pulumi.StringOutput)
}

// Pricing type
func (o GetCartProductPlanPriceOutput) PricingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanPrice) string { return v.PricingType }).(pulumi.StringOutput)
}

type GetCartProductPlanPriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductPlanPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductPlanPrice)(nil)).Elem()
}

func (o GetCartProductPlanPriceArrayOutput) ToGetCartProductPlanPriceArrayOutput() GetCartProductPlanPriceArrayOutput {
	return o
}

func (o GetCartProductPlanPriceArrayOutput) ToGetCartProductPlanPriceArrayOutputWithContext(ctx context.Context) GetCartProductPlanPriceArrayOutput {
	return o
}

func (o GetCartProductPlanPriceArrayOutput) Index(i pulumi.IntInput) GetCartProductPlanPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductPlanPrice {
		return vs[0].([]GetCartProductPlanPrice)[vs[1].(int)]
	}).(GetCartProductPlanPriceOutput)
}

type GetCartProductPlanPricePrice struct {
	// Currency code
	CurrencyCode string `pulumi:"currencyCode"`
	// Textual representation
	Text string `pulumi:"text"`
	// The effective price
	Value float64 `pulumi:"value"`
}

// GetCartProductPlanPricePriceInput is an input type that accepts GetCartProductPlanPricePriceArgs and GetCartProductPlanPricePriceOutput values.
// You can construct a concrete instance of `GetCartProductPlanPricePriceInput` via:
//
//	GetCartProductPlanPricePriceArgs{...}
type GetCartProductPlanPricePriceInput interface {
	pulumi.Input

	ToGetCartProductPlanPricePriceOutput() GetCartProductPlanPricePriceOutput
	ToGetCartProductPlanPricePriceOutputWithContext(context.Context) GetCartProductPlanPricePriceOutput
}

type GetCartProductPlanPricePriceArgs struct {
	// Currency code
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	// Textual representation
	Text pulumi.StringInput `pulumi:"text"`
	// The effective price
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetCartProductPlanPricePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductPlanPricePrice)(nil)).Elem()
}

func (i GetCartProductPlanPricePriceArgs) ToGetCartProductPlanPricePriceOutput() GetCartProductPlanPricePriceOutput {
	return i.ToGetCartProductPlanPricePriceOutputWithContext(context.Background())
}

func (i GetCartProductPlanPricePriceArgs) ToGetCartProductPlanPricePriceOutputWithContext(ctx context.Context) GetCartProductPlanPricePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductPlanPricePriceOutput)
}

// GetCartProductPlanPricePriceArrayInput is an input type that accepts GetCartProductPlanPricePriceArray and GetCartProductPlanPricePriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductPlanPricePriceArrayInput` via:
//
//	GetCartProductPlanPricePriceArray{ GetCartProductPlanPricePriceArgs{...} }
type GetCartProductPlanPricePriceArrayInput interface {
	pulumi.Input

	ToGetCartProductPlanPricePriceArrayOutput() GetCartProductPlanPricePriceArrayOutput
	ToGetCartProductPlanPricePriceArrayOutputWithContext(context.Context) GetCartProductPlanPricePriceArrayOutput
}

type GetCartProductPlanPricePriceArray []GetCartProductPlanPricePriceInput

func (GetCartProductPlanPricePriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductPlanPricePrice)(nil)).Elem()
}

func (i GetCartProductPlanPricePriceArray) ToGetCartProductPlanPricePriceArrayOutput() GetCartProductPlanPricePriceArrayOutput {
	return i.ToGetCartProductPlanPricePriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductPlanPricePriceArray) ToGetCartProductPlanPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductPlanPricePriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductPlanPricePriceArrayOutput)
}

type GetCartProductPlanPricePriceOutput struct{ *pulumi.OutputState }

func (GetCartProductPlanPricePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductPlanPricePrice)(nil)).Elem()
}

func (o GetCartProductPlanPricePriceOutput) ToGetCartProductPlanPricePriceOutput() GetCartProductPlanPricePriceOutput {
	return o
}

func (o GetCartProductPlanPricePriceOutput) ToGetCartProductPlanPricePriceOutputWithContext(ctx context.Context) GetCartProductPlanPricePriceOutput {
	return o
}

// Currency code
func (o GetCartProductPlanPricePriceOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanPricePrice) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// Textual representation
func (o GetCartProductPlanPricePriceOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanPricePrice) string { return v.Text }).(pulumi.StringOutput)
}

// The effective price
func (o GetCartProductPlanPricePriceOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetCartProductPlanPricePrice) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetCartProductPlanPricePriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductPlanPricePriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductPlanPricePrice)(nil)).Elem()
}

func (o GetCartProductPlanPricePriceArrayOutput) ToGetCartProductPlanPricePriceArrayOutput() GetCartProductPlanPricePriceArrayOutput {
	return o
}

func (o GetCartProductPlanPricePriceArrayOutput) ToGetCartProductPlanPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductPlanPricePriceArrayOutput {
	return o
}

func (o GetCartProductPlanPricePriceArrayOutput) Index(i pulumi.IntInput) GetCartProductPlanPricePriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductPlanPricePrice {
		return vs[0].([]GetCartProductPlanPricePrice)[vs[1].(int)]
	}).(GetCartProductPlanPricePriceOutput)
}

type GetCartProductPlanSelectedPrice struct {
	// Capacities of the pricing (type of pricing)
	Capacities []interface{} `pulumi:"capacities"`
	// Description of the pricing
	Description string `pulumi:"description"`
	// Duration for ordering the product
	Duration string `pulumi:"duration"`
	// Interval of renewal
	Interval int `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity int `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat int `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity int `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat int `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents int `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices []GetCartProductPlanSelectedPricePrice `pulumi:"prices"`
	// Pricing model identifier
	PricingMode string `pulumi:"pricingMode"`
	// Pricing type
	PricingType string `pulumi:"pricingType"`
}

// GetCartProductPlanSelectedPriceInput is an input type that accepts GetCartProductPlanSelectedPriceArgs and GetCartProductPlanSelectedPriceOutput values.
// You can construct a concrete instance of `GetCartProductPlanSelectedPriceInput` via:
//
//	GetCartProductPlanSelectedPriceArgs{...}
type GetCartProductPlanSelectedPriceInput interface {
	pulumi.Input

	ToGetCartProductPlanSelectedPriceOutput() GetCartProductPlanSelectedPriceOutput
	ToGetCartProductPlanSelectedPriceOutputWithContext(context.Context) GetCartProductPlanSelectedPriceOutput
}

type GetCartProductPlanSelectedPriceArgs struct {
	// Capacities of the pricing (type of pricing)
	Capacities pulumi.ArrayInput `pulumi:"capacities"`
	// Description of the pricing
	Description pulumi.StringInput `pulumi:"description"`
	// Duration for ordering the product
	Duration pulumi.StringInput `pulumi:"duration"`
	// Interval of renewal
	Interval pulumi.IntInput `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity pulumi.IntInput `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat pulumi.IntInput `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity pulumi.IntInput `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat pulumi.IntInput `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents pulumi.IntInput `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices GetCartProductPlanSelectedPricePriceArrayInput `pulumi:"prices"`
	// Pricing model identifier
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
	// Pricing type
	PricingType pulumi.StringInput `pulumi:"pricingType"`
}

func (GetCartProductPlanSelectedPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductPlanSelectedPrice)(nil)).Elem()
}

func (i GetCartProductPlanSelectedPriceArgs) ToGetCartProductPlanSelectedPriceOutput() GetCartProductPlanSelectedPriceOutput {
	return i.ToGetCartProductPlanSelectedPriceOutputWithContext(context.Background())
}

func (i GetCartProductPlanSelectedPriceArgs) ToGetCartProductPlanSelectedPriceOutputWithContext(ctx context.Context) GetCartProductPlanSelectedPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductPlanSelectedPriceOutput)
}

// GetCartProductPlanSelectedPriceArrayInput is an input type that accepts GetCartProductPlanSelectedPriceArray and GetCartProductPlanSelectedPriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductPlanSelectedPriceArrayInput` via:
//
//	GetCartProductPlanSelectedPriceArray{ GetCartProductPlanSelectedPriceArgs{...} }
type GetCartProductPlanSelectedPriceArrayInput interface {
	pulumi.Input

	ToGetCartProductPlanSelectedPriceArrayOutput() GetCartProductPlanSelectedPriceArrayOutput
	ToGetCartProductPlanSelectedPriceArrayOutputWithContext(context.Context) GetCartProductPlanSelectedPriceArrayOutput
}

type GetCartProductPlanSelectedPriceArray []GetCartProductPlanSelectedPriceInput

func (GetCartProductPlanSelectedPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductPlanSelectedPrice)(nil)).Elem()
}

func (i GetCartProductPlanSelectedPriceArray) ToGetCartProductPlanSelectedPriceArrayOutput() GetCartProductPlanSelectedPriceArrayOutput {
	return i.ToGetCartProductPlanSelectedPriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductPlanSelectedPriceArray) ToGetCartProductPlanSelectedPriceArrayOutputWithContext(ctx context.Context) GetCartProductPlanSelectedPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductPlanSelectedPriceArrayOutput)
}

type GetCartProductPlanSelectedPriceOutput struct{ *pulumi.OutputState }

func (GetCartProductPlanSelectedPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductPlanSelectedPrice)(nil)).Elem()
}

func (o GetCartProductPlanSelectedPriceOutput) ToGetCartProductPlanSelectedPriceOutput() GetCartProductPlanSelectedPriceOutput {
	return o
}

func (o GetCartProductPlanSelectedPriceOutput) ToGetCartProductPlanSelectedPriceOutputWithContext(ctx context.Context) GetCartProductPlanSelectedPriceOutput {
	return o
}

// Capacities of the pricing (type of pricing)
func (o GetCartProductPlanSelectedPriceOutput) Capacities() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) []interface{} { return v.Capacities }).(pulumi.ArrayOutput)
}

// Description of the pricing
func (o GetCartProductPlanSelectedPriceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) string { return v.Description }).(pulumi.StringOutput)
}

// Duration for ordering the product
func (o GetCartProductPlanSelectedPriceOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) string { return v.Duration }).(pulumi.StringOutput)
}

// Interval of renewal
func (o GetCartProductPlanSelectedPriceOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) int { return v.Interval }).(pulumi.IntOutput)
}

// Maximum quantity that can be ordered
func (o GetCartProductPlanSelectedPriceOutput) MaximumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) int { return v.MaximumQuantity }).(pulumi.IntOutput)
}

// Maximum repeat for renewal
func (o GetCartProductPlanSelectedPriceOutput) MaximumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) int { return v.MaximumRepeat }).(pulumi.IntOutput)
}

// Minimum quantity that can be ordered
func (o GetCartProductPlanSelectedPriceOutput) MinimumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) int { return v.MinimumQuantity }).(pulumi.IntOutput)
}

// Minimum repeat for renewal
func (o GetCartProductPlanSelectedPriceOutput) MinimumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) int { return v.MinimumRepeat }).(pulumi.IntOutput)
}

// Price of the product in micro-centims
func (o GetCartProductPlanSelectedPriceOutput) PriceInUcents() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) int { return v.PriceInUcents }).(pulumi.IntOutput)
}

// Price of the product (Price with its currency and textual representation)
func (o GetCartProductPlanSelectedPriceOutput) Prices() GetCartProductPlanSelectedPricePriceArrayOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) []GetCartProductPlanSelectedPricePrice { return v.Prices }).(GetCartProductPlanSelectedPricePriceArrayOutput)
}

// Pricing model identifier
func (o GetCartProductPlanSelectedPriceOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) string { return v.PricingMode }).(pulumi.StringOutput)
}

// Pricing type
func (o GetCartProductPlanSelectedPriceOutput) PricingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPrice) string { return v.PricingType }).(pulumi.StringOutput)
}

type GetCartProductPlanSelectedPriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductPlanSelectedPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductPlanSelectedPrice)(nil)).Elem()
}

func (o GetCartProductPlanSelectedPriceArrayOutput) ToGetCartProductPlanSelectedPriceArrayOutput() GetCartProductPlanSelectedPriceArrayOutput {
	return o
}

func (o GetCartProductPlanSelectedPriceArrayOutput) ToGetCartProductPlanSelectedPriceArrayOutputWithContext(ctx context.Context) GetCartProductPlanSelectedPriceArrayOutput {
	return o
}

func (o GetCartProductPlanSelectedPriceArrayOutput) Index(i pulumi.IntInput) GetCartProductPlanSelectedPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductPlanSelectedPrice {
		return vs[0].([]GetCartProductPlanSelectedPrice)[vs[1].(int)]
	}).(GetCartProductPlanSelectedPriceOutput)
}

type GetCartProductPlanSelectedPricePrice struct {
	// Currency code
	CurrencyCode string `pulumi:"currencyCode"`
	// Textual representation
	Text string `pulumi:"text"`
	// The effective price
	Value float64 `pulumi:"value"`
}

// GetCartProductPlanSelectedPricePriceInput is an input type that accepts GetCartProductPlanSelectedPricePriceArgs and GetCartProductPlanSelectedPricePriceOutput values.
// You can construct a concrete instance of `GetCartProductPlanSelectedPricePriceInput` via:
//
//	GetCartProductPlanSelectedPricePriceArgs{...}
type GetCartProductPlanSelectedPricePriceInput interface {
	pulumi.Input

	ToGetCartProductPlanSelectedPricePriceOutput() GetCartProductPlanSelectedPricePriceOutput
	ToGetCartProductPlanSelectedPricePriceOutputWithContext(context.Context) GetCartProductPlanSelectedPricePriceOutput
}

type GetCartProductPlanSelectedPricePriceArgs struct {
	// Currency code
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	// Textual representation
	Text pulumi.StringInput `pulumi:"text"`
	// The effective price
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetCartProductPlanSelectedPricePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductPlanSelectedPricePrice)(nil)).Elem()
}

func (i GetCartProductPlanSelectedPricePriceArgs) ToGetCartProductPlanSelectedPricePriceOutput() GetCartProductPlanSelectedPricePriceOutput {
	return i.ToGetCartProductPlanSelectedPricePriceOutputWithContext(context.Background())
}

func (i GetCartProductPlanSelectedPricePriceArgs) ToGetCartProductPlanSelectedPricePriceOutputWithContext(ctx context.Context) GetCartProductPlanSelectedPricePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductPlanSelectedPricePriceOutput)
}

// GetCartProductPlanSelectedPricePriceArrayInput is an input type that accepts GetCartProductPlanSelectedPricePriceArray and GetCartProductPlanSelectedPricePriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductPlanSelectedPricePriceArrayInput` via:
//
//	GetCartProductPlanSelectedPricePriceArray{ GetCartProductPlanSelectedPricePriceArgs{...} }
type GetCartProductPlanSelectedPricePriceArrayInput interface {
	pulumi.Input

	ToGetCartProductPlanSelectedPricePriceArrayOutput() GetCartProductPlanSelectedPricePriceArrayOutput
	ToGetCartProductPlanSelectedPricePriceArrayOutputWithContext(context.Context) GetCartProductPlanSelectedPricePriceArrayOutput
}

type GetCartProductPlanSelectedPricePriceArray []GetCartProductPlanSelectedPricePriceInput

func (GetCartProductPlanSelectedPricePriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductPlanSelectedPricePrice)(nil)).Elem()
}

func (i GetCartProductPlanSelectedPricePriceArray) ToGetCartProductPlanSelectedPricePriceArrayOutput() GetCartProductPlanSelectedPricePriceArrayOutput {
	return i.ToGetCartProductPlanSelectedPricePriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductPlanSelectedPricePriceArray) ToGetCartProductPlanSelectedPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductPlanSelectedPricePriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductPlanSelectedPricePriceArrayOutput)
}

type GetCartProductPlanSelectedPricePriceOutput struct{ *pulumi.OutputState }

func (GetCartProductPlanSelectedPricePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductPlanSelectedPricePrice)(nil)).Elem()
}

func (o GetCartProductPlanSelectedPricePriceOutput) ToGetCartProductPlanSelectedPricePriceOutput() GetCartProductPlanSelectedPricePriceOutput {
	return o
}

func (o GetCartProductPlanSelectedPricePriceOutput) ToGetCartProductPlanSelectedPricePriceOutputWithContext(ctx context.Context) GetCartProductPlanSelectedPricePriceOutput {
	return o
}

// Currency code
func (o GetCartProductPlanSelectedPricePriceOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPricePrice) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// Textual representation
func (o GetCartProductPlanSelectedPricePriceOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductPlanSelectedPricePrice) string { return v.Text }).(pulumi.StringOutput)
}

// The effective price
func (o GetCartProductPlanSelectedPricePriceOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetCartProductPlanSelectedPricePrice) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetCartProductPlanSelectedPricePriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductPlanSelectedPricePriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductPlanSelectedPricePrice)(nil)).Elem()
}

func (o GetCartProductPlanSelectedPricePriceArrayOutput) ToGetCartProductPlanSelectedPricePriceArrayOutput() GetCartProductPlanSelectedPricePriceArrayOutput {
	return o
}

func (o GetCartProductPlanSelectedPricePriceArrayOutput) ToGetCartProductPlanSelectedPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductPlanSelectedPricePriceArrayOutput {
	return o
}

func (o GetCartProductPlanSelectedPricePriceArrayOutput) Index(i pulumi.IntInput) GetCartProductPlanSelectedPricePriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductPlanSelectedPricePrice {
		return vs[0].([]GetCartProductPlanSelectedPricePrice)[vs[1].(int)]
	}).(GetCartProductPlanSelectedPricePriceOutput)
}

type GetCartProductResult struct {
	// Product offer identifier
	PlanCode string `pulumi:"planCode"`
	// Prices of the product offer
	Prices []GetCartProductResultPrice `pulumi:"prices"`
	// Name of the product
	ProductName string `pulumi:"productName"`
	// Product type
	ProductType string `pulumi:"productType"`
}

// GetCartProductResultInput is an input type that accepts GetCartProductResultArgs and GetCartProductResultOutput values.
// You can construct a concrete instance of `GetCartProductResultInput` via:
//
//	GetCartProductResultArgs{...}
type GetCartProductResultInput interface {
	pulumi.Input

	ToGetCartProductResultOutput() GetCartProductResultOutput
	ToGetCartProductResultOutputWithContext(context.Context) GetCartProductResultOutput
}

type GetCartProductResultArgs struct {
	// Product offer identifier
	PlanCode pulumi.StringInput `pulumi:"planCode"`
	// Prices of the product offer
	Prices GetCartProductResultPriceArrayInput `pulumi:"prices"`
	// Name of the product
	ProductName pulumi.StringInput `pulumi:"productName"`
	// Product type
	ProductType pulumi.StringInput `pulumi:"productType"`
}

func (GetCartProductResultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductResult)(nil)).Elem()
}

func (i GetCartProductResultArgs) ToGetCartProductResultOutput() GetCartProductResultOutput {
	return i.ToGetCartProductResultOutputWithContext(context.Background())
}

func (i GetCartProductResultArgs) ToGetCartProductResultOutputWithContext(ctx context.Context) GetCartProductResultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductResultOutput)
}

// GetCartProductResultArrayInput is an input type that accepts GetCartProductResultArray and GetCartProductResultArrayOutput values.
// You can construct a concrete instance of `GetCartProductResultArrayInput` via:
//
//	GetCartProductResultArray{ GetCartProductResultArgs{...} }
type GetCartProductResultArrayInput interface {
	pulumi.Input

	ToGetCartProductResultArrayOutput() GetCartProductResultArrayOutput
	ToGetCartProductResultArrayOutputWithContext(context.Context) GetCartProductResultArrayOutput
}

type GetCartProductResultArray []GetCartProductResultInput

func (GetCartProductResultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductResult)(nil)).Elem()
}

func (i GetCartProductResultArray) ToGetCartProductResultArrayOutput() GetCartProductResultArrayOutput {
	return i.ToGetCartProductResultArrayOutputWithContext(context.Background())
}

func (i GetCartProductResultArray) ToGetCartProductResultArrayOutputWithContext(ctx context.Context) GetCartProductResultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductResultArrayOutput)
}

type GetCartProductResultOutput struct{ *pulumi.OutputState }

func (GetCartProductResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductResult)(nil)).Elem()
}

func (o GetCartProductResultOutput) ToGetCartProductResultOutput() GetCartProductResultOutput {
	return o
}

func (o GetCartProductResultOutput) ToGetCartProductResultOutputWithContext(ctx context.Context) GetCartProductResultOutput {
	return o
}

// Product offer identifier
func (o GetCartProductResultOutput) PlanCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductResult) string { return v.PlanCode }).(pulumi.StringOutput)
}

// Prices of the product offer
func (o GetCartProductResultOutput) Prices() GetCartProductResultPriceArrayOutput {
	return o.ApplyT(func(v GetCartProductResult) []GetCartProductResultPrice { return v.Prices }).(GetCartProductResultPriceArrayOutput)
}

// Name of the product
func (o GetCartProductResultOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductResult) string { return v.ProductName }).(pulumi.StringOutput)
}

// Product type
func (o GetCartProductResultOutput) ProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductResult) string { return v.ProductType }).(pulumi.StringOutput)
}

type GetCartProductResultArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductResultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductResult)(nil)).Elem()
}

func (o GetCartProductResultArrayOutput) ToGetCartProductResultArrayOutput() GetCartProductResultArrayOutput {
	return o
}

func (o GetCartProductResultArrayOutput) ToGetCartProductResultArrayOutputWithContext(ctx context.Context) GetCartProductResultArrayOutput {
	return o
}

func (o GetCartProductResultArrayOutput) Index(i pulumi.IntInput) GetCartProductResultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductResult {
		return vs[0].([]GetCartProductResult)[vs[1].(int)]
	}).(GetCartProductResultOutput)
}

type GetCartProductResultPrice struct {
	// Capacities of the pricing (type of pricing)
	Capacities []interface{} `pulumi:"capacities"`
	// Description of the pricing
	Description string `pulumi:"description"`
	// Duration for ordering the product
	Duration string `pulumi:"duration"`
	// Interval of renewal
	Interval int `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity int `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat int `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity int `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat int `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents int `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices []GetCartProductResultPricePrice `pulumi:"prices"`
	// Pricing model identifier
	PricingMode string `pulumi:"pricingMode"`
	// Pricing type
	PricingType string `pulumi:"pricingType"`
}

// GetCartProductResultPriceInput is an input type that accepts GetCartProductResultPriceArgs and GetCartProductResultPriceOutput values.
// You can construct a concrete instance of `GetCartProductResultPriceInput` via:
//
//	GetCartProductResultPriceArgs{...}
type GetCartProductResultPriceInput interface {
	pulumi.Input

	ToGetCartProductResultPriceOutput() GetCartProductResultPriceOutput
	ToGetCartProductResultPriceOutputWithContext(context.Context) GetCartProductResultPriceOutput
}

type GetCartProductResultPriceArgs struct {
	// Capacities of the pricing (type of pricing)
	Capacities pulumi.ArrayInput `pulumi:"capacities"`
	// Description of the pricing
	Description pulumi.StringInput `pulumi:"description"`
	// Duration for ordering the product
	Duration pulumi.StringInput `pulumi:"duration"`
	// Interval of renewal
	Interval pulumi.IntInput `pulumi:"interval"`
	// Maximum quantity that can be ordered
	MaximumQuantity pulumi.IntInput `pulumi:"maximumQuantity"`
	// Maximum repeat for renewal
	MaximumRepeat pulumi.IntInput `pulumi:"maximumRepeat"`
	// Minimum quantity that can be ordered
	MinimumQuantity pulumi.IntInput `pulumi:"minimumQuantity"`
	// Minimum repeat for renewal
	MinimumRepeat pulumi.IntInput `pulumi:"minimumRepeat"`
	// Price of the product in micro-centims
	PriceInUcents pulumi.IntInput `pulumi:"priceInUcents"`
	// Price of the product (Price with its currency and textual representation)
	Prices GetCartProductResultPricePriceArrayInput `pulumi:"prices"`
	// Pricing model identifier
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
	// Pricing type
	PricingType pulumi.StringInput `pulumi:"pricingType"`
}

func (GetCartProductResultPriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductResultPrice)(nil)).Elem()
}

func (i GetCartProductResultPriceArgs) ToGetCartProductResultPriceOutput() GetCartProductResultPriceOutput {
	return i.ToGetCartProductResultPriceOutputWithContext(context.Background())
}

func (i GetCartProductResultPriceArgs) ToGetCartProductResultPriceOutputWithContext(ctx context.Context) GetCartProductResultPriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductResultPriceOutput)
}

// GetCartProductResultPriceArrayInput is an input type that accepts GetCartProductResultPriceArray and GetCartProductResultPriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductResultPriceArrayInput` via:
//
//	GetCartProductResultPriceArray{ GetCartProductResultPriceArgs{...} }
type GetCartProductResultPriceArrayInput interface {
	pulumi.Input

	ToGetCartProductResultPriceArrayOutput() GetCartProductResultPriceArrayOutput
	ToGetCartProductResultPriceArrayOutputWithContext(context.Context) GetCartProductResultPriceArrayOutput
}

type GetCartProductResultPriceArray []GetCartProductResultPriceInput

func (GetCartProductResultPriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductResultPrice)(nil)).Elem()
}

func (i GetCartProductResultPriceArray) ToGetCartProductResultPriceArrayOutput() GetCartProductResultPriceArrayOutput {
	return i.ToGetCartProductResultPriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductResultPriceArray) ToGetCartProductResultPriceArrayOutputWithContext(ctx context.Context) GetCartProductResultPriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductResultPriceArrayOutput)
}

type GetCartProductResultPriceOutput struct{ *pulumi.OutputState }

func (GetCartProductResultPriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductResultPrice)(nil)).Elem()
}

func (o GetCartProductResultPriceOutput) ToGetCartProductResultPriceOutput() GetCartProductResultPriceOutput {
	return o
}

func (o GetCartProductResultPriceOutput) ToGetCartProductResultPriceOutputWithContext(ctx context.Context) GetCartProductResultPriceOutput {
	return o
}

// Capacities of the pricing (type of pricing)
func (o GetCartProductResultPriceOutput) Capacities() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) []interface{} { return v.Capacities }).(pulumi.ArrayOutput)
}

// Description of the pricing
func (o GetCartProductResultPriceOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) string { return v.Description }).(pulumi.StringOutput)
}

// Duration for ordering the product
func (o GetCartProductResultPriceOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) string { return v.Duration }).(pulumi.StringOutput)
}

// Interval of renewal
func (o GetCartProductResultPriceOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) int { return v.Interval }).(pulumi.IntOutput)
}

// Maximum quantity that can be ordered
func (o GetCartProductResultPriceOutput) MaximumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) int { return v.MaximumQuantity }).(pulumi.IntOutput)
}

// Maximum repeat for renewal
func (o GetCartProductResultPriceOutput) MaximumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) int { return v.MaximumRepeat }).(pulumi.IntOutput)
}

// Minimum quantity that can be ordered
func (o GetCartProductResultPriceOutput) MinimumQuantity() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) int { return v.MinimumQuantity }).(pulumi.IntOutput)
}

// Minimum repeat for renewal
func (o GetCartProductResultPriceOutput) MinimumRepeat() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) int { return v.MinimumRepeat }).(pulumi.IntOutput)
}

// Price of the product in micro-centims
func (o GetCartProductResultPriceOutput) PriceInUcents() pulumi.IntOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) int { return v.PriceInUcents }).(pulumi.IntOutput)
}

// Price of the product (Price with its currency and textual representation)
func (o GetCartProductResultPriceOutput) Prices() GetCartProductResultPricePriceArrayOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) []GetCartProductResultPricePrice { return v.Prices }).(GetCartProductResultPricePriceArrayOutput)
}

// Pricing model identifier
func (o GetCartProductResultPriceOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) string { return v.PricingMode }).(pulumi.StringOutput)
}

// Pricing type
func (o GetCartProductResultPriceOutput) PricingType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductResultPrice) string { return v.PricingType }).(pulumi.StringOutput)
}

type GetCartProductResultPriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductResultPriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductResultPrice)(nil)).Elem()
}

func (o GetCartProductResultPriceArrayOutput) ToGetCartProductResultPriceArrayOutput() GetCartProductResultPriceArrayOutput {
	return o
}

func (o GetCartProductResultPriceArrayOutput) ToGetCartProductResultPriceArrayOutputWithContext(ctx context.Context) GetCartProductResultPriceArrayOutput {
	return o
}

func (o GetCartProductResultPriceArrayOutput) Index(i pulumi.IntInput) GetCartProductResultPriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductResultPrice {
		return vs[0].([]GetCartProductResultPrice)[vs[1].(int)]
	}).(GetCartProductResultPriceOutput)
}

type GetCartProductResultPricePrice struct {
	// Currency code
	CurrencyCode string `pulumi:"currencyCode"`
	// Textual representation
	Text string `pulumi:"text"`
	// The effective price
	Value float64 `pulumi:"value"`
}

// GetCartProductResultPricePriceInput is an input type that accepts GetCartProductResultPricePriceArgs and GetCartProductResultPricePriceOutput values.
// You can construct a concrete instance of `GetCartProductResultPricePriceInput` via:
//
//	GetCartProductResultPricePriceArgs{...}
type GetCartProductResultPricePriceInput interface {
	pulumi.Input

	ToGetCartProductResultPricePriceOutput() GetCartProductResultPricePriceOutput
	ToGetCartProductResultPricePriceOutputWithContext(context.Context) GetCartProductResultPricePriceOutput
}

type GetCartProductResultPricePriceArgs struct {
	// Currency code
	CurrencyCode pulumi.StringInput `pulumi:"currencyCode"`
	// Textual representation
	Text pulumi.StringInput `pulumi:"text"`
	// The effective price
	Value pulumi.Float64Input `pulumi:"value"`
}

func (GetCartProductResultPricePriceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductResultPricePrice)(nil)).Elem()
}

func (i GetCartProductResultPricePriceArgs) ToGetCartProductResultPricePriceOutput() GetCartProductResultPricePriceOutput {
	return i.ToGetCartProductResultPricePriceOutputWithContext(context.Background())
}

func (i GetCartProductResultPricePriceArgs) ToGetCartProductResultPricePriceOutputWithContext(ctx context.Context) GetCartProductResultPricePriceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductResultPricePriceOutput)
}

// GetCartProductResultPricePriceArrayInput is an input type that accepts GetCartProductResultPricePriceArray and GetCartProductResultPricePriceArrayOutput values.
// You can construct a concrete instance of `GetCartProductResultPricePriceArrayInput` via:
//
//	GetCartProductResultPricePriceArray{ GetCartProductResultPricePriceArgs{...} }
type GetCartProductResultPricePriceArrayInput interface {
	pulumi.Input

	ToGetCartProductResultPricePriceArrayOutput() GetCartProductResultPricePriceArrayOutput
	ToGetCartProductResultPricePriceArrayOutputWithContext(context.Context) GetCartProductResultPricePriceArrayOutput
}

type GetCartProductResultPricePriceArray []GetCartProductResultPricePriceInput

func (GetCartProductResultPricePriceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductResultPricePrice)(nil)).Elem()
}

func (i GetCartProductResultPricePriceArray) ToGetCartProductResultPricePriceArrayOutput() GetCartProductResultPricePriceArrayOutput {
	return i.ToGetCartProductResultPricePriceArrayOutputWithContext(context.Background())
}

func (i GetCartProductResultPricePriceArray) ToGetCartProductResultPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductResultPricePriceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCartProductResultPricePriceArrayOutput)
}

type GetCartProductResultPricePriceOutput struct{ *pulumi.OutputState }

func (GetCartProductResultPricePriceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCartProductResultPricePrice)(nil)).Elem()
}

func (o GetCartProductResultPricePriceOutput) ToGetCartProductResultPricePriceOutput() GetCartProductResultPricePriceOutput {
	return o
}

func (o GetCartProductResultPricePriceOutput) ToGetCartProductResultPricePriceOutputWithContext(ctx context.Context) GetCartProductResultPricePriceOutput {
	return o
}

// Currency code
func (o GetCartProductResultPricePriceOutput) CurrencyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductResultPricePrice) string { return v.CurrencyCode }).(pulumi.StringOutput)
}

// Textual representation
func (o GetCartProductResultPricePriceOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetCartProductResultPricePrice) string { return v.Text }).(pulumi.StringOutput)
}

// The effective price
func (o GetCartProductResultPricePriceOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetCartProductResultPricePrice) float64 { return v.Value }).(pulumi.Float64Output)
}

type GetCartProductResultPricePriceArrayOutput struct{ *pulumi.OutputState }

func (GetCartProductResultPricePriceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCartProductResultPricePrice)(nil)).Elem()
}

func (o GetCartProductResultPricePriceArrayOutput) ToGetCartProductResultPricePriceArrayOutput() GetCartProductResultPricePriceArrayOutput {
	return o
}

func (o GetCartProductResultPricePriceArrayOutput) ToGetCartProductResultPricePriceArrayOutputWithContext(ctx context.Context) GetCartProductResultPricePriceArrayOutput {
	return o
}

func (o GetCartProductResultPricePriceArrayOutput) Index(i pulumi.IntInput) GetCartProductResultPricePriceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCartProductResultPricePrice {
		return vs[0].([]GetCartProductResultPricePrice)[vs[1].(int)]
	}).(GetCartProductResultPricePriceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsPlanPriceInput)(nil)).Elem(), GetCartProductOptionsPlanPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsPlanPriceArrayInput)(nil)).Elem(), GetCartProductOptionsPlanPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsPlanPricePriceInput)(nil)).Elem(), GetCartProductOptionsPlanPricePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsPlanPricePriceArrayInput)(nil)).Elem(), GetCartProductOptionsPlanPricePriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsPlanSelectedPriceInput)(nil)).Elem(), GetCartProductOptionsPlanSelectedPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsPlanSelectedPriceArrayInput)(nil)).Elem(), GetCartProductOptionsPlanSelectedPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsPlanSelectedPricePriceInput)(nil)).Elem(), GetCartProductOptionsPlanSelectedPricePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsPlanSelectedPricePriceArrayInput)(nil)).Elem(), GetCartProductOptionsPlanSelectedPricePriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsResultInput)(nil)).Elem(), GetCartProductOptionsResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsResultArrayInput)(nil)).Elem(), GetCartProductOptionsResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsResultPriceInput)(nil)).Elem(), GetCartProductOptionsResultPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsResultPriceArrayInput)(nil)).Elem(), GetCartProductOptionsResultPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsResultPricePriceInput)(nil)).Elem(), GetCartProductOptionsResultPricePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductOptionsResultPricePriceArrayInput)(nil)).Elem(), GetCartProductOptionsResultPricePriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductPlanPriceInput)(nil)).Elem(), GetCartProductPlanPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductPlanPriceArrayInput)(nil)).Elem(), GetCartProductPlanPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductPlanPricePriceInput)(nil)).Elem(), GetCartProductPlanPricePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductPlanPricePriceArrayInput)(nil)).Elem(), GetCartProductPlanPricePriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductPlanSelectedPriceInput)(nil)).Elem(), GetCartProductPlanSelectedPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductPlanSelectedPriceArrayInput)(nil)).Elem(), GetCartProductPlanSelectedPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductPlanSelectedPricePriceInput)(nil)).Elem(), GetCartProductPlanSelectedPricePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductPlanSelectedPricePriceArrayInput)(nil)).Elem(), GetCartProductPlanSelectedPricePriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductResultInput)(nil)).Elem(), GetCartProductResultArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductResultArrayInput)(nil)).Elem(), GetCartProductResultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductResultPriceInput)(nil)).Elem(), GetCartProductResultPriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductResultPriceArrayInput)(nil)).Elem(), GetCartProductResultPriceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductResultPricePriceInput)(nil)).Elem(), GetCartProductResultPricePriceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCartProductResultPricePriceArrayInput)(nil)).Elem(), GetCartProductResultPricePriceArray{})
	pulumi.RegisterOutputType(GetCartProductOptionsPlanPriceOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsPlanPriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsPlanPricePriceOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsPlanPricePriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsPlanSelectedPriceOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsPlanSelectedPriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsPlanSelectedPricePriceOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsPlanSelectedPricePriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsResultOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsResultArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsResultPriceOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsResultPriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsResultPricePriceOutput{})
	pulumi.RegisterOutputType(GetCartProductOptionsResultPricePriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductPlanPriceOutput{})
	pulumi.RegisterOutputType(GetCartProductPlanPriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductPlanPricePriceOutput{})
	pulumi.RegisterOutputType(GetCartProductPlanPricePriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductPlanSelectedPriceOutput{})
	pulumi.RegisterOutputType(GetCartProductPlanSelectedPriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductPlanSelectedPricePriceOutput{})
	pulumi.RegisterOutputType(GetCartProductPlanSelectedPricePriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductResultOutput{})
	pulumi.RegisterOutputType(GetCartProductResultArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductResultPriceOutput{})
	pulumi.RegisterOutputType(GetCartProductResultPriceArrayOutput{})
	pulumi.RegisterOutputType(GetCartProductResultPricePriceOutput{})
	pulumi.RegisterOutputType(GetCartProductResultPricePriceArrayOutput{})
}
