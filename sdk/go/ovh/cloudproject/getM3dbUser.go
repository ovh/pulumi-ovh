// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetM3dbUser(ctx *pulumi.Context, args *GetM3dbUserArgs, opts ...pulumi.InvokeOption) (*GetM3dbUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetM3dbUserResult
	err := ctx.Invoke("ovh:CloudProject/getM3dbUser:getM3dbUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getM3dbUser.
type GetM3dbUserArgs struct {
	ClusterId   string `pulumi:"clusterId"`
	Name        string `pulumi:"name"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getM3dbUser.
type GetM3dbUserResult struct {
	ClusterId string `pulumi:"clusterId"`
	CreatedAt string `pulumi:"createdAt"`
	Group     string `pulumi:"group"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	ServiceName string `pulumi:"serviceName"`
	Status      string `pulumi:"status"`
}

func GetM3dbUserOutput(ctx *pulumi.Context, args GetM3dbUserOutputArgs, opts ...pulumi.InvokeOption) GetM3dbUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetM3dbUserResultOutput, error) {
			args := v.(GetM3dbUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getM3dbUser:getM3dbUser", args, GetM3dbUserResultOutput{}, options).(GetM3dbUserResultOutput), nil
		}).(GetM3dbUserResultOutput)
}

// A collection of arguments for invoking getM3dbUser.
type GetM3dbUserOutputArgs struct {
	ClusterId   pulumi.StringInput `pulumi:"clusterId"`
	Name        pulumi.StringInput `pulumi:"name"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetM3dbUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3dbUserArgs)(nil)).Elem()
}

// A collection of values returned by getM3dbUser.
type GetM3dbUserResultOutput struct{ *pulumi.OutputState }

func (GetM3dbUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3dbUserResult)(nil)).Elem()
}

func (o GetM3dbUserResultOutput) ToGetM3dbUserResultOutput() GetM3dbUserResultOutput {
	return o
}

func (o GetM3dbUserResultOutput) ToGetM3dbUserResultOutputWithContext(ctx context.Context) GetM3dbUserResultOutput {
	return o
}

func (o GetM3dbUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetM3dbUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetM3dbUserResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbUserResult) string { return v.Group }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetM3dbUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetM3dbUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetM3dbUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetM3dbUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbUserResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetM3dbUserResultOutput{})
}
