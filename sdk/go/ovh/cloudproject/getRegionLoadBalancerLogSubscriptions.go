// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRegionLoadBalancerLogSubscriptions(ctx *pulumi.Context, args *GetRegionLoadBalancerLogSubscriptionsArgs, opts ...pulumi.InvokeOption) (*GetRegionLoadBalancerLogSubscriptionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRegionLoadBalancerLogSubscriptionsResult
	err := ctx.Invoke("ovh:CloudProject/getRegionLoadBalancerLogSubscriptions:getRegionLoadBalancerLogSubscriptions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionLoadBalancerLogSubscriptions.
type GetRegionLoadBalancerLogSubscriptionsArgs struct {
	Kind           *string `pulumi:"kind"`
	LoadbalancerId string  `pulumi:"loadbalancerId"`
	RegionName     string  `pulumi:"regionName"`
	ServiceName    string  `pulumi:"serviceName"`
}

// A collection of values returned by getRegionLoadBalancerLogSubscriptions.
type GetRegionLoadBalancerLogSubscriptionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id              string   `pulumi:"id"`
	Kind            *string  `pulumi:"kind"`
	LoadbalancerId  string   `pulumi:"loadbalancerId"`
	RegionName      string   `pulumi:"regionName"`
	ServiceName     string   `pulumi:"serviceName"`
	SubscriptionIds []string `pulumi:"subscriptionIds"`
}

func GetRegionLoadBalancerLogSubscriptionsOutput(ctx *pulumi.Context, args GetRegionLoadBalancerLogSubscriptionsOutputArgs, opts ...pulumi.InvokeOption) GetRegionLoadBalancerLogSubscriptionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRegionLoadBalancerLogSubscriptionsResultOutput, error) {
			args := v.(GetRegionLoadBalancerLogSubscriptionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getRegionLoadBalancerLogSubscriptions:getRegionLoadBalancerLogSubscriptions", args, GetRegionLoadBalancerLogSubscriptionsResultOutput{}, options).(GetRegionLoadBalancerLogSubscriptionsResultOutput), nil
		}).(GetRegionLoadBalancerLogSubscriptionsResultOutput)
}

// A collection of arguments for invoking getRegionLoadBalancerLogSubscriptions.
type GetRegionLoadBalancerLogSubscriptionsOutputArgs struct {
	Kind           pulumi.StringPtrInput `pulumi:"kind"`
	LoadbalancerId pulumi.StringInput    `pulumi:"loadbalancerId"`
	RegionName     pulumi.StringInput    `pulumi:"regionName"`
	ServiceName    pulumi.StringInput    `pulumi:"serviceName"`
}

func (GetRegionLoadBalancerLogSubscriptionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionLoadBalancerLogSubscriptionsArgs)(nil)).Elem()
}

// A collection of values returned by getRegionLoadBalancerLogSubscriptions.
type GetRegionLoadBalancerLogSubscriptionsResultOutput struct{ *pulumi.OutputState }

func (GetRegionLoadBalancerLogSubscriptionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionLoadBalancerLogSubscriptionsResult)(nil)).Elem()
}

func (o GetRegionLoadBalancerLogSubscriptionsResultOutput) ToGetRegionLoadBalancerLogSubscriptionsResultOutput() GetRegionLoadBalancerLogSubscriptionsResultOutput {
	return o
}

func (o GetRegionLoadBalancerLogSubscriptionsResultOutput) ToGetRegionLoadBalancerLogSubscriptionsResultOutputWithContext(ctx context.Context) GetRegionLoadBalancerLogSubscriptionsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegionLoadBalancerLogSubscriptionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionLoadBalancerLogSubscriptionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRegionLoadBalancerLogSubscriptionsResultOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionLoadBalancerLogSubscriptionsResult) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o GetRegionLoadBalancerLogSubscriptionsResultOutput) LoadbalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionLoadBalancerLogSubscriptionsResult) string { return v.LoadbalancerId }).(pulumi.StringOutput)
}

func (o GetRegionLoadBalancerLogSubscriptionsResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionLoadBalancerLogSubscriptionsResult) string { return v.RegionName }).(pulumi.StringOutput)
}

func (o GetRegionLoadBalancerLogSubscriptionsResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionLoadBalancerLogSubscriptionsResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetRegionLoadBalancerLogSubscriptionsResultOutput) SubscriptionIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionLoadBalancerLogSubscriptionsResult) []string { return v.SubscriptionIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionLoadBalancerLogSubscriptionsResultOutput{})
}
