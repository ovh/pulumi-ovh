// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about a Managed Rancher Service in the given public cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudproject.GetRancher(ctx, &cloudproject.GetRancherArgs{
//				Id:        "<Rancher service ID>",
//				ProjectId: "<public cloud project ID>",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRancher(ctx *pulumi.Context, args *LookupRancherArgs, opts ...pulumi.InvokeOption) (*LookupRancherResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRancherResult
	err := ctx.Invoke("ovh:CloudProject/getRancher:getRancher", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRancher.
type LookupRancherArgs struct {
	// Unique identifier
	Id string `pulumi:"id"`
	// Project ID
	ProjectId string `pulumi:"projectId"`
}

// A collection of values returned by getRancher.
type LookupRancherResult struct {
	// Date of the managed Rancher service creation
	CreatedAt string `pulumi:"createdAt"`
	// Current configuration applied to the managed Rancher service
	CurrentState GetRancherCurrentState `pulumi:"currentState"`
	// Asynchronous operations ongoing on the managed Rancher service
	CurrentTasks []GetRancherCurrentTask `pulumi:"currentTasks"`
	// Unique identifier
	Id string `pulumi:"id"`
	// Project ID
	ProjectId string `pulumi:"projectId"`
	// Reflects the readiness of the managed Rancher service. A new target specification request will be accepted only in `READY` status
	ResourceStatus string `pulumi:"resourceStatus"`
	// Last target specification of the managed Rancher service
	TargetSpec GetRancherTargetSpec `pulumi:"targetSpec"`
	// Date of the last managed Rancher service update
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupRancherOutput(ctx *pulumi.Context, args LookupRancherOutputArgs, opts ...pulumi.InvokeOption) LookupRancherResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRancherResultOutput, error) {
			args := v.(LookupRancherArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getRancher:getRancher", args, LookupRancherResultOutput{}, options).(LookupRancherResultOutput), nil
		}).(LookupRancherResultOutput)
}

// A collection of arguments for invoking getRancher.
type LookupRancherOutputArgs struct {
	// Unique identifier
	Id pulumi.StringInput `pulumi:"id"`
	// Project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (LookupRancherOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRancherArgs)(nil)).Elem()
}

// A collection of values returned by getRancher.
type LookupRancherResultOutput struct{ *pulumi.OutputState }

func (LookupRancherResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRancherResult)(nil)).Elem()
}

func (o LookupRancherResultOutput) ToLookupRancherResultOutput() LookupRancherResultOutput {
	return o
}

func (o LookupRancherResultOutput) ToLookupRancherResultOutputWithContext(ctx context.Context) LookupRancherResultOutput {
	return o
}

// Date of the managed Rancher service creation
func (o LookupRancherResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRancherResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Current configuration applied to the managed Rancher service
func (o LookupRancherResultOutput) CurrentState() GetRancherCurrentStateOutput {
	return o.ApplyT(func(v LookupRancherResult) GetRancherCurrentState { return v.CurrentState }).(GetRancherCurrentStateOutput)
}

// Asynchronous operations ongoing on the managed Rancher service
func (o LookupRancherResultOutput) CurrentTasks() GetRancherCurrentTaskArrayOutput {
	return o.ApplyT(func(v LookupRancherResult) []GetRancherCurrentTask { return v.CurrentTasks }).(GetRancherCurrentTaskArrayOutput)
}

// Unique identifier
func (o LookupRancherResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRancherResult) string { return v.Id }).(pulumi.StringOutput)
}

// Project ID
func (o LookupRancherResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRancherResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Reflects the readiness of the managed Rancher service. A new target specification request will be accepted only in `READY` status
func (o LookupRancherResultOutput) ResourceStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRancherResult) string { return v.ResourceStatus }).(pulumi.StringOutput)
}

// Last target specification of the managed Rancher service
func (o LookupRancherResultOutput) TargetSpec() GetRancherTargetSpecOutput {
	return o.ApplyT(func(v LookupRancherResult) GetRancherTargetSpec { return v.TargetSpec }).(GetRancherTargetSpecOutput)
}

// Date of the last managed Rancher service update
func (o LookupRancherResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRancherResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRancherResultOutput{})
}
