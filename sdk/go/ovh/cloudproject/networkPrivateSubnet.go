// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"errors"
	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NetworkPrivateSubnet struct {
	pulumi.CustomResourceState

	Cidr      pulumi.StringOutput                   `pulumi:"cidr"`
	Dhcp      pulumi.BoolPtrOutput                  `pulumi:"dhcp"`
	End       pulumi.StringOutput                   `pulumi:"end"`
	GatewayIp pulumi.StringOutput                   `pulumi:"gatewayIp"`
	IpPools   NetworkPrivateSubnetIpPoolArrayOutput `pulumi:"ipPools"`
	Network   pulumi.StringOutput                   `pulumi:"network"`
	NetworkId pulumi.StringOutput                   `pulumi:"networkId"`
	NoGateway pulumi.BoolPtrOutput                  `pulumi:"noGateway"`
	Region    pulumi.StringOutput                   `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	Start       pulumi.StringOutput `pulumi:"start"`
}

// NewNetworkPrivateSubnet registers a new resource with the given unique name, arguments, and options.
func NewNetworkPrivateSubnet(ctx *pulumi.Context,
	name string, args *NetworkPrivateSubnetArgs, opts ...pulumi.ResourceOption) (*NetworkPrivateSubnet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.End == nil {
		return nil, errors.New("invalid value for required argument 'End'")
	}
	if args.Network == nil {
		return nil, errors.New("invalid value for required argument 'Network'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.Start == nil {
		return nil, errors.New("invalid value for required argument 'Start'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource NetworkPrivateSubnet
	err := ctx.RegisterResource("ovh:CloudProject/networkPrivateSubnet:NetworkPrivateSubnet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNetworkPrivateSubnet gets an existing NetworkPrivateSubnet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNetworkPrivateSubnet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NetworkPrivateSubnetState, opts ...pulumi.ResourceOption) (*NetworkPrivateSubnet, error) {
	var resource NetworkPrivateSubnet
	err := ctx.ReadResource("ovh:CloudProject/networkPrivateSubnet:NetworkPrivateSubnet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NetworkPrivateSubnet resources.
type networkPrivateSubnetState struct {
	Cidr      *string                      `pulumi:"cidr"`
	Dhcp      *bool                        `pulumi:"dhcp"`
	End       *string                      `pulumi:"end"`
	GatewayIp *string                      `pulumi:"gatewayIp"`
	IpPools   []NetworkPrivateSubnetIpPool `pulumi:"ipPools"`
	Network   *string                      `pulumi:"network"`
	NetworkId *string                      `pulumi:"networkId"`
	NoGateway *bool                        `pulumi:"noGateway"`
	Region    *string                      `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName *string `pulumi:"serviceName"`
	Start       *string `pulumi:"start"`
}

type NetworkPrivateSubnetState struct {
	Cidr      pulumi.StringPtrInput
	Dhcp      pulumi.BoolPtrInput
	End       pulumi.StringPtrInput
	GatewayIp pulumi.StringPtrInput
	IpPools   NetworkPrivateSubnetIpPoolArrayInput
	Network   pulumi.StringPtrInput
	NetworkId pulumi.StringPtrInput
	NoGateway pulumi.BoolPtrInput
	Region    pulumi.StringPtrInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringPtrInput
	Start       pulumi.StringPtrInput
}

func (NetworkPrivateSubnetState) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPrivateSubnetState)(nil)).Elem()
}

type networkPrivateSubnetArgs struct {
	Dhcp      *bool  `pulumi:"dhcp"`
	End       string `pulumi:"end"`
	Network   string `pulumi:"network"`
	NetworkId string `pulumi:"networkId"`
	NoGateway *bool  `pulumi:"noGateway"`
	Region    string `pulumi:"region"`
	// Service name of the resource representing the id of the cloud project.
	ServiceName string `pulumi:"serviceName"`
	Start       string `pulumi:"start"`
}

// The set of arguments for constructing a NetworkPrivateSubnet resource.
type NetworkPrivateSubnetArgs struct {
	Dhcp      pulumi.BoolPtrInput
	End       pulumi.StringInput
	Network   pulumi.StringInput
	NetworkId pulumi.StringInput
	NoGateway pulumi.BoolPtrInput
	Region    pulumi.StringInput
	// Service name of the resource representing the id of the cloud project.
	ServiceName pulumi.StringInput
	Start       pulumi.StringInput
}

func (NetworkPrivateSubnetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*networkPrivateSubnetArgs)(nil)).Elem()
}

type NetworkPrivateSubnetInput interface {
	pulumi.Input

	ToNetworkPrivateSubnetOutput() NetworkPrivateSubnetOutput
	ToNetworkPrivateSubnetOutputWithContext(ctx context.Context) NetworkPrivateSubnetOutput
}

func (*NetworkPrivateSubnet) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPrivateSubnet)(nil)).Elem()
}

func (i *NetworkPrivateSubnet) ToNetworkPrivateSubnetOutput() NetworkPrivateSubnetOutput {
	return i.ToNetworkPrivateSubnetOutputWithContext(context.Background())
}

func (i *NetworkPrivateSubnet) ToNetworkPrivateSubnetOutputWithContext(ctx context.Context) NetworkPrivateSubnetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPrivateSubnetOutput)
}

// NetworkPrivateSubnetArrayInput is an input type that accepts NetworkPrivateSubnetArray and NetworkPrivateSubnetArrayOutput values.
// You can construct a concrete instance of `NetworkPrivateSubnetArrayInput` via:
//
//	NetworkPrivateSubnetArray{ NetworkPrivateSubnetArgs{...} }
type NetworkPrivateSubnetArrayInput interface {
	pulumi.Input

	ToNetworkPrivateSubnetArrayOutput() NetworkPrivateSubnetArrayOutput
	ToNetworkPrivateSubnetArrayOutputWithContext(context.Context) NetworkPrivateSubnetArrayOutput
}

type NetworkPrivateSubnetArray []NetworkPrivateSubnetInput

func (NetworkPrivateSubnetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkPrivateSubnet)(nil)).Elem()
}

func (i NetworkPrivateSubnetArray) ToNetworkPrivateSubnetArrayOutput() NetworkPrivateSubnetArrayOutput {
	return i.ToNetworkPrivateSubnetArrayOutputWithContext(context.Background())
}

func (i NetworkPrivateSubnetArray) ToNetworkPrivateSubnetArrayOutputWithContext(ctx context.Context) NetworkPrivateSubnetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPrivateSubnetArrayOutput)
}

// NetworkPrivateSubnetMapInput is an input type that accepts NetworkPrivateSubnetMap and NetworkPrivateSubnetMapOutput values.
// You can construct a concrete instance of `NetworkPrivateSubnetMapInput` via:
//
//	NetworkPrivateSubnetMap{ "key": NetworkPrivateSubnetArgs{...} }
type NetworkPrivateSubnetMapInput interface {
	pulumi.Input

	ToNetworkPrivateSubnetMapOutput() NetworkPrivateSubnetMapOutput
	ToNetworkPrivateSubnetMapOutputWithContext(context.Context) NetworkPrivateSubnetMapOutput
}

type NetworkPrivateSubnetMap map[string]NetworkPrivateSubnetInput

func (NetworkPrivateSubnetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkPrivateSubnet)(nil)).Elem()
}

func (i NetworkPrivateSubnetMap) ToNetworkPrivateSubnetMapOutput() NetworkPrivateSubnetMapOutput {
	return i.ToNetworkPrivateSubnetMapOutputWithContext(context.Background())
}

func (i NetworkPrivateSubnetMap) ToNetworkPrivateSubnetMapOutputWithContext(ctx context.Context) NetworkPrivateSubnetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkPrivateSubnetMapOutput)
}

type NetworkPrivateSubnetOutput struct{ *pulumi.OutputState }

func (NetworkPrivateSubnetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkPrivateSubnet)(nil)).Elem()
}

func (o NetworkPrivateSubnetOutput) ToNetworkPrivateSubnetOutput() NetworkPrivateSubnetOutput {
	return o
}

func (o NetworkPrivateSubnetOutput) ToNetworkPrivateSubnetOutputWithContext(ctx context.Context) NetworkPrivateSubnetOutput {
	return o
}

func (o NetworkPrivateSubnetOutput) Cidr() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.StringOutput { return v.Cidr }).(pulumi.StringOutput)
}

func (o NetworkPrivateSubnetOutput) Dhcp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.BoolPtrOutput { return v.Dhcp }).(pulumi.BoolPtrOutput)
}

func (o NetworkPrivateSubnetOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.StringOutput { return v.End }).(pulumi.StringOutput)
}

func (o NetworkPrivateSubnetOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.StringOutput { return v.GatewayIp }).(pulumi.StringOutput)
}

func (o NetworkPrivateSubnetOutput) IpPools() NetworkPrivateSubnetIpPoolArrayOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) NetworkPrivateSubnetIpPoolArrayOutput { return v.IpPools }).(NetworkPrivateSubnetIpPoolArrayOutput)
}

func (o NetworkPrivateSubnetOutput) Network() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.StringOutput { return v.Network }).(pulumi.StringOutput)
}

func (o NetworkPrivateSubnetOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

func (o NetworkPrivateSubnetOutput) NoGateway() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.BoolPtrOutput { return v.NoGateway }).(pulumi.BoolPtrOutput)
}

func (o NetworkPrivateSubnetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Service name of the resource representing the id of the cloud project.
func (o NetworkPrivateSubnetOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func (o NetworkPrivateSubnetOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v *NetworkPrivateSubnet) pulumi.StringOutput { return v.Start }).(pulumi.StringOutput)
}

type NetworkPrivateSubnetArrayOutput struct{ *pulumi.OutputState }

func (NetworkPrivateSubnetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NetworkPrivateSubnet)(nil)).Elem()
}

func (o NetworkPrivateSubnetArrayOutput) ToNetworkPrivateSubnetArrayOutput() NetworkPrivateSubnetArrayOutput {
	return o
}

func (o NetworkPrivateSubnetArrayOutput) ToNetworkPrivateSubnetArrayOutputWithContext(ctx context.Context) NetworkPrivateSubnetArrayOutput {
	return o
}

func (o NetworkPrivateSubnetArrayOutput) Index(i pulumi.IntInput) NetworkPrivateSubnetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *NetworkPrivateSubnet {
		return vs[0].([]*NetworkPrivateSubnet)[vs[1].(int)]
	}).(NetworkPrivateSubnetOutput)
}

type NetworkPrivateSubnetMapOutput struct{ *pulumi.OutputState }

func (NetworkPrivateSubnetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NetworkPrivateSubnet)(nil)).Elem()
}

func (o NetworkPrivateSubnetMapOutput) ToNetworkPrivateSubnetMapOutput() NetworkPrivateSubnetMapOutput {
	return o
}

func (o NetworkPrivateSubnetMapOutput) ToNetworkPrivateSubnetMapOutputWithContext(ctx context.Context) NetworkPrivateSubnetMapOutput {
	return o
}

func (o NetworkPrivateSubnetMapOutput) MapIndex(k pulumi.StringInput) NetworkPrivateSubnetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *NetworkPrivateSubnet {
		return vs[0].(map[string]*NetworkPrivateSubnet)[vs[1].(string)]
	}).(NetworkPrivateSubnetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPrivateSubnetInput)(nil)).Elem(), &NetworkPrivateSubnet{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPrivateSubnetArrayInput)(nil)).Elem(), NetworkPrivateSubnetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NetworkPrivateSubnetMapInput)(nil)).Elem(), NetworkPrivateSubnetMap{})
	pulumi.RegisterOutputType(NetworkPrivateSubnetOutput{})
	pulumi.RegisterOutputType(NetworkPrivateSubnetArrayOutput{})
	pulumi.RegisterOutputType(NetworkPrivateSubnetMapOutput{})
}
