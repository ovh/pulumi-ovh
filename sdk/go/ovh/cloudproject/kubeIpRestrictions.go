// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"errors"
	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KubeIpRestrictions struct {
	pulumi.CustomResourceState

	// List of IP restrictions for the cluster
	Ips pulumi.StringArrayOutput `pulumi:"ips"`
	// Kube ID
	KubeId pulumi.StringOutput `pulumi:"kubeId"`
	// Service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
}

// NewKubeIpRestrictions registers a new resource with the given unique name, arguments, and options.
func NewKubeIpRestrictions(ctx *pulumi.Context,
	name string, args *KubeIpRestrictionsArgs, opts ...pulumi.ResourceOption) (*KubeIpRestrictions, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Ips == nil {
		return nil, errors.New("invalid value for required argument 'Ips'")
	}
	if args.KubeId == nil {
		return nil, errors.New("invalid value for required argument 'KubeId'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KubeIpRestrictions
	err := ctx.RegisterResource("ovh:CloudProject/kubeIpRestrictions:KubeIpRestrictions", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKubeIpRestrictions gets an existing KubeIpRestrictions resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKubeIpRestrictions(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KubeIpRestrictionsState, opts ...pulumi.ResourceOption) (*KubeIpRestrictions, error) {
	var resource KubeIpRestrictions
	err := ctx.ReadResource("ovh:CloudProject/kubeIpRestrictions:KubeIpRestrictions", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KubeIpRestrictions resources.
type kubeIpRestrictionsState struct {
	// List of IP restrictions for the cluster
	Ips []string `pulumi:"ips"`
	// Kube ID
	KubeId *string `pulumi:"kubeId"`
	// Service name
	ServiceName *string `pulumi:"serviceName"`
}

type KubeIpRestrictionsState struct {
	// List of IP restrictions for the cluster
	Ips pulumi.StringArrayInput
	// Kube ID
	KubeId pulumi.StringPtrInput
	// Service name
	ServiceName pulumi.StringPtrInput
}

func (KubeIpRestrictionsState) ElementType() reflect.Type {
	return reflect.TypeOf((*kubeIpRestrictionsState)(nil)).Elem()
}

type kubeIpRestrictionsArgs struct {
	// List of IP restrictions for the cluster
	Ips []string `pulumi:"ips"`
	// Kube ID
	KubeId string `pulumi:"kubeId"`
	// Service name
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a KubeIpRestrictions resource.
type KubeIpRestrictionsArgs struct {
	// List of IP restrictions for the cluster
	Ips pulumi.StringArrayInput
	// Kube ID
	KubeId pulumi.StringInput
	// Service name
	ServiceName pulumi.StringInput
}

func (KubeIpRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubeIpRestrictionsArgs)(nil)).Elem()
}

type KubeIpRestrictionsInput interface {
	pulumi.Input

	ToKubeIpRestrictionsOutput() KubeIpRestrictionsOutput
	ToKubeIpRestrictionsOutputWithContext(ctx context.Context) KubeIpRestrictionsOutput
}

func (*KubeIpRestrictions) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeIpRestrictions)(nil)).Elem()
}

func (i *KubeIpRestrictions) ToKubeIpRestrictionsOutput() KubeIpRestrictionsOutput {
	return i.ToKubeIpRestrictionsOutputWithContext(context.Background())
}

func (i *KubeIpRestrictions) ToKubeIpRestrictionsOutputWithContext(ctx context.Context) KubeIpRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeIpRestrictionsOutput)
}

// KubeIpRestrictionsArrayInput is an input type that accepts KubeIpRestrictionsArray and KubeIpRestrictionsArrayOutput values.
// You can construct a concrete instance of `KubeIpRestrictionsArrayInput` via:
//
//	KubeIpRestrictionsArray{ KubeIpRestrictionsArgs{...} }
type KubeIpRestrictionsArrayInput interface {
	pulumi.Input

	ToKubeIpRestrictionsArrayOutput() KubeIpRestrictionsArrayOutput
	ToKubeIpRestrictionsArrayOutputWithContext(context.Context) KubeIpRestrictionsArrayOutput
}

type KubeIpRestrictionsArray []KubeIpRestrictionsInput

func (KubeIpRestrictionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubeIpRestrictions)(nil)).Elem()
}

func (i KubeIpRestrictionsArray) ToKubeIpRestrictionsArrayOutput() KubeIpRestrictionsArrayOutput {
	return i.ToKubeIpRestrictionsArrayOutputWithContext(context.Background())
}

func (i KubeIpRestrictionsArray) ToKubeIpRestrictionsArrayOutputWithContext(ctx context.Context) KubeIpRestrictionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeIpRestrictionsArrayOutput)
}

// KubeIpRestrictionsMapInput is an input type that accepts KubeIpRestrictionsMap and KubeIpRestrictionsMapOutput values.
// You can construct a concrete instance of `KubeIpRestrictionsMapInput` via:
//
//	KubeIpRestrictionsMap{ "key": KubeIpRestrictionsArgs{...} }
type KubeIpRestrictionsMapInput interface {
	pulumi.Input

	ToKubeIpRestrictionsMapOutput() KubeIpRestrictionsMapOutput
	ToKubeIpRestrictionsMapOutputWithContext(context.Context) KubeIpRestrictionsMapOutput
}

type KubeIpRestrictionsMap map[string]KubeIpRestrictionsInput

func (KubeIpRestrictionsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubeIpRestrictions)(nil)).Elem()
}

func (i KubeIpRestrictionsMap) ToKubeIpRestrictionsMapOutput() KubeIpRestrictionsMapOutput {
	return i.ToKubeIpRestrictionsMapOutputWithContext(context.Background())
}

func (i KubeIpRestrictionsMap) ToKubeIpRestrictionsMapOutputWithContext(ctx context.Context) KubeIpRestrictionsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubeIpRestrictionsMapOutput)
}

type KubeIpRestrictionsOutput struct{ *pulumi.OutputState }

func (KubeIpRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubeIpRestrictions)(nil)).Elem()
}

func (o KubeIpRestrictionsOutput) ToKubeIpRestrictionsOutput() KubeIpRestrictionsOutput {
	return o
}

func (o KubeIpRestrictionsOutput) ToKubeIpRestrictionsOutputWithContext(ctx context.Context) KubeIpRestrictionsOutput {
	return o
}

// List of IP restrictions for the cluster
func (o KubeIpRestrictionsOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubeIpRestrictions) pulumi.StringArrayOutput { return v.Ips }).(pulumi.StringArrayOutput)
}

// Kube ID
func (o KubeIpRestrictionsOutput) KubeId() pulumi.StringOutput {
	return o.ApplyT(func(v *KubeIpRestrictions) pulumi.StringOutput { return v.KubeId }).(pulumi.StringOutput)
}

// Service name
func (o KubeIpRestrictionsOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *KubeIpRestrictions) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

type KubeIpRestrictionsArrayOutput struct{ *pulumi.OutputState }

func (KubeIpRestrictionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubeIpRestrictions)(nil)).Elem()
}

func (o KubeIpRestrictionsArrayOutput) ToKubeIpRestrictionsArrayOutput() KubeIpRestrictionsArrayOutput {
	return o
}

func (o KubeIpRestrictionsArrayOutput) ToKubeIpRestrictionsArrayOutputWithContext(ctx context.Context) KubeIpRestrictionsArrayOutput {
	return o
}

func (o KubeIpRestrictionsArrayOutput) Index(i pulumi.IntInput) KubeIpRestrictionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubeIpRestrictions {
		return vs[0].([]*KubeIpRestrictions)[vs[1].(int)]
	}).(KubeIpRestrictionsOutput)
}

type KubeIpRestrictionsMapOutput struct{ *pulumi.OutputState }

func (KubeIpRestrictionsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubeIpRestrictions)(nil)).Elem()
}

func (o KubeIpRestrictionsMapOutput) ToKubeIpRestrictionsMapOutput() KubeIpRestrictionsMapOutput {
	return o
}

func (o KubeIpRestrictionsMapOutput) ToKubeIpRestrictionsMapOutputWithContext(ctx context.Context) KubeIpRestrictionsMapOutput {
	return o
}

func (o KubeIpRestrictionsMapOutput) MapIndex(k pulumi.StringInput) KubeIpRestrictionsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubeIpRestrictions {
		return vs[0].(map[string]*KubeIpRestrictions)[vs[1].(string)]
	}).(KubeIpRestrictionsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubeIpRestrictionsInput)(nil)).Elem(), &KubeIpRestrictions{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeIpRestrictionsArrayInput)(nil)).Elem(), KubeIpRestrictionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubeIpRestrictionsMapInput)(nil)).Elem(), KubeIpRestrictionsMap{})
	pulumi.RegisterOutputType(KubeIpRestrictionsOutput{})
	pulumi.RegisterOutputType(KubeIpRestrictionsArrayOutput{})
	pulumi.RegisterOutputType(KubeIpRestrictionsMapOutput{})
}
