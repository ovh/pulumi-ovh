// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the floating IPs of a public cloud project.
func GetFloatingIPs(ctx *pulumi.Context, args *GetFloatingIPsArgs, opts ...pulumi.InvokeOption) (*GetFloatingIPsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFloatingIPsResult
	err := ctx.Invoke("ovh:CloudProject/getFloatingIPs:getFloatingIPs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFloatingIPs.
type GetFloatingIPsArgs struct {
	// Public cloud region name
	RegionName string `pulumi:"regionName"`
	// The id of the public cloud project
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getFloatingIPs.
type GetFloatingIPsResult struct {
	CloudProjectFloatingips []GetFloatingIPsCloudProjectFloatingip `pulumi:"cloudProjectFloatingips"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Floating IP region
	RegionName  string `pulumi:"regionName"`
	ServiceName string `pulumi:"serviceName"`
}

func GetFloatingIPsOutput(ctx *pulumi.Context, args GetFloatingIPsOutputArgs, opts ...pulumi.InvokeOption) GetFloatingIPsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetFloatingIPsResultOutput, error) {
			args := v.(GetFloatingIPsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getFloatingIPs:getFloatingIPs", args, GetFloatingIPsResultOutput{}, options).(GetFloatingIPsResultOutput), nil
		}).(GetFloatingIPsResultOutput)
}

// A collection of arguments for invoking getFloatingIPs.
type GetFloatingIPsOutputArgs struct {
	// Public cloud region name
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// The id of the public cloud project
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetFloatingIPsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFloatingIPsArgs)(nil)).Elem()
}

// A collection of values returned by getFloatingIPs.
type GetFloatingIPsResultOutput struct{ *pulumi.OutputState }

func (GetFloatingIPsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFloatingIPsResult)(nil)).Elem()
}

func (o GetFloatingIPsResultOutput) ToGetFloatingIPsResultOutput() GetFloatingIPsResultOutput {
	return o
}

func (o GetFloatingIPsResultOutput) ToGetFloatingIPsResultOutputWithContext(ctx context.Context) GetFloatingIPsResultOutput {
	return o
}

func (o GetFloatingIPsResultOutput) CloudProjectFloatingips() GetFloatingIPsCloudProjectFloatingipArrayOutput {
	return o.ApplyT(func(v GetFloatingIPsResult) []GetFloatingIPsCloudProjectFloatingip { return v.CloudProjectFloatingips }).(GetFloatingIPsCloudProjectFloatingipArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFloatingIPsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFloatingIPsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Floating IP region
func (o GetFloatingIPsResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFloatingIPsResult) string { return v.RegionName }).(pulumi.StringOutput)
}

func (o GetFloatingIPsResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetFloatingIPsResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFloatingIPsResultOutput{})
}
