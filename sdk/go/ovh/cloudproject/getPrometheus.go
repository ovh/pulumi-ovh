// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetPrometheus(ctx *pulumi.Context, args *GetPrometheusArgs, opts ...pulumi.InvokeOption) (*GetPrometheusResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPrometheusResult
	err := ctx.Invoke("ovh:CloudProject/getPrometheus:getPrometheus", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPrometheus.
type GetPrometheusArgs struct {
	ClusterId   string `pulumi:"clusterId"`
	Engine      string `pulumi:"engine"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getPrometheus.
type GetPrometheusResult struct {
	ClusterId string `pulumi:"clusterId"`
	Engine    string `pulumi:"engine"`
	// The provider-assigned unique ID for this managed resource.
	Id          string                `pulumi:"id"`
	ServiceName string                `pulumi:"serviceName"`
	Targets     []GetPrometheusTarget `pulumi:"targets"`
	Username    string                `pulumi:"username"`
}

func GetPrometheusOutput(ctx *pulumi.Context, args GetPrometheusOutputArgs, opts ...pulumi.InvokeOption) GetPrometheusResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetPrometheusResultOutput, error) {
			args := v.(GetPrometheusArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getPrometheus:getPrometheus", args, GetPrometheusResultOutput{}, options).(GetPrometheusResultOutput), nil
		}).(GetPrometheusResultOutput)
}

// A collection of arguments for invoking getPrometheus.
type GetPrometheusOutputArgs struct {
	ClusterId   pulumi.StringInput `pulumi:"clusterId"`
	Engine      pulumi.StringInput `pulumi:"engine"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetPrometheusOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrometheusArgs)(nil)).Elem()
}

// A collection of values returned by getPrometheus.
type GetPrometheusResultOutput struct{ *pulumi.OutputState }

func (GetPrometheusResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPrometheusResult)(nil)).Elem()
}

func (o GetPrometheusResultOutput) ToGetPrometheusResultOutput() GetPrometheusResultOutput {
	return o
}

func (o GetPrometheusResultOutput) ToGetPrometheusResultOutputWithContext(ctx context.Context) GetPrometheusResultOutput {
	return o
}

func (o GetPrometheusResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetPrometheusResultOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusResult) string { return v.Engine }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPrometheusResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPrometheusResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetPrometheusResultOutput) Targets() GetPrometheusTargetArrayOutput {
	return o.ApplyT(func(v GetPrometheusResult) []GetPrometheusTarget { return v.Targets }).(GetPrometheusTargetArrayOutput)
}

func (o GetPrometheusResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetPrometheusResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPrometheusResultOutput{})
}
