// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupContainerRegistryUsers(ctx *pulumi.Context, args *LookupContainerRegistryUsersArgs, opts ...pulumi.InvokeOption) (*LookupContainerRegistryUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContainerRegistryUsersResult
	err := ctx.Invoke("ovh:CloudProject/getContainerRegistryUsers:getContainerRegistryUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContainerRegistryUsers.
type LookupContainerRegistryUsersArgs struct {
	RegistryId  string `pulumi:"registryId"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getContainerRegistryUsers.
type LookupContainerRegistryUsersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id          string                            `pulumi:"id"`
	RegistryId  string                            `pulumi:"registryId"`
	Results     []GetContainerRegistryUsersResult `pulumi:"results"`
	ServiceName string                            `pulumi:"serviceName"`
}

func LookupContainerRegistryUsersOutput(ctx *pulumi.Context, args LookupContainerRegistryUsersOutputArgs, opts ...pulumi.InvokeOption) LookupContainerRegistryUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupContainerRegistryUsersResultOutput, error) {
			args := v.(LookupContainerRegistryUsersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getContainerRegistryUsers:getContainerRegistryUsers", args, LookupContainerRegistryUsersResultOutput{}, options).(LookupContainerRegistryUsersResultOutput), nil
		}).(LookupContainerRegistryUsersResultOutput)
}

// A collection of arguments for invoking getContainerRegistryUsers.
type LookupContainerRegistryUsersOutputArgs struct {
	RegistryId  pulumi.StringInput `pulumi:"registryId"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupContainerRegistryUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRegistryUsersArgs)(nil)).Elem()
}

// A collection of values returned by getContainerRegistryUsers.
type LookupContainerRegistryUsersResultOutput struct{ *pulumi.OutputState }

func (LookupContainerRegistryUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContainerRegistryUsersResult)(nil)).Elem()
}

func (o LookupContainerRegistryUsersResultOutput) ToLookupContainerRegistryUsersResultOutput() LookupContainerRegistryUsersResultOutput {
	return o
}

func (o LookupContainerRegistryUsersResultOutput) ToLookupContainerRegistryUsersResultOutputWithContext(ctx context.Context) LookupContainerRegistryUsersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupContainerRegistryUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRegistryUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupContainerRegistryUsersResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRegistryUsersResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

func (o LookupContainerRegistryUsersResultOutput) Results() GetContainerRegistryUsersResultArrayOutput {
	return o.ApplyT(func(v LookupContainerRegistryUsersResult) []GetContainerRegistryUsersResult { return v.Results }).(GetContainerRegistryUsersResultArrayOutput)
}

func (o LookupContainerRegistryUsersResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContainerRegistryUsersResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContainerRegistryUsersResultOutput{})
}
