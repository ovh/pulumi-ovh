// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRegionLoadBalancerLogSubscription(ctx *pulumi.Context, args *LookupRegionLoadBalancerLogSubscriptionArgs, opts ...pulumi.InvokeOption) (*LookupRegionLoadBalancerLogSubscriptionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegionLoadBalancerLogSubscriptionResult
	err := ctx.Invoke("ovh:CloudProject/getRegionLoadBalancerLogSubscription:getRegionLoadBalancerLogSubscription", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegionLoadBalancerLogSubscription.
type LookupRegionLoadBalancerLogSubscriptionArgs struct {
	LoadbalancerId string `pulumi:"loadbalancerId"`
	RegionName     string `pulumi:"regionName"`
	ServiceName    string `pulumi:"serviceName"`
	SubscriptionId string `pulumi:"subscriptionId"`
}

// A collection of values returned by getRegionLoadBalancerLogSubscription.
type LookupRegionLoadBalancerLogSubscriptionResult struct {
	CreatedAt string `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	Kind           string `pulumi:"kind"`
	LdpServiceName string `pulumi:"ldpServiceName"`
	LoadbalancerId string `pulumi:"loadbalancerId"`
	RegionName     string `pulumi:"regionName"`
	ResourceName   string `pulumi:"resourceName"`
	ResourceType   string `pulumi:"resourceType"`
	ServiceName    string `pulumi:"serviceName"`
	StreamId       string `pulumi:"streamId"`
	SubscriptionId string `pulumi:"subscriptionId"`
	UpdatedAt      string `pulumi:"updatedAt"`
}

func LookupRegionLoadBalancerLogSubscriptionOutput(ctx *pulumi.Context, args LookupRegionLoadBalancerLogSubscriptionOutputArgs, opts ...pulumi.InvokeOption) LookupRegionLoadBalancerLogSubscriptionResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRegionLoadBalancerLogSubscriptionResultOutput, error) {
			args := v.(LookupRegionLoadBalancerLogSubscriptionArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getRegionLoadBalancerLogSubscription:getRegionLoadBalancerLogSubscription", args, LookupRegionLoadBalancerLogSubscriptionResultOutput{}, options).(LookupRegionLoadBalancerLogSubscriptionResultOutput), nil
		}).(LookupRegionLoadBalancerLogSubscriptionResultOutput)
}

// A collection of arguments for invoking getRegionLoadBalancerLogSubscription.
type LookupRegionLoadBalancerLogSubscriptionOutputArgs struct {
	LoadbalancerId pulumi.StringInput `pulumi:"loadbalancerId"`
	RegionName     pulumi.StringInput `pulumi:"regionName"`
	ServiceName    pulumi.StringInput `pulumi:"serviceName"`
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
}

func (LookupRegionLoadBalancerLogSubscriptionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionLoadBalancerLogSubscriptionArgs)(nil)).Elem()
}

// A collection of values returned by getRegionLoadBalancerLogSubscription.
type LookupRegionLoadBalancerLogSubscriptionResultOutput struct{ *pulumi.OutputState }

func (LookupRegionLoadBalancerLogSubscriptionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionLoadBalancerLogSubscriptionResult)(nil)).Elem()
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) ToLookupRegionLoadBalancerLogSubscriptionResultOutput() LookupRegionLoadBalancerLogSubscriptionResultOutput {
	return o
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) ToLookupRegionLoadBalancerLogSubscriptionResultOutputWithContext(ctx context.Context) LookupRegionLoadBalancerLogSubscriptionResultOutput {
	return o
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.Kind }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) LdpServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.LdpServiceName }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) LoadbalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.LoadbalancerId }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.RegionName }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.ResourceName }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) ResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.ResourceType }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.StreamId }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

func (o LookupRegionLoadBalancerLogSubscriptionResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionLoadBalancerLogSubscriptionResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegionLoadBalancerLogSubscriptionResultOutput{})
}
