// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"errors"
	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an alert on a public cloud project.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/go/ovh/cloudproject"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudproject.NewAlerting(ctx, "myAlert", &cloudproject.AlertingArgs{
//				Delay:            pulumi.Float64(3600),
//				Email:            pulumi.String("aaa.bbb@domain.com"),
//				MonthlyThreshold: pulumi.Float64(1000),
//				ServiceName:      pulumi.String("XXX"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type Alerting struct {
	pulumi.CustomResourceState

	// Alerting creation date
	CreationDate pulumi.StringOutput `pulumi:"creationDate"`
	// Delay between two alerts in seconds
	Delay pulumi.Float64Output `pulumi:"delay"`
	// Email to contact
	Email pulumi.StringOutput `pulumi:"email"`
	// Formatted monthly threshold for this alerting
	FormattedMonthlyThreshold AlertingFormattedMonthlyThresholdOutput `pulumi:"formattedMonthlyThreshold"`
	// Monthly threshold for this alerting in currency
	MonthlyThreshold pulumi.Float64Output `pulumi:"monthlyThreshold"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
}

// NewAlerting registers a new resource with the given unique name, arguments, and options.
func NewAlerting(ctx *pulumi.Context,
	name string, args *AlertingArgs, opts ...pulumi.ResourceOption) (*Alerting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Delay == nil {
		return nil, errors.New("invalid value for required argument 'Delay'")
	}
	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	if args.MonthlyThreshold == nil {
		return nil, errors.New("invalid value for required argument 'MonthlyThreshold'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Alerting
	err := ctx.RegisterResource("ovh:CloudProject/alerting:Alerting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlerting gets an existing Alerting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlerting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertingState, opts ...pulumi.ResourceOption) (*Alerting, error) {
	var resource Alerting
	err := ctx.ReadResource("ovh:CloudProject/alerting:Alerting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Alerting resources.
type alertingState struct {
	// Alerting creation date
	CreationDate *string `pulumi:"creationDate"`
	// Delay between two alerts in seconds
	Delay *float64 `pulumi:"delay"`
	// Email to contact
	Email *string `pulumi:"email"`
	// Formatted monthly threshold for this alerting
	FormattedMonthlyThreshold *AlertingFormattedMonthlyThreshold `pulumi:"formattedMonthlyThreshold"`
	// Monthly threshold for this alerting in currency
	MonthlyThreshold *float64 `pulumi:"monthlyThreshold"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName *string `pulumi:"serviceName"`
}

type AlertingState struct {
	// Alerting creation date
	CreationDate pulumi.StringPtrInput
	// Delay between two alerts in seconds
	Delay pulumi.Float64PtrInput
	// Email to contact
	Email pulumi.StringPtrInput
	// Formatted monthly threshold for this alerting
	FormattedMonthlyThreshold AlertingFormattedMonthlyThresholdPtrInput
	// Monthly threshold for this alerting in currency
	MonthlyThreshold pulumi.Float64PtrInput
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringPtrInput
}

func (AlertingState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertingState)(nil)).Elem()
}

type alertingArgs struct {
	// Delay between two alerts in seconds
	Delay float64 `pulumi:"delay"`
	// Email to contact
	Email string `pulumi:"email"`
	// Monthly threshold for this alerting in currency
	MonthlyThreshold float64 `pulumi:"monthlyThreshold"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName string `pulumi:"serviceName"`
}

// The set of arguments for constructing a Alerting resource.
type AlertingArgs struct {
	// Delay between two alerts in seconds
	Delay pulumi.Float64Input
	// Email to contact
	Email pulumi.StringInput
	// Monthly threshold for this alerting in currency
	MonthlyThreshold pulumi.Float64Input
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
	ServiceName pulumi.StringInput
}

func (AlertingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertingArgs)(nil)).Elem()
}

type AlertingInput interface {
	pulumi.Input

	ToAlertingOutput() AlertingOutput
	ToAlertingOutputWithContext(ctx context.Context) AlertingOutput
}

func (*Alerting) ElementType() reflect.Type {
	return reflect.TypeOf((**Alerting)(nil)).Elem()
}

func (i *Alerting) ToAlertingOutput() AlertingOutput {
	return i.ToAlertingOutputWithContext(context.Background())
}

func (i *Alerting) ToAlertingOutputWithContext(ctx context.Context) AlertingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingOutput)
}

// AlertingArrayInput is an input type that accepts AlertingArray and AlertingArrayOutput values.
// You can construct a concrete instance of `AlertingArrayInput` via:
//
//	AlertingArray{ AlertingArgs{...} }
type AlertingArrayInput interface {
	pulumi.Input

	ToAlertingArrayOutput() AlertingArrayOutput
	ToAlertingArrayOutputWithContext(context.Context) AlertingArrayOutput
}

type AlertingArray []AlertingInput

func (AlertingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Alerting)(nil)).Elem()
}

func (i AlertingArray) ToAlertingArrayOutput() AlertingArrayOutput {
	return i.ToAlertingArrayOutputWithContext(context.Background())
}

func (i AlertingArray) ToAlertingArrayOutputWithContext(ctx context.Context) AlertingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingArrayOutput)
}

// AlertingMapInput is an input type that accepts AlertingMap and AlertingMapOutput values.
// You can construct a concrete instance of `AlertingMapInput` via:
//
//	AlertingMap{ "key": AlertingArgs{...} }
type AlertingMapInput interface {
	pulumi.Input

	ToAlertingMapOutput() AlertingMapOutput
	ToAlertingMapOutputWithContext(context.Context) AlertingMapOutput
}

type AlertingMap map[string]AlertingInput

func (AlertingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Alerting)(nil)).Elem()
}

func (i AlertingMap) ToAlertingMapOutput() AlertingMapOutput {
	return i.ToAlertingMapOutputWithContext(context.Background())
}

func (i AlertingMap) ToAlertingMapOutputWithContext(ctx context.Context) AlertingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertingMapOutput)
}

type AlertingOutput struct{ *pulumi.OutputState }

func (AlertingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Alerting)(nil)).Elem()
}

func (o AlertingOutput) ToAlertingOutput() AlertingOutput {
	return o
}

func (o AlertingOutput) ToAlertingOutputWithContext(ctx context.Context) AlertingOutput {
	return o
}

// Alerting creation date
func (o AlertingOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Alerting) pulumi.StringOutput { return v.CreationDate }).(pulumi.StringOutput)
}

// Delay between two alerts in seconds
func (o AlertingOutput) Delay() pulumi.Float64Output {
	return o.ApplyT(func(v *Alerting) pulumi.Float64Output { return v.Delay }).(pulumi.Float64Output)
}

// Email to contact
func (o AlertingOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *Alerting) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// Formatted monthly threshold for this alerting
func (o AlertingOutput) FormattedMonthlyThreshold() AlertingFormattedMonthlyThresholdOutput {
	return o.ApplyT(func(v *Alerting) AlertingFormattedMonthlyThresholdOutput { return v.FormattedMonthlyThreshold }).(AlertingFormattedMonthlyThresholdOutput)
}

// Monthly threshold for this alerting in currency
func (o AlertingOutput) MonthlyThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v *Alerting) pulumi.Float64Output { return v.MonthlyThreshold }).(pulumi.Float64Output)
}

// The id of the public cloud project. If omitted,
// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used.
func (o AlertingOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *Alerting) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

type AlertingArrayOutput struct{ *pulumi.OutputState }

func (AlertingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Alerting)(nil)).Elem()
}

func (o AlertingArrayOutput) ToAlertingArrayOutput() AlertingArrayOutput {
	return o
}

func (o AlertingArrayOutput) ToAlertingArrayOutputWithContext(ctx context.Context) AlertingArrayOutput {
	return o
}

func (o AlertingArrayOutput) Index(i pulumi.IntInput) AlertingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Alerting {
		return vs[0].([]*Alerting)[vs[1].(int)]
	}).(AlertingOutput)
}

type AlertingMapOutput struct{ *pulumi.OutputState }

func (AlertingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Alerting)(nil)).Elem()
}

func (o AlertingMapOutput) ToAlertingMapOutput() AlertingMapOutput {
	return o
}

func (o AlertingMapOutput) ToAlertingMapOutputWithContext(ctx context.Context) AlertingMapOutput {
	return o
}

func (o AlertingMapOutput) MapIndex(k pulumi.StringInput) AlertingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Alerting {
		return vs[0].(map[string]*Alerting)[vs[1].(string)]
	}).(AlertingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingInput)(nil)).Elem(), &Alerting{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingArrayInput)(nil)).Elem(), AlertingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertingMapInput)(nil)).Elem(), AlertingMap{})
	pulumi.RegisterOutputType(AlertingOutput{})
	pulumi.RegisterOutputType(AlertingArrayOutput{})
	pulumi.RegisterOutputType(AlertingMapOutput{})
}
