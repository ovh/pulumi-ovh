// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetOpenSearchUser(ctx *pulumi.Context, args *GetOpenSearchUserArgs, opts ...pulumi.InvokeOption) (*GetOpenSearchUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOpenSearchUserResult
	err := ctx.Invoke("ovh:CloudProject/getOpenSearchUser:getOpenSearchUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpenSearchUser.
type GetOpenSearchUserArgs struct {
	ClusterId   string `pulumi:"clusterId"`
	Name        string `pulumi:"name"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getOpenSearchUser.
type GetOpenSearchUserResult struct {
	Acls      []GetOpenSearchUserAcl `pulumi:"acls"`
	ClusterId string                 `pulumi:"clusterId"`
	CreatedAt string                 `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id          string `pulumi:"id"`
	Name        string `pulumi:"name"`
	ServiceName string `pulumi:"serviceName"`
	Status      string `pulumi:"status"`
}

func GetOpenSearchUserOutput(ctx *pulumi.Context, args GetOpenSearchUserOutputArgs, opts ...pulumi.InvokeOption) GetOpenSearchUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetOpenSearchUserResultOutput, error) {
			args := v.(GetOpenSearchUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getOpenSearchUser:getOpenSearchUser", args, GetOpenSearchUserResultOutput{}, options).(GetOpenSearchUserResultOutput), nil
		}).(GetOpenSearchUserResultOutput)
}

// A collection of arguments for invoking getOpenSearchUser.
type GetOpenSearchUserOutputArgs struct {
	ClusterId   pulumi.StringInput `pulumi:"clusterId"`
	Name        pulumi.StringInput `pulumi:"name"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetOpenSearchUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenSearchUserArgs)(nil)).Elem()
}

// A collection of values returned by getOpenSearchUser.
type GetOpenSearchUserResultOutput struct{ *pulumi.OutputState }

func (GetOpenSearchUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenSearchUserResult)(nil)).Elem()
}

func (o GetOpenSearchUserResultOutput) ToGetOpenSearchUserResultOutput() GetOpenSearchUserResultOutput {
	return o
}

func (o GetOpenSearchUserResultOutput) ToGetOpenSearchUserResultOutputWithContext(ctx context.Context) GetOpenSearchUserResultOutput {
	return o
}

func (o GetOpenSearchUserResultOutput) Acls() GetOpenSearchUserAclArrayOutput {
	return o.ApplyT(func(v GetOpenSearchUserResult) []GetOpenSearchUserAcl { return v.Acls }).(GetOpenSearchUserAclArrayOutput)
}

func (o GetOpenSearchUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenSearchUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetOpenSearchUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenSearchUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOpenSearchUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenSearchUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOpenSearchUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenSearchUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOpenSearchUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenSearchUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetOpenSearchUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenSearchUserResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOpenSearchUserResultOutput{})
}
