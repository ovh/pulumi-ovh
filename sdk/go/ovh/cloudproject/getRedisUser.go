// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRedisUser(ctx *pulumi.Context, args *GetRedisUserArgs, opts ...pulumi.InvokeOption) (*GetRedisUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRedisUserResult
	err := ctx.Invoke("ovh:CloudProject/getRedisUser:getRedisUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRedisUser.
type GetRedisUserArgs struct {
	ClusterId   string `pulumi:"clusterId"`
	Name        string `pulumi:"name"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getRedisUser.
type GetRedisUserResult struct {
	Categories []string `pulumi:"categories"`
	Channels   []string `pulumi:"channels"`
	ClusterId  string   `pulumi:"clusterId"`
	Commands   []string `pulumi:"commands"`
	CreatedAt  string   `pulumi:"createdAt"`
	// The provider-assigned unique ID for this managed resource.
	Id          string   `pulumi:"id"`
	Keys        []string `pulumi:"keys"`
	Name        string   `pulumi:"name"`
	ServiceName string   `pulumi:"serviceName"`
	Status      string   `pulumi:"status"`
}

func GetRedisUserOutput(ctx *pulumi.Context, args GetRedisUserOutputArgs, opts ...pulumi.InvokeOption) GetRedisUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRedisUserResultOutput, error) {
			args := v.(GetRedisUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getRedisUser:getRedisUser", args, GetRedisUserResultOutput{}, options).(GetRedisUserResultOutput), nil
		}).(GetRedisUserResultOutput)
}

// A collection of arguments for invoking getRedisUser.
type GetRedisUserOutputArgs struct {
	ClusterId   pulumi.StringInput `pulumi:"clusterId"`
	Name        pulumi.StringInput `pulumi:"name"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetRedisUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisUserArgs)(nil)).Elem()
}

// A collection of values returned by getRedisUser.
type GetRedisUserResultOutput struct{ *pulumi.OutputState }

func (GetRedisUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRedisUserResult)(nil)).Elem()
}

func (o GetRedisUserResultOutput) ToGetRedisUserResultOutput() GetRedisUserResultOutput {
	return o
}

func (o GetRedisUserResultOutput) ToGetRedisUserResultOutputWithContext(ctx context.Context) GetRedisUserResultOutput {
	return o
}

func (o GetRedisUserResultOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisUserResult) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

func (o GetRedisUserResultOutput) Channels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisUserResult) []string { return v.Channels }).(pulumi.StringArrayOutput)
}

func (o GetRedisUserResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisUserResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetRedisUserResultOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisUserResult) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

func (o GetRedisUserResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisUserResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRedisUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRedisUserResultOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRedisUserResult) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o GetRedisUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisUserResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRedisUserResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisUserResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetRedisUserResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetRedisUserResult) string { return v.Status }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRedisUserResultOutput{})
}
