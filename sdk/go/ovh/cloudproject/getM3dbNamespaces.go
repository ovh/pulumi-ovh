// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetM3dbNamespaces(ctx *pulumi.Context, args *GetM3dbNamespacesArgs, opts ...pulumi.InvokeOption) (*GetM3dbNamespacesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetM3dbNamespacesResult
	err := ctx.Invoke("ovh:CloudProject/getM3dbNamespaces:getM3dbNamespaces", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getM3dbNamespaces.
type GetM3dbNamespacesArgs struct {
	ClusterId   string `pulumi:"clusterId"`
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getM3dbNamespaces.
type GetM3dbNamespacesResult struct {
	ClusterId string `pulumi:"clusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id           string   `pulumi:"id"`
	NamespaceIds []string `pulumi:"namespaceIds"`
	ServiceName  string   `pulumi:"serviceName"`
}

func GetM3dbNamespacesOutput(ctx *pulumi.Context, args GetM3dbNamespacesOutputArgs, opts ...pulumi.InvokeOption) GetM3dbNamespacesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetM3dbNamespacesResultOutput, error) {
			args := v.(GetM3dbNamespacesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getM3dbNamespaces:getM3dbNamespaces", args, GetM3dbNamespacesResultOutput{}, options).(GetM3dbNamespacesResultOutput), nil
		}).(GetM3dbNamespacesResultOutput)
}

// A collection of arguments for invoking getM3dbNamespaces.
type GetM3dbNamespacesOutputArgs struct {
	ClusterId   pulumi.StringInput `pulumi:"clusterId"`
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetM3dbNamespacesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3dbNamespacesArgs)(nil)).Elem()
}

// A collection of values returned by getM3dbNamespaces.
type GetM3dbNamespacesResultOutput struct{ *pulumi.OutputState }

func (GetM3dbNamespacesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetM3dbNamespacesResult)(nil)).Elem()
}

func (o GetM3dbNamespacesResultOutput) ToGetM3dbNamespacesResultOutput() GetM3dbNamespacesResultOutput {
	return o
}

func (o GetM3dbNamespacesResultOutput) ToGetM3dbNamespacesResultOutputWithContext(ctx context.Context) GetM3dbNamespacesResultOutput {
	return o
}

func (o GetM3dbNamespacesResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbNamespacesResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetM3dbNamespacesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbNamespacesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetM3dbNamespacesResultOutput) NamespaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetM3dbNamespacesResult) []string { return v.NamespaceIds }).(pulumi.StringArrayOutput)
}

func (o GetM3dbNamespacesResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetM3dbNamespacesResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetM3dbNamespacesResultOutput{})
}
