// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudproject

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// **This datasource uses a Beta API**
// Use this data source to get the instance of a public cloud project.
//
// ## Example Usage
//
// To get information of an instance:
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/cloudproject"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudproject.GetInstance(ctx, &cloudproject.GetInstanceArgs{
//				InstanceId:  "ZZZZZ",
//				Region:      "XXXX",
//				ServiceName: "YYYY",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupInstance(ctx *pulumi.Context, args *LookupInstanceArgs, opts ...pulumi.InvokeOption) (*LookupInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupInstanceResult
	err := ctx.Invoke("ovh:CloudProject/getInstance:getInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstance.
type LookupInstanceArgs struct {
	// Instance id
	InstanceId string `pulumi:"instanceId"`
	// Instance region
	Region string `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getInstance.
type LookupInstanceResult struct {
	// Instance IP addresses
	Addresses []GetInstanceAddress `pulumi:"addresses"`
	// Volumes attached to the instance
	AttachedVolumes []GetInstanceAttachedVolume `pulumi:"attachedVolumes"`
	// Availability zone of the instance
	AvailabilityZone string `pulumi:"availabilityZone"`
	// Flavor id
	FlavorId string `pulumi:"flavorId"`
	// Flavor name
	FlavorName string `pulumi:"flavorName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Image id
	ImageId    string `pulumi:"imageId"`
	InstanceId string `pulumi:"instanceId"`
	// Instance name
	Name        string `pulumi:"name"`
	Region      string `pulumi:"region"`
	ServiceName string `pulumi:"serviceName"`
	// SSH Keypair
	SshKey string `pulumi:"sshKey"`
	// Instance task state
	TaskState string `pulumi:"taskState"`
}

func LookupInstanceOutput(ctx *pulumi.Context, args LookupInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupInstanceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupInstanceResultOutput, error) {
			args := v.(LookupInstanceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:CloudProject/getInstance:getInstance", args, LookupInstanceResultOutput{}, options).(LookupInstanceResultOutput), nil
		}).(LookupInstanceResultOutput)
}

// A collection of arguments for invoking getInstance.
type LookupInstanceOutputArgs struct {
	// Instance id
	InstanceId pulumi.StringInput `pulumi:"instanceId"`
	// Instance region
	Region pulumi.StringInput `pulumi:"region"`
	// The id of the public cloud project. If omitted,
	// the `OVH_CLOUD_PROJECT_SERVICE` environment variable is used
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getInstance.
type LookupInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupInstanceResult)(nil)).Elem()
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutput() LookupInstanceResultOutput {
	return o
}

func (o LookupInstanceResultOutput) ToLookupInstanceResultOutputWithContext(ctx context.Context) LookupInstanceResultOutput {
	return o
}

// Instance IP addresses
func (o LookupInstanceResultOutput) Addresses() GetInstanceAddressArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceAddress { return v.Addresses }).(GetInstanceAddressArrayOutput)
}

// Volumes attached to the instance
func (o LookupInstanceResultOutput) AttachedVolumes() GetInstanceAttachedVolumeArrayOutput {
	return o.ApplyT(func(v LookupInstanceResult) []GetInstanceAttachedVolume { return v.AttachedVolumes }).(GetInstanceAttachedVolumeArrayOutput)
}

// Availability zone of the instance
func (o LookupInstanceResultOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Flavor id
func (o LookupInstanceResultOutput) FlavorId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.FlavorId }).(pulumi.StringOutput)
}

// Flavor name
func (o LookupInstanceResultOutput) FlavorName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.FlavorName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Image id
func (o LookupInstanceResultOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

// Instance name
func (o LookupInstanceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupInstanceResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// SSH Keypair
func (o LookupInstanceResultOutput) SshKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.SshKey }).(pulumi.StringOutput)
}

// Instance task state
func (o LookupInstanceResultOutput) TaskState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupInstanceResult) string { return v.TaskState }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupInstanceResultOutput{})
}
