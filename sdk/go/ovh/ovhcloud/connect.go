// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovhcloud

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an Ovhcloud Connect product
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/ovhcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovhcloud.Connect(ctx, &ovhcloud.ConnectArgs{
//				ServiceName: "XXX",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func Connect(ctx *pulumi.Context, args *ConnectArgs, opts ...pulumi.InvokeOption) (*ConnectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv ConnectResult
	err := ctx.Invoke("ovh:OVHcloud/connect:Connect", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking Connect.
type ConnectArgs struct {
	// The uuid of the Ovhcloud connect.
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by Connect.
type ConnectResult struct {
	// Service bandwidth
	Bandwidth string `pulumi:"bandwidth"`
	// Service description
	Description string `pulumi:"description"`
	// IAM resource information
	Iam ConnectIam `pulumi:"iam"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of interfaces linked to a service
	InterfaceLists []float64 `pulumi:"interfaceLists"`
	// Pop reference where the service is delivered
	Pop string `pulumi:"pop"`
	// Port quantity
	PortQuantity string `pulumi:"portQuantity"`
	// Product name of the service
	Product string `pulumi:"product"`
	// Service provider
	ProviderName string `pulumi:"providerName"`
	// Service name
	ServiceName string `pulumi:"serviceName"`
	// Service status
	Status string `pulumi:"status"`
	// uuid of the Ovhcloud Connect service
	Uuid string `pulumi:"uuid"`
	// vrack linked to the service
	Vrack string `pulumi:"vrack"`
}

func ConnectOutput(ctx *pulumi.Context, args ConnectOutputArgs, opts ...pulumi.InvokeOption) ConnectResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (ConnectResultOutput, error) {
			args := v.(ConnectArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:OVHcloud/connect:Connect", args, ConnectResultOutput{}, options).(ConnectResultOutput), nil
		}).(ConnectResultOutput)
}

// A collection of arguments for invoking Connect.
type ConnectOutputArgs struct {
	// The uuid of the Ovhcloud connect.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (ConnectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectArgs)(nil)).Elem()
}

// A collection of values returned by Connect.
type ConnectResultOutput struct{ *pulumi.OutputState }

func (ConnectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectResult)(nil)).Elem()
}

func (o ConnectResultOutput) ToConnectResultOutput() ConnectResultOutput {
	return o
}

func (o ConnectResultOutput) ToConnectResultOutputWithContext(ctx context.Context) ConnectResultOutput {
	return o
}

// Service bandwidth
func (o ConnectResultOutput) Bandwidth() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.Bandwidth }).(pulumi.StringOutput)
}

// Service description
func (o ConnectResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.Description }).(pulumi.StringOutput)
}

// IAM resource information
func (o ConnectResultOutput) Iam() ConnectIamOutput {
	return o.ApplyT(func(v ConnectResult) ConnectIam { return v.Iam }).(ConnectIamOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o ConnectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of interfaces linked to a service
func (o ConnectResultOutput) InterfaceLists() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v ConnectResult) []float64 { return v.InterfaceLists }).(pulumi.Float64ArrayOutput)
}

// Pop reference where the service is delivered
func (o ConnectResultOutput) Pop() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.Pop }).(pulumi.StringOutput)
}

// Port quantity
func (o ConnectResultOutput) PortQuantity() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.PortQuantity }).(pulumi.StringOutput)
}

// Product name of the service
func (o ConnectResultOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.Product }).(pulumi.StringOutput)
}

// Service provider
func (o ConnectResultOutput) ProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.ProviderName }).(pulumi.StringOutput)
}

// Service name
func (o ConnectResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

// Service status
func (o ConnectResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.Status }).(pulumi.StringOutput)
}

// uuid of the Ovhcloud Connect service
func (o ConnectResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.Uuid }).(pulumi.StringOutput)
}

// vrack linked to the service
func (o ConnectResultOutput) Vrack() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectResult) string { return v.Vrack }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectResultOutput{})
}
