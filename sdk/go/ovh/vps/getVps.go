// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vps

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupVps(ctx *pulumi.Context, args *LookupVpsArgs, opts ...pulumi.InvokeOption) (*LookupVpsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpsResult
	err := ctx.Invoke("ovh:Vps/getVps:getVps", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVps.
type LookupVpsArgs struct {
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getVps.
type LookupVpsResult struct {
	VpsURN      string            `pulumi:"VpsURN"`
	Cluster     string            `pulumi:"cluster"`
	Datacenter  map[string]string `pulumi:"datacenter"`
	Displayname string            `pulumi:"displayname"`
	// The provider-assigned unique ID for this managed resource.
	Id            string            `pulumi:"id"`
	Ips           []string          `pulumi:"ips"`
	Keymap        string            `pulumi:"keymap"`
	Memory        int               `pulumi:"memory"`
	Model         map[string]string `pulumi:"model"`
	Name          string            `pulumi:"name"`
	Netbootmode   string            `pulumi:"netbootmode"`
	Offertype     string            `pulumi:"offertype"`
	ServiceName   string            `pulumi:"serviceName"`
	Slamonitoring bool              `pulumi:"slamonitoring"`
	State         string            `pulumi:"state"`
	Type          string            `pulumi:"type"`
	Vcore         int               `pulumi:"vcore"`
	Zone          string            `pulumi:"zone"`
}

func LookupVpsOutput(ctx *pulumi.Context, args LookupVpsOutputArgs, opts ...pulumi.InvokeOption) LookupVpsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupVpsResultOutput, error) {
			args := v.(LookupVpsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:Vps/getVps:getVps", args, LookupVpsResultOutput{}, options).(LookupVpsResultOutput), nil
		}).(LookupVpsResultOutput)
}

// A collection of arguments for invoking getVps.
type LookupVpsOutputArgs struct {
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (LookupVpsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpsArgs)(nil)).Elem()
}

// A collection of values returned by getVps.
type LookupVpsResultOutput struct{ *pulumi.OutputState }

func (LookupVpsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpsResult)(nil)).Elem()
}

func (o LookupVpsResultOutput) ToLookupVpsResultOutput() LookupVpsResultOutput {
	return o
}

func (o LookupVpsResultOutput) ToLookupVpsResultOutputWithContext(ctx context.Context) LookupVpsResultOutput {
	return o
}

func (o LookupVpsResultOutput) VpsURN() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.VpsURN }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.Cluster }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) Datacenter() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpsResult) map[string]string { return v.Datacenter }).(pulumi.StringMapOutput)
}

func (o LookupVpsResultOutput) Displayname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.Displayname }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVpsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpsResult) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o LookupVpsResultOutput) Keymap() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.Keymap }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpsResult) int { return v.Memory }).(pulumi.IntOutput)
}

func (o LookupVpsResultOutput) Model() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpsResult) map[string]string { return v.Model }).(pulumi.StringMapOutput)
}

func (o LookupVpsResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) Netbootmode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.Netbootmode }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) Offertype() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.Offertype }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) Slamonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVpsResult) bool { return v.Slamonitoring }).(pulumi.BoolOutput)
}

func (o LookupVpsResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.State }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o LookupVpsResultOutput) Vcore() pulumi.IntOutput {
	return o.ApplyT(func(v LookupVpsResult) int { return v.Vcore }).(pulumi.IntOutput)
}

func (o LookupVpsResultOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpsResult) string { return v.Zone }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpsResultOutput{})
}
