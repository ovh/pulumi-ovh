// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"errors"
	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an ACL rule for an EFS share.
//
// Please take a look at the list of available `accessLevel` values in the `Required` section in order to know the list of supported access level configurations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			efs, err := ovh.GetStorageEfs(ctx, &ovh.GetStorageEfsArgs{
//				ServiceName: "XXX",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			share, err := ovh.NewStorageEfsShare(ctx, "share", &ovh.StorageEfsShareArgs{
//				ServiceName: pulumi.String(efs.ServiceName),
//				Name:        pulumi.String("share"),
//				Description: pulumi.String("My share"),
//				Protocol:    pulumi.String("NFS"),
//				Size:        pulumi.Float64(100),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ovh.NewStorageEfsShareAcl(ctx, "acl", &ovh.StorageEfsShareAclArgs{
//				ServiceName: pulumi.String(efs.ServiceName),
//				ShareId:     share.ID(),
//				AccessLevel: pulumi.String("ro"),
//				AccessTo:    pulumi.String("10.0.0.1"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type StorageEfsShareAcl struct {
	pulumi.CustomResourceState

	// Rule access level
	AccessLevel pulumi.StringOutput `pulumi:"accessLevel"`
	// Rule destination
	AccessTo pulumi.StringOutput `pulumi:"accessTo"`
	// Rule access type
	AccessType pulumi.StringOutput `pulumi:"accessType"`
	// Rule creation date
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Service name
	ServiceName pulumi.StringOutput `pulumi:"serviceName"`
	// Share ID
	ShareId pulumi.StringOutput `pulumi:"shareId"`
	// Rule status
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewStorageEfsShareAcl registers a new resource with the given unique name, arguments, and options.
func NewStorageEfsShareAcl(ctx *pulumi.Context,
	name string, args *StorageEfsShareAclArgs, opts ...pulumi.ResourceOption) (*StorageEfsShareAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessLevel == nil {
		return nil, errors.New("invalid value for required argument 'AccessLevel'")
	}
	if args.AccessTo == nil {
		return nil, errors.New("invalid value for required argument 'AccessTo'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	if args.ShareId == nil {
		return nil, errors.New("invalid value for required argument 'ShareId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource StorageEfsShareAcl
	err := ctx.RegisterResource("ovh:index/storageEfsShareAcl:StorageEfsShareAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStorageEfsShareAcl gets an existing StorageEfsShareAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStorageEfsShareAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StorageEfsShareAclState, opts ...pulumi.ResourceOption) (*StorageEfsShareAcl, error) {
	var resource StorageEfsShareAcl
	err := ctx.ReadResource("ovh:index/storageEfsShareAcl:StorageEfsShareAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StorageEfsShareAcl resources.
type storageEfsShareAclState struct {
	// Rule access level
	AccessLevel *string `pulumi:"accessLevel"`
	// Rule destination
	AccessTo *string `pulumi:"accessTo"`
	// Rule access type
	AccessType *string `pulumi:"accessType"`
	// Rule creation date
	CreatedAt *string `pulumi:"createdAt"`
	// Service name
	ServiceName *string `pulumi:"serviceName"`
	// Share ID
	ShareId *string `pulumi:"shareId"`
	// Rule status
	Status *string `pulumi:"status"`
}

type StorageEfsShareAclState struct {
	// Rule access level
	AccessLevel pulumi.StringPtrInput
	// Rule destination
	AccessTo pulumi.StringPtrInput
	// Rule access type
	AccessType pulumi.StringPtrInput
	// Rule creation date
	CreatedAt pulumi.StringPtrInput
	// Service name
	ServiceName pulumi.StringPtrInput
	// Share ID
	ShareId pulumi.StringPtrInput
	// Rule status
	Status pulumi.StringPtrInput
}

func (StorageEfsShareAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*storageEfsShareAclState)(nil)).Elem()
}

type storageEfsShareAclArgs struct {
	// Rule access level
	AccessLevel string `pulumi:"accessLevel"`
	// Rule destination
	AccessTo string `pulumi:"accessTo"`
	// Service name
	ServiceName string `pulumi:"serviceName"`
	// Share ID
	ShareId string `pulumi:"shareId"`
}

// The set of arguments for constructing a StorageEfsShareAcl resource.
type StorageEfsShareAclArgs struct {
	// Rule access level
	AccessLevel pulumi.StringInput
	// Rule destination
	AccessTo pulumi.StringInput
	// Service name
	ServiceName pulumi.StringInput
	// Share ID
	ShareId pulumi.StringInput
}

func (StorageEfsShareAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*storageEfsShareAclArgs)(nil)).Elem()
}

type StorageEfsShareAclInput interface {
	pulumi.Input

	ToStorageEfsShareAclOutput() StorageEfsShareAclOutput
	ToStorageEfsShareAclOutputWithContext(ctx context.Context) StorageEfsShareAclOutput
}

func (*StorageEfsShareAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageEfsShareAcl)(nil)).Elem()
}

func (i *StorageEfsShareAcl) ToStorageEfsShareAclOutput() StorageEfsShareAclOutput {
	return i.ToStorageEfsShareAclOutputWithContext(context.Background())
}

func (i *StorageEfsShareAcl) ToStorageEfsShareAclOutputWithContext(ctx context.Context) StorageEfsShareAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEfsShareAclOutput)
}

// StorageEfsShareAclArrayInput is an input type that accepts StorageEfsShareAclArray and StorageEfsShareAclArrayOutput values.
// You can construct a concrete instance of `StorageEfsShareAclArrayInput` via:
//
//	StorageEfsShareAclArray{ StorageEfsShareAclArgs{...} }
type StorageEfsShareAclArrayInput interface {
	pulumi.Input

	ToStorageEfsShareAclArrayOutput() StorageEfsShareAclArrayOutput
	ToStorageEfsShareAclArrayOutputWithContext(context.Context) StorageEfsShareAclArrayOutput
}

type StorageEfsShareAclArray []StorageEfsShareAclInput

func (StorageEfsShareAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StorageEfsShareAcl)(nil)).Elem()
}

func (i StorageEfsShareAclArray) ToStorageEfsShareAclArrayOutput() StorageEfsShareAclArrayOutput {
	return i.ToStorageEfsShareAclArrayOutputWithContext(context.Background())
}

func (i StorageEfsShareAclArray) ToStorageEfsShareAclArrayOutputWithContext(ctx context.Context) StorageEfsShareAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEfsShareAclArrayOutput)
}

// StorageEfsShareAclMapInput is an input type that accepts StorageEfsShareAclMap and StorageEfsShareAclMapOutput values.
// You can construct a concrete instance of `StorageEfsShareAclMapInput` via:
//
//	StorageEfsShareAclMap{ "key": StorageEfsShareAclArgs{...} }
type StorageEfsShareAclMapInput interface {
	pulumi.Input

	ToStorageEfsShareAclMapOutput() StorageEfsShareAclMapOutput
	ToStorageEfsShareAclMapOutputWithContext(context.Context) StorageEfsShareAclMapOutput
}

type StorageEfsShareAclMap map[string]StorageEfsShareAclInput

func (StorageEfsShareAclMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StorageEfsShareAcl)(nil)).Elem()
}

func (i StorageEfsShareAclMap) ToStorageEfsShareAclMapOutput() StorageEfsShareAclMapOutput {
	return i.ToStorageEfsShareAclMapOutputWithContext(context.Background())
}

func (i StorageEfsShareAclMap) ToStorageEfsShareAclMapOutputWithContext(ctx context.Context) StorageEfsShareAclMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StorageEfsShareAclMapOutput)
}

type StorageEfsShareAclOutput struct{ *pulumi.OutputState }

func (StorageEfsShareAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StorageEfsShareAcl)(nil)).Elem()
}

func (o StorageEfsShareAclOutput) ToStorageEfsShareAclOutput() StorageEfsShareAclOutput {
	return o
}

func (o StorageEfsShareAclOutput) ToStorageEfsShareAclOutputWithContext(ctx context.Context) StorageEfsShareAclOutput {
	return o
}

// Rule access level
func (o StorageEfsShareAclOutput) AccessLevel() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageEfsShareAcl) pulumi.StringOutput { return v.AccessLevel }).(pulumi.StringOutput)
}

// Rule destination
func (o StorageEfsShareAclOutput) AccessTo() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageEfsShareAcl) pulumi.StringOutput { return v.AccessTo }).(pulumi.StringOutput)
}

// Rule access type
func (o StorageEfsShareAclOutput) AccessType() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageEfsShareAcl) pulumi.StringOutput { return v.AccessType }).(pulumi.StringOutput)
}

// Rule creation date
func (o StorageEfsShareAclOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageEfsShareAcl) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Service name
func (o StorageEfsShareAclOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageEfsShareAcl) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

// Share ID
func (o StorageEfsShareAclOutput) ShareId() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageEfsShareAcl) pulumi.StringOutput { return v.ShareId }).(pulumi.StringOutput)
}

// Rule status
func (o StorageEfsShareAclOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *StorageEfsShareAcl) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type StorageEfsShareAclArrayOutput struct{ *pulumi.OutputState }

func (StorageEfsShareAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StorageEfsShareAcl)(nil)).Elem()
}

func (o StorageEfsShareAclArrayOutput) ToStorageEfsShareAclArrayOutput() StorageEfsShareAclArrayOutput {
	return o
}

func (o StorageEfsShareAclArrayOutput) ToStorageEfsShareAclArrayOutputWithContext(ctx context.Context) StorageEfsShareAclArrayOutput {
	return o
}

func (o StorageEfsShareAclArrayOutput) Index(i pulumi.IntInput) StorageEfsShareAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StorageEfsShareAcl {
		return vs[0].([]*StorageEfsShareAcl)[vs[1].(int)]
	}).(StorageEfsShareAclOutput)
}

type StorageEfsShareAclMapOutput struct{ *pulumi.OutputState }

func (StorageEfsShareAclMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StorageEfsShareAcl)(nil)).Elem()
}

func (o StorageEfsShareAclMapOutput) ToStorageEfsShareAclMapOutput() StorageEfsShareAclMapOutput {
	return o
}

func (o StorageEfsShareAclMapOutput) ToStorageEfsShareAclMapOutputWithContext(ctx context.Context) StorageEfsShareAclMapOutput {
	return o
}

func (o StorageEfsShareAclMapOutput) MapIndex(k pulumi.StringInput) StorageEfsShareAclOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StorageEfsShareAcl {
		return vs[0].(map[string]*StorageEfsShareAcl)[vs[1].(string)]
	}).(StorageEfsShareAclOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StorageEfsShareAclInput)(nil)).Elem(), &StorageEfsShareAcl{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageEfsShareAclArrayInput)(nil)).Elem(), StorageEfsShareAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StorageEfsShareAclMapInput)(nil)).Elem(), StorageEfsShareAclMap{})
	pulumi.RegisterOutputType(StorageEfsShareAclOutput{})
	pulumi.RegisterOutputType(StorageEfsShareAclArrayOutput{})
	pulumi.RegisterOutputType(StorageEfsShareAclMapOutput{})
}
