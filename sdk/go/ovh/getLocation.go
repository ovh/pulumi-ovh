// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ovh

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get available regions and their availability zones
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ovh.GetLocation(ctx, &ovh.GetLocationArgs{
//				Name: "eu-west-par",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLocation(ctx *pulumi.Context, args *GetLocationArgs, opts ...pulumi.InvokeOption) (*GetLocationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLocationResult
	err := ctx.Invoke("ovh:index/getLocation:getLocation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLocation.
type GetLocationArgs struct {
	// Name
	Name string `pulumi:"name"`
}

// A collection of values returned by getLocation.
type GetLocationResult struct {
	// List of availability zones for the region
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// Cardinal direction where the region is located
	CardinalPoint string `pulumi:"cardinalPoint"`
	// ISO code of the city
	CityCode string `pulumi:"cityCode"`
	// Geographical latitude of the city
	CityLatitude float64 `pulumi:"cityLatitude"`
	// Geographical longitude of the city
	CityLongitude float64 `pulumi:"cityLongitude"`
	// Full name of the city
	CityName string `pulumi:"cityName"`
	// Region's short code
	Code string `pulumi:"code"`
	// ISO code of the country
	CountryCode string `pulumi:"countryCode"`
	// Full name of the country
	CountryName string `pulumi:"countryName"`
	// Short code representing the geographical area
	GeographyCode string `pulumi:"geographyCode"`
	// Name of the geographical area
	GeographyName string `pulumi:"geographyName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Location of the region
	Location string `pulumi:"location"`
	// Name
	Name string `pulumi:"name"`
	// Year the region was opened
	OpeningYear float64 `pulumi:"openingYear"`
	// Specific typology of the region
	SpecificType string `pulumi:"specificType"`
	// General typology of the region
	Type string `pulumi:"type"`
}

func GetLocationOutput(ctx *pulumi.Context, args GetLocationOutputArgs, opts ...pulumi.InvokeOption) GetLocationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLocationResultOutput, error) {
			args := v.(GetLocationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:index/getLocation:getLocation", args, GetLocationResultOutput{}, options).(GetLocationResultOutput), nil
		}).(GetLocationResultOutput)
}

// A collection of arguments for invoking getLocation.
type GetLocationOutputArgs struct {
	// Name
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetLocationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationArgs)(nil)).Elem()
}

// A collection of values returned by getLocation.
type GetLocationResultOutput struct{ *pulumi.OutputState }

func (GetLocationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLocationResult)(nil)).Elem()
}

func (o GetLocationResultOutput) ToGetLocationResultOutput() GetLocationResultOutput {
	return o
}

func (o GetLocationResultOutput) ToGetLocationResultOutputWithContext(ctx context.Context) GetLocationResultOutput {
	return o
}

// List of availability zones for the region
func (o GetLocationResultOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLocationResult) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// Cardinal direction where the region is located
func (o GetLocationResultOutput) CardinalPoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.CardinalPoint }).(pulumi.StringOutput)
}

// ISO code of the city
func (o GetLocationResultOutput) CityCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.CityCode }).(pulumi.StringOutput)
}

// Geographical latitude of the city
func (o GetLocationResultOutput) CityLatitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetLocationResult) float64 { return v.CityLatitude }).(pulumi.Float64Output)
}

// Geographical longitude of the city
func (o GetLocationResultOutput) CityLongitude() pulumi.Float64Output {
	return o.ApplyT(func(v GetLocationResult) float64 { return v.CityLongitude }).(pulumi.Float64Output)
}

// Full name of the city
func (o GetLocationResultOutput) CityName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.CityName }).(pulumi.StringOutput)
}

// Region's short code
func (o GetLocationResultOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.Code }).(pulumi.StringOutput)
}

// ISO code of the country
func (o GetLocationResultOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.CountryCode }).(pulumi.StringOutput)
}

// Full name of the country
func (o GetLocationResultOutput) CountryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.CountryName }).(pulumi.StringOutput)
}

// Short code representing the geographical area
func (o GetLocationResultOutput) GeographyCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.GeographyCode }).(pulumi.StringOutput)
}

// Name of the geographical area
func (o GetLocationResultOutput) GeographyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.GeographyName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLocationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Location of the region
func (o GetLocationResultOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.Location }).(pulumi.StringOutput)
}

// Name
func (o GetLocationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Year the region was opened
func (o GetLocationResultOutput) OpeningYear() pulumi.Float64Output {
	return o.ApplyT(func(v GetLocationResult) float64 { return v.OpeningYear }).(pulumi.Float64Output)
}

// Specific typology of the region
func (o GetLocationResultOutput) SpecificType() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.SpecificType }).(pulumi.StringOutput)
}

// General typology of the region
func (o GetLocationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLocationResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLocationResultOutput{})
}
