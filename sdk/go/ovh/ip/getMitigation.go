// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ip

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this resource to retrieve information about an IP permanent mitigation.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/ovh/pulumi-ovh/sdk/go/ovh/ip"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ip.GetMitigation(ctx, &ip.GetMitigationArgs{
//				Ip:             "XXXXXX",
//				IpOnMitigation: "XXXXXX",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupMitigation(ctx *pulumi.Context, args *LookupMitigationArgs, opts ...pulumi.InvokeOption) (*LookupMitigationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMitigationResult
	err := ctx.Invoke("ovh:Ip/getMitigation:getMitigation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMitigation.
type LookupMitigationArgs struct {
	// The IP or the CIDR
	Ip string `pulumi:"ip"`
	// IPv4 address
	IpOnMitigation string `pulumi:"ipOnMitigation"`
}

// A collection of values returned by getMitigation.
type LookupMitigationResult struct {
	// Set on true if the IP is on auto-mitigation
	Auto bool `pulumi:"auto"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The IP or the CIDR
	Ip string `pulumi:"ip"`
	// IPv4 address
	// * ` permanent  ` - Set on true if the IP is on permanent mitigation
	IpOnMitigation string `pulumi:"ipOnMitigation"`
	Permanent      bool   `pulumi:"permanent"`
	// Current state of the IP on mitigation
	State string `pulumi:"state"`
}

func LookupMitigationOutput(ctx *pulumi.Context, args LookupMitigationOutputArgs, opts ...pulumi.InvokeOption) LookupMitigationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupMitigationResultOutput, error) {
			args := v.(LookupMitigationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:Ip/getMitigation:getMitigation", args, LookupMitigationResultOutput{}, options).(LookupMitigationResultOutput), nil
		}).(LookupMitigationResultOutput)
}

// A collection of arguments for invoking getMitigation.
type LookupMitigationOutputArgs struct {
	// The IP or the CIDR
	Ip pulumi.StringInput `pulumi:"ip"`
	// IPv4 address
	IpOnMitigation pulumi.StringInput `pulumi:"ipOnMitigation"`
}

func (LookupMitigationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMitigationArgs)(nil)).Elem()
}

// A collection of values returned by getMitigation.
type LookupMitigationResultOutput struct{ *pulumi.OutputState }

func (LookupMitigationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMitigationResult)(nil)).Elem()
}

func (o LookupMitigationResultOutput) ToLookupMitigationResultOutput() LookupMitigationResultOutput {
	return o
}

func (o LookupMitigationResultOutput) ToLookupMitigationResultOutputWithContext(ctx context.Context) LookupMitigationResultOutput {
	return o
}

// Set on true if the IP is on auto-mitigation
func (o LookupMitigationResultOutput) Auto() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMitigationResult) bool { return v.Auto }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMitigationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMitigationResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IP or the CIDR
func (o LookupMitigationResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMitigationResult) string { return v.Ip }).(pulumi.StringOutput)
}

// IPv4 address
// * ` permanent  ` - Set on true if the IP is on permanent mitigation
func (o LookupMitigationResultOutput) IpOnMitigation() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMitigationResult) string { return v.IpOnMitigation }).(pulumi.StringOutput)
}

func (o LookupMitigationResultOutput) Permanent() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupMitigationResult) bool { return v.Permanent }).(pulumi.BoolOutput)
}

// Current state of the IP on mitigation
func (o LookupMitigationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMitigationResult) string { return v.State }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMitigationResultOutput{})
}
