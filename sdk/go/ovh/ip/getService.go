// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ip

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/v2/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetService(ctx *pulumi.Context, args *GetServiceArgs, opts ...pulumi.InvokeOption) (*GetServiceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetServiceResult
	err := ctx.Invoke("ovh:Ip/getService:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getService.
type GetServiceArgs struct {
	ServiceName string `pulumi:"serviceName"`
}

// A collection of values returned by getService.
type GetServiceResult struct {
	CanBeTerminated bool   `pulumi:"canBeTerminated"`
	Country         string `pulumi:"country"`
	Description     string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id             string               `pulumi:"id"`
	Ip             string               `pulumi:"ip"`
	OrganisationId string               `pulumi:"organisationId"`
	RoutedTos      []GetServiceRoutedTo `pulumi:"routedTos"`
	ServiceName    string               `pulumi:"serviceName"`
	Type           string               `pulumi:"type"`
}

func GetServiceOutput(ctx *pulumi.Context, args GetServiceOutputArgs, opts ...pulumi.InvokeOption) GetServiceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetServiceResultOutput, error) {
			args := v.(GetServiceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("ovh:Ip/getService:getService", args, GetServiceResultOutput{}, options).(GetServiceResultOutput), nil
		}).(GetServiceResultOutput)
}

// A collection of arguments for invoking getService.
type GetServiceOutputArgs struct {
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceArgs)(nil)).Elem()
}

// A collection of values returned by getService.
type GetServiceResultOutput struct{ *pulumi.OutputState }

func (GetServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceResult)(nil)).Elem()
}

func (o GetServiceResultOutput) ToGetServiceResultOutput() GetServiceResultOutput {
	return o
}

func (o GetServiceResultOutput) ToGetServiceResultOutputWithContext(ctx context.Context) GetServiceResultOutput {
	return o
}

func (o GetServiceResultOutput) CanBeTerminated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceResult) bool { return v.CanBeTerminated }).(pulumi.BoolOutput)
}

func (o GetServiceResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.Country }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) OrganisationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.OrganisationId }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) RoutedTos() GetServiceRoutedToArrayOutput {
	return o.ApplyT(func(v GetServiceResult) []GetServiceRoutedTo { return v.RoutedTos }).(GetServiceRoutedToArrayOutput)
}

func (o GetServiceResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceResultOutput{})
}
