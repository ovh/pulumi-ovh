// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ip

import (
	"context"
	"reflect"

	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type IpServiceOrder struct {
	// date
	Date *string `pulumi:"date"`
	// Information about a Bill entry
	Details []IpServiceOrderDetail `pulumi:"details"`
	// expiration date
	ExpirationDate *string `pulumi:"expirationDate"`
	// order id
	OrderId *int `pulumi:"orderId"`
}

// IpServiceOrderInput is an input type that accepts IpServiceOrderArgs and IpServiceOrderOutput values.
// You can construct a concrete instance of `IpServiceOrderInput` via:
//
//	IpServiceOrderArgs{...}
type IpServiceOrderInput interface {
	pulumi.Input

	ToIpServiceOrderOutput() IpServiceOrderOutput
	ToIpServiceOrderOutputWithContext(context.Context) IpServiceOrderOutput
}

type IpServiceOrderArgs struct {
	// date
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Information about a Bill entry
	Details IpServiceOrderDetailArrayInput `pulumi:"details"`
	// expiration date
	ExpirationDate pulumi.StringPtrInput `pulumi:"expirationDate"`
	// order id
	OrderId pulumi.IntPtrInput `pulumi:"orderId"`
}

func (IpServiceOrderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServiceOrder)(nil)).Elem()
}

func (i IpServiceOrderArgs) ToIpServiceOrderOutput() IpServiceOrderOutput {
	return i.ToIpServiceOrderOutputWithContext(context.Background())
}

func (i IpServiceOrderArgs) ToIpServiceOrderOutputWithContext(ctx context.Context) IpServiceOrderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServiceOrderOutput)
}

// IpServiceOrderArrayInput is an input type that accepts IpServiceOrderArray and IpServiceOrderArrayOutput values.
// You can construct a concrete instance of `IpServiceOrderArrayInput` via:
//
//	IpServiceOrderArray{ IpServiceOrderArgs{...} }
type IpServiceOrderArrayInput interface {
	pulumi.Input

	ToIpServiceOrderArrayOutput() IpServiceOrderArrayOutput
	ToIpServiceOrderArrayOutputWithContext(context.Context) IpServiceOrderArrayOutput
}

type IpServiceOrderArray []IpServiceOrderInput

func (IpServiceOrderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServiceOrder)(nil)).Elem()
}

func (i IpServiceOrderArray) ToIpServiceOrderArrayOutput() IpServiceOrderArrayOutput {
	return i.ToIpServiceOrderArrayOutputWithContext(context.Background())
}

func (i IpServiceOrderArray) ToIpServiceOrderArrayOutputWithContext(ctx context.Context) IpServiceOrderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServiceOrderArrayOutput)
}

type IpServiceOrderOutput struct{ *pulumi.OutputState }

func (IpServiceOrderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServiceOrder)(nil)).Elem()
}

func (o IpServiceOrderOutput) ToIpServiceOrderOutput() IpServiceOrderOutput {
	return o
}

func (o IpServiceOrderOutput) ToIpServiceOrderOutputWithContext(ctx context.Context) IpServiceOrderOutput {
	return o
}

// date
func (o IpServiceOrderOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpServiceOrder) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Information about a Bill entry
func (o IpServiceOrderOutput) Details() IpServiceOrderDetailArrayOutput {
	return o.ApplyT(func(v IpServiceOrder) []IpServiceOrderDetail { return v.Details }).(IpServiceOrderDetailArrayOutput)
}

// expiration date
func (o IpServiceOrderOutput) ExpirationDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpServiceOrder) *string { return v.ExpirationDate }).(pulumi.StringPtrOutput)
}

// order id
func (o IpServiceOrderOutput) OrderId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpServiceOrder) *int { return v.OrderId }).(pulumi.IntPtrOutput)
}

type IpServiceOrderArrayOutput struct{ *pulumi.OutputState }

func (IpServiceOrderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServiceOrder)(nil)).Elem()
}

func (o IpServiceOrderArrayOutput) ToIpServiceOrderArrayOutput() IpServiceOrderArrayOutput {
	return o
}

func (o IpServiceOrderArrayOutput) ToIpServiceOrderArrayOutputWithContext(ctx context.Context) IpServiceOrderArrayOutput {
	return o
}

func (o IpServiceOrderArrayOutput) Index(i pulumi.IntInput) IpServiceOrderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpServiceOrder {
		return vs[0].([]IpServiceOrder)[vs[1].(int)]
	}).(IpServiceOrderOutput)
}

type IpServiceOrderDetail struct {
	// Custom description on your ip.
	Description *string `pulumi:"description"`
	// expiration date
	Domain *string `pulumi:"domain"`
	// order detail id
	OrderDetailId *int `pulumi:"orderDetailId"`
	// quantity
	Quantity *string `pulumi:"quantity"`
}

// IpServiceOrderDetailInput is an input type that accepts IpServiceOrderDetailArgs and IpServiceOrderDetailOutput values.
// You can construct a concrete instance of `IpServiceOrderDetailInput` via:
//
//	IpServiceOrderDetailArgs{...}
type IpServiceOrderDetailInput interface {
	pulumi.Input

	ToIpServiceOrderDetailOutput() IpServiceOrderDetailOutput
	ToIpServiceOrderDetailOutputWithContext(context.Context) IpServiceOrderDetailOutput
}

type IpServiceOrderDetailArgs struct {
	// Custom description on your ip.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// expiration date
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// order detail id
	OrderDetailId pulumi.IntPtrInput `pulumi:"orderDetailId"`
	// quantity
	Quantity pulumi.StringPtrInput `pulumi:"quantity"`
}

func (IpServiceOrderDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServiceOrderDetail)(nil)).Elem()
}

func (i IpServiceOrderDetailArgs) ToIpServiceOrderDetailOutput() IpServiceOrderDetailOutput {
	return i.ToIpServiceOrderDetailOutputWithContext(context.Background())
}

func (i IpServiceOrderDetailArgs) ToIpServiceOrderDetailOutputWithContext(ctx context.Context) IpServiceOrderDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServiceOrderDetailOutput)
}

// IpServiceOrderDetailArrayInput is an input type that accepts IpServiceOrderDetailArray and IpServiceOrderDetailArrayOutput values.
// You can construct a concrete instance of `IpServiceOrderDetailArrayInput` via:
//
//	IpServiceOrderDetailArray{ IpServiceOrderDetailArgs{...} }
type IpServiceOrderDetailArrayInput interface {
	pulumi.Input

	ToIpServiceOrderDetailArrayOutput() IpServiceOrderDetailArrayOutput
	ToIpServiceOrderDetailArrayOutputWithContext(context.Context) IpServiceOrderDetailArrayOutput
}

type IpServiceOrderDetailArray []IpServiceOrderDetailInput

func (IpServiceOrderDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServiceOrderDetail)(nil)).Elem()
}

func (i IpServiceOrderDetailArray) ToIpServiceOrderDetailArrayOutput() IpServiceOrderDetailArrayOutput {
	return i.ToIpServiceOrderDetailArrayOutputWithContext(context.Background())
}

func (i IpServiceOrderDetailArray) ToIpServiceOrderDetailArrayOutputWithContext(ctx context.Context) IpServiceOrderDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServiceOrderDetailArrayOutput)
}

type IpServiceOrderDetailOutput struct{ *pulumi.OutputState }

func (IpServiceOrderDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServiceOrderDetail)(nil)).Elem()
}

func (o IpServiceOrderDetailOutput) ToIpServiceOrderDetailOutput() IpServiceOrderDetailOutput {
	return o
}

func (o IpServiceOrderDetailOutput) ToIpServiceOrderDetailOutputWithContext(ctx context.Context) IpServiceOrderDetailOutput {
	return o
}

// Custom description on your ip.
func (o IpServiceOrderDetailOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpServiceOrderDetail) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// expiration date
func (o IpServiceOrderDetailOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpServiceOrderDetail) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

// order detail id
func (o IpServiceOrderDetailOutput) OrderDetailId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpServiceOrderDetail) *int { return v.OrderDetailId }).(pulumi.IntPtrOutput)
}

// quantity
func (o IpServiceOrderDetailOutput) Quantity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpServiceOrderDetail) *string { return v.Quantity }).(pulumi.StringPtrOutput)
}

type IpServiceOrderDetailArrayOutput struct{ *pulumi.OutputState }

func (IpServiceOrderDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServiceOrderDetail)(nil)).Elem()
}

func (o IpServiceOrderDetailArrayOutput) ToIpServiceOrderDetailArrayOutput() IpServiceOrderDetailArrayOutput {
	return o
}

func (o IpServiceOrderDetailArrayOutput) ToIpServiceOrderDetailArrayOutputWithContext(ctx context.Context) IpServiceOrderDetailArrayOutput {
	return o
}

func (o IpServiceOrderDetailArrayOutput) Index(i pulumi.IntInput) IpServiceOrderDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpServiceOrderDetail {
		return vs[0].([]IpServiceOrderDetail)[vs[1].(int)]
	}).(IpServiceOrderDetailOutput)
}

type IpServicePlan struct {
	// Catalog name
	CatalogName *string `pulumi:"catalogName"`
	// Representation of a configuration item for personalizing product
	Configurations []IpServicePlanConfiguration `pulumi:"configurations"`
	// duration
	Duration string `pulumi:"duration"`
	// Plan code
	PlanCode string `pulumi:"planCode"`
	// Pricing model identifier
	PricingMode string `pulumi:"pricingMode"`
}

// IpServicePlanInput is an input type that accepts IpServicePlanArgs and IpServicePlanOutput values.
// You can construct a concrete instance of `IpServicePlanInput` via:
//
//	IpServicePlanArgs{...}
type IpServicePlanInput interface {
	pulumi.Input

	ToIpServicePlanOutput() IpServicePlanOutput
	ToIpServicePlanOutputWithContext(context.Context) IpServicePlanOutput
}

type IpServicePlanArgs struct {
	// Catalog name
	CatalogName pulumi.StringPtrInput `pulumi:"catalogName"`
	// Representation of a configuration item for personalizing product
	Configurations IpServicePlanConfigurationArrayInput `pulumi:"configurations"`
	// duration
	Duration pulumi.StringInput `pulumi:"duration"`
	// Plan code
	PlanCode pulumi.StringInput `pulumi:"planCode"`
	// Pricing model identifier
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
}

func (IpServicePlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServicePlan)(nil)).Elem()
}

func (i IpServicePlanArgs) ToIpServicePlanOutput() IpServicePlanOutput {
	return i.ToIpServicePlanOutputWithContext(context.Background())
}

func (i IpServicePlanArgs) ToIpServicePlanOutputWithContext(ctx context.Context) IpServicePlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServicePlanOutput)
}

func (i IpServicePlanArgs) ToIpServicePlanPtrOutput() IpServicePlanPtrOutput {
	return i.ToIpServicePlanPtrOutputWithContext(context.Background())
}

func (i IpServicePlanArgs) ToIpServicePlanPtrOutputWithContext(ctx context.Context) IpServicePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServicePlanOutput).ToIpServicePlanPtrOutputWithContext(ctx)
}

// IpServicePlanPtrInput is an input type that accepts IpServicePlanArgs, IpServicePlanPtr and IpServicePlanPtrOutput values.
// You can construct a concrete instance of `IpServicePlanPtrInput` via:
//
//	        IpServicePlanArgs{...}
//
//	or:
//
//	        nil
type IpServicePlanPtrInput interface {
	pulumi.Input

	ToIpServicePlanPtrOutput() IpServicePlanPtrOutput
	ToIpServicePlanPtrOutputWithContext(context.Context) IpServicePlanPtrOutput
}

type ipServicePlanPtrType IpServicePlanArgs

func IpServicePlanPtr(v *IpServicePlanArgs) IpServicePlanPtrInput {
	return (*ipServicePlanPtrType)(v)
}

func (*ipServicePlanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IpServicePlan)(nil)).Elem()
}

func (i *ipServicePlanPtrType) ToIpServicePlanPtrOutput() IpServicePlanPtrOutput {
	return i.ToIpServicePlanPtrOutputWithContext(context.Background())
}

func (i *ipServicePlanPtrType) ToIpServicePlanPtrOutputWithContext(ctx context.Context) IpServicePlanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServicePlanPtrOutput)
}

type IpServicePlanOutput struct{ *pulumi.OutputState }

func (IpServicePlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServicePlan)(nil)).Elem()
}

func (o IpServicePlanOutput) ToIpServicePlanOutput() IpServicePlanOutput {
	return o
}

func (o IpServicePlanOutput) ToIpServicePlanOutputWithContext(ctx context.Context) IpServicePlanOutput {
	return o
}

func (o IpServicePlanOutput) ToIpServicePlanPtrOutput() IpServicePlanPtrOutput {
	return o.ToIpServicePlanPtrOutputWithContext(context.Background())
}

func (o IpServicePlanOutput) ToIpServicePlanPtrOutputWithContext(ctx context.Context) IpServicePlanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IpServicePlan) *IpServicePlan {
		return &v
	}).(IpServicePlanPtrOutput)
}

// Catalog name
func (o IpServicePlanOutput) CatalogName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpServicePlan) *string { return v.CatalogName }).(pulumi.StringPtrOutput)
}

// Representation of a configuration item for personalizing product
func (o IpServicePlanOutput) Configurations() IpServicePlanConfigurationArrayOutput {
	return o.ApplyT(func(v IpServicePlan) []IpServicePlanConfiguration { return v.Configurations }).(IpServicePlanConfigurationArrayOutput)
}

// duration
func (o IpServicePlanOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlan) string { return v.Duration }).(pulumi.StringOutput)
}

// Plan code
func (o IpServicePlanOutput) PlanCode() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlan) string { return v.PlanCode }).(pulumi.StringOutput)
}

// Pricing model identifier
func (o IpServicePlanOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlan) string { return v.PricingMode }).(pulumi.StringOutput)
}

type IpServicePlanPtrOutput struct{ *pulumi.OutputState }

func (IpServicePlanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IpServicePlan)(nil)).Elem()
}

func (o IpServicePlanPtrOutput) ToIpServicePlanPtrOutput() IpServicePlanPtrOutput {
	return o
}

func (o IpServicePlanPtrOutput) ToIpServicePlanPtrOutputWithContext(ctx context.Context) IpServicePlanPtrOutput {
	return o
}

func (o IpServicePlanPtrOutput) Elem() IpServicePlanOutput {
	return o.ApplyT(func(v *IpServicePlan) IpServicePlan {
		if v != nil {
			return *v
		}
		var ret IpServicePlan
		return ret
	}).(IpServicePlanOutput)
}

// Catalog name
func (o IpServicePlanPtrOutput) CatalogName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpServicePlan) *string {
		if v == nil {
			return nil
		}
		return v.CatalogName
	}).(pulumi.StringPtrOutput)
}

// Representation of a configuration item for personalizing product
func (o IpServicePlanPtrOutput) Configurations() IpServicePlanConfigurationArrayOutput {
	return o.ApplyT(func(v *IpServicePlan) []IpServicePlanConfiguration {
		if v == nil {
			return nil
		}
		return v.Configurations
	}).(IpServicePlanConfigurationArrayOutput)
}

// duration
func (o IpServicePlanPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpServicePlan) *string {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.StringPtrOutput)
}

// Plan code
func (o IpServicePlanPtrOutput) PlanCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpServicePlan) *string {
		if v == nil {
			return nil
		}
		return &v.PlanCode
	}).(pulumi.StringPtrOutput)
}

// Pricing model identifier
func (o IpServicePlanPtrOutput) PricingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IpServicePlan) *string {
		if v == nil {
			return nil
		}
		return &v.PricingMode
	}).(pulumi.StringPtrOutput)
}

type IpServicePlanConfiguration struct {
	// Identifier of the resource
	Label string `pulumi:"label"`
	// Path to the resource in API.OVH.COM
	Value string `pulumi:"value"`
}

// IpServicePlanConfigurationInput is an input type that accepts IpServicePlanConfigurationArgs and IpServicePlanConfigurationOutput values.
// You can construct a concrete instance of `IpServicePlanConfigurationInput` via:
//
//	IpServicePlanConfigurationArgs{...}
type IpServicePlanConfigurationInput interface {
	pulumi.Input

	ToIpServicePlanConfigurationOutput() IpServicePlanConfigurationOutput
	ToIpServicePlanConfigurationOutputWithContext(context.Context) IpServicePlanConfigurationOutput
}

type IpServicePlanConfigurationArgs struct {
	// Identifier of the resource
	Label pulumi.StringInput `pulumi:"label"`
	// Path to the resource in API.OVH.COM
	Value pulumi.StringInput `pulumi:"value"`
}

func (IpServicePlanConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServicePlanConfiguration)(nil)).Elem()
}

func (i IpServicePlanConfigurationArgs) ToIpServicePlanConfigurationOutput() IpServicePlanConfigurationOutput {
	return i.ToIpServicePlanConfigurationOutputWithContext(context.Background())
}

func (i IpServicePlanConfigurationArgs) ToIpServicePlanConfigurationOutputWithContext(ctx context.Context) IpServicePlanConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServicePlanConfigurationOutput)
}

// IpServicePlanConfigurationArrayInput is an input type that accepts IpServicePlanConfigurationArray and IpServicePlanConfigurationArrayOutput values.
// You can construct a concrete instance of `IpServicePlanConfigurationArrayInput` via:
//
//	IpServicePlanConfigurationArray{ IpServicePlanConfigurationArgs{...} }
type IpServicePlanConfigurationArrayInput interface {
	pulumi.Input

	ToIpServicePlanConfigurationArrayOutput() IpServicePlanConfigurationArrayOutput
	ToIpServicePlanConfigurationArrayOutputWithContext(context.Context) IpServicePlanConfigurationArrayOutput
}

type IpServicePlanConfigurationArray []IpServicePlanConfigurationInput

func (IpServicePlanConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServicePlanConfiguration)(nil)).Elem()
}

func (i IpServicePlanConfigurationArray) ToIpServicePlanConfigurationArrayOutput() IpServicePlanConfigurationArrayOutput {
	return i.ToIpServicePlanConfigurationArrayOutputWithContext(context.Background())
}

func (i IpServicePlanConfigurationArray) ToIpServicePlanConfigurationArrayOutputWithContext(ctx context.Context) IpServicePlanConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServicePlanConfigurationArrayOutput)
}

type IpServicePlanConfigurationOutput struct{ *pulumi.OutputState }

func (IpServicePlanConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServicePlanConfiguration)(nil)).Elem()
}

func (o IpServicePlanConfigurationOutput) ToIpServicePlanConfigurationOutput() IpServicePlanConfigurationOutput {
	return o
}

func (o IpServicePlanConfigurationOutput) ToIpServicePlanConfigurationOutputWithContext(ctx context.Context) IpServicePlanConfigurationOutput {
	return o
}

// Identifier of the resource
func (o IpServicePlanConfigurationOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlanConfiguration) string { return v.Label }).(pulumi.StringOutput)
}

// Path to the resource in API.OVH.COM
func (o IpServicePlanConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlanConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type IpServicePlanConfigurationArrayOutput struct{ *pulumi.OutputState }

func (IpServicePlanConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServicePlanConfiguration)(nil)).Elem()
}

func (o IpServicePlanConfigurationArrayOutput) ToIpServicePlanConfigurationArrayOutput() IpServicePlanConfigurationArrayOutput {
	return o
}

func (o IpServicePlanConfigurationArrayOutput) ToIpServicePlanConfigurationArrayOutputWithContext(ctx context.Context) IpServicePlanConfigurationArrayOutput {
	return o
}

func (o IpServicePlanConfigurationArrayOutput) Index(i pulumi.IntInput) IpServicePlanConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpServicePlanConfiguration {
		return vs[0].([]IpServicePlanConfiguration)[vs[1].(int)]
	}).(IpServicePlanConfigurationOutput)
}

type IpServicePlanOption struct {
	// Catalog name
	CatalogName *string `pulumi:"catalogName"`
	// Representation of a configuration item for personalizing product. The list of available configurations can be retrieved using call [GET /order/cart/{cartId}/item/{itemId}/requiredConfiguration](https://eu.api.ovh.com/console/?section=%2Forder&branch=v1#get-/order/cart/-cartId-/item/-itemId-/requiredConfiguration)
	Configurations []IpServicePlanOptionConfiguration `pulumi:"configurations"`
	// duration
	Duration string `pulumi:"duration"`
	// Plan code
	PlanCode string `pulumi:"planCode"`
	// Pricing model identifier
	PricingMode string `pulumi:"pricingMode"`
}

// IpServicePlanOptionInput is an input type that accepts IpServicePlanOptionArgs and IpServicePlanOptionOutput values.
// You can construct a concrete instance of `IpServicePlanOptionInput` via:
//
//	IpServicePlanOptionArgs{...}
type IpServicePlanOptionInput interface {
	pulumi.Input

	ToIpServicePlanOptionOutput() IpServicePlanOptionOutput
	ToIpServicePlanOptionOutputWithContext(context.Context) IpServicePlanOptionOutput
}

type IpServicePlanOptionArgs struct {
	// Catalog name
	CatalogName pulumi.StringPtrInput `pulumi:"catalogName"`
	// Representation of a configuration item for personalizing product. The list of available configurations can be retrieved using call [GET /order/cart/{cartId}/item/{itemId}/requiredConfiguration](https://eu.api.ovh.com/console/?section=%2Forder&branch=v1#get-/order/cart/-cartId-/item/-itemId-/requiredConfiguration)
	Configurations IpServicePlanOptionConfigurationArrayInput `pulumi:"configurations"`
	// duration
	Duration pulumi.StringInput `pulumi:"duration"`
	// Plan code
	PlanCode pulumi.StringInput `pulumi:"planCode"`
	// Pricing model identifier
	PricingMode pulumi.StringInput `pulumi:"pricingMode"`
}

func (IpServicePlanOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServicePlanOption)(nil)).Elem()
}

func (i IpServicePlanOptionArgs) ToIpServicePlanOptionOutput() IpServicePlanOptionOutput {
	return i.ToIpServicePlanOptionOutputWithContext(context.Background())
}

func (i IpServicePlanOptionArgs) ToIpServicePlanOptionOutputWithContext(ctx context.Context) IpServicePlanOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServicePlanOptionOutput)
}

// IpServicePlanOptionArrayInput is an input type that accepts IpServicePlanOptionArray and IpServicePlanOptionArrayOutput values.
// You can construct a concrete instance of `IpServicePlanOptionArrayInput` via:
//
//	IpServicePlanOptionArray{ IpServicePlanOptionArgs{...} }
type IpServicePlanOptionArrayInput interface {
	pulumi.Input

	ToIpServicePlanOptionArrayOutput() IpServicePlanOptionArrayOutput
	ToIpServicePlanOptionArrayOutputWithContext(context.Context) IpServicePlanOptionArrayOutput
}

type IpServicePlanOptionArray []IpServicePlanOptionInput

func (IpServicePlanOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServicePlanOption)(nil)).Elem()
}

func (i IpServicePlanOptionArray) ToIpServicePlanOptionArrayOutput() IpServicePlanOptionArrayOutput {
	return i.ToIpServicePlanOptionArrayOutputWithContext(context.Background())
}

func (i IpServicePlanOptionArray) ToIpServicePlanOptionArrayOutputWithContext(ctx context.Context) IpServicePlanOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServicePlanOptionArrayOutput)
}

type IpServicePlanOptionOutput struct{ *pulumi.OutputState }

func (IpServicePlanOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServicePlanOption)(nil)).Elem()
}

func (o IpServicePlanOptionOutput) ToIpServicePlanOptionOutput() IpServicePlanOptionOutput {
	return o
}

func (o IpServicePlanOptionOutput) ToIpServicePlanOptionOutputWithContext(ctx context.Context) IpServicePlanOptionOutput {
	return o
}

// Catalog name
func (o IpServicePlanOptionOutput) CatalogName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpServicePlanOption) *string { return v.CatalogName }).(pulumi.StringPtrOutput)
}

// Representation of a configuration item for personalizing product. The list of available configurations can be retrieved using call [GET /order/cart/{cartId}/item/{itemId}/requiredConfiguration](https://eu.api.ovh.com/console/?section=%2Forder&branch=v1#get-/order/cart/-cartId-/item/-itemId-/requiredConfiguration)
func (o IpServicePlanOptionOutput) Configurations() IpServicePlanOptionConfigurationArrayOutput {
	return o.ApplyT(func(v IpServicePlanOption) []IpServicePlanOptionConfiguration { return v.Configurations }).(IpServicePlanOptionConfigurationArrayOutput)
}

// duration
func (o IpServicePlanOptionOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlanOption) string { return v.Duration }).(pulumi.StringOutput)
}

// Plan code
func (o IpServicePlanOptionOutput) PlanCode() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlanOption) string { return v.PlanCode }).(pulumi.StringOutput)
}

// Pricing model identifier
func (o IpServicePlanOptionOutput) PricingMode() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlanOption) string { return v.PricingMode }).(pulumi.StringOutput)
}

type IpServicePlanOptionArrayOutput struct{ *pulumi.OutputState }

func (IpServicePlanOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServicePlanOption)(nil)).Elem()
}

func (o IpServicePlanOptionArrayOutput) ToIpServicePlanOptionArrayOutput() IpServicePlanOptionArrayOutput {
	return o
}

func (o IpServicePlanOptionArrayOutput) ToIpServicePlanOptionArrayOutputWithContext(ctx context.Context) IpServicePlanOptionArrayOutput {
	return o
}

func (o IpServicePlanOptionArrayOutput) Index(i pulumi.IntInput) IpServicePlanOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpServicePlanOption {
		return vs[0].([]IpServicePlanOption)[vs[1].(int)]
	}).(IpServicePlanOptionOutput)
}

type IpServicePlanOptionConfiguration struct {
	// Identifier of the resource
	Label string `pulumi:"label"`
	// Path to the resource in API.OVH.COM
	Value string `pulumi:"value"`
}

// IpServicePlanOptionConfigurationInput is an input type that accepts IpServicePlanOptionConfigurationArgs and IpServicePlanOptionConfigurationOutput values.
// You can construct a concrete instance of `IpServicePlanOptionConfigurationInput` via:
//
//	IpServicePlanOptionConfigurationArgs{...}
type IpServicePlanOptionConfigurationInput interface {
	pulumi.Input

	ToIpServicePlanOptionConfigurationOutput() IpServicePlanOptionConfigurationOutput
	ToIpServicePlanOptionConfigurationOutputWithContext(context.Context) IpServicePlanOptionConfigurationOutput
}

type IpServicePlanOptionConfigurationArgs struct {
	// Identifier of the resource
	Label pulumi.StringInput `pulumi:"label"`
	// Path to the resource in API.OVH.COM
	Value pulumi.StringInput `pulumi:"value"`
}

func (IpServicePlanOptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServicePlanOptionConfiguration)(nil)).Elem()
}

func (i IpServicePlanOptionConfigurationArgs) ToIpServicePlanOptionConfigurationOutput() IpServicePlanOptionConfigurationOutput {
	return i.ToIpServicePlanOptionConfigurationOutputWithContext(context.Background())
}

func (i IpServicePlanOptionConfigurationArgs) ToIpServicePlanOptionConfigurationOutputWithContext(ctx context.Context) IpServicePlanOptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServicePlanOptionConfigurationOutput)
}

// IpServicePlanOptionConfigurationArrayInput is an input type that accepts IpServicePlanOptionConfigurationArray and IpServicePlanOptionConfigurationArrayOutput values.
// You can construct a concrete instance of `IpServicePlanOptionConfigurationArrayInput` via:
//
//	IpServicePlanOptionConfigurationArray{ IpServicePlanOptionConfigurationArgs{...} }
type IpServicePlanOptionConfigurationArrayInput interface {
	pulumi.Input

	ToIpServicePlanOptionConfigurationArrayOutput() IpServicePlanOptionConfigurationArrayOutput
	ToIpServicePlanOptionConfigurationArrayOutputWithContext(context.Context) IpServicePlanOptionConfigurationArrayOutput
}

type IpServicePlanOptionConfigurationArray []IpServicePlanOptionConfigurationInput

func (IpServicePlanOptionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServicePlanOptionConfiguration)(nil)).Elem()
}

func (i IpServicePlanOptionConfigurationArray) ToIpServicePlanOptionConfigurationArrayOutput() IpServicePlanOptionConfigurationArrayOutput {
	return i.ToIpServicePlanOptionConfigurationArrayOutputWithContext(context.Background())
}

func (i IpServicePlanOptionConfigurationArray) ToIpServicePlanOptionConfigurationArrayOutputWithContext(ctx context.Context) IpServicePlanOptionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServicePlanOptionConfigurationArrayOutput)
}

type IpServicePlanOptionConfigurationOutput struct{ *pulumi.OutputState }

func (IpServicePlanOptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServicePlanOptionConfiguration)(nil)).Elem()
}

func (o IpServicePlanOptionConfigurationOutput) ToIpServicePlanOptionConfigurationOutput() IpServicePlanOptionConfigurationOutput {
	return o
}

func (o IpServicePlanOptionConfigurationOutput) ToIpServicePlanOptionConfigurationOutputWithContext(ctx context.Context) IpServicePlanOptionConfigurationOutput {
	return o
}

// Identifier of the resource
func (o IpServicePlanOptionConfigurationOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlanOptionConfiguration) string { return v.Label }).(pulumi.StringOutput)
}

// Path to the resource in API.OVH.COM
func (o IpServicePlanOptionConfigurationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IpServicePlanOptionConfiguration) string { return v.Value }).(pulumi.StringOutput)
}

type IpServicePlanOptionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (IpServicePlanOptionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServicePlanOptionConfiguration)(nil)).Elem()
}

func (o IpServicePlanOptionConfigurationArrayOutput) ToIpServicePlanOptionConfigurationArrayOutput() IpServicePlanOptionConfigurationArrayOutput {
	return o
}

func (o IpServicePlanOptionConfigurationArrayOutput) ToIpServicePlanOptionConfigurationArrayOutputWithContext(ctx context.Context) IpServicePlanOptionConfigurationArrayOutput {
	return o
}

func (o IpServicePlanOptionConfigurationArrayOutput) Index(i pulumi.IntInput) IpServicePlanOptionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpServicePlanOptionConfiguration {
		return vs[0].([]IpServicePlanOptionConfiguration)[vs[1].(int)]
	}).(IpServicePlanOptionConfigurationOutput)
}

type IpServiceRoutedTo struct {
	// service name
	ServiceName *string `pulumi:"serviceName"`
}

// IpServiceRoutedToInput is an input type that accepts IpServiceRoutedToArgs and IpServiceRoutedToOutput values.
// You can construct a concrete instance of `IpServiceRoutedToInput` via:
//
//	IpServiceRoutedToArgs{...}
type IpServiceRoutedToInput interface {
	pulumi.Input

	ToIpServiceRoutedToOutput() IpServiceRoutedToOutput
	ToIpServiceRoutedToOutputWithContext(context.Context) IpServiceRoutedToOutput
}

type IpServiceRoutedToArgs struct {
	// service name
	ServiceName pulumi.StringPtrInput `pulumi:"serviceName"`
}

func (IpServiceRoutedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServiceRoutedTo)(nil)).Elem()
}

func (i IpServiceRoutedToArgs) ToIpServiceRoutedToOutput() IpServiceRoutedToOutput {
	return i.ToIpServiceRoutedToOutputWithContext(context.Background())
}

func (i IpServiceRoutedToArgs) ToIpServiceRoutedToOutputWithContext(ctx context.Context) IpServiceRoutedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServiceRoutedToOutput)
}

// IpServiceRoutedToArrayInput is an input type that accepts IpServiceRoutedToArray and IpServiceRoutedToArrayOutput values.
// You can construct a concrete instance of `IpServiceRoutedToArrayInput` via:
//
//	IpServiceRoutedToArray{ IpServiceRoutedToArgs{...} }
type IpServiceRoutedToArrayInput interface {
	pulumi.Input

	ToIpServiceRoutedToArrayOutput() IpServiceRoutedToArrayOutput
	ToIpServiceRoutedToArrayOutputWithContext(context.Context) IpServiceRoutedToArrayOutput
}

type IpServiceRoutedToArray []IpServiceRoutedToInput

func (IpServiceRoutedToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServiceRoutedTo)(nil)).Elem()
}

func (i IpServiceRoutedToArray) ToIpServiceRoutedToArrayOutput() IpServiceRoutedToArrayOutput {
	return i.ToIpServiceRoutedToArrayOutputWithContext(context.Background())
}

func (i IpServiceRoutedToArray) ToIpServiceRoutedToArrayOutputWithContext(ctx context.Context) IpServiceRoutedToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpServiceRoutedToArrayOutput)
}

type IpServiceRoutedToOutput struct{ *pulumi.OutputState }

func (IpServiceRoutedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpServiceRoutedTo)(nil)).Elem()
}

func (o IpServiceRoutedToOutput) ToIpServiceRoutedToOutput() IpServiceRoutedToOutput {
	return o
}

func (o IpServiceRoutedToOutput) ToIpServiceRoutedToOutputWithContext(ctx context.Context) IpServiceRoutedToOutput {
	return o
}

// service name
func (o IpServiceRoutedToOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpServiceRoutedTo) *string { return v.ServiceName }).(pulumi.StringPtrOutput)
}

type IpServiceRoutedToArrayOutput struct{ *pulumi.OutputState }

func (IpServiceRoutedToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpServiceRoutedTo)(nil)).Elem()
}

func (o IpServiceRoutedToArrayOutput) ToIpServiceRoutedToArrayOutput() IpServiceRoutedToArrayOutput {
	return o
}

func (o IpServiceRoutedToArrayOutput) ToIpServiceRoutedToArrayOutputWithContext(ctx context.Context) IpServiceRoutedToArrayOutput {
	return o
}

func (o IpServiceRoutedToArrayOutput) Index(i pulumi.IntInput) IpServiceRoutedToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpServiceRoutedTo {
		return vs[0].([]IpServiceRoutedTo)[vs[1].(int)]
	}).(IpServiceRoutedToOutput)
}

type MoveRoutedTo struct {
	// Name of the service to route the IP to. IP will be parked if this value is an empty string
	ServiceName string `pulumi:"serviceName"`
}

// MoveRoutedToInput is an input type that accepts MoveRoutedToArgs and MoveRoutedToOutput values.
// You can construct a concrete instance of `MoveRoutedToInput` via:
//
//	MoveRoutedToArgs{...}
type MoveRoutedToInput interface {
	pulumi.Input

	ToMoveRoutedToOutput() MoveRoutedToOutput
	ToMoveRoutedToOutputWithContext(context.Context) MoveRoutedToOutput
}

type MoveRoutedToArgs struct {
	// Name of the service to route the IP to. IP will be parked if this value is an empty string
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (MoveRoutedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveRoutedTo)(nil)).Elem()
}

func (i MoveRoutedToArgs) ToMoveRoutedToOutput() MoveRoutedToOutput {
	return i.ToMoveRoutedToOutputWithContext(context.Background())
}

func (i MoveRoutedToArgs) ToMoveRoutedToOutputWithContext(ctx context.Context) MoveRoutedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveRoutedToOutput)
}

func (i MoveRoutedToArgs) ToMoveRoutedToPtrOutput() MoveRoutedToPtrOutput {
	return i.ToMoveRoutedToPtrOutputWithContext(context.Background())
}

func (i MoveRoutedToArgs) ToMoveRoutedToPtrOutputWithContext(ctx context.Context) MoveRoutedToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveRoutedToOutput).ToMoveRoutedToPtrOutputWithContext(ctx)
}

// MoveRoutedToPtrInput is an input type that accepts MoveRoutedToArgs, MoveRoutedToPtr and MoveRoutedToPtrOutput values.
// You can construct a concrete instance of `MoveRoutedToPtrInput` via:
//
//	        MoveRoutedToArgs{...}
//
//	or:
//
//	        nil
type MoveRoutedToPtrInput interface {
	pulumi.Input

	ToMoveRoutedToPtrOutput() MoveRoutedToPtrOutput
	ToMoveRoutedToPtrOutputWithContext(context.Context) MoveRoutedToPtrOutput
}

type moveRoutedToPtrType MoveRoutedToArgs

func MoveRoutedToPtr(v *MoveRoutedToArgs) MoveRoutedToPtrInput {
	return (*moveRoutedToPtrType)(v)
}

func (*moveRoutedToPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveRoutedTo)(nil)).Elem()
}

func (i *moveRoutedToPtrType) ToMoveRoutedToPtrOutput() MoveRoutedToPtrOutput {
	return i.ToMoveRoutedToPtrOutputWithContext(context.Background())
}

func (i *moveRoutedToPtrType) ToMoveRoutedToPtrOutputWithContext(ctx context.Context) MoveRoutedToPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MoveRoutedToPtrOutput)
}

type MoveRoutedToOutput struct{ *pulumi.OutputState }

func (MoveRoutedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MoveRoutedTo)(nil)).Elem()
}

func (o MoveRoutedToOutput) ToMoveRoutedToOutput() MoveRoutedToOutput {
	return o
}

func (o MoveRoutedToOutput) ToMoveRoutedToOutputWithContext(ctx context.Context) MoveRoutedToOutput {
	return o
}

func (o MoveRoutedToOutput) ToMoveRoutedToPtrOutput() MoveRoutedToPtrOutput {
	return o.ToMoveRoutedToPtrOutputWithContext(context.Background())
}

func (o MoveRoutedToOutput) ToMoveRoutedToPtrOutputWithContext(ctx context.Context) MoveRoutedToPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MoveRoutedTo) *MoveRoutedTo {
		return &v
	}).(MoveRoutedToPtrOutput)
}

// Name of the service to route the IP to. IP will be parked if this value is an empty string
func (o MoveRoutedToOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v MoveRoutedTo) string { return v.ServiceName }).(pulumi.StringOutput)
}

type MoveRoutedToPtrOutput struct{ *pulumi.OutputState }

func (MoveRoutedToPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MoveRoutedTo)(nil)).Elem()
}

func (o MoveRoutedToPtrOutput) ToMoveRoutedToPtrOutput() MoveRoutedToPtrOutput {
	return o
}

func (o MoveRoutedToPtrOutput) ToMoveRoutedToPtrOutputWithContext(ctx context.Context) MoveRoutedToPtrOutput {
	return o
}

func (o MoveRoutedToPtrOutput) Elem() MoveRoutedToOutput {
	return o.ApplyT(func(v *MoveRoutedTo) MoveRoutedTo {
		if v != nil {
			return *v
		}
		var ret MoveRoutedTo
		return ret
	}).(MoveRoutedToOutput)
}

// Name of the service to route the IP to. IP will be parked if this value is an empty string
func (o MoveRoutedToPtrOutput) ServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MoveRoutedTo) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceName
	}).(pulumi.StringPtrOutput)
}

type GetServiceRoutedTo struct {
	// The service name
	ServiceName string `pulumi:"serviceName"`
}

// GetServiceRoutedToInput is an input type that accepts GetServiceRoutedToArgs and GetServiceRoutedToOutput values.
// You can construct a concrete instance of `GetServiceRoutedToInput` via:
//
//	GetServiceRoutedToArgs{...}
type GetServiceRoutedToInput interface {
	pulumi.Input

	ToGetServiceRoutedToOutput() GetServiceRoutedToOutput
	ToGetServiceRoutedToOutputWithContext(context.Context) GetServiceRoutedToOutput
}

type GetServiceRoutedToArgs struct {
	// The service name
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (GetServiceRoutedToArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRoutedTo)(nil)).Elem()
}

func (i GetServiceRoutedToArgs) ToGetServiceRoutedToOutput() GetServiceRoutedToOutput {
	return i.ToGetServiceRoutedToOutputWithContext(context.Background())
}

func (i GetServiceRoutedToArgs) ToGetServiceRoutedToOutputWithContext(ctx context.Context) GetServiceRoutedToOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRoutedToOutput)
}

// GetServiceRoutedToArrayInput is an input type that accepts GetServiceRoutedToArray and GetServiceRoutedToArrayOutput values.
// You can construct a concrete instance of `GetServiceRoutedToArrayInput` via:
//
//	GetServiceRoutedToArray{ GetServiceRoutedToArgs{...} }
type GetServiceRoutedToArrayInput interface {
	pulumi.Input

	ToGetServiceRoutedToArrayOutput() GetServiceRoutedToArrayOutput
	ToGetServiceRoutedToArrayOutputWithContext(context.Context) GetServiceRoutedToArrayOutput
}

type GetServiceRoutedToArray []GetServiceRoutedToInput

func (GetServiceRoutedToArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceRoutedTo)(nil)).Elem()
}

func (i GetServiceRoutedToArray) ToGetServiceRoutedToArrayOutput() GetServiceRoutedToArrayOutput {
	return i.ToGetServiceRoutedToArrayOutputWithContext(context.Background())
}

func (i GetServiceRoutedToArray) ToGetServiceRoutedToArrayOutputWithContext(ctx context.Context) GetServiceRoutedToArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceRoutedToArrayOutput)
}

type GetServiceRoutedToOutput struct{ *pulumi.OutputState }

func (GetServiceRoutedToOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceRoutedTo)(nil)).Elem()
}

func (o GetServiceRoutedToOutput) ToGetServiceRoutedToOutput() GetServiceRoutedToOutput {
	return o
}

func (o GetServiceRoutedToOutput) ToGetServiceRoutedToOutputWithContext(ctx context.Context) GetServiceRoutedToOutput {
	return o
}

// The service name
func (o GetServiceRoutedToOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceRoutedTo) string { return v.ServiceName }).(pulumi.StringOutput)
}

type GetServiceRoutedToArrayOutput struct{ *pulumi.OutputState }

func (GetServiceRoutedToArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceRoutedTo)(nil)).Elem()
}

func (o GetServiceRoutedToArrayOutput) ToGetServiceRoutedToArrayOutput() GetServiceRoutedToArrayOutput {
	return o
}

func (o GetServiceRoutedToArrayOutput) ToGetServiceRoutedToArrayOutputWithContext(ctx context.Context) GetServiceRoutedToArrayOutput {
	return o
}

func (o GetServiceRoutedToArrayOutput) Index(i pulumi.IntInput) GetServiceRoutedToOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceRoutedTo {
		return vs[0].([]GetServiceRoutedTo)[vs[1].(int)]
	}).(GetServiceRoutedToOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IpServiceOrderInput)(nil)).Elem(), IpServiceOrderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServiceOrderArrayInput)(nil)).Elem(), IpServiceOrderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServiceOrderDetailInput)(nil)).Elem(), IpServiceOrderDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServiceOrderDetailArrayInput)(nil)).Elem(), IpServiceOrderDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServicePlanInput)(nil)).Elem(), IpServicePlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServicePlanPtrInput)(nil)).Elem(), IpServicePlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServicePlanConfigurationInput)(nil)).Elem(), IpServicePlanConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServicePlanConfigurationArrayInput)(nil)).Elem(), IpServicePlanConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServicePlanOptionInput)(nil)).Elem(), IpServicePlanOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServicePlanOptionArrayInput)(nil)).Elem(), IpServicePlanOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServicePlanOptionConfigurationInput)(nil)).Elem(), IpServicePlanOptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServicePlanOptionConfigurationArrayInput)(nil)).Elem(), IpServicePlanOptionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServiceRoutedToInput)(nil)).Elem(), IpServiceRoutedToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpServiceRoutedToArrayInput)(nil)).Elem(), IpServiceRoutedToArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MoveRoutedToInput)(nil)).Elem(), MoveRoutedToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MoveRoutedToPtrInput)(nil)).Elem(), MoveRoutedToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceRoutedToInput)(nil)).Elem(), GetServiceRoutedToArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceRoutedToArrayInput)(nil)).Elem(), GetServiceRoutedToArray{})
	pulumi.RegisterOutputType(IpServiceOrderOutput{})
	pulumi.RegisterOutputType(IpServiceOrderArrayOutput{})
	pulumi.RegisterOutputType(IpServiceOrderDetailOutput{})
	pulumi.RegisterOutputType(IpServiceOrderDetailArrayOutput{})
	pulumi.RegisterOutputType(IpServicePlanOutput{})
	pulumi.RegisterOutputType(IpServicePlanPtrOutput{})
	pulumi.RegisterOutputType(IpServicePlanConfigurationOutput{})
	pulumi.RegisterOutputType(IpServicePlanConfigurationArrayOutput{})
	pulumi.RegisterOutputType(IpServicePlanOptionOutput{})
	pulumi.RegisterOutputType(IpServicePlanOptionArrayOutput{})
	pulumi.RegisterOutputType(IpServicePlanOptionConfigurationOutput{})
	pulumi.RegisterOutputType(IpServicePlanOptionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(IpServiceRoutedToOutput{})
	pulumi.RegisterOutputType(IpServiceRoutedToArrayOutput{})
	pulumi.RegisterOutputType(MoveRoutedToOutput{})
	pulumi.RegisterOutputType(MoveRoutedToPtrOutput{})
	pulumi.RegisterOutputType(GetServiceRoutedToOutput{})
	pulumi.RegisterOutputType(GetServiceRoutedToArrayOutput{})
}
