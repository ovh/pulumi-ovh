// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ip

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/ovh/pulumi-ovh/sdk/go/ovh/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "ovh:Ip/firewall:Firewall":
		r = &Firewall{}
	case "ovh:Ip/firewallRule:FirewallRule":
		r = &FirewallRule{}
	case "ovh:Ip/ipService:IpService":
		r = &IpService{}
	case "ovh:Ip/mitigation:Mitigation":
		r = &Mitigation{}
	case "ovh:Ip/move:Move":
		r = &Move{}
	case "ovh:Ip/reverse:Reverse":
		r = &Reverse{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"ovh",
		"Ip/firewall",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"Ip/firewallRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"Ip/ipService",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"Ip/mitigation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"Ip/move",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"ovh",
		"Ip/reverse",
		&module{version},
	)
}
